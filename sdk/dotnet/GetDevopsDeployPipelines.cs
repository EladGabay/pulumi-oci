// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDevopsDeployPipelines
    {
        /// <summary>
        /// This data source provides the list of Deploy Pipelines in Oracle Cloud Infrastructure Devops service.
        /// 
        /// Returns a list of deployment pipelines.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testDeployPipelines = Output.Create(Oci.GetDevopsDeployPipelines.InvokeAsync(new Oci.GetDevopsDeployPipelinesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Deploy_pipeline_display_name,
        ///             Id = @var.Deploy_pipeline_id,
        ///             ProjectId = oci_devops_project.Test_project.Id,
        ///             State = @var.Deploy_pipeline_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDevopsDeployPipelinesResult> InvokeAsync(GetDevopsDeployPipelinesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDevopsDeployPipelinesResult>("oci:index/getDevopsDeployPipelines:GetDevopsDeployPipelines", args ?? new GetDevopsDeployPipelinesArgs(), options.WithVersion());
    }


    public sealed class GetDevopsDeployPipelinesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDevopsDeployPipelinesFilterArgs>? _filters;
        public List<Inputs.GetDevopsDeployPipelinesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDevopsDeployPipelinesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Unique identifier or OCID for listing a single resource by ID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// unique project identifier
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// A filter to return only DeployPipelines that matches the given lifecycleState.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDevopsDeployPipelinesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDevopsDeployPipelinesResult
    {
        /// <summary>
        /// The OCID of the compartment where the pipeline is created.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The list of deploy_pipeline_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevopsDeployPipelinesDeployPipelineCollectionResult> DeployPipelineCollections;
        /// <summary>
        /// Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDevopsDeployPipelinesFilterResult> Filters;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The OCID of a project.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The current state of the deployment pipeline.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDevopsDeployPipelinesResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetDevopsDeployPipelinesDeployPipelineCollectionResult> deployPipelineCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDevopsDeployPipelinesFilterResult> filters,

            string? id,

            string? projectId,

            string? state)
        {
            CompartmentId = compartmentId;
            DeployPipelineCollections = deployPipelineCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ProjectId = projectId;
            State = state;
        }
    }
}
