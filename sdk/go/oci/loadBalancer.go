// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoadBalancer struct {
	pulumi.CustomResourceState

	CompartmentId    pulumi.StringOutput                    `pulumi:"compartmentId"`
	DefinedTags      pulumi.MapOutput                       `pulumi:"definedTags"`
	DisplayName      pulumi.StringOutput                    `pulumi:"displayName"`
	FreeformTags     pulumi.MapOutput                       `pulumi:"freeformTags"`
	IpAddressDetails LoadBalancerIpAddressDetailArrayOutput `pulumi:"ipAddressDetails"`
	// Deprecated: The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
	IpAddresses             pulumi.StringArrayOutput          `pulumi:"ipAddresses"`
	IpMode                  pulumi.StringOutput               `pulumi:"ipMode"`
	IsPrivate               pulumi.BoolOutput                 `pulumi:"isPrivate"`
	NetworkSecurityGroupIds pulumi.StringArrayOutput          `pulumi:"networkSecurityGroupIds"`
	ReservedIps             LoadBalancerReservedIpArrayOutput `pulumi:"reservedIps"`
	Shape                   pulumi.StringOutput               `pulumi:"shape"`
	ShapeDetails            LoadBalancerShapeDetailsOutput    `pulumi:"shapeDetails"`
	State                   pulumi.StringOutput               `pulumi:"state"`
	SubnetIds               pulumi.StringArrayOutput          `pulumi:"subnetIds"`
	SystemTags              pulumi.MapOutput                  `pulumi:"systemTags"`
	TimeCreated             pulumi.StringOutput               `pulumi:"timeCreated"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Shape == nil {
		return nil, errors.New("invalid value for required argument 'Shape'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	var resource LoadBalancer
	err := ctx.RegisterResource("oci:index/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("oci:index/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	CompartmentId    *string                       `pulumi:"compartmentId"`
	DefinedTags      map[string]interface{}        `pulumi:"definedTags"`
	DisplayName      *string                       `pulumi:"displayName"`
	FreeformTags     map[string]interface{}        `pulumi:"freeformTags"`
	IpAddressDetails []LoadBalancerIpAddressDetail `pulumi:"ipAddressDetails"`
	// Deprecated: The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
	IpAddresses             []string                  `pulumi:"ipAddresses"`
	IpMode                  *string                   `pulumi:"ipMode"`
	IsPrivate               *bool                     `pulumi:"isPrivate"`
	NetworkSecurityGroupIds []string                  `pulumi:"networkSecurityGroupIds"`
	ReservedIps             []LoadBalancerReservedIp  `pulumi:"reservedIps"`
	Shape                   *string                   `pulumi:"shape"`
	ShapeDetails            *LoadBalancerShapeDetails `pulumi:"shapeDetails"`
	State                   *string                   `pulumi:"state"`
	SubnetIds               []string                  `pulumi:"subnetIds"`
	SystemTags              map[string]interface{}    `pulumi:"systemTags"`
	TimeCreated             *string                   `pulumi:"timeCreated"`
}

type LoadBalancerState struct {
	CompartmentId    pulumi.StringPtrInput
	DefinedTags      pulumi.MapInput
	DisplayName      pulumi.StringPtrInput
	FreeformTags     pulumi.MapInput
	IpAddressDetails LoadBalancerIpAddressDetailArrayInput
	// Deprecated: The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
	IpAddresses             pulumi.StringArrayInput
	IpMode                  pulumi.StringPtrInput
	IsPrivate               pulumi.BoolPtrInput
	NetworkSecurityGroupIds pulumi.StringArrayInput
	ReservedIps             LoadBalancerReservedIpArrayInput
	Shape                   pulumi.StringPtrInput
	ShapeDetails            LoadBalancerShapeDetailsPtrInput
	State                   pulumi.StringPtrInput
	SubnetIds               pulumi.StringArrayInput
	SystemTags              pulumi.MapInput
	TimeCreated             pulumi.StringPtrInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	CompartmentId           string                    `pulumi:"compartmentId"`
	DefinedTags             map[string]interface{}    `pulumi:"definedTags"`
	DisplayName             string                    `pulumi:"displayName"`
	FreeformTags            map[string]interface{}    `pulumi:"freeformTags"`
	IpMode                  *string                   `pulumi:"ipMode"`
	IsPrivate               *bool                     `pulumi:"isPrivate"`
	NetworkSecurityGroupIds []string                  `pulumi:"networkSecurityGroupIds"`
	ReservedIps             []LoadBalancerReservedIp  `pulumi:"reservedIps"`
	Shape                   string                    `pulumi:"shape"`
	ShapeDetails            *LoadBalancerShapeDetails `pulumi:"shapeDetails"`
	SubnetIds               []string                  `pulumi:"subnetIds"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	CompartmentId           pulumi.StringInput
	DefinedTags             pulumi.MapInput
	DisplayName             pulumi.StringInput
	FreeformTags            pulumi.MapInput
	IpMode                  pulumi.StringPtrInput
	IsPrivate               pulumi.BoolPtrInput
	NetworkSecurityGroupIds pulumi.StringArrayInput
	ReservedIps             LoadBalancerReservedIpArrayInput
	Shape                   pulumi.StringInput
	ShapeDetails            LoadBalancerShapeDetailsPtrInput
	SubnetIds               pulumi.StringArrayInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancer)(nil))
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

func (i *LoadBalancer) ToLoadBalancerPtrOutput() LoadBalancerPtrOutput {
	return i.ToLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerPtrOutputWithContext(ctx context.Context) LoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPtrOutput)
}

type LoadBalancerPtrInput interface {
	pulumi.Input

	ToLoadBalancerPtrOutput() LoadBalancerPtrOutput
	ToLoadBalancerPtrOutputWithContext(ctx context.Context) LoadBalancerPtrOutput
}

type loadBalancerPtrType LoadBalancerArgs

func (*loadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil))
}

func (i *loadBalancerPtrType) ToLoadBalancerPtrOutput() LoadBalancerPtrOutput {
	return i.ToLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *loadBalancerPtrType) ToLoadBalancerPtrOutputWithContext(ctx context.Context) LoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPtrOutput)
}

// LoadBalancerArrayInput is an input type that accepts LoadBalancerArray and LoadBalancerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerArrayInput` via:
//
//          LoadBalancerArray{ LoadBalancerArgs{...} }
type LoadBalancerArrayInput interface {
	pulumi.Input

	ToLoadBalancerArrayOutput() LoadBalancerArrayOutput
	ToLoadBalancerArrayOutputWithContext(context.Context) LoadBalancerArrayOutput
}

type LoadBalancerArray []LoadBalancerInput

func (LoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return i.ToLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerArrayOutput)
}

// LoadBalancerMapInput is an input type that accepts LoadBalancerMap and LoadBalancerMapOutput values.
// You can construct a concrete instance of `LoadBalancerMapInput` via:
//
//          LoadBalancerMap{ "key": LoadBalancerArgs{...} }
type LoadBalancerMapInput interface {
	pulumi.Input

	ToLoadBalancerMapOutput() LoadBalancerMapOutput
	ToLoadBalancerMapOutputWithContext(context.Context) LoadBalancerMapOutput
}

type LoadBalancerMap map[string]LoadBalancerInput

func (LoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerMap) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return i.ToLoadBalancerMapOutputWithContext(context.Background())
}

func (i LoadBalancerMap) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMapOutput)
}

type LoadBalancerOutput struct {
	*pulumi.OutputState
}

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancer)(nil))
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerPtrOutput() LoadBalancerPtrOutput {
	return o.ToLoadBalancerPtrOutputWithContext(context.Background())
}

func (o LoadBalancerOutput) ToLoadBalancerPtrOutputWithContext(ctx context.Context) LoadBalancerPtrOutput {
	return o.ApplyT(func(v LoadBalancer) *LoadBalancer {
		return &v
	}).(LoadBalancerPtrOutput)
}

type LoadBalancerPtrOutput struct {
	*pulumi.OutputState
}

func (LoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil))
}

func (o LoadBalancerPtrOutput) ToLoadBalancerPtrOutput() LoadBalancerPtrOutput {
	return o
}

func (o LoadBalancerPtrOutput) ToLoadBalancerPtrOutputWithContext(ctx context.Context) LoadBalancerPtrOutput {
	return o
}

type LoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancer)(nil))
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) Index(i pulumi.IntInput) LoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancer {
		return vs[0].([]LoadBalancer)[vs[1].(int)]
	}).(LoadBalancerOutput)
}

type LoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LoadBalancer)(nil))
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LoadBalancer {
		return vs[0].(map[string]LoadBalancer)[vs[1].(string)]
	}).(LoadBalancerOutput)
}

func init() {
	pulumi.RegisterOutputType(LoadBalancerOutput{})
	pulumi.RegisterOutputType(LoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMapOutput{})
}
