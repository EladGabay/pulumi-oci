// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Autonomous Database Instance Wallet Management resource in Oracle Cloud Infrastructure Database service.
//
// Updates the wallet for the specified Autonomous Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseAutonomousDatabaseInstanceWalletManagement(ctx, "testAutonomousDatabaseInstanceWalletManagement", &oci.DatabaseAutonomousDatabaseInstanceWalletManagementArgs{
// 			AutonomousDatabaseId: pulumi.Any(oci_database_autonomous_database.Test_autonomous_database.Id),
// 			ShouldRotate:         pulumi.Any(_var.Autonomous_database_instance_wallet_management_should_rotate),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DatabaseAutonomousDatabaseInstanceWalletManagement struct {
	pulumi.CustomResourceState

	// (Updatable) The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringOutput `pulumi:"autonomousDatabaseId"`
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrOutput `pulumi:"shouldRotate"`
	// The current lifecycle state of the Autonomous Database wallet.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the wallet was last rotated.
	TimeRotated pulumi.StringOutput `pulumi:"timeRotated"`
}

// NewDatabaseAutonomousDatabaseInstanceWalletManagement registers a new resource with the given unique name, arguments, and options.
func NewDatabaseAutonomousDatabaseInstanceWalletManagement(ctx *pulumi.Context,
	name string, args *DatabaseAutonomousDatabaseInstanceWalletManagementArgs, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseInstanceWalletManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	var resource DatabaseAutonomousDatabaseInstanceWalletManagement
	err := ctx.RegisterResource("oci:index/databaseAutonomousDatabaseInstanceWalletManagement:DatabaseAutonomousDatabaseInstanceWalletManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseAutonomousDatabaseInstanceWalletManagement gets an existing DatabaseAutonomousDatabaseInstanceWalletManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseAutonomousDatabaseInstanceWalletManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseAutonomousDatabaseInstanceWalletManagementState, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseInstanceWalletManagement, error) {
	var resource DatabaseAutonomousDatabaseInstanceWalletManagement
	err := ctx.ReadResource("oci:index/databaseAutonomousDatabaseInstanceWalletManagement:DatabaseAutonomousDatabaseInstanceWalletManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseAutonomousDatabaseInstanceWalletManagement resources.
type databaseAutonomousDatabaseInstanceWalletManagementState struct {
	// (Updatable) The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate *bool `pulumi:"shouldRotate"`
	// The current lifecycle state of the Autonomous Database wallet.
	State *string `pulumi:"state"`
	// The date and time the wallet was last rotated.
	TimeRotated *string `pulumi:"timeRotated"`
}

type DatabaseAutonomousDatabaseInstanceWalletManagementState struct {
	// (Updatable) The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringPtrInput
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrInput
	// The current lifecycle state of the Autonomous Database wallet.
	State pulumi.StringPtrInput
	// The date and time the wallet was last rotated.
	TimeRotated pulumi.StringPtrInput
}

func (DatabaseAutonomousDatabaseInstanceWalletManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseInstanceWalletManagementState)(nil)).Elem()
}

type databaseAutonomousDatabaseInstanceWalletManagementArgs struct {
	// (Updatable) The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate *bool `pulumi:"shouldRotate"`
}

// The set of arguments for constructing a DatabaseAutonomousDatabaseInstanceWalletManagement resource.
type DatabaseAutonomousDatabaseInstanceWalletManagementArgs struct {
	// (Updatable) The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringInput
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrInput
}

func (DatabaseAutonomousDatabaseInstanceWalletManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseInstanceWalletManagementArgs)(nil)).Elem()
}

type DatabaseAutonomousDatabaseInstanceWalletManagementInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseInstanceWalletManagementOutput() DatabaseAutonomousDatabaseInstanceWalletManagementOutput
	ToDatabaseAutonomousDatabaseInstanceWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementOutput
}

func (*DatabaseAutonomousDatabaseInstanceWalletManagement) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (i *DatabaseAutonomousDatabaseInstanceWalletManagement) ToDatabaseAutonomousDatabaseInstanceWalletManagementOutput() DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return i.ToDatabaseAutonomousDatabaseInstanceWalletManagementOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseInstanceWalletManagement) ToDatabaseAutonomousDatabaseInstanceWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseInstanceWalletManagementOutput)
}

func (i *DatabaseAutonomousDatabaseInstanceWalletManagement) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput() DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return i.ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseInstanceWalletManagement) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput)
}

type DatabaseAutonomousDatabaseInstanceWalletManagementPtrInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput() DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput
	ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput
}

type databaseAutonomousDatabaseInstanceWalletManagementPtrType DatabaseAutonomousDatabaseInstanceWalletManagementArgs

func (*databaseAutonomousDatabaseInstanceWalletManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (i *databaseAutonomousDatabaseInstanceWalletManagementPtrType) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput() DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return i.ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(context.Background())
}

func (i *databaseAutonomousDatabaseInstanceWalletManagementPtrType) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput)
}

// DatabaseAutonomousDatabaseInstanceWalletManagementArrayInput is an input type that accepts DatabaseAutonomousDatabaseInstanceWalletManagementArray and DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseInstanceWalletManagementArrayInput` via:
//
//          DatabaseAutonomousDatabaseInstanceWalletManagementArray{ DatabaseAutonomousDatabaseInstanceWalletManagementArgs{...} }
type DatabaseAutonomousDatabaseInstanceWalletManagementArrayInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput() DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput
	ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutputWithContext(context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput
}

type DatabaseAutonomousDatabaseInstanceWalletManagementArray []DatabaseAutonomousDatabaseInstanceWalletManagementInput

func (DatabaseAutonomousDatabaseInstanceWalletManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseAutonomousDatabaseInstanceWalletManagement)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseInstanceWalletManagementArray) ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput() DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput {
	return i.ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseInstanceWalletManagementArray) ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput)
}

// DatabaseAutonomousDatabaseInstanceWalletManagementMapInput is an input type that accepts DatabaseAutonomousDatabaseInstanceWalletManagementMap and DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseInstanceWalletManagementMapInput` via:
//
//          DatabaseAutonomousDatabaseInstanceWalletManagementMap{ "key": DatabaseAutonomousDatabaseInstanceWalletManagementArgs{...} }
type DatabaseAutonomousDatabaseInstanceWalletManagementMapInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutput() DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput
	ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutputWithContext(context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput
}

type DatabaseAutonomousDatabaseInstanceWalletManagementMap map[string]DatabaseAutonomousDatabaseInstanceWalletManagementInput

func (DatabaseAutonomousDatabaseInstanceWalletManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseAutonomousDatabaseInstanceWalletManagement)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseInstanceWalletManagementMap) ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutput() DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput {
	return i.ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseInstanceWalletManagementMap) ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput)
}

type DatabaseAutonomousDatabaseInstanceWalletManagementOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseInstanceWalletManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementOutput() DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput() DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return o.ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(context.Background())
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return o.ApplyT(func(v DatabaseAutonomousDatabaseInstanceWalletManagement) *DatabaseAutonomousDatabaseInstanceWalletManagement {
		return &v
	}).(DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput)
}

type DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput() DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput {
	return o
}

type DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput() DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput) Index(i pulumi.IntInput) DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseInstanceWalletManagement {
		return vs[0].([]DatabaseAutonomousDatabaseInstanceWalletManagement)[vs[1].(int)]
	}).(DatabaseAutonomousDatabaseInstanceWalletManagementOutput)
}

type DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseAutonomousDatabaseInstanceWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutput() DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput) ToDatabaseAutonomousDatabaseInstanceWalletManagementMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput) MapIndex(k pulumi.StringInput) DatabaseAutonomousDatabaseInstanceWalletManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseInstanceWalletManagement {
		return vs[0].(map[string]DatabaseAutonomousDatabaseInstanceWalletManagement)[vs[1].(string)]
	}).(DatabaseAutonomousDatabaseInstanceWalletManagementOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseInstanceWalletManagementOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseInstanceWalletManagementPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseInstanceWalletManagementArrayOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseInstanceWalletManagementMapOutput{})
}
