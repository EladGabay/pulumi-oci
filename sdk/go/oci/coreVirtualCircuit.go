// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Virtual Circuit resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new virtual circuit to use with Oracle Cloud
// Infrastructure FastConnect. For more information, see
// [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
//
// For the purposes of access control, you must provide the OCID of the
// compartment where you want the virtual circuit to reside. If you're
// not sure which compartment to use, put the virtual circuit in the
// same compartment with the DRG it's using. For more information about
// compartments and access control, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
// For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You may optionally specify a *display name* for the virtual circuit.
// It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// **Important:** When creating a virtual circuit, you specify a DRG for
// the traffic to flow through. Make sure you attach the DRG to your
// VCN and confirm the VCN's routing sends traffic to the DRG. Otherwise
// traffic will not flow. For more information, see
// [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreVirtualCircuit(ctx, "testVirtualCircuit", &oci.CoreVirtualCircuitArgs{
// 			CompartmentId:      pulumi.Any(_var.Compartment_id),
// 			Type:               pulumi.Any(_var.Virtual_circuit_type),
// 			BandwidthShapeName: pulumi.Any(_var.Virtual_circuit_bandwidth_shape_name),
// 			CrossConnectMappings: CoreVirtualCircuitCrossConnectMappingArray{
// 				&CoreVirtualCircuitCrossConnectMappingArgs{
// 					BgpMd5authKey:                     pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_bgp_md5auth_key),
// 					CrossConnectOrCrossConnectGroupId: pulumi.Any(oci_core_cross_connect_or_cross_connect_group.Test_cross_connect_or_cross_connect_group.Id),
// 					CustomerBgpPeeringIp:              pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_customer_bgp_peering_ip),
// 					CustomerBgpPeeringIpv6:            pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_customer_bgp_peering_ipv6),
// 					OracleBgpPeeringIp:                pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_oracle_bgp_peering_ip),
// 					OracleBgpPeeringIpv6:              pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_oracle_bgp_peering_ipv6),
// 					Vlan:                              pulumi.Any(_var.Virtual_circuit_cross_connect_mappings_vlan),
// 				},
// 			},
// 			CustomerAsn:    pulumi.Any(_var.Virtual_circuit_customer_asn),
// 			CustomerBgpAsn: pulumi.Any(_var.Virtual_circuit_customer_bgp_asn),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Virtual_circuit_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			GatewayId:              pulumi.Any(oci_core_gateway.Test_gateway.Id),
// 			ProviderServiceId:      pulumi.Any(data.Oci_core_fast_connect_provider_services.Test_fast_connect_provider_services.Fast_connect_provider_services[0].Id),
// 			ProviderServiceKeyName: pulumi.Any(_var.Virtual_circuit_provider_service_key_name),
// 			PublicPrefixes: CoreVirtualCircuitPublicPrefixArray{
// 				&CoreVirtualCircuitPublicPrefixArgs{
// 					CidrBlock: pulumi.Any(_var.Virtual_circuit_public_prefixes_cidr_block),
// 				},
// 			},
// 			Region:          pulumi.Any(_var.Virtual_circuit_region),
// 			RoutingPolicies: pulumi.Any(_var.Virtual_circuit_routing_policy),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VirtualCircuits can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreVirtualCircuit:CoreVirtualCircuit test_virtual_circuit "id"
// ```
type CoreVirtualCircuit struct {
	pulumi.CustomResourceState

	// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
	BandwidthShapeName pulumi.StringOutput `pulumi:"bandwidthShapeName"`
	// The state of the Ipv6 BGP session associated with the virtual circuit.
	BgpIpv6sessionState pulumi.StringOutput `pulumi:"bgpIpv6sessionState"`
	// Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
	//
	// Deprecated: The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead.
	BgpManagement pulumi.StringOutput `pulumi:"bgpManagement"`
	// The state of the Ipv4 BGP session associated with the virtual circuit.
	BgpSessionState pulumi.StringOutput `pulumi:"bgpSessionState"`
	// (Updatable) The OCID of the compartment to contain the virtual circuit.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
	CrossConnectMappings CoreVirtualCircuitCrossConnectMappingArrayOutput `pulumi:"crossConnectMappings"`
	// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
	CustomerAsn pulumi.StringOutput `pulumi:"customerAsn"`
	// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
	//
	// Deprecated: The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
	CustomerBgpAsn pulumi.IntOutput `pulumi:"customerBgpAsn"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) For private virtual circuits only. The OCID of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The Oracle BGP ASN.
	OracleBgpAsn pulumi.IntOutput `pulumi:"oracleBgpAsn"`
	// The OCID of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
	ProviderServiceId pulumi.StringOutput `pulumi:"providerServiceId"`
	// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
	ProviderServiceKeyName pulumi.StringOutput `pulumi:"providerServiceKeyName"`
	// The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
	ProviderState pulumi.StringOutput `pulumi:"providerState"`
	// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
	PublicPrefixes CoreVirtualCircuitPublicPrefixArrayOutput `pulumi:"publicPrefixes"`
	// Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
	ReferenceComment pulumi.StringOutput `pulumi:"referenceComment"`
	// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
	Region pulumi.StringOutput `pulumi:"region"`
	// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
	RoutingPolicies pulumi.StringArrayOutput `pulumi:"routingPolicies"`
	// Provider service type.
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// The virtual circuit's current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCoreVirtualCircuit registers a new resource with the given unique name, arguments, and options.
func NewCoreVirtualCircuit(ctx *pulumi.Context,
	name string, args *CoreVirtualCircuitArgs, opts ...pulumi.ResourceOption) (*CoreVirtualCircuit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource CoreVirtualCircuit
	err := ctx.RegisterResource("oci:index/coreVirtualCircuit:CoreVirtualCircuit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreVirtualCircuit gets an existing CoreVirtualCircuit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreVirtualCircuit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreVirtualCircuitState, opts ...pulumi.ResourceOption) (*CoreVirtualCircuit, error) {
	var resource CoreVirtualCircuit
	err := ctx.ReadResource("oci:index/coreVirtualCircuit:CoreVirtualCircuit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreVirtualCircuit resources.
type coreVirtualCircuitState struct {
	// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
	BandwidthShapeName *string `pulumi:"bandwidthShapeName"`
	// The state of the Ipv6 BGP session associated with the virtual circuit.
	BgpIpv6sessionState *string `pulumi:"bgpIpv6sessionState"`
	// Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
	//
	// Deprecated: The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead.
	BgpManagement *string `pulumi:"bgpManagement"`
	// The state of the Ipv4 BGP session associated with the virtual circuit.
	BgpSessionState *string `pulumi:"bgpSessionState"`
	// (Updatable) The OCID of the compartment to contain the virtual circuit.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
	CrossConnectMappings []CoreVirtualCircuitCrossConnectMapping `pulumi:"crossConnectMappings"`
	// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
	CustomerAsn *string `pulumi:"customerAsn"`
	// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
	//
	// Deprecated: The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
	CustomerBgpAsn *int `pulumi:"customerBgpAsn"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) For private virtual circuits only. The OCID of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
	GatewayId *string `pulumi:"gatewayId"`
	// The Oracle BGP ASN.
	OracleBgpAsn *int `pulumi:"oracleBgpAsn"`
	// The OCID of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
	ProviderServiceId *string `pulumi:"providerServiceId"`
	// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
	ProviderServiceKeyName *string `pulumi:"providerServiceKeyName"`
	// The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
	ProviderState *string `pulumi:"providerState"`
	// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
	PublicPrefixes []CoreVirtualCircuitPublicPrefix `pulumi:"publicPrefixes"`
	// Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
	ReferenceComment *string `pulumi:"referenceComment"`
	// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
	Region *string `pulumi:"region"`
	// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
	RoutingPolicies []string `pulumi:"routingPolicies"`
	// Provider service type.
	ServiceType *string `pulumi:"serviceType"`
	// The virtual circuit's current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
	State *string `pulumi:"state"`
	// The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
	Type *string `pulumi:"type"`
}

type CoreVirtualCircuitState struct {
	// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
	BandwidthShapeName pulumi.StringPtrInput
	// The state of the Ipv6 BGP session associated with the virtual circuit.
	BgpIpv6sessionState pulumi.StringPtrInput
	// Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
	//
	// Deprecated: The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead.
	BgpManagement pulumi.StringPtrInput
	// The state of the Ipv4 BGP session associated with the virtual circuit.
	BgpSessionState pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment to contain the virtual circuit.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
	CrossConnectMappings CoreVirtualCircuitCrossConnectMappingArrayInput
	// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
	CustomerAsn pulumi.StringPtrInput
	// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
	//
	// Deprecated: The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
	CustomerBgpAsn pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) For private virtual circuits only. The OCID of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
	GatewayId pulumi.StringPtrInput
	// The Oracle BGP ASN.
	OracleBgpAsn pulumi.IntPtrInput
	// The OCID of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
	ProviderServiceId pulumi.StringPtrInput
	// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
	ProviderServiceKeyName pulumi.StringPtrInput
	// The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
	ProviderState pulumi.StringPtrInput
	// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
	PublicPrefixes CoreVirtualCircuitPublicPrefixArrayInput
	// Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
	ReferenceComment pulumi.StringPtrInput
	// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
	Region pulumi.StringPtrInput
	// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
	RoutingPolicies pulumi.StringArrayInput
	// Provider service type.
	ServiceType pulumi.StringPtrInput
	// The virtual circuit's current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
	State pulumi.StringPtrInput
	// The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
	Type pulumi.StringPtrInput
}

func (CoreVirtualCircuitState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVirtualCircuitState)(nil)).Elem()
}

type coreVirtualCircuitArgs struct {
	// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
	BandwidthShapeName *string `pulumi:"bandwidthShapeName"`
	// (Updatable) The OCID of the compartment to contain the virtual circuit.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
	CrossConnectMappings []CoreVirtualCircuitCrossConnectMapping `pulumi:"crossConnectMappings"`
	// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
	CustomerAsn *string `pulumi:"customerAsn"`
	// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
	//
	// Deprecated: The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
	CustomerBgpAsn *int `pulumi:"customerBgpAsn"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) For private virtual circuits only. The OCID of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
	GatewayId *string `pulumi:"gatewayId"`
	// The OCID of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
	ProviderServiceId *string `pulumi:"providerServiceId"`
	// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
	ProviderServiceKeyName *string `pulumi:"providerServiceKeyName"`
	// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
	PublicPrefixes []CoreVirtualCircuitPublicPrefix `pulumi:"publicPrefixes"`
	// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
	Region *string `pulumi:"region"`
	// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
	RoutingPolicies []string `pulumi:"routingPolicies"`
	// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a CoreVirtualCircuit resource.
type CoreVirtualCircuitArgs struct {
	// (Updatable) The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
	BandwidthShapeName pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment to contain the virtual circuit.
	CompartmentId pulumi.StringInput
	// (Updatable) Create a `CrossConnectMapping` for each cross-connect or cross-connect group this virtual circuit will run on.
	CrossConnectMappings CoreVirtualCircuitCrossConnectMappingArrayInput
	// (Updatable) Your BGP ASN (either public or private). Provide this value only if there's a BGP session that goes from your edge router to Oracle. Otherwise, leave this empty or null. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.  Example: `12345` (2-byte) or `1587232876` (4-byte)
	CustomerAsn pulumi.StringPtrInput
	// (Updatable) Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
	//
	// Deprecated: The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
	CustomerBgpAsn pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) For private virtual circuits only. The OCID of the [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses.
	GatewayId pulumi.StringPtrInput
	// The OCID of the service offered by the provider (if you're connecting via a provider). To get a list of the available service offerings, see [ListFastConnectProviderServices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderServices).
	ProviderServiceId pulumi.StringPtrInput
	// (Updatable) The service key name offered by the provider (if the customer is connecting via a provider).
	ProviderServiceKeyName pulumi.StringPtrInput
	// (Updatable) For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection.
	PublicPrefixes CoreVirtualCircuitPublicPrefixArrayInput
	// The Oracle Cloud Infrastructure region where this virtual circuit is located. Example: `phx`
	Region pulumi.StringPtrInput
	// (Updatable) The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
	RoutingPolicies pulumi.StringArrayInput
	// The type of IP addresses used in this virtual circuit. PRIVATE means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses (10.0.0.0/8, 172.16/12, and 192.168/16).
	Type pulumi.StringInput
}

func (CoreVirtualCircuitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVirtualCircuitArgs)(nil)).Elem()
}

type CoreVirtualCircuitInput interface {
	pulumi.Input

	ToCoreVirtualCircuitOutput() CoreVirtualCircuitOutput
	ToCoreVirtualCircuitOutputWithContext(ctx context.Context) CoreVirtualCircuitOutput
}

func (*CoreVirtualCircuit) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVirtualCircuit)(nil))
}

func (i *CoreVirtualCircuit) ToCoreVirtualCircuitOutput() CoreVirtualCircuitOutput {
	return i.ToCoreVirtualCircuitOutputWithContext(context.Background())
}

func (i *CoreVirtualCircuit) ToCoreVirtualCircuitOutputWithContext(ctx context.Context) CoreVirtualCircuitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVirtualCircuitOutput)
}

func (i *CoreVirtualCircuit) ToCoreVirtualCircuitPtrOutput() CoreVirtualCircuitPtrOutput {
	return i.ToCoreVirtualCircuitPtrOutputWithContext(context.Background())
}

func (i *CoreVirtualCircuit) ToCoreVirtualCircuitPtrOutputWithContext(ctx context.Context) CoreVirtualCircuitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVirtualCircuitPtrOutput)
}

type CoreVirtualCircuitPtrInput interface {
	pulumi.Input

	ToCoreVirtualCircuitPtrOutput() CoreVirtualCircuitPtrOutput
	ToCoreVirtualCircuitPtrOutputWithContext(ctx context.Context) CoreVirtualCircuitPtrOutput
}

type coreVirtualCircuitPtrType CoreVirtualCircuitArgs

func (*coreVirtualCircuitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVirtualCircuit)(nil))
}

func (i *coreVirtualCircuitPtrType) ToCoreVirtualCircuitPtrOutput() CoreVirtualCircuitPtrOutput {
	return i.ToCoreVirtualCircuitPtrOutputWithContext(context.Background())
}

func (i *coreVirtualCircuitPtrType) ToCoreVirtualCircuitPtrOutputWithContext(ctx context.Context) CoreVirtualCircuitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVirtualCircuitPtrOutput)
}

// CoreVirtualCircuitArrayInput is an input type that accepts CoreVirtualCircuitArray and CoreVirtualCircuitArrayOutput values.
// You can construct a concrete instance of `CoreVirtualCircuitArrayInput` via:
//
//          CoreVirtualCircuitArray{ CoreVirtualCircuitArgs{...} }
type CoreVirtualCircuitArrayInput interface {
	pulumi.Input

	ToCoreVirtualCircuitArrayOutput() CoreVirtualCircuitArrayOutput
	ToCoreVirtualCircuitArrayOutputWithContext(context.Context) CoreVirtualCircuitArrayOutput
}

type CoreVirtualCircuitArray []CoreVirtualCircuitInput

func (CoreVirtualCircuitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreVirtualCircuit)(nil)).Elem()
}

func (i CoreVirtualCircuitArray) ToCoreVirtualCircuitArrayOutput() CoreVirtualCircuitArrayOutput {
	return i.ToCoreVirtualCircuitArrayOutputWithContext(context.Background())
}

func (i CoreVirtualCircuitArray) ToCoreVirtualCircuitArrayOutputWithContext(ctx context.Context) CoreVirtualCircuitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVirtualCircuitArrayOutput)
}

// CoreVirtualCircuitMapInput is an input type that accepts CoreVirtualCircuitMap and CoreVirtualCircuitMapOutput values.
// You can construct a concrete instance of `CoreVirtualCircuitMapInput` via:
//
//          CoreVirtualCircuitMap{ "key": CoreVirtualCircuitArgs{...} }
type CoreVirtualCircuitMapInput interface {
	pulumi.Input

	ToCoreVirtualCircuitMapOutput() CoreVirtualCircuitMapOutput
	ToCoreVirtualCircuitMapOutputWithContext(context.Context) CoreVirtualCircuitMapOutput
}

type CoreVirtualCircuitMap map[string]CoreVirtualCircuitInput

func (CoreVirtualCircuitMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreVirtualCircuit)(nil)).Elem()
}

func (i CoreVirtualCircuitMap) ToCoreVirtualCircuitMapOutput() CoreVirtualCircuitMapOutput {
	return i.ToCoreVirtualCircuitMapOutputWithContext(context.Background())
}

func (i CoreVirtualCircuitMap) ToCoreVirtualCircuitMapOutputWithContext(ctx context.Context) CoreVirtualCircuitMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVirtualCircuitMapOutput)
}

type CoreVirtualCircuitOutput struct {
	*pulumi.OutputState
}

func (CoreVirtualCircuitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVirtualCircuit)(nil))
}

func (o CoreVirtualCircuitOutput) ToCoreVirtualCircuitOutput() CoreVirtualCircuitOutput {
	return o
}

func (o CoreVirtualCircuitOutput) ToCoreVirtualCircuitOutputWithContext(ctx context.Context) CoreVirtualCircuitOutput {
	return o
}

func (o CoreVirtualCircuitOutput) ToCoreVirtualCircuitPtrOutput() CoreVirtualCircuitPtrOutput {
	return o.ToCoreVirtualCircuitPtrOutputWithContext(context.Background())
}

func (o CoreVirtualCircuitOutput) ToCoreVirtualCircuitPtrOutputWithContext(ctx context.Context) CoreVirtualCircuitPtrOutput {
	return o.ApplyT(func(v CoreVirtualCircuit) *CoreVirtualCircuit {
		return &v
	}).(CoreVirtualCircuitPtrOutput)
}

type CoreVirtualCircuitPtrOutput struct {
	*pulumi.OutputState
}

func (CoreVirtualCircuitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVirtualCircuit)(nil))
}

func (o CoreVirtualCircuitPtrOutput) ToCoreVirtualCircuitPtrOutput() CoreVirtualCircuitPtrOutput {
	return o
}

func (o CoreVirtualCircuitPtrOutput) ToCoreVirtualCircuitPtrOutputWithContext(ctx context.Context) CoreVirtualCircuitPtrOutput {
	return o
}

type CoreVirtualCircuitArrayOutput struct{ *pulumi.OutputState }

func (CoreVirtualCircuitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreVirtualCircuit)(nil))
}

func (o CoreVirtualCircuitArrayOutput) ToCoreVirtualCircuitArrayOutput() CoreVirtualCircuitArrayOutput {
	return o
}

func (o CoreVirtualCircuitArrayOutput) ToCoreVirtualCircuitArrayOutputWithContext(ctx context.Context) CoreVirtualCircuitArrayOutput {
	return o
}

func (o CoreVirtualCircuitArrayOutput) Index(i pulumi.IntInput) CoreVirtualCircuitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreVirtualCircuit {
		return vs[0].([]CoreVirtualCircuit)[vs[1].(int)]
	}).(CoreVirtualCircuitOutput)
}

type CoreVirtualCircuitMapOutput struct{ *pulumi.OutputState }

func (CoreVirtualCircuitMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreVirtualCircuit)(nil))
}

func (o CoreVirtualCircuitMapOutput) ToCoreVirtualCircuitMapOutput() CoreVirtualCircuitMapOutput {
	return o
}

func (o CoreVirtualCircuitMapOutput) ToCoreVirtualCircuitMapOutputWithContext(ctx context.Context) CoreVirtualCircuitMapOutput {
	return o
}

func (o CoreVirtualCircuitMapOutput) MapIndex(k pulumi.StringInput) CoreVirtualCircuitOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreVirtualCircuit {
		return vs[0].(map[string]CoreVirtualCircuit)[vs[1].(string)]
	}).(CoreVirtualCircuitOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreVirtualCircuitOutput{})
	pulumi.RegisterOutputType(CoreVirtualCircuitPtrOutput{})
	pulumi.RegisterOutputType(CoreVirtualCircuitArrayOutput{})
	pulumi.RegisterOutputType(CoreVirtualCircuitMapOutput{})
}
