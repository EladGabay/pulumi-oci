// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
//
// Create a new node pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewContainerengineNodePool(ctx, "testNodePool", &oci.ContainerengineNodePoolArgs{
// 			ClusterId:         pulumi.Any(oci_containerengine_cluster.Test_cluster.Id),
// 			CompartmentId:     pulumi.Any(_var.Compartment_id),
// 			KubernetesVersion: pulumi.Any(_var.Node_pool_kubernetes_version),
// 			NodeShape:         pulumi.Any(_var.Node_pool_node_shape),
// 			SubnetIds:         pulumi.Any(_var.Node_pool_subnet_ids),
// 			InitialNodeLabels: ContainerengineNodePoolInitialNodeLabelArray{
// 				&ContainerengineNodePoolInitialNodeLabelArgs{
// 					Key:   pulumi.Any(_var.Node_pool_initial_node_labels_key),
// 					Value: pulumi.Any(_var.Node_pool_initial_node_labels_value),
// 				},
// 			},
// 			NodeConfigDetails: &ContainerengineNodePoolNodeConfigDetailsArgs{
// 				PlacementConfigs: ContainerengineNodePoolNodeConfigDetailsPlacementConfigArray{
// 					&ContainerengineNodePoolNodeConfigDetailsPlacementConfigArgs{
// 						AvailabilityDomain: pulumi.Any(_var.Node_pool_node_config_details_placement_configs_availability_domain),
// 						SubnetId:           pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 					},
// 				},
// 				Size:   pulumi.Any(_var.Node_pool_node_config_details_size),
// 				NsgIds: pulumi.Any(_var.Node_pool_node_config_details_nsg_ids),
// 			},
// 			NodeImageName: pulumi.Any(oci_core_image.Test_image.Name),
// 			NodeMetadata:  pulumi.Any(_var.Node_pool_node_metadata),
// 			NodeShapeConfig: &ContainerengineNodePoolNodeShapeConfigArgs{
// 				MemoryInGbs: pulumi.Any(_var.Node_pool_node_shape_config_memory_in_gbs),
// 				Ocpus:       pulumi.Any(_var.Node_pool_node_shape_config_ocpus),
// 			},
// 			NodeSourceDetails: &ContainerengineNodePoolNodeSourceDetailsArgs{
// 				ImageId:             pulumi.Any(oci_core_image.Test_image.Id),
// 				SourceType:          pulumi.Any(_var.Node_pool_node_source_details_source_type),
// 				BootVolumeSizeInGbs: pulumi.Any(_var.Node_pool_node_source_details_boot_volume_size_in_gbs),
// 			},
// 			QuantityPerSubnet: pulumi.Any(_var.Node_pool_quantity_per_subnet),
// 			SshPublicKey:      pulumi.Any(_var.Node_pool_ssh_public_key),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NodePools can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/containerengineNodePool:ContainerengineNodePool test_node_pool "id"
// ```
type ContainerengineNodePool struct {
	pulumi.CustomResourceState

	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels ContainerengineNodePoolInitialNodeLabelArrayOutput `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringOutput `pulumi:"kubernetesVersion"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails ContainerengineNodePoolNodeConfigDetailsOutput `pulumi:"nodeConfigDetails"`
	// Deprecated. Use `nodeSourceDetails` instead. The OCID of the image running on the nodes in the node pool. Cannot be used when `nodeImageName` is specified.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringOutput `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringOutput `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapOutput `pulumi:"nodeMetadata"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringOutput `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig ContainerengineNodePoolNodeShapeConfigOutput `pulumi:"nodeShapeConfig"`
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSource ContainerengineNodePoolNodeSourceOutput `pulumi:"nodeSource"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails ContainerengineNodePoolNodeSourceDetailsOutput `pulumi:"nodeSourceDetails"`
	// The nodes in the node pool.
	Nodes ContainerengineNodePoolNodeArrayOutput `pulumi:"nodes"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntOutput `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringOutput `pulumi:"sshPublicKey"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
}

// NewContainerengineNodePool registers a new resource with the given unique name, arguments, and options.
func NewContainerengineNodePool(ctx *pulumi.Context,
	name string, args *ContainerengineNodePoolArgs, opts ...pulumi.ResourceOption) (*ContainerengineNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.KubernetesVersion == nil {
		return nil, errors.New("invalid value for required argument 'KubernetesVersion'")
	}
	if args.NodeShape == nil {
		return nil, errors.New("invalid value for required argument 'NodeShape'")
	}
	var resource ContainerengineNodePool
	err := ctx.RegisterResource("oci:index/containerengineNodePool:ContainerengineNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerengineNodePool gets an existing ContainerengineNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerengineNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerengineNodePoolState, opts ...pulumi.ResourceOption) (*ContainerengineNodePool, error) {
	var resource ContainerengineNodePool
	err := ctx.ReadResource("oci:index/containerengineNodePool:ContainerengineNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerengineNodePool resources.
type containerengineNodePoolState struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId *string `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels []ContainerengineNodePoolInitialNodeLabel `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails *ContainerengineNodePoolNodeConfigDetails `pulumi:"nodeConfigDetails"`
	// Deprecated. Use `nodeSourceDetails` instead. The OCID of the image running on the nodes in the node pool. Cannot be used when `nodeImageName` is specified.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId *string `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName *string `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata map[string]interface{} `pulumi:"nodeMetadata"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape *string `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig *ContainerengineNodePoolNodeShapeConfig `pulumi:"nodeShapeConfig"`
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSource *ContainerengineNodePoolNodeSource `pulumi:"nodeSource"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails *ContainerengineNodePoolNodeSourceDetails `pulumi:"nodeSourceDetails"`
	// The nodes in the node pool.
	Nodes []ContainerengineNodePoolNode `pulumi:"nodes"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet *int `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds []string `pulumi:"subnetIds"`
}

type ContainerengineNodePoolState struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringPtrInput
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels ContainerengineNodePoolInitialNodeLabelArrayInput
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringPtrInput
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails ContainerengineNodePoolNodeConfigDetailsPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. The OCID of the image running on the nodes in the node pool. Cannot be used when `nodeImageName` is specified.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringPtrInput
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapInput
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringPtrInput
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig ContainerengineNodePoolNodeShapeConfigPtrInput
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSource ContainerengineNodePoolNodeSourcePtrInput
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails ContainerengineNodePoolNodeSourceDetailsPtrInput
	// The nodes in the node pool.
	Nodes ContainerengineNodePoolNodeArrayInput
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntPtrInput
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringPtrInput
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayInput
}

func (ContainerengineNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerengineNodePoolState)(nil)).Elem()
}

type containerengineNodePoolArgs struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId string `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels []ContainerengineNodePoolInitialNodeLabel `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails *ContainerengineNodePoolNodeConfigDetails `pulumi:"nodeConfigDetails"`
	// Deprecated. Use `nodeSourceDetails` instead. The OCID of the image running on the nodes in the node pool. Cannot be used when `nodeImageName` is specified.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId *string `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName *string `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata map[string]interface{} `pulumi:"nodeMetadata"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape string `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig *ContainerengineNodePoolNodeShapeConfig `pulumi:"nodeShapeConfig"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails *ContainerengineNodePoolNodeSourceDetails `pulumi:"nodeSourceDetails"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet *int `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds []string `pulumi:"subnetIds"`
}

// The set of arguments for constructing a ContainerengineNodePool resource.
type ContainerengineNodePoolArgs struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringInput
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringInput
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels ContainerengineNodePoolInitialNodeLabelArrayInput
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringInput
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails ContainerengineNodePoolNodeConfigDetailsPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. The OCID of the image running on the nodes in the node pool. Cannot be used when `nodeImageName` is specified.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringPtrInput
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapInput
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringInput
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig ContainerengineNodePoolNodeShapeConfigPtrInput
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails ContainerengineNodePoolNodeSourceDetailsPtrInput
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntPtrInput
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringPtrInput
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayInput
}

func (ContainerengineNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerengineNodePoolArgs)(nil)).Elem()
}

type ContainerengineNodePoolInput interface {
	pulumi.Input

	ToContainerengineNodePoolOutput() ContainerengineNodePoolOutput
	ToContainerengineNodePoolOutputWithContext(ctx context.Context) ContainerengineNodePoolOutput
}

func (*ContainerengineNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerengineNodePool)(nil))
}

func (i *ContainerengineNodePool) ToContainerengineNodePoolOutput() ContainerengineNodePoolOutput {
	return i.ToContainerengineNodePoolOutputWithContext(context.Background())
}

func (i *ContainerengineNodePool) ToContainerengineNodePoolOutputWithContext(ctx context.Context) ContainerengineNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerengineNodePoolOutput)
}

func (i *ContainerengineNodePool) ToContainerengineNodePoolPtrOutput() ContainerengineNodePoolPtrOutput {
	return i.ToContainerengineNodePoolPtrOutputWithContext(context.Background())
}

func (i *ContainerengineNodePool) ToContainerengineNodePoolPtrOutputWithContext(ctx context.Context) ContainerengineNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerengineNodePoolPtrOutput)
}

type ContainerengineNodePoolPtrInput interface {
	pulumi.Input

	ToContainerengineNodePoolPtrOutput() ContainerengineNodePoolPtrOutput
	ToContainerengineNodePoolPtrOutputWithContext(ctx context.Context) ContainerengineNodePoolPtrOutput
}

type containerengineNodePoolPtrType ContainerengineNodePoolArgs

func (*containerengineNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerengineNodePool)(nil))
}

func (i *containerengineNodePoolPtrType) ToContainerengineNodePoolPtrOutput() ContainerengineNodePoolPtrOutput {
	return i.ToContainerengineNodePoolPtrOutputWithContext(context.Background())
}

func (i *containerengineNodePoolPtrType) ToContainerengineNodePoolPtrOutputWithContext(ctx context.Context) ContainerengineNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerengineNodePoolPtrOutput)
}

// ContainerengineNodePoolArrayInput is an input type that accepts ContainerengineNodePoolArray and ContainerengineNodePoolArrayOutput values.
// You can construct a concrete instance of `ContainerengineNodePoolArrayInput` via:
//
//          ContainerengineNodePoolArray{ ContainerengineNodePoolArgs{...} }
type ContainerengineNodePoolArrayInput interface {
	pulumi.Input

	ToContainerengineNodePoolArrayOutput() ContainerengineNodePoolArrayOutput
	ToContainerengineNodePoolArrayOutputWithContext(context.Context) ContainerengineNodePoolArrayOutput
}

type ContainerengineNodePoolArray []ContainerengineNodePoolInput

func (ContainerengineNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerengineNodePool)(nil)).Elem()
}

func (i ContainerengineNodePoolArray) ToContainerengineNodePoolArrayOutput() ContainerengineNodePoolArrayOutput {
	return i.ToContainerengineNodePoolArrayOutputWithContext(context.Background())
}

func (i ContainerengineNodePoolArray) ToContainerengineNodePoolArrayOutputWithContext(ctx context.Context) ContainerengineNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerengineNodePoolArrayOutput)
}

// ContainerengineNodePoolMapInput is an input type that accepts ContainerengineNodePoolMap and ContainerengineNodePoolMapOutput values.
// You can construct a concrete instance of `ContainerengineNodePoolMapInput` via:
//
//          ContainerengineNodePoolMap{ "key": ContainerengineNodePoolArgs{...} }
type ContainerengineNodePoolMapInput interface {
	pulumi.Input

	ToContainerengineNodePoolMapOutput() ContainerengineNodePoolMapOutput
	ToContainerengineNodePoolMapOutputWithContext(context.Context) ContainerengineNodePoolMapOutput
}

type ContainerengineNodePoolMap map[string]ContainerengineNodePoolInput

func (ContainerengineNodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerengineNodePool)(nil)).Elem()
}

func (i ContainerengineNodePoolMap) ToContainerengineNodePoolMapOutput() ContainerengineNodePoolMapOutput {
	return i.ToContainerengineNodePoolMapOutputWithContext(context.Background())
}

func (i ContainerengineNodePoolMap) ToContainerengineNodePoolMapOutputWithContext(ctx context.Context) ContainerengineNodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerengineNodePoolMapOutput)
}

type ContainerengineNodePoolOutput struct {
	*pulumi.OutputState
}

func (ContainerengineNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerengineNodePool)(nil))
}

func (o ContainerengineNodePoolOutput) ToContainerengineNodePoolOutput() ContainerengineNodePoolOutput {
	return o
}

func (o ContainerengineNodePoolOutput) ToContainerengineNodePoolOutputWithContext(ctx context.Context) ContainerengineNodePoolOutput {
	return o
}

func (o ContainerengineNodePoolOutput) ToContainerengineNodePoolPtrOutput() ContainerengineNodePoolPtrOutput {
	return o.ToContainerengineNodePoolPtrOutputWithContext(context.Background())
}

func (o ContainerengineNodePoolOutput) ToContainerengineNodePoolPtrOutputWithContext(ctx context.Context) ContainerengineNodePoolPtrOutput {
	return o.ApplyT(func(v ContainerengineNodePool) *ContainerengineNodePool {
		return &v
	}).(ContainerengineNodePoolPtrOutput)
}

type ContainerengineNodePoolPtrOutput struct {
	*pulumi.OutputState
}

func (ContainerengineNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerengineNodePool)(nil))
}

func (o ContainerengineNodePoolPtrOutput) ToContainerengineNodePoolPtrOutput() ContainerengineNodePoolPtrOutput {
	return o
}

func (o ContainerengineNodePoolPtrOutput) ToContainerengineNodePoolPtrOutputWithContext(ctx context.Context) ContainerengineNodePoolPtrOutput {
	return o
}

type ContainerengineNodePoolArrayOutput struct{ *pulumi.OutputState }

func (ContainerengineNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerengineNodePool)(nil))
}

func (o ContainerengineNodePoolArrayOutput) ToContainerengineNodePoolArrayOutput() ContainerengineNodePoolArrayOutput {
	return o
}

func (o ContainerengineNodePoolArrayOutput) ToContainerengineNodePoolArrayOutputWithContext(ctx context.Context) ContainerengineNodePoolArrayOutput {
	return o
}

func (o ContainerengineNodePoolArrayOutput) Index(i pulumi.IntInput) ContainerengineNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerengineNodePool {
		return vs[0].([]ContainerengineNodePool)[vs[1].(int)]
	}).(ContainerengineNodePoolOutput)
}

type ContainerengineNodePoolMapOutput struct{ *pulumi.OutputState }

func (ContainerengineNodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ContainerengineNodePool)(nil))
}

func (o ContainerengineNodePoolMapOutput) ToContainerengineNodePoolMapOutput() ContainerengineNodePoolMapOutput {
	return o
}

func (o ContainerengineNodePoolMapOutput) ToContainerengineNodePoolMapOutputWithContext(ctx context.Context) ContainerengineNodePoolMapOutput {
	return o
}

func (o ContainerengineNodePoolMapOutput) MapIndex(k pulumi.StringInput) ContainerengineNodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ContainerengineNodePool {
		return vs[0].(map[string]ContainerengineNodePool)[vs[1].(string)]
	}).(ContainerengineNodePoolOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerengineNodePoolOutput{})
	pulumi.RegisterOutputType(ContainerengineNodePoolPtrOutput{})
	pulumi.RegisterOutputType(ContainerengineNodePoolArrayOutput{})
	pulumi.RegisterOutputType(ContainerengineNodePoolMapOutput{})
}
