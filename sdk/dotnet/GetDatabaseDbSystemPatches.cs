// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseDbSystemPatches
    {
        /// <summary>
        /// This data source provides the list of Db System Patches in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the patches applicable to the specified DB system.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testDbSystemPatches = Output.Create(Oci.GetDatabaseDbSystemPatches.InvokeAsync(new Oci.GetDatabaseDbSystemPatchesArgs
        ///         {
        ///             DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseDbSystemPatchesResult> InvokeAsync(GetDatabaseDbSystemPatchesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseDbSystemPatchesResult>("oci:index/getDatabaseDbSystemPatches:GetDatabaseDbSystemPatches", args ?? new GetDatabaseDbSystemPatchesArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseDbSystemPatchesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public string DbSystemId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDatabaseDbSystemPatchesFilterArgs>? _filters;
        public List<Inputs.GetDatabaseDbSystemPatchesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseDbSystemPatchesFilterArgs>());
            set => _filters = value;
        }

        public GetDatabaseDbSystemPatchesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseDbSystemPatchesResult
    {
        public readonly string DbSystemId;
        public readonly ImmutableArray<Outputs.GetDatabaseDbSystemPatchesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of patches.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseDbSystemPatchesPatchResult> Patches;

        [OutputConstructor]
        private GetDatabaseDbSystemPatchesResult(
            string dbSystemId,

            ImmutableArray<Outputs.GetDatabaseDbSystemPatchesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetDatabaseDbSystemPatchesPatchResult> patches)
        {
            DbSystemId = dbSystemId;
            Filters = filters;
            Id = id;
            Patches = patches;
        }
    }
}
