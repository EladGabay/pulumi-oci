// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMysqlShapes
    {
        /// <summary>
        /// This data source provides the list of Shapes in Oracle Cloud Infrastructure MySQL Database service.
        /// 
        /// Gets a list of the shapes you can use to create a new MySQL DB System.
        /// The shape determines the resources allocated to the DB System:
        /// CPU cores and memory for VM shapes; CPU cores, memory and
        /// storage for non-VM (or bare metal) shapes.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testShapes = Output.Create(Oci.GetMysqlShapes.InvokeAsync(new Oci.GetMysqlShapesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             AvailabilityDomain = @var.Shape_availability_domain,
        ///             IsSupportedFors = @var.Shape_is_supported_for,
        ///             Name = @var.Shape_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMysqlShapesResult> InvokeAsync(GetMysqlShapesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMysqlShapesResult>("oci:index/getMysqlShapes:GetMysqlShapes", args ?? new GetMysqlShapesArgs(), options.WithVersion());
    }


    public sealed class GetMysqlShapesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Availability Domain.
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetMysqlShapesFilterArgs>? _filters;
        public List<Inputs.GetMysqlShapesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMysqlShapesFilterArgs>());
            set => _filters = value;
        }

        [Input("isSupportedFors")]
        private List<string>? _isSupportedFors;

        /// <summary>
        /// Return shapes that are supported by the service feature.
        /// </summary>
        public List<string> IsSupportedFors
        {
            get => _isSupportedFors ?? (_isSupportedFors = new List<string>());
            set => _isSupportedFors = value;
        }

        /// <summary>
        /// Name
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetMysqlShapesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMysqlShapesResult
    {
        public readonly string? AvailabilityDomain;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetMysqlShapesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// What service features the shape is supported for.
        /// </summary>
        public readonly ImmutableArray<string> IsSupportedFors;
        /// <summary>
        /// The name of the shape used for the DB System.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of shapes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMysqlShapesShapeResult> Shapes;

        [OutputConstructor]
        private GetMysqlShapesResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetMysqlShapesFilterResult> filters,

            string id,

            ImmutableArray<string> isSupportedFors,

            string? name,

            ImmutableArray<Outputs.GetMysqlShapesShapeResult> shapes)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IsSupportedFors = isSupportedFors;
            Name = name;
            Shapes = shapes;
        }
    }
}
