// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMarketplacePublication
    {
        /// <summary>
        /// This data source provides details about a specific Publication resource in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Get details of a publication
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testPublication = Output.Create(Oci.GetMarketplacePublication.InvokeAsync(new Oci.GetMarketplacePublicationArgs
        ///         {
        ///             PublicationId = oci_marketplace_publication.Test_publication.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMarketplacePublicationResult> InvokeAsync(GetMarketplacePublicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMarketplacePublicationResult>("oci:index/getMarketplacePublication:GetMarketplacePublication", args ?? new GetMarketplacePublicationArgs(), options.WithVersion());
    }


    public sealed class GetMarketplacePublicationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the listing.
        /// </summary>
        [Input("publicationId", required: true)]
        public string PublicationId { get; set; } = null!;

        public GetMarketplacePublicationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMarketplacePublicationResult
    {
        /// <summary>
        /// The Compartment id where the listings exists
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The model for upload data for images and icons.
        /// </summary>
        public readonly Outputs.GetMarketplacePublicationIconResult Icon;
        /// <summary>
        /// The unique identifier for the listing in Marketplace.
        /// </summary>
        public readonly string Id;
        public readonly bool IsAgreementAcknowledged;
        /// <summary>
        /// In which catalog the listing should exist.
        /// </summary>
        public readonly string ListingType;
        /// <summary>
        /// A long description of the listing.
        /// </summary>
        public readonly string LongDescription;
        /// <summary>
        /// name of the operating system
        /// </summary>
        public readonly string Name;
        public readonly Outputs.GetMarketplacePublicationPackageDetailsResult PackageDetails;
        /// <summary>
        /// The listing's package type.
        /// </summary>
        public readonly string PackageType;
        public readonly string PublicationId;
        /// <summary>
        /// A short description of the listing.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The state of the listing in its lifecycle
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Contact information to use to get support from the publisher for the listing.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplacePublicationSupportContactResult> SupportContacts;
        /// <summary>
        /// List of operating systems supprted.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplacePublicationSupportedOperatingSystemResult> SupportedOperatingSystems;
        /// <summary>
        /// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetMarketplacePublicationResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            ImmutableDictionary<string, object> freeformTags,

            Outputs.GetMarketplacePublicationIconResult icon,

            string id,

            bool isAgreementAcknowledged,

            string listingType,

            string longDescription,

            string name,

            Outputs.GetMarketplacePublicationPackageDetailsResult packageDetails,

            string packageType,

            string publicationId,

            string shortDescription,

            string state,

            ImmutableArray<Outputs.GetMarketplacePublicationSupportContactResult> supportContacts,

            ImmutableArray<Outputs.GetMarketplacePublicationSupportedOperatingSystemResult> supportedOperatingSystems,

            string timeCreated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            FreeformTags = freeformTags;
            Icon = icon;
            Id = id;
            IsAgreementAcknowledged = isAgreementAcknowledged;
            ListingType = listingType;
            LongDescription = longDescription;
            Name = name;
            PackageDetails = packageDetails;
            PackageType = packageType;
            PublicationId = publicationId;
            ShortDescription = shortDescription;
            State = state;
            SupportContacts = supportContacts;
            SupportedOperatingSystems = supportedOperatingSystems;
            TimeCreated = timeCreated;
        }
    }
}
