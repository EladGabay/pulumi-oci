// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Load Balancer resource in Oracle Cloud Infrastructure Network Load Balancer service.
//
// Creates a network load balancer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewNetworkLoadBalancerNetworkLoadBalancer(ctx, "testNetworkLoadBalancer", &oci.NetworkLoadBalancerNetworkLoadBalancerArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Network_load_balancer_display_name),
// 			SubnetId:      pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsPreserveSourceDestination: pulumi.Any(_var.Network_load_balancer_is_preserve_source_destination),
// 			IsPrivate:                   pulumi.Any(_var.Network_load_balancer_is_private),
// 			NetworkSecurityGroupIds:     pulumi.Any(_var.Network_load_balancer_network_security_group_ids),
// 			ReservedIps: NetworkLoadBalancerNetworkLoadBalancerReservedIpArray{
// 				&NetworkLoadBalancerNetworkLoadBalancerReservedIpArgs{
// 					Id: pulumi.Any(_var.Network_load_balancer_reserved_ips_id),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NetworkLoadBalancers can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/networkLoadBalancerNetworkLoadBalancer:NetworkLoadBalancerNetworkLoadBalancer test_network_load_balancer "id"
// ```
type NetworkLoadBalancerNetworkLoadBalancer struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Network load balancer identifier, which can be renamed.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// An array of IP addresses.
	IpAddresses NetworkLoadBalancerNetworkLoadBalancerIpAddressArrayOutput `pulumi:"ipAddresses"`
	// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
	IsPreserveSourceDestination pulumi.BoolOutput `pulumi:"isPreserveSourceDestination"`
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate pulumi.BoolOutput `pulumi:"isPrivate"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds pulumi.StringArrayOutput `pulumi:"networkSecurityGroupIds"`
	// An array of reserved Ips.
	ReservedIps NetworkLoadBalancerNetworkLoadBalancerReservedIpArrayOutput `pulumi:"reservedIps"`
	// The current state of the network load balancer.
	State pulumi.StringOutput `pulumi:"state"`
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewNetworkLoadBalancerNetworkLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewNetworkLoadBalancerNetworkLoadBalancer(ctx *pulumi.Context,
	name string, args *NetworkLoadBalancerNetworkLoadBalancerArgs, opts ...pulumi.ResourceOption) (*NetworkLoadBalancerNetworkLoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource NetworkLoadBalancerNetworkLoadBalancer
	err := ctx.RegisterResource("oci:index/networkLoadBalancerNetworkLoadBalancer:NetworkLoadBalancerNetworkLoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkLoadBalancerNetworkLoadBalancer gets an existing NetworkLoadBalancerNetworkLoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkLoadBalancerNetworkLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkLoadBalancerNetworkLoadBalancerState, opts ...pulumi.ResourceOption) (*NetworkLoadBalancerNetworkLoadBalancer, error) {
	var resource NetworkLoadBalancerNetworkLoadBalancer
	err := ctx.ReadResource("oci:index/networkLoadBalancerNetworkLoadBalancer:NetworkLoadBalancerNetworkLoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkLoadBalancerNetworkLoadBalancer resources.
type networkLoadBalancerNetworkLoadBalancerState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Network load balancer identifier, which can be renamed.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// An array of IP addresses.
	IpAddresses []NetworkLoadBalancerNetworkLoadBalancerIpAddress `pulumi:"ipAddresses"`
	// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
	IsPreserveSourceDestination *bool `pulumi:"isPreserveSourceDestination"`
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate *bool `pulumi:"isPrivate"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds []string `pulumi:"networkSecurityGroupIds"`
	// An array of reserved Ips.
	ReservedIps []NetworkLoadBalancerNetworkLoadBalancerReservedIp `pulumi:"reservedIps"`
	// The current state of the network load balancer.
	State *string `pulumi:"state"`
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SubnetId *string `pulumi:"subnetId"`
	// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type NetworkLoadBalancerNetworkLoadBalancerState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Network load balancer identifier, which can be renamed.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// An array of IP addresses.
	IpAddresses NetworkLoadBalancerNetworkLoadBalancerIpAddressArrayInput
	// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
	IsPreserveSourceDestination pulumi.BoolPtrInput
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds pulumi.StringArrayInput
	// An array of reserved Ips.
	ReservedIps NetworkLoadBalancerNetworkLoadBalancerReservedIpArrayInput
	// The current state of the network load balancer.
	State pulumi.StringPtrInput
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SubnetId pulumi.StringPtrInput
	// Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
	SystemTags pulumi.MapInput
	// The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (NetworkLoadBalancerNetworkLoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkLoadBalancerNetworkLoadBalancerState)(nil)).Elem()
}

type networkLoadBalancerNetworkLoadBalancerArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Network load balancer identifier, which can be renamed.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
	IsPreserveSourceDestination *bool `pulumi:"isPreserveSourceDestination"`
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate *bool `pulumi:"isPrivate"`
	// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds []string `pulumi:"networkSecurityGroupIds"`
	// An array of reserved Ips.
	ReservedIps []NetworkLoadBalancerNetworkLoadBalancerReservedIp `pulumi:"reservedIps"`
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a NetworkLoadBalancerNetworkLoadBalancer resource.
type NetworkLoadBalancerNetworkLoadBalancerArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Network load balancer identifier, which can be renamed.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
	IsPreserveSourceDestination pulumi.BoolPtrInput
	// Whether the network load balancer has a virtual cloud network-local (private) IP address.
	IsPrivate pulumi.BoolPtrInput
	// (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
	NetworkSecurityGroupIds pulumi.StringArrayInput
	// An array of reserved Ips.
	ReservedIps NetworkLoadBalancerNetworkLoadBalancerReservedIpArrayInput
	// The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SubnetId pulumi.StringInput
}

func (NetworkLoadBalancerNetworkLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkLoadBalancerNetworkLoadBalancerArgs)(nil)).Elem()
}

type NetworkLoadBalancerNetworkLoadBalancerInput interface {
	pulumi.Input

	ToNetworkLoadBalancerNetworkLoadBalancerOutput() NetworkLoadBalancerNetworkLoadBalancerOutput
	ToNetworkLoadBalancerNetworkLoadBalancerOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerOutput
}

func (*NetworkLoadBalancerNetworkLoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (i *NetworkLoadBalancerNetworkLoadBalancer) ToNetworkLoadBalancerNetworkLoadBalancerOutput() NetworkLoadBalancerNetworkLoadBalancerOutput {
	return i.ToNetworkLoadBalancerNetworkLoadBalancerOutputWithContext(context.Background())
}

func (i *NetworkLoadBalancerNetworkLoadBalancer) ToNetworkLoadBalancerNetworkLoadBalancerOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerNetworkLoadBalancerOutput)
}

func (i *NetworkLoadBalancerNetworkLoadBalancer) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutput() NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return i.ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *NetworkLoadBalancerNetworkLoadBalancer) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerNetworkLoadBalancerPtrOutput)
}

type NetworkLoadBalancerNetworkLoadBalancerPtrInput interface {
	pulumi.Input

	ToNetworkLoadBalancerNetworkLoadBalancerPtrOutput() NetworkLoadBalancerNetworkLoadBalancerPtrOutput
	ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerPtrOutput
}

type networkLoadBalancerNetworkLoadBalancerPtrType NetworkLoadBalancerNetworkLoadBalancerArgs

func (*networkLoadBalancerNetworkLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (i *networkLoadBalancerNetworkLoadBalancerPtrType) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutput() NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return i.ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *networkLoadBalancerNetworkLoadBalancerPtrType) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerNetworkLoadBalancerPtrOutput)
}

// NetworkLoadBalancerNetworkLoadBalancerArrayInput is an input type that accepts NetworkLoadBalancerNetworkLoadBalancerArray and NetworkLoadBalancerNetworkLoadBalancerArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerNetworkLoadBalancerArrayInput` via:
//
//          NetworkLoadBalancerNetworkLoadBalancerArray{ NetworkLoadBalancerNetworkLoadBalancerArgs{...} }
type NetworkLoadBalancerNetworkLoadBalancerArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancerNetworkLoadBalancerArrayOutput() NetworkLoadBalancerNetworkLoadBalancerArrayOutput
	ToNetworkLoadBalancerNetworkLoadBalancerArrayOutputWithContext(context.Context) NetworkLoadBalancerNetworkLoadBalancerArrayOutput
}

type NetworkLoadBalancerNetworkLoadBalancerArray []NetworkLoadBalancerNetworkLoadBalancerInput

func (NetworkLoadBalancerNetworkLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkLoadBalancerNetworkLoadBalancer)(nil)).Elem()
}

func (i NetworkLoadBalancerNetworkLoadBalancerArray) ToNetworkLoadBalancerNetworkLoadBalancerArrayOutput() NetworkLoadBalancerNetworkLoadBalancerArrayOutput {
	return i.ToNetworkLoadBalancerNetworkLoadBalancerArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerNetworkLoadBalancerArray) ToNetworkLoadBalancerNetworkLoadBalancerArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerNetworkLoadBalancerArrayOutput)
}

// NetworkLoadBalancerNetworkLoadBalancerMapInput is an input type that accepts NetworkLoadBalancerNetworkLoadBalancerMap and NetworkLoadBalancerNetworkLoadBalancerMapOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerNetworkLoadBalancerMapInput` via:
//
//          NetworkLoadBalancerNetworkLoadBalancerMap{ "key": NetworkLoadBalancerNetworkLoadBalancerArgs{...} }
type NetworkLoadBalancerNetworkLoadBalancerMapInput interface {
	pulumi.Input

	ToNetworkLoadBalancerNetworkLoadBalancerMapOutput() NetworkLoadBalancerNetworkLoadBalancerMapOutput
	ToNetworkLoadBalancerNetworkLoadBalancerMapOutputWithContext(context.Context) NetworkLoadBalancerNetworkLoadBalancerMapOutput
}

type NetworkLoadBalancerNetworkLoadBalancerMap map[string]NetworkLoadBalancerNetworkLoadBalancerInput

func (NetworkLoadBalancerNetworkLoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkLoadBalancerNetworkLoadBalancer)(nil)).Elem()
}

func (i NetworkLoadBalancerNetworkLoadBalancerMap) ToNetworkLoadBalancerNetworkLoadBalancerMapOutput() NetworkLoadBalancerNetworkLoadBalancerMapOutput {
	return i.ToNetworkLoadBalancerNetworkLoadBalancerMapOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerNetworkLoadBalancerMap) ToNetworkLoadBalancerNetworkLoadBalancerMapOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerNetworkLoadBalancerMapOutput)
}

type NetworkLoadBalancerNetworkLoadBalancerOutput struct {
	*pulumi.OutputState
}

func (NetworkLoadBalancerNetworkLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (o NetworkLoadBalancerNetworkLoadBalancerOutput) ToNetworkLoadBalancerNetworkLoadBalancerOutput() NetworkLoadBalancerNetworkLoadBalancerOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerOutput) ToNetworkLoadBalancerNetworkLoadBalancerOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerOutput) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutput() NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return o.ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(context.Background())
}

func (o NetworkLoadBalancerNetworkLoadBalancerOutput) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerNetworkLoadBalancer) *NetworkLoadBalancerNetworkLoadBalancer {
		return &v
	}).(NetworkLoadBalancerNetworkLoadBalancerPtrOutput)
}

type NetworkLoadBalancerNetworkLoadBalancerPtrOutput struct {
	*pulumi.OutputState
}

func (NetworkLoadBalancerNetworkLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (o NetworkLoadBalancerNetworkLoadBalancerPtrOutput) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutput() NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerPtrOutput) ToNetworkLoadBalancerNetworkLoadBalancerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerPtrOutput {
	return o
}

type NetworkLoadBalancerNetworkLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerNetworkLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (o NetworkLoadBalancerNetworkLoadBalancerArrayOutput) ToNetworkLoadBalancerNetworkLoadBalancerArrayOutput() NetworkLoadBalancerNetworkLoadBalancerArrayOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerArrayOutput) ToNetworkLoadBalancerNetworkLoadBalancerArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerArrayOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancerNetworkLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancerNetworkLoadBalancer {
		return vs[0].([]NetworkLoadBalancerNetworkLoadBalancer)[vs[1].(int)]
	}).(NetworkLoadBalancerNetworkLoadBalancerOutput)
}

type NetworkLoadBalancerNetworkLoadBalancerMapOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerNetworkLoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]NetworkLoadBalancerNetworkLoadBalancer)(nil))
}

func (o NetworkLoadBalancerNetworkLoadBalancerMapOutput) ToNetworkLoadBalancerNetworkLoadBalancerMapOutput() NetworkLoadBalancerNetworkLoadBalancerMapOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerMapOutput) ToNetworkLoadBalancerNetworkLoadBalancerMapOutputWithContext(ctx context.Context) NetworkLoadBalancerNetworkLoadBalancerMapOutput {
	return o
}

func (o NetworkLoadBalancerNetworkLoadBalancerMapOutput) MapIndex(k pulumi.StringInput) NetworkLoadBalancerNetworkLoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) NetworkLoadBalancerNetworkLoadBalancer {
		return vs[0].(map[string]NetworkLoadBalancerNetworkLoadBalancer)[vs[1].(string)]
	}).(NetworkLoadBalancerNetworkLoadBalancerOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkLoadBalancerNetworkLoadBalancerOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerNetworkLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerNetworkLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerNetworkLoadBalancerMapOutput{})
}
