// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Public Ip Pool resource in Oracle Cloud Infrastructure Core service.
//
// Creates a public IP pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCorePublicIpPool(ctx, "testPublicIpPool", &oci.CorePublicIpPoolArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Public_ip_pool_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// PublicIpPools can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/corePublicIpPool:CorePublicIpPool test_public_ip_pool "id"
// ```
type CorePublicIpPool struct {
	pulumi.CustomResourceState

	// The CIDR blocks added to this pool. This could be all or a portion of a BYOIP CIDR block.
	CidrBlocks pulumi.StringArrayOutput `pulumi:"cidrBlocks"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP pool.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The public IP pool's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the public IP pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCorePublicIpPool registers a new resource with the given unique name, arguments, and options.
func NewCorePublicIpPool(ctx *pulumi.Context,
	name string, args *CorePublicIpPoolArgs, opts ...pulumi.ResourceOption) (*CorePublicIpPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource CorePublicIpPool
	err := ctx.RegisterResource("oci:index/corePublicIpPool:CorePublicIpPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCorePublicIpPool gets an existing CorePublicIpPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCorePublicIpPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CorePublicIpPoolState, opts ...pulumi.ResourceOption) (*CorePublicIpPool, error) {
	var resource CorePublicIpPool
	err := ctx.ReadResource("oci:index/corePublicIpPool:CorePublicIpPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CorePublicIpPool resources.
type corePublicIpPoolState struct {
	// The CIDR blocks added to this pool. This could be all or a portion of a BYOIP CIDR block.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP pool.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The public IP pool's current state.
	State *string `pulumi:"state"`
	// The date and time the public IP pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CorePublicIpPoolState struct {
	// The CIDR blocks added to this pool. This could be all or a portion of a BYOIP CIDR block.
	CidrBlocks pulumi.StringArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP pool.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The public IP pool's current state.
	State pulumi.StringPtrInput
	// The date and time the public IP pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CorePublicIpPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*corePublicIpPoolState)(nil)).Elem()
}

type corePublicIpPoolArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP pool.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a CorePublicIpPool resource.
type CorePublicIpPoolArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the public IP pool.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (CorePublicIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*corePublicIpPoolArgs)(nil)).Elem()
}

type CorePublicIpPoolInput interface {
	pulumi.Input

	ToCorePublicIpPoolOutput() CorePublicIpPoolOutput
	ToCorePublicIpPoolOutputWithContext(ctx context.Context) CorePublicIpPoolOutput
}

func (*CorePublicIpPool) ElementType() reflect.Type {
	return reflect.TypeOf((*CorePublicIpPool)(nil))
}

func (i *CorePublicIpPool) ToCorePublicIpPoolOutput() CorePublicIpPoolOutput {
	return i.ToCorePublicIpPoolOutputWithContext(context.Background())
}

func (i *CorePublicIpPool) ToCorePublicIpPoolOutputWithContext(ctx context.Context) CorePublicIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPoolOutput)
}

func (i *CorePublicIpPool) ToCorePublicIpPoolPtrOutput() CorePublicIpPoolPtrOutput {
	return i.ToCorePublicIpPoolPtrOutputWithContext(context.Background())
}

func (i *CorePublicIpPool) ToCorePublicIpPoolPtrOutputWithContext(ctx context.Context) CorePublicIpPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPoolPtrOutput)
}

type CorePublicIpPoolPtrInput interface {
	pulumi.Input

	ToCorePublicIpPoolPtrOutput() CorePublicIpPoolPtrOutput
	ToCorePublicIpPoolPtrOutputWithContext(ctx context.Context) CorePublicIpPoolPtrOutput
}

type corePublicIpPoolPtrType CorePublicIpPoolArgs

func (*corePublicIpPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorePublicIpPool)(nil))
}

func (i *corePublicIpPoolPtrType) ToCorePublicIpPoolPtrOutput() CorePublicIpPoolPtrOutput {
	return i.ToCorePublicIpPoolPtrOutputWithContext(context.Background())
}

func (i *corePublicIpPoolPtrType) ToCorePublicIpPoolPtrOutputWithContext(ctx context.Context) CorePublicIpPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPoolPtrOutput)
}

// CorePublicIpPoolArrayInput is an input type that accepts CorePublicIpPoolArray and CorePublicIpPoolArrayOutput values.
// You can construct a concrete instance of `CorePublicIpPoolArrayInput` via:
//
//          CorePublicIpPoolArray{ CorePublicIpPoolArgs{...} }
type CorePublicIpPoolArrayInput interface {
	pulumi.Input

	ToCorePublicIpPoolArrayOutput() CorePublicIpPoolArrayOutput
	ToCorePublicIpPoolArrayOutputWithContext(context.Context) CorePublicIpPoolArrayOutput
}

type CorePublicIpPoolArray []CorePublicIpPoolInput

func (CorePublicIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CorePublicIpPool)(nil)).Elem()
}

func (i CorePublicIpPoolArray) ToCorePublicIpPoolArrayOutput() CorePublicIpPoolArrayOutput {
	return i.ToCorePublicIpPoolArrayOutputWithContext(context.Background())
}

func (i CorePublicIpPoolArray) ToCorePublicIpPoolArrayOutputWithContext(ctx context.Context) CorePublicIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPoolArrayOutput)
}

// CorePublicIpPoolMapInput is an input type that accepts CorePublicIpPoolMap and CorePublicIpPoolMapOutput values.
// You can construct a concrete instance of `CorePublicIpPoolMapInput` via:
//
//          CorePublicIpPoolMap{ "key": CorePublicIpPoolArgs{...} }
type CorePublicIpPoolMapInput interface {
	pulumi.Input

	ToCorePublicIpPoolMapOutput() CorePublicIpPoolMapOutput
	ToCorePublicIpPoolMapOutputWithContext(context.Context) CorePublicIpPoolMapOutput
}

type CorePublicIpPoolMap map[string]CorePublicIpPoolInput

func (CorePublicIpPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CorePublicIpPool)(nil)).Elem()
}

func (i CorePublicIpPoolMap) ToCorePublicIpPoolMapOutput() CorePublicIpPoolMapOutput {
	return i.ToCorePublicIpPoolMapOutputWithContext(context.Background())
}

func (i CorePublicIpPoolMap) ToCorePublicIpPoolMapOutputWithContext(ctx context.Context) CorePublicIpPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPoolMapOutput)
}

type CorePublicIpPoolOutput struct {
	*pulumi.OutputState
}

func (CorePublicIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorePublicIpPool)(nil))
}

func (o CorePublicIpPoolOutput) ToCorePublicIpPoolOutput() CorePublicIpPoolOutput {
	return o
}

func (o CorePublicIpPoolOutput) ToCorePublicIpPoolOutputWithContext(ctx context.Context) CorePublicIpPoolOutput {
	return o
}

func (o CorePublicIpPoolOutput) ToCorePublicIpPoolPtrOutput() CorePublicIpPoolPtrOutput {
	return o.ToCorePublicIpPoolPtrOutputWithContext(context.Background())
}

func (o CorePublicIpPoolOutput) ToCorePublicIpPoolPtrOutputWithContext(ctx context.Context) CorePublicIpPoolPtrOutput {
	return o.ApplyT(func(v CorePublicIpPool) *CorePublicIpPool {
		return &v
	}).(CorePublicIpPoolPtrOutput)
}

type CorePublicIpPoolPtrOutput struct {
	*pulumi.OutputState
}

func (CorePublicIpPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorePublicIpPool)(nil))
}

func (o CorePublicIpPoolPtrOutput) ToCorePublicIpPoolPtrOutput() CorePublicIpPoolPtrOutput {
	return o
}

func (o CorePublicIpPoolPtrOutput) ToCorePublicIpPoolPtrOutputWithContext(ctx context.Context) CorePublicIpPoolPtrOutput {
	return o
}

type CorePublicIpPoolArrayOutput struct{ *pulumi.OutputState }

func (CorePublicIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorePublicIpPool)(nil))
}

func (o CorePublicIpPoolArrayOutput) ToCorePublicIpPoolArrayOutput() CorePublicIpPoolArrayOutput {
	return o
}

func (o CorePublicIpPoolArrayOutput) ToCorePublicIpPoolArrayOutputWithContext(ctx context.Context) CorePublicIpPoolArrayOutput {
	return o
}

func (o CorePublicIpPoolArrayOutput) Index(i pulumi.IntInput) CorePublicIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorePublicIpPool {
		return vs[0].([]CorePublicIpPool)[vs[1].(int)]
	}).(CorePublicIpPoolOutput)
}

type CorePublicIpPoolMapOutput struct{ *pulumi.OutputState }

func (CorePublicIpPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CorePublicIpPool)(nil))
}

func (o CorePublicIpPoolMapOutput) ToCorePublicIpPoolMapOutput() CorePublicIpPoolMapOutput {
	return o
}

func (o CorePublicIpPoolMapOutput) ToCorePublicIpPoolMapOutputWithContext(ctx context.Context) CorePublicIpPoolMapOutput {
	return o
}

func (o CorePublicIpPoolMapOutput) MapIndex(k pulumi.StringInput) CorePublicIpPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CorePublicIpPool {
		return vs[0].(map[string]CorePublicIpPool)[vs[1].(string)]
	}).(CorePublicIpPoolOutput)
}

func init() {
	pulumi.RegisterOutputType(CorePublicIpPoolOutput{})
	pulumi.RegisterOutputType(CorePublicIpPoolPtrOutput{})
	pulumi.RegisterOutputType(CorePublicIpPoolArrayOutput{})
	pulumi.RegisterOutputType(CorePublicIpPoolMapOutput{})
}
