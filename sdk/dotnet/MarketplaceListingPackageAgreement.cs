// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    /// <summary>
    /// This resource provides details about a specific Listing Package Agreement resource in Oracle Cloud Infrastructure Marketplace service.
    /// 
    /// This resource can be used to retrieve the time-based signature of terms of use agreement for a package that can be used to
    /// accept the agreement.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testListingPackageAgreement = new Oci.MarketplaceListingPackageAgreement("testListingPackageAgreement", new Oci.MarketplaceListingPackageAgreementArgs
    ///         {
    ///             AgreementId = oci_marketplace_agreement.Test_agreement.Id,
    ///             ListingId = oci_marketplace_listing.Test_listing.Id,
    ///             PackageVersion = @var.Listing_package_agreement_package_version,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import is not supported for this resource.
    /// </summary>
    [OciResourceType("oci:index/marketplaceListingPackageAgreement:MarketplaceListingPackageAgreement")]
    public partial class MarketplaceListingPackageAgreement : Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier for the agreement.
        /// </summary>
        [Output("agreementId")]
        public Output<string> AgreementId { get; private set; } = null!;

        /// <summary>
        /// Who authored the agreement.
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The content URL of the agreement.
        /// </summary>
        [Output("contentUrl")]
        public Output<string> ContentUrl { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the listing.
        /// </summary>
        [Output("listingId")]
        public Output<string> ListingId { get; private set; } = null!;

        /// <summary>
        /// The version of the package. Package versions are unique within a listing.
        /// </summary>
        [Output("packageVersion")]
        public Output<string> PackageVersion { get; private set; } = null!;

        /// <summary>
        /// Textual prompt to read and accept the agreement.
        /// </summary>
        [Output("prompt")]
        public Output<string> Prompt { get; private set; } = null!;

        /// <summary>
        /// A time-based signature that can be used to accept an agreement or remove a previously accepted agreement from the list that Marketplace checks before a deployment.
        /// </summary>
        [Output("signature")]
        public Output<string> Signature { get; private set; } = null!;


        /// <summary>
        /// Create a MarketplaceListingPackageAgreement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MarketplaceListingPackageAgreement(string name, MarketplaceListingPackageAgreementArgs args, CustomResourceOptions? options = null)
            : base("oci:index/marketplaceListingPackageAgreement:MarketplaceListingPackageAgreement", name, args ?? new MarketplaceListingPackageAgreementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MarketplaceListingPackageAgreement(string name, Input<string> id, MarketplaceListingPackageAgreementState? state = null, CustomResourceOptions? options = null)
            : base("oci:index/marketplaceListingPackageAgreement:MarketplaceListingPackageAgreement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MarketplaceListingPackageAgreement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MarketplaceListingPackageAgreement Get(string name, Input<string> id, MarketplaceListingPackageAgreementState? state = null, CustomResourceOptions? options = null)
        {
            return new MarketplaceListingPackageAgreement(name, id, state, options);
        }
    }

    public sealed class MarketplaceListingPackageAgreementArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the agreement.
        /// </summary>
        [Input("agreementId", required: true)]
        public Input<string> AgreementId { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the listing.
        /// </summary>
        [Input("listingId", required: true)]
        public Input<string> ListingId { get; set; } = null!;

        /// <summary>
        /// The version of the package. Package versions are unique within a listing.
        /// </summary>
        [Input("packageVersion", required: true)]
        public Input<string> PackageVersion { get; set; } = null!;

        public MarketplaceListingPackageAgreementArgs()
        {
        }
    }

    public sealed class MarketplaceListingPackageAgreementState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the agreement.
        /// </summary>
        [Input("agreementId")]
        public Input<string>? AgreementId { get; set; }

        /// <summary>
        /// Who authored the agreement.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The content URL of the agreement.
        /// </summary>
        [Input("contentUrl")]
        public Input<string>? ContentUrl { get; set; }

        /// <summary>
        /// The unique identifier for the listing.
        /// </summary>
        [Input("listingId")]
        public Input<string>? ListingId { get; set; }

        /// <summary>
        /// The version of the package. Package versions are unique within a listing.
        /// </summary>
        [Input("packageVersion")]
        public Input<string>? PackageVersion { get; set; }

        /// <summary>
        /// Textual prompt to read and accept the agreement.
        /// </summary>
        [Input("prompt")]
        public Input<string>? Prompt { get; set; }

        /// <summary>
        /// A time-based signature that can be used to accept an agreement or remove a previously accepted agreement from the list that Marketplace checks before a deployment.
        /// </summary>
        [Input("signature")]
        public Input<string>? Signature { get; set; }

        public MarketplaceListingPackageAgreementState()
        {
        }
    }
}
