// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Mysql Db System resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Creates and launches a DB System.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewMysqlMysqlDbSystem(ctx, "testMysqlDbSystem", &oci.MysqlMysqlDbSystemArgs{
// 			AdminPassword:      pulumi.Any(_var.Mysql_db_system_admin_password),
// 			AdminUsername:      pulumi.Any(_var.Mysql_db_system_admin_username),
// 			AvailabilityDomain: pulumi.Any(_var.Mysql_db_system_availability_domain),
// 			CompartmentId:      pulumi.Any(_var.Compartment_id),
// 			ShapeName:          pulumi.Any(_var.Mysql_shape_name),
// 			SubnetId:           pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 			BackupPolicy: &MysqlMysqlDbSystemBackupPolicyArgs{
// 				DefinedTags: pulumi.AnyMap{
// 					"foo-namespace.bar-key": pulumi.Any("value"),
// 				},
// 				FreeformTags: pulumi.AnyMap{
// 					"bar-key": pulumi.Any("value"),
// 				},
// 				IsEnabled:       pulumi.Any(_var.Mysql_db_system_backup_policy_is_enabled),
// 				RetentionInDays: pulumi.Any(_var.Mysql_db_system_backup_policy_retention_in_days),
// 				WindowStartTime: pulumi.Any(_var.Mysql_db_system_backup_policy_window_start_time),
// 			},
// 			ConfigurationId:     pulumi.Any(oci_audit_configuration.Test_configuration.Id),
// 			DataStorageSizeInGb: pulumi.Any(_var.Mysql_db_system_data_storage_size_in_gb),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Mysql_db_system_description),
// 			DisplayName: pulumi.Any(_var.Mysql_db_system_display_name),
// 			FaultDomain: pulumi.Any(_var.Mysql_db_system_fault_domain),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			HostnameLabel:     pulumi.Any(_var.Mysql_db_system_hostname_label),
// 			IpAddress:         pulumi.Any(_var.Mysql_db_system_ip_address),
// 			IsHighlyAvailable: pulumi.Any(_var.Mysql_db_system_is_highly_available),
// 			Maintenance: &MysqlMysqlDbSystemMaintenanceArgs{
// 				WindowStartTime: pulumi.Any(_var.Mysql_db_system_maintenance_window_start_time),
// 			},
// 			Port:  pulumi.Any(_var.Mysql_db_system_port),
// 			PortX: pulumi.Any(_var.Mysql_db_system_port_x),
// 			Source: &MysqlMysqlDbSystemSourceArgs{
// 				SourceType: pulumi.Any(_var.Mysql_db_system_source_source_type),
// 				BackupId:   pulumi.Any(oci_mysql_mysql_backup.Test_backup.Id),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// MysqlDbSystems can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/mysqlMysqlDbSystem:MysqlMysqlDbSystem test_mysql_db_system "id"
// ```
type MysqlMysqlDbSystem struct {
	pulumi.CustomResourceState

	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername pulumi.StringOutput `pulumi:"adminUsername"`
	// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
	AnalyticsCluster MysqlMysqlDbSystemAnalyticsClusterOutput `pulumi:"analyticsCluster"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlMysqlDbSystemBackupPolicyOutput `pulumi:"backupPolicy"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels MysqlMysqlDbSystemChannelArrayOutput `pulumi:"channels"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringOutput `pulumi:"configurationId"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacement MysqlMysqlDbSystemCurrentPlacementOutput `pulumi:"currentPlacement"`
	// Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntOutput `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints MysqlMysqlDbSystemEndpointArrayOutput `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringOutput `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveCluster MysqlMysqlDbSystemHeatWaveClusterOutput `pulumi:"heatWaveCluster"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	HostnameLabel pulumi.StringOutput `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// DEPRECATED -- please use `isHeatWaveClusterAttached` instead. If the DB System has an Analytics Cluster attached.
	IsAnalyticsClusterAttached pulumi.BoolOutput `pulumi:"isAnalyticsClusterAttached"`
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached pulumi.BoolOutput `pulumi:"isHeatWaveClusterAttached"`
	// (Updatable) Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolOutput `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The Maintenance Policy for the DB System. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlMysqlDbSystemMaintenanceOutput `pulumi:"maintenance"`
	// Name of the MySQL Version in use for the DB System.
	//
	// Deprecated: The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlVersion pulumi.StringOutput `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntOutput `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntOutput `pulumi:"portX"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringOutput `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	ShutdownType pulumi.StringPtrOutput `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlMysqlDbSystemSourceOutput `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMysqlMysqlDbSystem registers a new resource with the given unique name, arguments, and options.
func NewMysqlMysqlDbSystem(ctx *pulumi.Context,
	name string, args *MysqlMysqlDbSystemArgs, opts ...pulumi.ResourceOption) (*MysqlMysqlDbSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminPassword'")
	}
	if args.AdminUsername == nil {
		return nil, errors.New("invalid value for required argument 'AdminUsername'")
	}
	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ShapeName == nil {
		return nil, errors.New("invalid value for required argument 'ShapeName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource MysqlMysqlDbSystem
	err := ctx.RegisterResource("oci:index/mysqlMysqlDbSystem:MysqlMysqlDbSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMysqlMysqlDbSystem gets an existing MysqlMysqlDbSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMysqlMysqlDbSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MysqlMysqlDbSystemState, opts ...pulumi.ResourceOption) (*MysqlMysqlDbSystem, error) {
	var resource MysqlMysqlDbSystem
	err := ctx.ReadResource("oci:index/mysqlMysqlDbSystem:MysqlMysqlDbSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MysqlMysqlDbSystem resources.
type mysqlMysqlDbSystemState struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword *string `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername *string `pulumi:"adminUsername"`
	// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
	AnalyticsCluster *MysqlMysqlDbSystemAnalyticsCluster `pulumi:"analyticsCluster"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy *MysqlMysqlDbSystemBackupPolicy `pulumi:"backupPolicy"`
	// A list with a summary of all the Channels attached to the DB System.
	Channels []MysqlMysqlDbSystemChannel `pulumi:"channels"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacement *MysqlMysqlDbSystemCurrentPlacement `pulumi:"currentPlacement"`
	// Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) User-provided data about the DB System.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The network endpoints available for this DB System.
	Endpoints []MysqlMysqlDbSystemEndpoint `pulumi:"endpoints"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A summary of a HeatWave cluster.
	HeatWaveCluster *MysqlMysqlDbSystemHeatWaveCluster `pulumi:"heatWaveCluster"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// DEPRECATED -- please use `isHeatWaveClusterAttached` instead. If the DB System has an Analytics Cluster attached.
	IsAnalyticsClusterAttached *bool `pulumi:"isAnalyticsClusterAttached"`
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached *bool `pulumi:"isHeatWaveClusterAttached"`
	// (Updatable) Specifies if the DB System is highly available.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// Additional information about the current lifecycleState.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The Maintenance Policy for the DB System. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance *MysqlMysqlDbSystemMaintenance `pulumi:"maintenance"`
	// Name of the MySQL Version in use for the DB System.
	//
	// Deprecated: The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName *string `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	ShutdownType *string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source *MysqlMysqlDbSystemSource `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId *string `pulumi:"subnetId"`
	// The date and time the DB System was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DB System was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MysqlMysqlDbSystemState struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringPtrInput
	// The username for the administrative user.
	AdminUsername pulumi.StringPtrInput
	// DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
	AnalyticsCluster MysqlMysqlDbSystemAnalyticsClusterPtrInput
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlMysqlDbSystemBackupPolicyPtrInput
	// A list with a summary of all the Channels attached to the DB System.
	Channels MysqlMysqlDbSystemChannelArrayInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringPtrInput
	// The availability domain and fault domain a DB System is placed in.
	CurrentPlacement MysqlMysqlDbSystemCurrentPlacementPtrInput
	// Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The network endpoints available for this DB System.
	Endpoints MysqlMysqlDbSystemEndpointArrayInput
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A summary of a HeatWave cluster.
	HeatWaveCluster MysqlMysqlDbSystemHeatWaveClusterPtrInput
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	HostnameLabel pulumi.StringPtrInput
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput
	// DEPRECATED -- please use `isHeatWaveClusterAttached` instead. If the DB System has an Analytics Cluster attached.
	IsAnalyticsClusterAttached pulumi.BoolPtrInput
	// If the DB System has a HeatWave Cluster attached.
	IsHeatWaveClusterAttached pulumi.BoolPtrInput
	// (Updatable) Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolPtrInput
	// Additional information about the current lifecycleState.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The Maintenance Policy for the DB System. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlMysqlDbSystemMaintenancePtrInput
	// Name of the MySQL Version in use for the DB System.
	//
	// Deprecated: The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlVersion pulumi.StringPtrInput
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringPtrInput
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	ShutdownType pulumi.StringPtrInput
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlMysqlDbSystemSourcePtrInput
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringPtrInput
	// The date and time the DB System was created.
	TimeCreated pulumi.StringPtrInput
	// The time the DB System was last updated.
	TimeUpdated pulumi.StringPtrInput
}

func (MysqlMysqlDbSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlMysqlDbSystemState)(nil)).Elem()
}

type mysqlMysqlDbSystemArgs struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword string `pulumi:"adminPassword"`
	// The username for the administrative user.
	AdminUsername string `pulumi:"adminUsername"`
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy *MysqlMysqlDbSystemBackupPolicy `pulumi:"backupPolicy"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the Configuration to be used for this DB System.
	ConfigurationId *string `pulumi:"configurationId"`
	// Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb *int `pulumi:"dataStorageSizeInGb"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) User-provided data about the DB System.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain *string `pulumi:"faultDomain"`
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress *string `pulumi:"ipAddress"`
	// (Updatable) Specifies if the DB System is highly available.
	IsHighlyAvailable *bool `pulumi:"isHighlyAvailable"`
	// (Updatable) The Maintenance Policy for the DB System. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance *MysqlMysqlDbSystemMaintenance `pulumi:"maintenance"`
	// Name of the MySQL Version in use for the DB System.
	//
	// Deprecated: The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// The port for primary endpoint of the DB System to listen on.
	Port *int `pulumi:"port"`
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX *int `pulumi:"portX"`
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName string `pulumi:"shapeName"`
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	ShutdownType *string `pulumi:"shutdownType"`
	// Parameters detailing how to provision the initial data of the system.
	Source *MysqlMysqlDbSystemSource `pulumi:"source"`
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The OCID of the subnet the DB System is associated with.
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a MysqlMysqlDbSystem resource.
type MysqlMysqlDbSystemArgs struct {
	// The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
	AdminPassword pulumi.StringInput
	// The username for the administrative user.
	AdminUsername pulumi.StringInput
	// The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	AvailabilityDomain pulumi.StringInput
	// (Updatable) Backup policy as optionally used for DB System Creation.
	BackupPolicy MysqlMysqlDbSystemBackupPolicyPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// The OCID of the Configuration to be used for this DB System.
	ConfigurationId pulumi.StringPtrInput
	// Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
	DataStorageSizeInGb pulumi.IntPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) User-provided data about the DB System.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly name for the DB System. It does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
	FaultDomain pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The hostname for the primary endpoint of the DB System. Used for DNS.
	HostnameLabel pulumi.StringPtrInput
	// The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
	IpAddress pulumi.StringPtrInput
	// (Updatable) Specifies if the DB System is highly available.
	IsHighlyAvailable pulumi.BoolPtrInput
	// (Updatable) The Maintenance Policy for the DB System. `maintenance` and `backupPolicy` cannot be updated in the same request.
	Maintenance MysqlMysqlDbSystemMaintenancePtrInput
	// Name of the MySQL Version in use for the DB System.
	//
	// Deprecated: The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
	MysqlVersion pulumi.StringPtrInput
	// The port for primary endpoint of the DB System to listen on.
	Port pulumi.IntPtrInput
	// The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
	PortX pulumi.IntPtrInput
	// The name of the shape. The shape determines the resources allocated
	// * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
	ShapeName pulumi.StringInput
	// It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
	ShutdownType pulumi.StringPtrInput
	// Parameters detailing how to provision the initial data of the system.
	Source MysqlMysqlDbSystemSourcePtrInput
	// (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The OCID of the subnet the DB System is associated with.
	SubnetId pulumi.StringInput
}

func (MysqlMysqlDbSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlMysqlDbSystemArgs)(nil)).Elem()
}

type MysqlMysqlDbSystemInput interface {
	pulumi.Input

	ToMysqlMysqlDbSystemOutput() MysqlMysqlDbSystemOutput
	ToMysqlMysqlDbSystemOutputWithContext(ctx context.Context) MysqlMysqlDbSystemOutput
}

func (*MysqlMysqlDbSystem) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlMysqlDbSystem)(nil))
}

func (i *MysqlMysqlDbSystem) ToMysqlMysqlDbSystemOutput() MysqlMysqlDbSystemOutput {
	return i.ToMysqlMysqlDbSystemOutputWithContext(context.Background())
}

func (i *MysqlMysqlDbSystem) ToMysqlMysqlDbSystemOutputWithContext(ctx context.Context) MysqlMysqlDbSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlMysqlDbSystemOutput)
}

func (i *MysqlMysqlDbSystem) ToMysqlMysqlDbSystemPtrOutput() MysqlMysqlDbSystemPtrOutput {
	return i.ToMysqlMysqlDbSystemPtrOutputWithContext(context.Background())
}

func (i *MysqlMysqlDbSystem) ToMysqlMysqlDbSystemPtrOutputWithContext(ctx context.Context) MysqlMysqlDbSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlMysqlDbSystemPtrOutput)
}

type MysqlMysqlDbSystemPtrInput interface {
	pulumi.Input

	ToMysqlMysqlDbSystemPtrOutput() MysqlMysqlDbSystemPtrOutput
	ToMysqlMysqlDbSystemPtrOutputWithContext(ctx context.Context) MysqlMysqlDbSystemPtrOutput
}

type mysqlMysqlDbSystemPtrType MysqlMysqlDbSystemArgs

func (*mysqlMysqlDbSystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlMysqlDbSystem)(nil))
}

func (i *mysqlMysqlDbSystemPtrType) ToMysqlMysqlDbSystemPtrOutput() MysqlMysqlDbSystemPtrOutput {
	return i.ToMysqlMysqlDbSystemPtrOutputWithContext(context.Background())
}

func (i *mysqlMysqlDbSystemPtrType) ToMysqlMysqlDbSystemPtrOutputWithContext(ctx context.Context) MysqlMysqlDbSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlMysqlDbSystemPtrOutput)
}

// MysqlMysqlDbSystemArrayInput is an input type that accepts MysqlMysqlDbSystemArray and MysqlMysqlDbSystemArrayOutput values.
// You can construct a concrete instance of `MysqlMysqlDbSystemArrayInput` via:
//
//          MysqlMysqlDbSystemArray{ MysqlMysqlDbSystemArgs{...} }
type MysqlMysqlDbSystemArrayInput interface {
	pulumi.Input

	ToMysqlMysqlDbSystemArrayOutput() MysqlMysqlDbSystemArrayOutput
	ToMysqlMysqlDbSystemArrayOutputWithContext(context.Context) MysqlMysqlDbSystemArrayOutput
}

type MysqlMysqlDbSystemArray []MysqlMysqlDbSystemInput

func (MysqlMysqlDbSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlMysqlDbSystem)(nil)).Elem()
}

func (i MysqlMysqlDbSystemArray) ToMysqlMysqlDbSystemArrayOutput() MysqlMysqlDbSystemArrayOutput {
	return i.ToMysqlMysqlDbSystemArrayOutputWithContext(context.Background())
}

func (i MysqlMysqlDbSystemArray) ToMysqlMysqlDbSystemArrayOutputWithContext(ctx context.Context) MysqlMysqlDbSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlMysqlDbSystemArrayOutput)
}

// MysqlMysqlDbSystemMapInput is an input type that accepts MysqlMysqlDbSystemMap and MysqlMysqlDbSystemMapOutput values.
// You can construct a concrete instance of `MysqlMysqlDbSystemMapInput` via:
//
//          MysqlMysqlDbSystemMap{ "key": MysqlMysqlDbSystemArgs{...} }
type MysqlMysqlDbSystemMapInput interface {
	pulumi.Input

	ToMysqlMysqlDbSystemMapOutput() MysqlMysqlDbSystemMapOutput
	ToMysqlMysqlDbSystemMapOutputWithContext(context.Context) MysqlMysqlDbSystemMapOutput
}

type MysqlMysqlDbSystemMap map[string]MysqlMysqlDbSystemInput

func (MysqlMysqlDbSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlMysqlDbSystem)(nil)).Elem()
}

func (i MysqlMysqlDbSystemMap) ToMysqlMysqlDbSystemMapOutput() MysqlMysqlDbSystemMapOutput {
	return i.ToMysqlMysqlDbSystemMapOutputWithContext(context.Background())
}

func (i MysqlMysqlDbSystemMap) ToMysqlMysqlDbSystemMapOutputWithContext(ctx context.Context) MysqlMysqlDbSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlMysqlDbSystemMapOutput)
}

type MysqlMysqlDbSystemOutput struct {
	*pulumi.OutputState
}

func (MysqlMysqlDbSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlMysqlDbSystem)(nil))
}

func (o MysqlMysqlDbSystemOutput) ToMysqlMysqlDbSystemOutput() MysqlMysqlDbSystemOutput {
	return o
}

func (o MysqlMysqlDbSystemOutput) ToMysqlMysqlDbSystemOutputWithContext(ctx context.Context) MysqlMysqlDbSystemOutput {
	return o
}

func (o MysqlMysqlDbSystemOutput) ToMysqlMysqlDbSystemPtrOutput() MysqlMysqlDbSystemPtrOutput {
	return o.ToMysqlMysqlDbSystemPtrOutputWithContext(context.Background())
}

func (o MysqlMysqlDbSystemOutput) ToMysqlMysqlDbSystemPtrOutputWithContext(ctx context.Context) MysqlMysqlDbSystemPtrOutput {
	return o.ApplyT(func(v MysqlMysqlDbSystem) *MysqlMysqlDbSystem {
		return &v
	}).(MysqlMysqlDbSystemPtrOutput)
}

type MysqlMysqlDbSystemPtrOutput struct {
	*pulumi.OutputState
}

func (MysqlMysqlDbSystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlMysqlDbSystem)(nil))
}

func (o MysqlMysqlDbSystemPtrOutput) ToMysqlMysqlDbSystemPtrOutput() MysqlMysqlDbSystemPtrOutput {
	return o
}

func (o MysqlMysqlDbSystemPtrOutput) ToMysqlMysqlDbSystemPtrOutputWithContext(ctx context.Context) MysqlMysqlDbSystemPtrOutput {
	return o
}

type MysqlMysqlDbSystemArrayOutput struct{ *pulumi.OutputState }

func (MysqlMysqlDbSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlMysqlDbSystem)(nil))
}

func (o MysqlMysqlDbSystemArrayOutput) ToMysqlMysqlDbSystemArrayOutput() MysqlMysqlDbSystemArrayOutput {
	return o
}

func (o MysqlMysqlDbSystemArrayOutput) ToMysqlMysqlDbSystemArrayOutputWithContext(ctx context.Context) MysqlMysqlDbSystemArrayOutput {
	return o
}

func (o MysqlMysqlDbSystemArrayOutput) Index(i pulumi.IntInput) MysqlMysqlDbSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlMysqlDbSystem {
		return vs[0].([]MysqlMysqlDbSystem)[vs[1].(int)]
	}).(MysqlMysqlDbSystemOutput)
}

type MysqlMysqlDbSystemMapOutput struct{ *pulumi.OutputState }

func (MysqlMysqlDbSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MysqlMysqlDbSystem)(nil))
}

func (o MysqlMysqlDbSystemMapOutput) ToMysqlMysqlDbSystemMapOutput() MysqlMysqlDbSystemMapOutput {
	return o
}

func (o MysqlMysqlDbSystemMapOutput) ToMysqlMysqlDbSystemMapOutputWithContext(ctx context.Context) MysqlMysqlDbSystemMapOutput {
	return o
}

func (o MysqlMysqlDbSystemMapOutput) MapIndex(k pulumi.StringInput) MysqlMysqlDbSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MysqlMysqlDbSystem {
		return vs[0].(map[string]MysqlMysqlDbSystem)[vs[1].(string)]
	}).(MysqlMysqlDbSystemOutput)
}

func init() {
	pulumi.RegisterOutputType(MysqlMysqlDbSystemOutput{})
	pulumi.RegisterOutputType(MysqlMysqlDbSystemPtrOutput{})
	pulumi.RegisterOutputType(MysqlMysqlDbSystemArrayOutput{})
	pulumi.RegisterOutputType(MysqlMysqlDbSystemMapOutput{})
}
