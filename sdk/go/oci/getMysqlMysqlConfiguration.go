// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Mysql Configuration resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Get the full details of the specified Configuration, including the list of MySQL Variables and their values.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.GetMysqlMysqlConfiguration(ctx, &GetMysqlMysqlConfigurationArgs{
// 			ConfigurationId: _var.Mysql_configuration_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMysqlMysqlConfiguration(ctx *pulumi.Context, args *GetMysqlMysqlConfigurationArgs, opts ...pulumi.InvokeOption) (*GetMysqlMysqlConfigurationResult, error) {
	var rv GetMysqlMysqlConfigurationResult
	err := ctx.Invoke("oci:index/getMysqlMysqlConfiguration:GetMysqlMysqlConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetMysqlMysqlConfiguration.
type GetMysqlMysqlConfigurationArgs struct {
	// The OCID of the Configuration.
	ConfigurationId string `pulumi:"configurationId"`
}

// A collection of values returned by GetMysqlMysqlConfiguration.
type GetMysqlMysqlConfigurationResult struct {
	// OCID of the Compartment the Configuration exists in.
	CompartmentId   string `pulumi:"compartmentId"`
	ConfigurationId string `pulumi:"configurationId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// User-provided data about the Configuration.
	Description string `pulumi:"description"`
	// The display name of the Configuration.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
	ParentConfigurationId string `pulumi:"parentConfigurationId"`
	// The name of the associated Shape.
	ShapeName string `pulumi:"shapeName"`
	// The current state of the Configuration.
	State string `pulumi:"state"`
	// The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The Configuration type, DEFAULT or CUSTOM.
	Type string `pulumi:"type"`
	// User controllable service variables.
	Variables []GetMysqlMysqlConfigurationVariable `pulumi:"variables"`
}
