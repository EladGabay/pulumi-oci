// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Container Image Signature resource in Oracle Cloud Infrastructure Artifacts service.
//
// Upload a signature to an image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewArtifactsContainerImageSignature(ctx, "testContainerImageSignature", &oci.ArtifactsContainerImageSignatureArgs{
// 			CompartmentId:    pulumi.Any(_var.Compartment_id),
// 			ImageId:          pulumi.Any(oci_core_image.Test_image.Id),
// 			KmsKeyId:         pulumi.Any(oci_kms_key.Test_key.Id),
// 			KmsKeyVersionId:  pulumi.Any(oci_kms_key_version.Test_key_version.Id),
// 			Message:          pulumi.Any(_var.Container_image_signature_message),
// 			Signature:        pulumi.Any(_var.Container_image_signature_signature),
// 			SigningAlgorithm: pulumi.Any(_var.Container_image_signature_signing_algorithm),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ContainerImageSignatures can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature test_container_image_signature "container/imageSignatures/{imageSignatureId}"
// ```
type ArtifactsContainerImageSignature struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The id of the user or principal that created the resource.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId pulumi.StringOutput `pulumi:"kmsKeyVersionId"`
	// The base64 encoded signature payload that was signed.
	Message pulumi.StringOutput `pulumi:"message"`
	// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
	Signature pulumi.StringOutput `pulumi:"signature"`
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm pulumi.StringOutput `pulumi:"signingAlgorithm"`
	// An RFC 3339 timestamp indicating when the image was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewArtifactsContainerImageSignature registers a new resource with the given unique name, arguments, and options.
func NewArtifactsContainerImageSignature(ctx *pulumi.Context,
	name string, args *ArtifactsContainerImageSignatureArgs, opts ...pulumi.ResourceOption) (*ArtifactsContainerImageSignature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.KmsKeyId == nil {
		return nil, errors.New("invalid value for required argument 'KmsKeyId'")
	}
	if args.KmsKeyVersionId == nil {
		return nil, errors.New("invalid value for required argument 'KmsKeyVersionId'")
	}
	if args.Message == nil {
		return nil, errors.New("invalid value for required argument 'Message'")
	}
	if args.Signature == nil {
		return nil, errors.New("invalid value for required argument 'Signature'")
	}
	if args.SigningAlgorithm == nil {
		return nil, errors.New("invalid value for required argument 'SigningAlgorithm'")
	}
	var resource ArtifactsContainerImageSignature
	err := ctx.RegisterResource("oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArtifactsContainerImageSignature gets an existing ArtifactsContainerImageSignature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArtifactsContainerImageSignature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArtifactsContainerImageSignatureState, opts ...pulumi.ResourceOption) (*ArtifactsContainerImageSignature, error) {
	var resource ArtifactsContainerImageSignature
	err := ctx.ReadResource("oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArtifactsContainerImageSignature resources.
type artifactsContainerImageSignatureState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId *string `pulumi:"compartmentId"`
	// The id of the user or principal that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId *string `pulumi:"imageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The base64 encoded signature payload that was signed.
	Message *string `pulumi:"message"`
	// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
	Signature *string `pulumi:"signature"`
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
	// An RFC 3339 timestamp indicating when the image was created.
	TimeCreated *string `pulumi:"timeCreated"`
}

type ArtifactsContainerImageSignatureState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId pulumi.StringPtrInput
	// The id of the user or principal that created the resource.
	CreatedBy pulumi.StringPtrInput
	// The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId pulumi.StringPtrInput
	// The base64 encoded signature payload that was signed.
	Message pulumi.StringPtrInput
	// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
	Signature pulumi.StringPtrInput
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm pulumi.StringPtrInput
	// An RFC 3339 timestamp indicating when the image was created.
	TimeCreated pulumi.StringPtrInput
}

func (ArtifactsContainerImageSignatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactsContainerImageSignatureState)(nil)).Elem()
}

type artifactsContainerImageSignatureArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId string `pulumi:"imageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId string `pulumi:"kmsKeyVersionId"`
	// The base64 encoded signature payload that was signed.
	Message string `pulumi:"message"`
	// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
	Signature string `pulumi:"signature"`
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm string `pulumi:"signingAlgorithm"`
}

// The set of arguments for constructing a ArtifactsContainerImageSignature resource.
type ArtifactsContainerImageSignatureArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId pulumi.StringInput
	// The base64 encoded signature payload that was signed.
	Message pulumi.StringInput
	// The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
	Signature pulumi.StringInput
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm pulumi.StringInput
}

func (ArtifactsContainerImageSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactsContainerImageSignatureArgs)(nil)).Elem()
}

type ArtifactsContainerImageSignatureInput interface {
	pulumi.Input

	ToArtifactsContainerImageSignatureOutput() ArtifactsContainerImageSignatureOutput
	ToArtifactsContainerImageSignatureOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureOutput
}

func (*ArtifactsContainerImageSignature) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactsContainerImageSignature)(nil))
}

func (i *ArtifactsContainerImageSignature) ToArtifactsContainerImageSignatureOutput() ArtifactsContainerImageSignatureOutput {
	return i.ToArtifactsContainerImageSignatureOutputWithContext(context.Background())
}

func (i *ArtifactsContainerImageSignature) ToArtifactsContainerImageSignatureOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactsContainerImageSignatureOutput)
}

func (i *ArtifactsContainerImageSignature) ToArtifactsContainerImageSignaturePtrOutput() ArtifactsContainerImageSignaturePtrOutput {
	return i.ToArtifactsContainerImageSignaturePtrOutputWithContext(context.Background())
}

func (i *ArtifactsContainerImageSignature) ToArtifactsContainerImageSignaturePtrOutputWithContext(ctx context.Context) ArtifactsContainerImageSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactsContainerImageSignaturePtrOutput)
}

type ArtifactsContainerImageSignaturePtrInput interface {
	pulumi.Input

	ToArtifactsContainerImageSignaturePtrOutput() ArtifactsContainerImageSignaturePtrOutput
	ToArtifactsContainerImageSignaturePtrOutputWithContext(ctx context.Context) ArtifactsContainerImageSignaturePtrOutput
}

type artifactsContainerImageSignaturePtrType ArtifactsContainerImageSignatureArgs

func (*artifactsContainerImageSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactsContainerImageSignature)(nil))
}

func (i *artifactsContainerImageSignaturePtrType) ToArtifactsContainerImageSignaturePtrOutput() ArtifactsContainerImageSignaturePtrOutput {
	return i.ToArtifactsContainerImageSignaturePtrOutputWithContext(context.Background())
}

func (i *artifactsContainerImageSignaturePtrType) ToArtifactsContainerImageSignaturePtrOutputWithContext(ctx context.Context) ArtifactsContainerImageSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactsContainerImageSignaturePtrOutput)
}

// ArtifactsContainerImageSignatureArrayInput is an input type that accepts ArtifactsContainerImageSignatureArray and ArtifactsContainerImageSignatureArrayOutput values.
// You can construct a concrete instance of `ArtifactsContainerImageSignatureArrayInput` via:
//
//          ArtifactsContainerImageSignatureArray{ ArtifactsContainerImageSignatureArgs{...} }
type ArtifactsContainerImageSignatureArrayInput interface {
	pulumi.Input

	ToArtifactsContainerImageSignatureArrayOutput() ArtifactsContainerImageSignatureArrayOutput
	ToArtifactsContainerImageSignatureArrayOutputWithContext(context.Context) ArtifactsContainerImageSignatureArrayOutput
}

type ArtifactsContainerImageSignatureArray []ArtifactsContainerImageSignatureInput

func (ArtifactsContainerImageSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ArtifactsContainerImageSignature)(nil)).Elem()
}

func (i ArtifactsContainerImageSignatureArray) ToArtifactsContainerImageSignatureArrayOutput() ArtifactsContainerImageSignatureArrayOutput {
	return i.ToArtifactsContainerImageSignatureArrayOutputWithContext(context.Background())
}

func (i ArtifactsContainerImageSignatureArray) ToArtifactsContainerImageSignatureArrayOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactsContainerImageSignatureArrayOutput)
}

// ArtifactsContainerImageSignatureMapInput is an input type that accepts ArtifactsContainerImageSignatureMap and ArtifactsContainerImageSignatureMapOutput values.
// You can construct a concrete instance of `ArtifactsContainerImageSignatureMapInput` via:
//
//          ArtifactsContainerImageSignatureMap{ "key": ArtifactsContainerImageSignatureArgs{...} }
type ArtifactsContainerImageSignatureMapInput interface {
	pulumi.Input

	ToArtifactsContainerImageSignatureMapOutput() ArtifactsContainerImageSignatureMapOutput
	ToArtifactsContainerImageSignatureMapOutputWithContext(context.Context) ArtifactsContainerImageSignatureMapOutput
}

type ArtifactsContainerImageSignatureMap map[string]ArtifactsContainerImageSignatureInput

func (ArtifactsContainerImageSignatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ArtifactsContainerImageSignature)(nil)).Elem()
}

func (i ArtifactsContainerImageSignatureMap) ToArtifactsContainerImageSignatureMapOutput() ArtifactsContainerImageSignatureMapOutput {
	return i.ToArtifactsContainerImageSignatureMapOutputWithContext(context.Background())
}

func (i ArtifactsContainerImageSignatureMap) ToArtifactsContainerImageSignatureMapOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactsContainerImageSignatureMapOutput)
}

type ArtifactsContainerImageSignatureOutput struct {
	*pulumi.OutputState
}

func (ArtifactsContainerImageSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactsContainerImageSignature)(nil))
}

func (o ArtifactsContainerImageSignatureOutput) ToArtifactsContainerImageSignatureOutput() ArtifactsContainerImageSignatureOutput {
	return o
}

func (o ArtifactsContainerImageSignatureOutput) ToArtifactsContainerImageSignatureOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureOutput {
	return o
}

func (o ArtifactsContainerImageSignatureOutput) ToArtifactsContainerImageSignaturePtrOutput() ArtifactsContainerImageSignaturePtrOutput {
	return o.ToArtifactsContainerImageSignaturePtrOutputWithContext(context.Background())
}

func (o ArtifactsContainerImageSignatureOutput) ToArtifactsContainerImageSignaturePtrOutputWithContext(ctx context.Context) ArtifactsContainerImageSignaturePtrOutput {
	return o.ApplyT(func(v ArtifactsContainerImageSignature) *ArtifactsContainerImageSignature {
		return &v
	}).(ArtifactsContainerImageSignaturePtrOutput)
}

type ArtifactsContainerImageSignaturePtrOutput struct {
	*pulumi.OutputState
}

func (ArtifactsContainerImageSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactsContainerImageSignature)(nil))
}

func (o ArtifactsContainerImageSignaturePtrOutput) ToArtifactsContainerImageSignaturePtrOutput() ArtifactsContainerImageSignaturePtrOutput {
	return o
}

func (o ArtifactsContainerImageSignaturePtrOutput) ToArtifactsContainerImageSignaturePtrOutputWithContext(ctx context.Context) ArtifactsContainerImageSignaturePtrOutput {
	return o
}

type ArtifactsContainerImageSignatureArrayOutput struct{ *pulumi.OutputState }

func (ArtifactsContainerImageSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactsContainerImageSignature)(nil))
}

func (o ArtifactsContainerImageSignatureArrayOutput) ToArtifactsContainerImageSignatureArrayOutput() ArtifactsContainerImageSignatureArrayOutput {
	return o
}

func (o ArtifactsContainerImageSignatureArrayOutput) ToArtifactsContainerImageSignatureArrayOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureArrayOutput {
	return o
}

func (o ArtifactsContainerImageSignatureArrayOutput) Index(i pulumi.IntInput) ArtifactsContainerImageSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactsContainerImageSignature {
		return vs[0].([]ArtifactsContainerImageSignature)[vs[1].(int)]
	}).(ArtifactsContainerImageSignatureOutput)
}

type ArtifactsContainerImageSignatureMapOutput struct{ *pulumi.OutputState }

func (ArtifactsContainerImageSignatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ArtifactsContainerImageSignature)(nil))
}

func (o ArtifactsContainerImageSignatureMapOutput) ToArtifactsContainerImageSignatureMapOutput() ArtifactsContainerImageSignatureMapOutput {
	return o
}

func (o ArtifactsContainerImageSignatureMapOutput) ToArtifactsContainerImageSignatureMapOutputWithContext(ctx context.Context) ArtifactsContainerImageSignatureMapOutput {
	return o
}

func (o ArtifactsContainerImageSignatureMapOutput) MapIndex(k pulumi.StringInput) ArtifactsContainerImageSignatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ArtifactsContainerImageSignature {
		return vs[0].(map[string]ArtifactsContainerImageSignature)[vs[1].(string)]
	}).(ArtifactsContainerImageSignatureOutput)
}

func init() {
	pulumi.RegisterOutputType(ArtifactsContainerImageSignatureOutput{})
	pulumi.RegisterOutputType(ArtifactsContainerImageSignaturePtrOutput{})
	pulumi.RegisterOutputType(ArtifactsContainerImageSignatureArrayOutput{})
	pulumi.RegisterOutputType(ArtifactsContainerImageSignatureMapOutput{})
}
