// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    /// <summary>
    /// This resource provides the User Group Membership resource in Oracle Cloud Infrastructure Identity service.
    /// 
    /// Adds the specified user to the specified group and returns a `UserGroupMembership` object with its own OCID.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testUserGroupMembership = new Oci.IdentityUserGroupMembership("testUserGroupMembership", new Oci.IdentityUserGroupMembershipArgs
    ///         {
    ///             GroupId = oci_identity_group.Test_group.Id,
    ///             UserId = oci_identity_user.Test_user.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// UserGroupMemberships can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:index/identityUserGroupMembership:IdentityUserGroupMembership test_user_group_membership "id"
    /// ```
    /// </summary>
    [OciResourceType("oci:index/identityUserGroupMembership:IdentityUserGroupMembership")]
    public partial class IdentityUserGroupMembership : Pulumi.CustomResource
    {
        /// <summary>
        /// The OCID of the tenancy containing the user, group, and membership object.
        /// </summary>
        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        /// <summary>
        /// The OCID of the group.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        [Output("inactiveState")]
        public Output<string> InactiveState { get; private set; } = null!;

        /// <summary>
        /// The membership's current state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityUserGroupMembership resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityUserGroupMembership(string name, IdentityUserGroupMembershipArgs args, CustomResourceOptions? options = null)
            : base("oci:index/identityUserGroupMembership:IdentityUserGroupMembership", name, args ?? new IdentityUserGroupMembershipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityUserGroupMembership(string name, Input<string> id, IdentityUserGroupMembershipState? state = null, CustomResourceOptions? options = null)
            : base("oci:index/identityUserGroupMembership:IdentityUserGroupMembership", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityUserGroupMembership resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityUserGroupMembership Get(string name, Input<string> id, IdentityUserGroupMembershipState? state = null, CustomResourceOptions? options = null)
        {
            return new IdentityUserGroupMembership(name, id, state, options);
        }
    }

    public sealed class IdentityUserGroupMembershipArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the tenancy containing the user, group, and membership object.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public IdentityUserGroupMembershipArgs()
        {
        }
    }

    public sealed class IdentityUserGroupMembershipState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OCID of the tenancy containing the user, group, and membership object.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// The OCID of the group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The detailed status of INACTIVE lifecycleState.
        /// </summary>
        [Input("inactiveState")]
        public Input<string>? InactiveState { get; set; }

        /// <summary>
        /// The membership's current state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        /// <summary>
        /// The OCID of the user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public IdentityUserGroupMembershipState()
        {
        }
    }
}
