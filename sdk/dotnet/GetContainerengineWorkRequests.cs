// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetContainerengineWorkRequests
    {
        /// <summary>
        /// This data source provides the list of Work Requests in Oracle Cloud Infrastructure Container Engine service.
        /// 
        /// List all work requests in a compartment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testWorkRequests = Output.Create(Oci.GetContainerengineWorkRequests.InvokeAsync(new Oci.GetContainerengineWorkRequestsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             ClusterId = oci_containerengine_cluster.Test_cluster.Id,
        ///             ResourceId = oci_containerengine_resource.Test_resource.Id,
        ///             ResourceType = @var.Work_request_resource_type,
        ///             Statuses = @var.Work_request_status,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetContainerengineWorkRequestsResult> InvokeAsync(GetContainerengineWorkRequestsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetContainerengineWorkRequestsResult>("oci:index/getContainerengineWorkRequests:GetContainerengineWorkRequests", args ?? new GetContainerengineWorkRequestsArgs(), options.WithVersion());
    }


    public sealed class GetContainerengineWorkRequestsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetContainerengineWorkRequestsFilterArgs>? _filters;
        public List<Inputs.GetContainerengineWorkRequestsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetContainerengineWorkRequestsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the resource associated with a work request
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// Type of the resource associated with a work request
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// A work request status to filter on. Can have multiple parameters of this name.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetContainerengineWorkRequestsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetContainerengineWorkRequestsResult
    {
        public readonly string? ClusterId;
        /// <summary>
        /// The OCID of the compartment in which the work request exists.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetContainerengineWorkRequestsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResourceId;
        public readonly string? ResourceType;
        /// <summary>
        /// The current status of the work request.
        /// </summary>
        public readonly ImmutableArray<string> Statuses;
        /// <summary>
        /// The list of work_requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContainerengineWorkRequestsWorkRequestResult> WorkRequests;

        [OutputConstructor]
        private GetContainerengineWorkRequestsResult(
            string? clusterId,

            string compartmentId,

            ImmutableArray<Outputs.GetContainerengineWorkRequestsFilterResult> filters,

            string id,

            string? resourceId,

            string? resourceType,

            ImmutableArray<string> statuses,

            ImmutableArray<Outputs.GetContainerengineWorkRequestsWorkRequestResult> workRequests)
        {
            ClusterId = clusterId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ResourceId = resourceId;
            ResourceType = resourceType;
            Statuses = statuses;
            WorkRequests = workRequests;
        }
    }
}
