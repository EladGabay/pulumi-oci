// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Deploy Artifact resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a new deployment artifact.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDevopsDeployArtifact(ctx, "testDeployArtifact", &oci.DevopsDeployArtifactArgs{
// 			ArgumentSubstitutionMode: pulumi.Any(_var.Deploy_artifact_argument_substitution_mode),
// 			DeployArtifactSource: &DevopsDeployArtifactDeployArtifactSourceArgs{
// 				DeployArtifactSourceType: pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_source_type),
// 				Base64encodedContent:     pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_base64encoded_content),
// 				DeployArtifactPath:       pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_path),
// 				DeployArtifactVersion:    pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_version),
// 				ImageDigest:              pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_image_digest),
// 				ImageUri:                 pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_image_uri),
// 				RepositoryId:             pulumi.Any(oci_artifacts_repository.Test_repository.Id),
// 			},
// 			DeployArtifactType: pulumi.Any(_var.Deploy_artifact_deploy_artifact_type),
// 			ProjectId:          pulumi.Any(oci_devops_project.Test_project.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Deploy_artifact_description),
// 			DisplayName: pulumi.Any(_var.Deploy_artifact_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// DeployArtifacts can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/devopsDeployArtifact:DevopsDeployArtifact test_deploy_artifact "id"
// ```
type DevopsDeployArtifact struct {
	pulumi.CustomResourceState

	// (Updatable) Mode for artifact parameter substitution.
	ArgumentSubstitutionMode pulumi.StringOutput `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DevopsDeployArtifactDeployArtifactSourceOutput `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringOutput `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDevopsDeployArtifact registers a new resource with the given unique name, arguments, and options.
func NewDevopsDeployArtifact(ctx *pulumi.Context,
	name string, args *DevopsDeployArtifactArgs, opts ...pulumi.ResourceOption) (*DevopsDeployArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArgumentSubstitutionMode == nil {
		return nil, errors.New("invalid value for required argument 'ArgumentSubstitutionMode'")
	}
	if args.DeployArtifactSource == nil {
		return nil, errors.New("invalid value for required argument 'DeployArtifactSource'")
	}
	if args.DeployArtifactType == nil {
		return nil, errors.New("invalid value for required argument 'DeployArtifactType'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	var resource DevopsDeployArtifact
	err := ctx.RegisterResource("oci:index/devopsDeployArtifact:DevopsDeployArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevopsDeployArtifact gets an existing DevopsDeployArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevopsDeployArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevopsDeployArtifactState, opts ...pulumi.ResourceOption) (*DevopsDeployArtifact, error) {
	var resource DevopsDeployArtifact
	err := ctx.ReadResource("oci:index/devopsDeployArtifact:DevopsDeployArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevopsDeployArtifact resources.
type devopsDeployArtifactState struct {
	// (Updatable) Mode for artifact parameter substitution.
	ArgumentSubstitutionMode *string `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource *DevopsDeployArtifactDeployArtifactSource `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType *string `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	ProjectId *string `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DevopsDeployArtifactState struct {
	// (Updatable) Mode for artifact parameter substitution.
	ArgumentSubstitutionMode pulumi.StringPtrInput
	// The OCID of a compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DevopsDeployArtifactDeployArtifactSourcePtrInput
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringPtrInput
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The OCID of a project.
	ProjectId pulumi.StringPtrInput
	// Current state of the deployment artifact.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (DevopsDeployArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*devopsDeployArtifactState)(nil)).Elem()
}

type devopsDeployArtifactArgs struct {
	// (Updatable) Mode for artifact parameter substitution.
	ArgumentSubstitutionMode string `pulumi:"argumentSubstitutionMode"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DevopsDeployArtifactDeployArtifactSource `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType string `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of a project.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a DevopsDeployArtifact resource.
type DevopsDeployArtifactArgs struct {
	// (Updatable) Mode for artifact parameter substitution.
	ArgumentSubstitutionMode pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DevopsDeployArtifactDeployArtifactSourceInput
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringInput
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The OCID of a project.
	ProjectId pulumi.StringInput
}

func (DevopsDeployArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devopsDeployArtifactArgs)(nil)).Elem()
}

type DevopsDeployArtifactInput interface {
	pulumi.Input

	ToDevopsDeployArtifactOutput() DevopsDeployArtifactOutput
	ToDevopsDeployArtifactOutputWithContext(ctx context.Context) DevopsDeployArtifactOutput
}

func (*DevopsDeployArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((*DevopsDeployArtifact)(nil))
}

func (i *DevopsDeployArtifact) ToDevopsDeployArtifactOutput() DevopsDeployArtifactOutput {
	return i.ToDevopsDeployArtifactOutputWithContext(context.Background())
}

func (i *DevopsDeployArtifact) ToDevopsDeployArtifactOutputWithContext(ctx context.Context) DevopsDeployArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsDeployArtifactOutput)
}

func (i *DevopsDeployArtifact) ToDevopsDeployArtifactPtrOutput() DevopsDeployArtifactPtrOutput {
	return i.ToDevopsDeployArtifactPtrOutputWithContext(context.Background())
}

func (i *DevopsDeployArtifact) ToDevopsDeployArtifactPtrOutputWithContext(ctx context.Context) DevopsDeployArtifactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsDeployArtifactPtrOutput)
}

type DevopsDeployArtifactPtrInput interface {
	pulumi.Input

	ToDevopsDeployArtifactPtrOutput() DevopsDeployArtifactPtrOutput
	ToDevopsDeployArtifactPtrOutputWithContext(ctx context.Context) DevopsDeployArtifactPtrOutput
}

type devopsDeployArtifactPtrType DevopsDeployArtifactArgs

func (*devopsDeployArtifactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevopsDeployArtifact)(nil))
}

func (i *devopsDeployArtifactPtrType) ToDevopsDeployArtifactPtrOutput() DevopsDeployArtifactPtrOutput {
	return i.ToDevopsDeployArtifactPtrOutputWithContext(context.Background())
}

func (i *devopsDeployArtifactPtrType) ToDevopsDeployArtifactPtrOutputWithContext(ctx context.Context) DevopsDeployArtifactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsDeployArtifactPtrOutput)
}

// DevopsDeployArtifactArrayInput is an input type that accepts DevopsDeployArtifactArray and DevopsDeployArtifactArrayOutput values.
// You can construct a concrete instance of `DevopsDeployArtifactArrayInput` via:
//
//          DevopsDeployArtifactArray{ DevopsDeployArtifactArgs{...} }
type DevopsDeployArtifactArrayInput interface {
	pulumi.Input

	ToDevopsDeployArtifactArrayOutput() DevopsDeployArtifactArrayOutput
	ToDevopsDeployArtifactArrayOutputWithContext(context.Context) DevopsDeployArtifactArrayOutput
}

type DevopsDeployArtifactArray []DevopsDeployArtifactInput

func (DevopsDeployArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevopsDeployArtifact)(nil)).Elem()
}

func (i DevopsDeployArtifactArray) ToDevopsDeployArtifactArrayOutput() DevopsDeployArtifactArrayOutput {
	return i.ToDevopsDeployArtifactArrayOutputWithContext(context.Background())
}

func (i DevopsDeployArtifactArray) ToDevopsDeployArtifactArrayOutputWithContext(ctx context.Context) DevopsDeployArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsDeployArtifactArrayOutput)
}

// DevopsDeployArtifactMapInput is an input type that accepts DevopsDeployArtifactMap and DevopsDeployArtifactMapOutput values.
// You can construct a concrete instance of `DevopsDeployArtifactMapInput` via:
//
//          DevopsDeployArtifactMap{ "key": DevopsDeployArtifactArgs{...} }
type DevopsDeployArtifactMapInput interface {
	pulumi.Input

	ToDevopsDeployArtifactMapOutput() DevopsDeployArtifactMapOutput
	ToDevopsDeployArtifactMapOutputWithContext(context.Context) DevopsDeployArtifactMapOutput
}

type DevopsDeployArtifactMap map[string]DevopsDeployArtifactInput

func (DevopsDeployArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevopsDeployArtifact)(nil)).Elem()
}

func (i DevopsDeployArtifactMap) ToDevopsDeployArtifactMapOutput() DevopsDeployArtifactMapOutput {
	return i.ToDevopsDeployArtifactMapOutputWithContext(context.Background())
}

func (i DevopsDeployArtifactMap) ToDevopsDeployArtifactMapOutputWithContext(ctx context.Context) DevopsDeployArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsDeployArtifactMapOutput)
}

type DevopsDeployArtifactOutput struct {
	*pulumi.OutputState
}

func (DevopsDeployArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevopsDeployArtifact)(nil))
}

func (o DevopsDeployArtifactOutput) ToDevopsDeployArtifactOutput() DevopsDeployArtifactOutput {
	return o
}

func (o DevopsDeployArtifactOutput) ToDevopsDeployArtifactOutputWithContext(ctx context.Context) DevopsDeployArtifactOutput {
	return o
}

func (o DevopsDeployArtifactOutput) ToDevopsDeployArtifactPtrOutput() DevopsDeployArtifactPtrOutput {
	return o.ToDevopsDeployArtifactPtrOutputWithContext(context.Background())
}

func (o DevopsDeployArtifactOutput) ToDevopsDeployArtifactPtrOutputWithContext(ctx context.Context) DevopsDeployArtifactPtrOutput {
	return o.ApplyT(func(v DevopsDeployArtifact) *DevopsDeployArtifact {
		return &v
	}).(DevopsDeployArtifactPtrOutput)
}

type DevopsDeployArtifactPtrOutput struct {
	*pulumi.OutputState
}

func (DevopsDeployArtifactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevopsDeployArtifact)(nil))
}

func (o DevopsDeployArtifactPtrOutput) ToDevopsDeployArtifactPtrOutput() DevopsDeployArtifactPtrOutput {
	return o
}

func (o DevopsDeployArtifactPtrOutput) ToDevopsDeployArtifactPtrOutputWithContext(ctx context.Context) DevopsDeployArtifactPtrOutput {
	return o
}

type DevopsDeployArtifactArrayOutput struct{ *pulumi.OutputState }

func (DevopsDeployArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevopsDeployArtifact)(nil))
}

func (o DevopsDeployArtifactArrayOutput) ToDevopsDeployArtifactArrayOutput() DevopsDeployArtifactArrayOutput {
	return o
}

func (o DevopsDeployArtifactArrayOutput) ToDevopsDeployArtifactArrayOutputWithContext(ctx context.Context) DevopsDeployArtifactArrayOutput {
	return o
}

func (o DevopsDeployArtifactArrayOutput) Index(i pulumi.IntInput) DevopsDeployArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevopsDeployArtifact {
		return vs[0].([]DevopsDeployArtifact)[vs[1].(int)]
	}).(DevopsDeployArtifactOutput)
}

type DevopsDeployArtifactMapOutput struct{ *pulumi.OutputState }

func (DevopsDeployArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DevopsDeployArtifact)(nil))
}

func (o DevopsDeployArtifactMapOutput) ToDevopsDeployArtifactMapOutput() DevopsDeployArtifactMapOutput {
	return o
}

func (o DevopsDeployArtifactMapOutput) ToDevopsDeployArtifactMapOutputWithContext(ctx context.Context) DevopsDeployArtifactMapOutput {
	return o
}

func (o DevopsDeployArtifactMapOutput) MapIndex(k pulumi.StringInput) DevopsDeployArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DevopsDeployArtifact {
		return vs[0].(map[string]DevopsDeployArtifact)[vs[1].(string)]
	}).(DevopsDeployArtifactOutput)
}

func init() {
	pulumi.RegisterOutputType(DevopsDeployArtifactOutput{})
	pulumi.RegisterOutputType(DevopsDeployArtifactPtrOutput{})
	pulumi.RegisterOutputType(DevopsDeployArtifactArrayOutput{})
	pulumi.RegisterOutputType(DevopsDeployArtifactMapOutput{})
}
