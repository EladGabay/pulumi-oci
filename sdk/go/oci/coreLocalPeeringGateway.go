// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Local Peering Gateway resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new local peering gateway (LPG) for the specified VCN.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreLocalPeeringGateway(ctx, "testLocalPeeringGateway", &oci.CoreLocalPeeringGatewayArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			VcnId:         pulumi.Any(oci_core_vcn.Test_vcn.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Local_peering_gateway_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			PeerId:       pulumi.Any(oci_core_local_peering_gateway.Test_local_peering_gateway2.Id),
// 			RouteTableId: pulumi.Any(oci_core_route_table.Test_route_table.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// LocalPeeringGateways can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreLocalPeeringGateway:CoreLocalPeeringGateway test_local_peering_gateway "id"
// ```
type CoreLocalPeeringGateway struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment containing the local peering gateway (LPG).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering pulumi.BoolOutput `pulumi:"isCrossTenancyPeering"`
	// The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
	PeerAdvertisedCidr pulumi.StringOutput `pulumi:"peerAdvertisedCidr"`
	// The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet's traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
	PeerAdvertisedCidrDetails pulumi.StringArrayOutput `pulumi:"peerAdvertisedCidrDetails"`
	// The OCID of the LPG you want to peer with. Specifying a peerId connects this local peering gateway (LPG) to another one in the same region. This operation must be called by the VCN administrator who is designated as the *requestor* in the peering relationship. The *acceptor* must implement an Identity and Access Management (IAM) policy that gives the requestor permission to connect to LPGs in the acceptor's compartment. Without that permission, this operation will fail. For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
	PeerId pulumi.StringOutput `pulumi:"peerId"`
	// Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
	PeeringStatus pulumi.StringOutput `pulumi:"peeringStatus"`
	// Additional information regarding the peering status, if applicable.
	PeeringStatusDetails pulumi.StringOutput `pulumi:"peeringStatusDetails"`
	// (Updatable) The OCID of the route table the LPG will use.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`
	// The LPG's current lifecycle state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the VCN the LPG belongs to.
	VcnId pulumi.StringOutput `pulumi:"vcnId"`
}

// NewCoreLocalPeeringGateway registers a new resource with the given unique name, arguments, and options.
func NewCoreLocalPeeringGateway(ctx *pulumi.Context,
	name string, args *CoreLocalPeeringGatewayArgs, opts ...pulumi.ResourceOption) (*CoreLocalPeeringGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.VcnId == nil {
		return nil, errors.New("invalid value for required argument 'VcnId'")
	}
	var resource CoreLocalPeeringGateway
	err := ctx.RegisterResource("oci:index/coreLocalPeeringGateway:CoreLocalPeeringGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreLocalPeeringGateway gets an existing CoreLocalPeeringGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreLocalPeeringGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreLocalPeeringGatewayState, opts ...pulumi.ResourceOption) (*CoreLocalPeeringGateway, error) {
	var resource CoreLocalPeeringGateway
	err := ctx.ReadResource("oci:index/coreLocalPeeringGateway:CoreLocalPeeringGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreLocalPeeringGateway resources.
type coreLocalPeeringGatewayState struct {
	// (Updatable) The OCID of the compartment containing the local peering gateway (LPG).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering *bool `pulumi:"isCrossTenancyPeering"`
	// The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
	PeerAdvertisedCidr *string `pulumi:"peerAdvertisedCidr"`
	// The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet's traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
	PeerAdvertisedCidrDetails []string `pulumi:"peerAdvertisedCidrDetails"`
	// The OCID of the LPG you want to peer with. Specifying a peerId connects this local peering gateway (LPG) to another one in the same region. This operation must be called by the VCN administrator who is designated as the *requestor* in the peering relationship. The *acceptor* must implement an Identity and Access Management (IAM) policy that gives the requestor permission to connect to LPGs in the acceptor's compartment. Without that permission, this operation will fail. For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
	PeerId *string `pulumi:"peerId"`
	// Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
	PeeringStatus *string `pulumi:"peeringStatus"`
	// Additional information regarding the peering status, if applicable.
	PeeringStatusDetails *string `pulumi:"peeringStatusDetails"`
	// (Updatable) The OCID of the route table the LPG will use.
	RouteTableId *string `pulumi:"routeTableId"`
	// The LPG's current lifecycle state.
	State *string `pulumi:"state"`
	// The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the VCN the LPG belongs to.
	VcnId *string `pulumi:"vcnId"`
}

type CoreLocalPeeringGatewayState struct {
	// (Updatable) The OCID of the compartment containing the local peering gateway (LPG).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering pulumi.BoolPtrInput
	// The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
	PeerAdvertisedCidr pulumi.StringPtrInput
	// The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet's traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
	PeerAdvertisedCidrDetails pulumi.StringArrayInput
	// The OCID of the LPG you want to peer with. Specifying a peerId connects this local peering gateway (LPG) to another one in the same region. This operation must be called by the VCN administrator who is designated as the *requestor* in the peering relationship. The *acceptor* must implement an Identity and Access Management (IAM) policy that gives the requestor permission to connect to LPGs in the acceptor's compartment. Without that permission, this operation will fail. For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
	PeerId pulumi.StringPtrInput
	// Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
	PeeringStatus pulumi.StringPtrInput
	// Additional information regarding the peering status, if applicable.
	PeeringStatusDetails pulumi.StringPtrInput
	// (Updatable) The OCID of the route table the LPG will use.
	RouteTableId pulumi.StringPtrInput
	// The LPG's current lifecycle state.
	State pulumi.StringPtrInput
	// The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The OCID of the VCN the LPG belongs to.
	VcnId pulumi.StringPtrInput
}

func (CoreLocalPeeringGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreLocalPeeringGatewayState)(nil)).Elem()
}

type coreLocalPeeringGatewayArgs struct {
	// (Updatable) The OCID of the compartment containing the local peering gateway (LPG).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the LPG you want to peer with. Specifying a peerId connects this local peering gateway (LPG) to another one in the same region. This operation must be called by the VCN administrator who is designated as the *requestor* in the peering relationship. The *acceptor* must implement an Identity and Access Management (IAM) policy that gives the requestor permission to connect to LPGs in the acceptor's compartment. Without that permission, this operation will fail. For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
	PeerId *string `pulumi:"peerId"`
	// (Updatable) The OCID of the route table the LPG will use.
	RouteTableId *string `pulumi:"routeTableId"`
	// The OCID of the VCN the LPG belongs to.
	VcnId string `pulumi:"vcnId"`
}

// The set of arguments for constructing a CoreLocalPeeringGateway resource.
type CoreLocalPeeringGatewayArgs struct {
	// (Updatable) The OCID of the compartment containing the local peering gateway (LPG).
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the LPG you want to peer with. Specifying a peerId connects this local peering gateway (LPG) to another one in the same region. This operation must be called by the VCN administrator who is designated as the *requestor* in the peering relationship. The *acceptor* must implement an Identity and Access Management (IAM) policy that gives the requestor permission to connect to LPGs in the acceptor's compartment. Without that permission, this operation will fail. For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
	PeerId pulumi.StringPtrInput
	// (Updatable) The OCID of the route table the LPG will use.
	RouteTableId pulumi.StringPtrInput
	// The OCID of the VCN the LPG belongs to.
	VcnId pulumi.StringInput
}

func (CoreLocalPeeringGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreLocalPeeringGatewayArgs)(nil)).Elem()
}

type CoreLocalPeeringGatewayInput interface {
	pulumi.Input

	ToCoreLocalPeeringGatewayOutput() CoreLocalPeeringGatewayOutput
	ToCoreLocalPeeringGatewayOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayOutput
}

func (*CoreLocalPeeringGateway) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreLocalPeeringGateway)(nil))
}

func (i *CoreLocalPeeringGateway) ToCoreLocalPeeringGatewayOutput() CoreLocalPeeringGatewayOutput {
	return i.ToCoreLocalPeeringGatewayOutputWithContext(context.Background())
}

func (i *CoreLocalPeeringGateway) ToCoreLocalPeeringGatewayOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreLocalPeeringGatewayOutput)
}

func (i *CoreLocalPeeringGateway) ToCoreLocalPeeringGatewayPtrOutput() CoreLocalPeeringGatewayPtrOutput {
	return i.ToCoreLocalPeeringGatewayPtrOutputWithContext(context.Background())
}

func (i *CoreLocalPeeringGateway) ToCoreLocalPeeringGatewayPtrOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreLocalPeeringGatewayPtrOutput)
}

type CoreLocalPeeringGatewayPtrInput interface {
	pulumi.Input

	ToCoreLocalPeeringGatewayPtrOutput() CoreLocalPeeringGatewayPtrOutput
	ToCoreLocalPeeringGatewayPtrOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayPtrOutput
}

type coreLocalPeeringGatewayPtrType CoreLocalPeeringGatewayArgs

func (*coreLocalPeeringGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreLocalPeeringGateway)(nil))
}

func (i *coreLocalPeeringGatewayPtrType) ToCoreLocalPeeringGatewayPtrOutput() CoreLocalPeeringGatewayPtrOutput {
	return i.ToCoreLocalPeeringGatewayPtrOutputWithContext(context.Background())
}

func (i *coreLocalPeeringGatewayPtrType) ToCoreLocalPeeringGatewayPtrOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreLocalPeeringGatewayPtrOutput)
}

// CoreLocalPeeringGatewayArrayInput is an input type that accepts CoreLocalPeeringGatewayArray and CoreLocalPeeringGatewayArrayOutput values.
// You can construct a concrete instance of `CoreLocalPeeringGatewayArrayInput` via:
//
//          CoreLocalPeeringGatewayArray{ CoreLocalPeeringGatewayArgs{...} }
type CoreLocalPeeringGatewayArrayInput interface {
	pulumi.Input

	ToCoreLocalPeeringGatewayArrayOutput() CoreLocalPeeringGatewayArrayOutput
	ToCoreLocalPeeringGatewayArrayOutputWithContext(context.Context) CoreLocalPeeringGatewayArrayOutput
}

type CoreLocalPeeringGatewayArray []CoreLocalPeeringGatewayInput

func (CoreLocalPeeringGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreLocalPeeringGateway)(nil)).Elem()
}

func (i CoreLocalPeeringGatewayArray) ToCoreLocalPeeringGatewayArrayOutput() CoreLocalPeeringGatewayArrayOutput {
	return i.ToCoreLocalPeeringGatewayArrayOutputWithContext(context.Background())
}

func (i CoreLocalPeeringGatewayArray) ToCoreLocalPeeringGatewayArrayOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreLocalPeeringGatewayArrayOutput)
}

// CoreLocalPeeringGatewayMapInput is an input type that accepts CoreLocalPeeringGatewayMap and CoreLocalPeeringGatewayMapOutput values.
// You can construct a concrete instance of `CoreLocalPeeringGatewayMapInput` via:
//
//          CoreLocalPeeringGatewayMap{ "key": CoreLocalPeeringGatewayArgs{...} }
type CoreLocalPeeringGatewayMapInput interface {
	pulumi.Input

	ToCoreLocalPeeringGatewayMapOutput() CoreLocalPeeringGatewayMapOutput
	ToCoreLocalPeeringGatewayMapOutputWithContext(context.Context) CoreLocalPeeringGatewayMapOutput
}

type CoreLocalPeeringGatewayMap map[string]CoreLocalPeeringGatewayInput

func (CoreLocalPeeringGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreLocalPeeringGateway)(nil)).Elem()
}

func (i CoreLocalPeeringGatewayMap) ToCoreLocalPeeringGatewayMapOutput() CoreLocalPeeringGatewayMapOutput {
	return i.ToCoreLocalPeeringGatewayMapOutputWithContext(context.Background())
}

func (i CoreLocalPeeringGatewayMap) ToCoreLocalPeeringGatewayMapOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreLocalPeeringGatewayMapOutput)
}

type CoreLocalPeeringGatewayOutput struct {
	*pulumi.OutputState
}

func (CoreLocalPeeringGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreLocalPeeringGateway)(nil))
}

func (o CoreLocalPeeringGatewayOutput) ToCoreLocalPeeringGatewayOutput() CoreLocalPeeringGatewayOutput {
	return o
}

func (o CoreLocalPeeringGatewayOutput) ToCoreLocalPeeringGatewayOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayOutput {
	return o
}

func (o CoreLocalPeeringGatewayOutput) ToCoreLocalPeeringGatewayPtrOutput() CoreLocalPeeringGatewayPtrOutput {
	return o.ToCoreLocalPeeringGatewayPtrOutputWithContext(context.Background())
}

func (o CoreLocalPeeringGatewayOutput) ToCoreLocalPeeringGatewayPtrOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayPtrOutput {
	return o.ApplyT(func(v CoreLocalPeeringGateway) *CoreLocalPeeringGateway {
		return &v
	}).(CoreLocalPeeringGatewayPtrOutput)
}

type CoreLocalPeeringGatewayPtrOutput struct {
	*pulumi.OutputState
}

func (CoreLocalPeeringGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreLocalPeeringGateway)(nil))
}

func (o CoreLocalPeeringGatewayPtrOutput) ToCoreLocalPeeringGatewayPtrOutput() CoreLocalPeeringGatewayPtrOutput {
	return o
}

func (o CoreLocalPeeringGatewayPtrOutput) ToCoreLocalPeeringGatewayPtrOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayPtrOutput {
	return o
}

type CoreLocalPeeringGatewayArrayOutput struct{ *pulumi.OutputState }

func (CoreLocalPeeringGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreLocalPeeringGateway)(nil))
}

func (o CoreLocalPeeringGatewayArrayOutput) ToCoreLocalPeeringGatewayArrayOutput() CoreLocalPeeringGatewayArrayOutput {
	return o
}

func (o CoreLocalPeeringGatewayArrayOutput) ToCoreLocalPeeringGatewayArrayOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayArrayOutput {
	return o
}

func (o CoreLocalPeeringGatewayArrayOutput) Index(i pulumi.IntInput) CoreLocalPeeringGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreLocalPeeringGateway {
		return vs[0].([]CoreLocalPeeringGateway)[vs[1].(int)]
	}).(CoreLocalPeeringGatewayOutput)
}

type CoreLocalPeeringGatewayMapOutput struct{ *pulumi.OutputState }

func (CoreLocalPeeringGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreLocalPeeringGateway)(nil))
}

func (o CoreLocalPeeringGatewayMapOutput) ToCoreLocalPeeringGatewayMapOutput() CoreLocalPeeringGatewayMapOutput {
	return o
}

func (o CoreLocalPeeringGatewayMapOutput) ToCoreLocalPeeringGatewayMapOutputWithContext(ctx context.Context) CoreLocalPeeringGatewayMapOutput {
	return o
}

func (o CoreLocalPeeringGatewayMapOutput) MapIndex(k pulumi.StringInput) CoreLocalPeeringGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreLocalPeeringGateway {
		return vs[0].(map[string]CoreLocalPeeringGateway)[vs[1].(string)]
	}).(CoreLocalPeeringGatewayOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreLocalPeeringGatewayOutput{})
	pulumi.RegisterOutputType(CoreLocalPeeringGatewayPtrOutput{})
	pulumi.RegisterOutputType(CoreLocalPeeringGatewayArrayOutput{})
	pulumi.RegisterOutputType(CoreLocalPeeringGatewayMapOutput{})
}
