// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This source triggers action to create, update and delete replica for a vault in Oracle Cloud Infrastructure Kms service.
//
// A vault replica is a mirror of that vault in a different region in the same realm.
// The vault replica and all the resources have same OCID with corresponding original ones.
//
// This only supports virtual private vault for now.
// This supports only one replica in a region for a vault. Multiple replica will be supported in the future.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewKmsVaultReplication(ctx, "testReplication", &oci.KmsVaultReplicationArgs{
// 			VaultId:       pulumi.Any(oci_kms_vault.Test_vault.Id),
// 			ReplicaRegion: pulumi.Any(_var.Replica_region),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type KmsVaultReplication struct {
	pulumi.CustomResourceState

	// (Updatable) The region to be created replica to. When updated,
	// replica will be deleted from old region, and created to updated region.
	ReplicaRegion pulumi.StringOutput `pulumi:"replicaRegion"`
	// The OCID of the primary vault to create replica from.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewKmsVaultReplication registers a new resource with the given unique name, arguments, and options.
func NewKmsVaultReplication(ctx *pulumi.Context,
	name string, args *KmsVaultReplicationArgs, opts ...pulumi.ResourceOption) (*KmsVaultReplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReplicaRegion == nil {
		return nil, errors.New("invalid value for required argument 'ReplicaRegion'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	var resource KmsVaultReplication
	err := ctx.RegisterResource("oci:index/kmsVaultReplication:KmsVaultReplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsVaultReplication gets an existing KmsVaultReplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsVaultReplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsVaultReplicationState, opts ...pulumi.ResourceOption) (*KmsVaultReplication, error) {
	var resource KmsVaultReplication
	err := ctx.ReadResource("oci:index/kmsVaultReplication:KmsVaultReplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsVaultReplication resources.
type kmsVaultReplicationState struct {
	// (Updatable) The region to be created replica to. When updated,
	// replica will be deleted from old region, and created to updated region.
	ReplicaRegion *string `pulumi:"replicaRegion"`
	// The OCID of the primary vault to create replica from.
	VaultId *string `pulumi:"vaultId"`
}

type KmsVaultReplicationState struct {
	// (Updatable) The region to be created replica to. When updated,
	// replica will be deleted from old region, and created to updated region.
	ReplicaRegion pulumi.StringPtrInput
	// The OCID of the primary vault to create replica from.
	VaultId pulumi.StringPtrInput
}

func (KmsVaultReplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsVaultReplicationState)(nil)).Elem()
}

type kmsVaultReplicationArgs struct {
	// (Updatable) The region to be created replica to. When updated,
	// replica will be deleted from old region, and created to updated region.
	ReplicaRegion string `pulumi:"replicaRegion"`
	// The OCID of the primary vault to create replica from.
	VaultId string `pulumi:"vaultId"`
}

// The set of arguments for constructing a KmsVaultReplication resource.
type KmsVaultReplicationArgs struct {
	// (Updatable) The region to be created replica to. When updated,
	// replica will be deleted from old region, and created to updated region.
	ReplicaRegion pulumi.StringInput
	// The OCID of the primary vault to create replica from.
	VaultId pulumi.StringInput
}

func (KmsVaultReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsVaultReplicationArgs)(nil)).Elem()
}

type KmsVaultReplicationInput interface {
	pulumi.Input

	ToKmsVaultReplicationOutput() KmsVaultReplicationOutput
	ToKmsVaultReplicationOutputWithContext(ctx context.Context) KmsVaultReplicationOutput
}

func (*KmsVaultReplication) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsVaultReplication)(nil))
}

func (i *KmsVaultReplication) ToKmsVaultReplicationOutput() KmsVaultReplicationOutput {
	return i.ToKmsVaultReplicationOutputWithContext(context.Background())
}

func (i *KmsVaultReplication) ToKmsVaultReplicationOutputWithContext(ctx context.Context) KmsVaultReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultReplicationOutput)
}

func (i *KmsVaultReplication) ToKmsVaultReplicationPtrOutput() KmsVaultReplicationPtrOutput {
	return i.ToKmsVaultReplicationPtrOutputWithContext(context.Background())
}

func (i *KmsVaultReplication) ToKmsVaultReplicationPtrOutputWithContext(ctx context.Context) KmsVaultReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultReplicationPtrOutput)
}

type KmsVaultReplicationPtrInput interface {
	pulumi.Input

	ToKmsVaultReplicationPtrOutput() KmsVaultReplicationPtrOutput
	ToKmsVaultReplicationPtrOutputWithContext(ctx context.Context) KmsVaultReplicationPtrOutput
}

type kmsVaultReplicationPtrType KmsVaultReplicationArgs

func (*kmsVaultReplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsVaultReplication)(nil))
}

func (i *kmsVaultReplicationPtrType) ToKmsVaultReplicationPtrOutput() KmsVaultReplicationPtrOutput {
	return i.ToKmsVaultReplicationPtrOutputWithContext(context.Background())
}

func (i *kmsVaultReplicationPtrType) ToKmsVaultReplicationPtrOutputWithContext(ctx context.Context) KmsVaultReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultReplicationPtrOutput)
}

// KmsVaultReplicationArrayInput is an input type that accepts KmsVaultReplicationArray and KmsVaultReplicationArrayOutput values.
// You can construct a concrete instance of `KmsVaultReplicationArrayInput` via:
//
//          KmsVaultReplicationArray{ KmsVaultReplicationArgs{...} }
type KmsVaultReplicationArrayInput interface {
	pulumi.Input

	ToKmsVaultReplicationArrayOutput() KmsVaultReplicationArrayOutput
	ToKmsVaultReplicationArrayOutputWithContext(context.Context) KmsVaultReplicationArrayOutput
}

type KmsVaultReplicationArray []KmsVaultReplicationInput

func (KmsVaultReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsVaultReplication)(nil)).Elem()
}

func (i KmsVaultReplicationArray) ToKmsVaultReplicationArrayOutput() KmsVaultReplicationArrayOutput {
	return i.ToKmsVaultReplicationArrayOutputWithContext(context.Background())
}

func (i KmsVaultReplicationArray) ToKmsVaultReplicationArrayOutputWithContext(ctx context.Context) KmsVaultReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultReplicationArrayOutput)
}

// KmsVaultReplicationMapInput is an input type that accepts KmsVaultReplicationMap and KmsVaultReplicationMapOutput values.
// You can construct a concrete instance of `KmsVaultReplicationMapInput` via:
//
//          KmsVaultReplicationMap{ "key": KmsVaultReplicationArgs{...} }
type KmsVaultReplicationMapInput interface {
	pulumi.Input

	ToKmsVaultReplicationMapOutput() KmsVaultReplicationMapOutput
	ToKmsVaultReplicationMapOutputWithContext(context.Context) KmsVaultReplicationMapOutput
}

type KmsVaultReplicationMap map[string]KmsVaultReplicationInput

func (KmsVaultReplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsVaultReplication)(nil)).Elem()
}

func (i KmsVaultReplicationMap) ToKmsVaultReplicationMapOutput() KmsVaultReplicationMapOutput {
	return i.ToKmsVaultReplicationMapOutputWithContext(context.Background())
}

func (i KmsVaultReplicationMap) ToKmsVaultReplicationMapOutputWithContext(ctx context.Context) KmsVaultReplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultReplicationMapOutput)
}

type KmsVaultReplicationOutput struct {
	*pulumi.OutputState
}

func (KmsVaultReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsVaultReplication)(nil))
}

func (o KmsVaultReplicationOutput) ToKmsVaultReplicationOutput() KmsVaultReplicationOutput {
	return o
}

func (o KmsVaultReplicationOutput) ToKmsVaultReplicationOutputWithContext(ctx context.Context) KmsVaultReplicationOutput {
	return o
}

func (o KmsVaultReplicationOutput) ToKmsVaultReplicationPtrOutput() KmsVaultReplicationPtrOutput {
	return o.ToKmsVaultReplicationPtrOutputWithContext(context.Background())
}

func (o KmsVaultReplicationOutput) ToKmsVaultReplicationPtrOutputWithContext(ctx context.Context) KmsVaultReplicationPtrOutput {
	return o.ApplyT(func(v KmsVaultReplication) *KmsVaultReplication {
		return &v
	}).(KmsVaultReplicationPtrOutput)
}

type KmsVaultReplicationPtrOutput struct {
	*pulumi.OutputState
}

func (KmsVaultReplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsVaultReplication)(nil))
}

func (o KmsVaultReplicationPtrOutput) ToKmsVaultReplicationPtrOutput() KmsVaultReplicationPtrOutput {
	return o
}

func (o KmsVaultReplicationPtrOutput) ToKmsVaultReplicationPtrOutputWithContext(ctx context.Context) KmsVaultReplicationPtrOutput {
	return o
}

type KmsVaultReplicationArrayOutput struct{ *pulumi.OutputState }

func (KmsVaultReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KmsVaultReplication)(nil))
}

func (o KmsVaultReplicationArrayOutput) ToKmsVaultReplicationArrayOutput() KmsVaultReplicationArrayOutput {
	return o
}

func (o KmsVaultReplicationArrayOutput) ToKmsVaultReplicationArrayOutputWithContext(ctx context.Context) KmsVaultReplicationArrayOutput {
	return o
}

func (o KmsVaultReplicationArrayOutput) Index(i pulumi.IntInput) KmsVaultReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KmsVaultReplication {
		return vs[0].([]KmsVaultReplication)[vs[1].(int)]
	}).(KmsVaultReplicationOutput)
}

type KmsVaultReplicationMapOutput struct{ *pulumi.OutputState }

func (KmsVaultReplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KmsVaultReplication)(nil))
}

func (o KmsVaultReplicationMapOutput) ToKmsVaultReplicationMapOutput() KmsVaultReplicationMapOutput {
	return o
}

func (o KmsVaultReplicationMapOutput) ToKmsVaultReplicationMapOutputWithContext(ctx context.Context) KmsVaultReplicationMapOutput {
	return o
}

func (o KmsVaultReplicationMapOutput) MapIndex(k pulumi.StringInput) KmsVaultReplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KmsVaultReplication {
		return vs[0].(map[string]KmsVaultReplication)[vs[1].(string)]
	}).(KmsVaultReplicationOutput)
}

func init() {
	pulumi.RegisterOutputType(KmsVaultReplicationOutput{})
	pulumi.RegisterOutputType(KmsVaultReplicationPtrOutput{})
	pulumi.RegisterOutputType(KmsVaultReplicationArrayOutput{})
	pulumi.RegisterOutputType(KmsVaultReplicationMapOutput{})
}
