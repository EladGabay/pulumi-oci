// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides details about a specific Osn resource in Oracle Cloud Infrastructure Blockchain service.
 *
 * Gets information about an OSN identified by the specific id
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOsn = oci.GetBlockchainOsn({
 *     blockchainPlatformId: oci_blockchain_blockchain_platform.test_blockchain_platform.id,
 *     osnId: oci_blockchain_osn.test_osn.id,
 * });
 * ```
 */
export function getBlockchainOsn(args: GetBlockchainOsnArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainOsnResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getBlockchainOsn:GetBlockchainOsn", {
        "blockchainPlatformId": args.blockchainPlatformId,
        "osnId": args.osnId,
    }, opts);
}

/**
 * A collection of arguments for invoking GetBlockchainOsn.
 */
export interface GetBlockchainOsnArgs {
    /**
     * Unique service identifier.
     */
    blockchainPlatformId: string;
    /**
     * OSN identifier.
     */
    osnId: string;
}

/**
 * A collection of values returned by GetBlockchainOsn.
 */
export interface GetBlockchainOsnResult {
    /**
     * Availability Domain of OSN
     */
    readonly ad: string;
    readonly blockchainPlatformId: string;
    readonly id: string;
    /**
     * OCPU allocation parameter
     */
    readonly ocpuAllocationParam: outputs.GetBlockchainOsnOcpuAllocationParam;
    readonly osnId: string;
    /**
     * OSN identifier
     */
    readonly osnKey: string;
    /**
     * The current state of the OSN.
     */
    readonly state: string;
}
