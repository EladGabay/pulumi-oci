// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Resource Action resource in Oracle Cloud Infrastructure Optimizer service.
//
// Updates the resource action that corresponds to the specified OCID.
// Use this operation to implement the following actions:
//
//   * Postpone resource action
//   * Ignore resource action
//   * Reactivate resource action
//
// ## Import
//
// ResourceActions can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/optimizerResourceAction:OptimizerResourceAction test_resource_action "id"
// ```
type OptimizerResourceAction struct {
	pulumi.CustomResourceState

	// Details about the recommended action.
	Action OptimizerResourceActionActionOutput `pulumi:"action"`
	// The unique OCID associated with the category.
	CategoryId pulumi.StringOutput `pulumi:"categoryId"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The name associated with the compartment.
	CompartmentName pulumi.StringOutput `pulumi:"compartmentName"`
	// The estimated cost savings, in dollars, for the resource action.
	EstimatedCostSaving pulumi.Float64Output `pulumi:"estimatedCostSaving"`
	// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
	ExtendedMetadata pulumi.MapOutput `pulumi:"extendedMetadata"`
	// Custom metadata key/value pairs for the resource action.
	Metadata pulumi.MapOutput `pulumi:"metadata"`
	// The name assigned to the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique OCID associated with the recommendation.
	RecommendationId pulumi.StringOutput `pulumi:"recommendationId"`
	// The unique OCID associated with the resource action.
	ResourceActionId pulumi.StringOutput `pulumi:"resourceActionId"`
	// The unique OCID associated with the resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The kind of resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The resource action's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The status of the resource action.
	Status pulumi.StringOutput `pulumi:"status"`
	// The date and time the resource action details were created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time that the resource action entered its current status. The format is defined by RFC3339.
	TimeStatusBegin pulumi.StringOutput `pulumi:"timeStatusBegin"`
	// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd pulumi.StringOutput `pulumi:"timeStatusEnd"`
	// The date and time the resource action details were last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOptimizerResourceAction registers a new resource with the given unique name, arguments, and options.
func NewOptimizerResourceAction(ctx *pulumi.Context,
	name string, args *OptimizerResourceActionArgs, opts ...pulumi.ResourceOption) (*OptimizerResourceAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceActionId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceActionId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	var resource OptimizerResourceAction
	err := ctx.RegisterResource("oci:index/optimizerResourceAction:OptimizerResourceAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOptimizerResourceAction gets an existing OptimizerResourceAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOptimizerResourceAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OptimizerResourceActionState, opts ...pulumi.ResourceOption) (*OptimizerResourceAction, error) {
	var resource OptimizerResourceAction
	err := ctx.ReadResource("oci:index/optimizerResourceAction:OptimizerResourceAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OptimizerResourceAction resources.
type optimizerResourceActionState struct {
	// Details about the recommended action.
	Action *OptimizerResourceActionAction `pulumi:"action"`
	// The unique OCID associated with the category.
	CategoryId *string `pulumi:"categoryId"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The name associated with the compartment.
	CompartmentName *string `pulumi:"compartmentName"`
	// The estimated cost savings, in dollars, for the resource action.
	EstimatedCostSaving *float64 `pulumi:"estimatedCostSaving"`
	// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
	ExtendedMetadata map[string]interface{} `pulumi:"extendedMetadata"`
	// Custom metadata key/value pairs for the resource action.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The name assigned to the resource.
	Name *string `pulumi:"name"`
	// The unique OCID associated with the recommendation.
	RecommendationId *string `pulumi:"recommendationId"`
	// The unique OCID associated with the resource action.
	ResourceActionId *string `pulumi:"resourceActionId"`
	// The unique OCID associated with the resource.
	ResourceId *string `pulumi:"resourceId"`
	// The kind of resource.
	ResourceType *string `pulumi:"resourceType"`
	// The resource action's current state.
	State *string `pulumi:"state"`
	// (Updatable) The status of the resource action.
	Status *string `pulumi:"status"`
	// The date and time the resource action details were created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time that the resource action entered its current status. The format is defined by RFC3339.
	TimeStatusBegin *string `pulumi:"timeStatusBegin"`
	// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd *string `pulumi:"timeStatusEnd"`
	// The date and time the resource action details were last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OptimizerResourceActionState struct {
	// Details about the recommended action.
	Action OptimizerResourceActionActionPtrInput
	// The unique OCID associated with the category.
	CategoryId pulumi.StringPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The name associated with the compartment.
	CompartmentName pulumi.StringPtrInput
	// The estimated cost savings, in dollars, for the resource action.
	EstimatedCostSaving pulumi.Float64PtrInput
	// Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
	ExtendedMetadata pulumi.MapInput
	// Custom metadata key/value pairs for the resource action.
	Metadata pulumi.MapInput
	// The name assigned to the resource.
	Name pulumi.StringPtrInput
	// The unique OCID associated with the recommendation.
	RecommendationId pulumi.StringPtrInput
	// The unique OCID associated with the resource action.
	ResourceActionId pulumi.StringPtrInput
	// The unique OCID associated with the resource.
	ResourceId pulumi.StringPtrInput
	// The kind of resource.
	ResourceType pulumi.StringPtrInput
	// The resource action's current state.
	State pulumi.StringPtrInput
	// (Updatable) The status of the resource action.
	Status pulumi.StringPtrInput
	// The date and time the resource action details were created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time that the resource action entered its current status. The format is defined by RFC3339.
	TimeStatusBegin pulumi.StringPtrInput
	// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd pulumi.StringPtrInput
	// The date and time the resource action details were last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (OptimizerResourceActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*optimizerResourceActionState)(nil)).Elem()
}

type optimizerResourceActionArgs struct {
	// The unique OCID associated with the resource action.
	ResourceActionId string `pulumi:"resourceActionId"`
	// (Updatable) The status of the resource action.
	Status string `pulumi:"status"`
	// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd *string `pulumi:"timeStatusEnd"`
}

// The set of arguments for constructing a OptimizerResourceAction resource.
type OptimizerResourceActionArgs struct {
	// The unique OCID associated with the resource action.
	ResourceActionId pulumi.StringInput
	// (Updatable) The status of the resource action.
	Status pulumi.StringInput
	// (Updatable) The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd pulumi.StringPtrInput
}

func (OptimizerResourceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*optimizerResourceActionArgs)(nil)).Elem()
}

type OptimizerResourceActionInput interface {
	pulumi.Input

	ToOptimizerResourceActionOutput() OptimizerResourceActionOutput
	ToOptimizerResourceActionOutputWithContext(ctx context.Context) OptimizerResourceActionOutput
}

func (*OptimizerResourceAction) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizerResourceAction)(nil))
}

func (i *OptimizerResourceAction) ToOptimizerResourceActionOutput() OptimizerResourceActionOutput {
	return i.ToOptimizerResourceActionOutputWithContext(context.Background())
}

func (i *OptimizerResourceAction) ToOptimizerResourceActionOutputWithContext(ctx context.Context) OptimizerResourceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerResourceActionOutput)
}

func (i *OptimizerResourceAction) ToOptimizerResourceActionPtrOutput() OptimizerResourceActionPtrOutput {
	return i.ToOptimizerResourceActionPtrOutputWithContext(context.Background())
}

func (i *OptimizerResourceAction) ToOptimizerResourceActionPtrOutputWithContext(ctx context.Context) OptimizerResourceActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerResourceActionPtrOutput)
}

type OptimizerResourceActionPtrInput interface {
	pulumi.Input

	ToOptimizerResourceActionPtrOutput() OptimizerResourceActionPtrOutput
	ToOptimizerResourceActionPtrOutputWithContext(ctx context.Context) OptimizerResourceActionPtrOutput
}

type optimizerResourceActionPtrType OptimizerResourceActionArgs

func (*optimizerResourceActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizerResourceAction)(nil))
}

func (i *optimizerResourceActionPtrType) ToOptimizerResourceActionPtrOutput() OptimizerResourceActionPtrOutput {
	return i.ToOptimizerResourceActionPtrOutputWithContext(context.Background())
}

func (i *optimizerResourceActionPtrType) ToOptimizerResourceActionPtrOutputWithContext(ctx context.Context) OptimizerResourceActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerResourceActionPtrOutput)
}

// OptimizerResourceActionArrayInput is an input type that accepts OptimizerResourceActionArray and OptimizerResourceActionArrayOutput values.
// You can construct a concrete instance of `OptimizerResourceActionArrayInput` via:
//
//          OptimizerResourceActionArray{ OptimizerResourceActionArgs{...} }
type OptimizerResourceActionArrayInput interface {
	pulumi.Input

	ToOptimizerResourceActionArrayOutput() OptimizerResourceActionArrayOutput
	ToOptimizerResourceActionArrayOutputWithContext(context.Context) OptimizerResourceActionArrayOutput
}

type OptimizerResourceActionArray []OptimizerResourceActionInput

func (OptimizerResourceActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OptimizerResourceAction)(nil)).Elem()
}

func (i OptimizerResourceActionArray) ToOptimizerResourceActionArrayOutput() OptimizerResourceActionArrayOutput {
	return i.ToOptimizerResourceActionArrayOutputWithContext(context.Background())
}

func (i OptimizerResourceActionArray) ToOptimizerResourceActionArrayOutputWithContext(ctx context.Context) OptimizerResourceActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerResourceActionArrayOutput)
}

// OptimizerResourceActionMapInput is an input type that accepts OptimizerResourceActionMap and OptimizerResourceActionMapOutput values.
// You can construct a concrete instance of `OptimizerResourceActionMapInput` via:
//
//          OptimizerResourceActionMap{ "key": OptimizerResourceActionArgs{...} }
type OptimizerResourceActionMapInput interface {
	pulumi.Input

	ToOptimizerResourceActionMapOutput() OptimizerResourceActionMapOutput
	ToOptimizerResourceActionMapOutputWithContext(context.Context) OptimizerResourceActionMapOutput
}

type OptimizerResourceActionMap map[string]OptimizerResourceActionInput

func (OptimizerResourceActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OptimizerResourceAction)(nil)).Elem()
}

func (i OptimizerResourceActionMap) ToOptimizerResourceActionMapOutput() OptimizerResourceActionMapOutput {
	return i.ToOptimizerResourceActionMapOutputWithContext(context.Background())
}

func (i OptimizerResourceActionMap) ToOptimizerResourceActionMapOutputWithContext(ctx context.Context) OptimizerResourceActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerResourceActionMapOutput)
}

type OptimizerResourceActionOutput struct {
	*pulumi.OutputState
}

func (OptimizerResourceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizerResourceAction)(nil))
}

func (o OptimizerResourceActionOutput) ToOptimizerResourceActionOutput() OptimizerResourceActionOutput {
	return o
}

func (o OptimizerResourceActionOutput) ToOptimizerResourceActionOutputWithContext(ctx context.Context) OptimizerResourceActionOutput {
	return o
}

func (o OptimizerResourceActionOutput) ToOptimizerResourceActionPtrOutput() OptimizerResourceActionPtrOutput {
	return o.ToOptimizerResourceActionPtrOutputWithContext(context.Background())
}

func (o OptimizerResourceActionOutput) ToOptimizerResourceActionPtrOutputWithContext(ctx context.Context) OptimizerResourceActionPtrOutput {
	return o.ApplyT(func(v OptimizerResourceAction) *OptimizerResourceAction {
		return &v
	}).(OptimizerResourceActionPtrOutput)
}

type OptimizerResourceActionPtrOutput struct {
	*pulumi.OutputState
}

func (OptimizerResourceActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizerResourceAction)(nil))
}

func (o OptimizerResourceActionPtrOutput) ToOptimizerResourceActionPtrOutput() OptimizerResourceActionPtrOutput {
	return o
}

func (o OptimizerResourceActionPtrOutput) ToOptimizerResourceActionPtrOutputWithContext(ctx context.Context) OptimizerResourceActionPtrOutput {
	return o
}

type OptimizerResourceActionArrayOutput struct{ *pulumi.OutputState }

func (OptimizerResourceActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptimizerResourceAction)(nil))
}

func (o OptimizerResourceActionArrayOutput) ToOptimizerResourceActionArrayOutput() OptimizerResourceActionArrayOutput {
	return o
}

func (o OptimizerResourceActionArrayOutput) ToOptimizerResourceActionArrayOutputWithContext(ctx context.Context) OptimizerResourceActionArrayOutput {
	return o
}

func (o OptimizerResourceActionArrayOutput) Index(i pulumi.IntInput) OptimizerResourceActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptimizerResourceAction {
		return vs[0].([]OptimizerResourceAction)[vs[1].(int)]
	}).(OptimizerResourceActionOutput)
}

type OptimizerResourceActionMapOutput struct{ *pulumi.OutputState }

func (OptimizerResourceActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OptimizerResourceAction)(nil))
}

func (o OptimizerResourceActionMapOutput) ToOptimizerResourceActionMapOutput() OptimizerResourceActionMapOutput {
	return o
}

func (o OptimizerResourceActionMapOutput) ToOptimizerResourceActionMapOutputWithContext(ctx context.Context) OptimizerResourceActionMapOutput {
	return o
}

func (o OptimizerResourceActionMapOutput) MapIndex(k pulumi.StringInput) OptimizerResourceActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OptimizerResourceAction {
		return vs[0].(map[string]OptimizerResourceAction)[vs[1].(string)]
	}).(OptimizerResourceActionOutput)
}

func init() {
	pulumi.RegisterOutputType(OptimizerResourceActionOutput{})
	pulumi.RegisterOutputType(OptimizerResourceActionPtrOutput{})
	pulumi.RegisterOutputType(OptimizerResourceActionArrayOutput{})
	pulumi.RegisterOutputType(OptimizerResourceActionMapOutput{})
}
