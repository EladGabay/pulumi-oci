// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tag Default resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new tag default in the specified compartment for the specified tag definition.
//
// If you specify that a value is required, a value is set during resource creation (either by
// the user creating the resource or another tag defualt). If no value is set, resource creation
// is blocked.
//
// * If the `isRequired` flag is set to "true", the value is set during resource creation.
// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityTagDefault(ctx, "testTagDefault", &oci.IdentityTagDefaultArgs{
// 			CompartmentId:   pulumi.Any(_var.Compartment_id),
// 			TagDefinitionId: pulumi.Any(oci_identity_tag_definition.Test_tag_definition.Id),
// 			Value:           pulumi.Any(_var.Tag_default_value),
// 			IsRequired:      pulumi.Any(_var.Tag_default_is_required),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// TagDefaults can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityTagDefault:IdentityTagDefault test_tag_default "id"
// ```
type IdentityTagDefault struct {
	pulumi.CustomResourceState

	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolOutput `pulumi:"isRequired"`
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringOutput `pulumi:"tagDefinitionId"`
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName pulumi.StringOutput `pulumi:"tagDefinitionName"`
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId pulumi.StringOutput `pulumi:"tagNamespaceId"`
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewIdentityTagDefault registers a new resource with the given unique name, arguments, and options.
func NewIdentityTagDefault(ctx *pulumi.Context,
	name string, args *IdentityTagDefaultArgs, opts ...pulumi.ResourceOption) (*IdentityTagDefault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.TagDefinitionId == nil {
		return nil, errors.New("invalid value for required argument 'TagDefinitionId'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	var resource IdentityTagDefault
	err := ctx.RegisterResource("oci:index/identityTagDefault:IdentityTagDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityTagDefault gets an existing IdentityTagDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityTagDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityTagDefaultState, opts ...pulumi.ResourceOption) (*IdentityTagDefault, error) {
	var resource IdentityTagDefault
	err := ctx.ReadResource("oci:index/identityTagDefault:IdentityTagDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityTagDefault resources.
type identityTagDefaultState struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired *bool `pulumi:"isRequired"`
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State *string `pulumi:"state"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId *string `pulumi:"tagDefinitionId"`
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName *string `pulumi:"tagDefinitionName"`
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId *string `pulumi:"tagNamespaceId"`
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value *string `pulumi:"value"`
}

type IdentityTagDefaultState struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolPtrInput
	// The tag default's current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
	State pulumi.StringPtrInput
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringPtrInput
	// The name used in the tag definition. This field is informational in the context of the tag default.
	TagDefinitionName pulumi.StringPtrInput
	// The OCID of the tag namespace that contains the tag definition.
	TagNamespaceId pulumi.StringPtrInput
	// Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringPtrInput
}

func (IdentityTagDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagDefaultState)(nil)).Elem()
}

type identityTagDefaultArgs struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired *bool `pulumi:"isRequired"`
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId string `pulumi:"tagDefinitionId"`
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a IdentityTagDefault resource.
type IdentityTagDefaultArgs struct {
	// The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
	// * If the `isRequired` flag is set to "true", the value is set during resource creation.
	// * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
	IsRequired pulumi.BoolPtrInput
	// The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
	TagDefinitionId pulumi.StringInput
	// (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
	Value pulumi.StringInput
}

func (IdentityTagDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagDefaultArgs)(nil)).Elem()
}

type IdentityTagDefaultInput interface {
	pulumi.Input

	ToIdentityTagDefaultOutput() IdentityTagDefaultOutput
	ToIdentityTagDefaultOutputWithContext(ctx context.Context) IdentityTagDefaultOutput
}

func (*IdentityTagDefault) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTagDefault)(nil))
}

func (i *IdentityTagDefault) ToIdentityTagDefaultOutput() IdentityTagDefaultOutput {
	return i.ToIdentityTagDefaultOutputWithContext(context.Background())
}

func (i *IdentityTagDefault) ToIdentityTagDefaultOutputWithContext(ctx context.Context) IdentityTagDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagDefaultOutput)
}

func (i *IdentityTagDefault) ToIdentityTagDefaultPtrOutput() IdentityTagDefaultPtrOutput {
	return i.ToIdentityTagDefaultPtrOutputWithContext(context.Background())
}

func (i *IdentityTagDefault) ToIdentityTagDefaultPtrOutputWithContext(ctx context.Context) IdentityTagDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagDefaultPtrOutput)
}

type IdentityTagDefaultPtrInput interface {
	pulumi.Input

	ToIdentityTagDefaultPtrOutput() IdentityTagDefaultPtrOutput
	ToIdentityTagDefaultPtrOutputWithContext(ctx context.Context) IdentityTagDefaultPtrOutput
}

type identityTagDefaultPtrType IdentityTagDefaultArgs

func (*identityTagDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTagDefault)(nil))
}

func (i *identityTagDefaultPtrType) ToIdentityTagDefaultPtrOutput() IdentityTagDefaultPtrOutput {
	return i.ToIdentityTagDefaultPtrOutputWithContext(context.Background())
}

func (i *identityTagDefaultPtrType) ToIdentityTagDefaultPtrOutputWithContext(ctx context.Context) IdentityTagDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagDefaultPtrOutput)
}

// IdentityTagDefaultArrayInput is an input type that accepts IdentityTagDefaultArray and IdentityTagDefaultArrayOutput values.
// You can construct a concrete instance of `IdentityTagDefaultArrayInput` via:
//
//          IdentityTagDefaultArray{ IdentityTagDefaultArgs{...} }
type IdentityTagDefaultArrayInput interface {
	pulumi.Input

	ToIdentityTagDefaultArrayOutput() IdentityTagDefaultArrayOutput
	ToIdentityTagDefaultArrayOutputWithContext(context.Context) IdentityTagDefaultArrayOutput
}

type IdentityTagDefaultArray []IdentityTagDefaultInput

func (IdentityTagDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityTagDefault)(nil)).Elem()
}

func (i IdentityTagDefaultArray) ToIdentityTagDefaultArrayOutput() IdentityTagDefaultArrayOutput {
	return i.ToIdentityTagDefaultArrayOutputWithContext(context.Background())
}

func (i IdentityTagDefaultArray) ToIdentityTagDefaultArrayOutputWithContext(ctx context.Context) IdentityTagDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagDefaultArrayOutput)
}

// IdentityTagDefaultMapInput is an input type that accepts IdentityTagDefaultMap and IdentityTagDefaultMapOutput values.
// You can construct a concrete instance of `IdentityTagDefaultMapInput` via:
//
//          IdentityTagDefaultMap{ "key": IdentityTagDefaultArgs{...} }
type IdentityTagDefaultMapInput interface {
	pulumi.Input

	ToIdentityTagDefaultMapOutput() IdentityTagDefaultMapOutput
	ToIdentityTagDefaultMapOutputWithContext(context.Context) IdentityTagDefaultMapOutput
}

type IdentityTagDefaultMap map[string]IdentityTagDefaultInput

func (IdentityTagDefaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityTagDefault)(nil)).Elem()
}

func (i IdentityTagDefaultMap) ToIdentityTagDefaultMapOutput() IdentityTagDefaultMapOutput {
	return i.ToIdentityTagDefaultMapOutputWithContext(context.Background())
}

func (i IdentityTagDefaultMap) ToIdentityTagDefaultMapOutputWithContext(ctx context.Context) IdentityTagDefaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagDefaultMapOutput)
}

type IdentityTagDefaultOutput struct {
	*pulumi.OutputState
}

func (IdentityTagDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTagDefault)(nil))
}

func (o IdentityTagDefaultOutput) ToIdentityTagDefaultOutput() IdentityTagDefaultOutput {
	return o
}

func (o IdentityTagDefaultOutput) ToIdentityTagDefaultOutputWithContext(ctx context.Context) IdentityTagDefaultOutput {
	return o
}

func (o IdentityTagDefaultOutput) ToIdentityTagDefaultPtrOutput() IdentityTagDefaultPtrOutput {
	return o.ToIdentityTagDefaultPtrOutputWithContext(context.Background())
}

func (o IdentityTagDefaultOutput) ToIdentityTagDefaultPtrOutputWithContext(ctx context.Context) IdentityTagDefaultPtrOutput {
	return o.ApplyT(func(v IdentityTagDefault) *IdentityTagDefault {
		return &v
	}).(IdentityTagDefaultPtrOutput)
}

type IdentityTagDefaultPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityTagDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTagDefault)(nil))
}

func (o IdentityTagDefaultPtrOutput) ToIdentityTagDefaultPtrOutput() IdentityTagDefaultPtrOutput {
	return o
}

func (o IdentityTagDefaultPtrOutput) ToIdentityTagDefaultPtrOutputWithContext(ctx context.Context) IdentityTagDefaultPtrOutput {
	return o
}

type IdentityTagDefaultArrayOutput struct{ *pulumi.OutputState }

func (IdentityTagDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityTagDefault)(nil))
}

func (o IdentityTagDefaultArrayOutput) ToIdentityTagDefaultArrayOutput() IdentityTagDefaultArrayOutput {
	return o
}

func (o IdentityTagDefaultArrayOutput) ToIdentityTagDefaultArrayOutputWithContext(ctx context.Context) IdentityTagDefaultArrayOutput {
	return o
}

func (o IdentityTagDefaultArrayOutput) Index(i pulumi.IntInput) IdentityTagDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityTagDefault {
		return vs[0].([]IdentityTagDefault)[vs[1].(int)]
	}).(IdentityTagDefaultOutput)
}

type IdentityTagDefaultMapOutput struct{ *pulumi.OutputState }

func (IdentityTagDefaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityTagDefault)(nil))
}

func (o IdentityTagDefaultMapOutput) ToIdentityTagDefaultMapOutput() IdentityTagDefaultMapOutput {
	return o
}

func (o IdentityTagDefaultMapOutput) ToIdentityTagDefaultMapOutputWithContext(ctx context.Context) IdentityTagDefaultMapOutput {
	return o
}

func (o IdentityTagDefaultMapOutput) MapIndex(k pulumi.StringInput) IdentityTagDefaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityTagDefault {
		return vs[0].(map[string]IdentityTagDefault)[vs[1].(string)]
	}).(IdentityTagDefaultOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityTagDefaultOutput{})
	pulumi.RegisterOutputType(IdentityTagDefaultPtrOutput{})
	pulumi.RegisterOutputType(IdentityTagDefaultArrayOutput{})
	pulumi.RegisterOutputType(IdentityTagDefaultMapOutput{})
}
