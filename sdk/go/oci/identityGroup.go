// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Group resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new group in your tenancy.
//
// You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy
// is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)
// reside within the tenancy itself, unlike cloud resources such as compute instances, which typically
// reside within compartments inside the tenancy. For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You must also specify a *name* for the group, which must be unique across all groups in your tenancy and
// cannot be changed. You can use this name or the OCID when writing policies that apply to the group. For more
// information about policies, see [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm).
//
// You must also specify a *description* for the group (although it can be an empty string). It does not
// have to be unique, and you can change it anytime with [UpdateGroup](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/UpdateGroup).
// After creating the group, you need to put users in it and write policies for it.
// See [AddUserToGroup](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UserGroupMembership/AddUserToGroup) and
// [CreatePolicy](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Policy/CreatePolicy).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityGroup(ctx, "testGroup", &oci.IdentityGroupArgs{
// 			CompartmentId: pulumi.Any(_var.Tenancy_ocid),
// 			Description:   pulumi.Any(_var.Group_description),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Groups can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityGroup:IdentityGroup test_group "id"
// ```
type IdentityGroup struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy containing the group.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the group during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The group's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewIdentityGroup registers a new resource with the given unique name, arguments, and options.
func NewIdentityGroup(ctx *pulumi.Context,
	name string, args *IdentityGroupArgs, opts ...pulumi.ResourceOption) (*IdentityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	var resource IdentityGroup
	err := ctx.RegisterResource("oci:index/identityGroup:IdentityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityGroup gets an existing IdentityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityGroupState, opts ...pulumi.ResourceOption) (*IdentityGroup, error) {
	var resource IdentityGroup
	err := ctx.ReadResource("oci:index/identityGroup:IdentityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityGroup resources.
type identityGroupState struct {
	// The OCID of the tenancy containing the group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the group during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The group's current state.
	State *string `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type IdentityGroupState struct {
	// The OCID of the tenancy containing the group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the group during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The group's current state.
	State pulumi.StringPtrInput
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (IdentityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityGroupState)(nil)).Elem()
}

type identityGroupArgs struct {
	// The OCID of the tenancy containing the group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the group during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a IdentityGroup resource.
type IdentityGroupArgs struct {
	// The OCID of the tenancy containing the group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the group during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the group during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
}

func (IdentityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityGroupArgs)(nil)).Elem()
}

type IdentityGroupInput interface {
	pulumi.Input

	ToIdentityGroupOutput() IdentityGroupOutput
	ToIdentityGroupOutputWithContext(ctx context.Context) IdentityGroupOutput
}

func (*IdentityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGroup)(nil))
}

func (i *IdentityGroup) ToIdentityGroupOutput() IdentityGroupOutput {
	return i.ToIdentityGroupOutputWithContext(context.Background())
}

func (i *IdentityGroup) ToIdentityGroupOutputWithContext(ctx context.Context) IdentityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGroupOutput)
}

func (i *IdentityGroup) ToIdentityGroupPtrOutput() IdentityGroupPtrOutput {
	return i.ToIdentityGroupPtrOutputWithContext(context.Background())
}

func (i *IdentityGroup) ToIdentityGroupPtrOutputWithContext(ctx context.Context) IdentityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGroupPtrOutput)
}

type IdentityGroupPtrInput interface {
	pulumi.Input

	ToIdentityGroupPtrOutput() IdentityGroupPtrOutput
	ToIdentityGroupPtrOutputWithContext(ctx context.Context) IdentityGroupPtrOutput
}

type identityGroupPtrType IdentityGroupArgs

func (*identityGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGroup)(nil))
}

func (i *identityGroupPtrType) ToIdentityGroupPtrOutput() IdentityGroupPtrOutput {
	return i.ToIdentityGroupPtrOutputWithContext(context.Background())
}

func (i *identityGroupPtrType) ToIdentityGroupPtrOutputWithContext(ctx context.Context) IdentityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGroupPtrOutput)
}

// IdentityGroupArrayInput is an input type that accepts IdentityGroupArray and IdentityGroupArrayOutput values.
// You can construct a concrete instance of `IdentityGroupArrayInput` via:
//
//          IdentityGroupArray{ IdentityGroupArgs{...} }
type IdentityGroupArrayInput interface {
	pulumi.Input

	ToIdentityGroupArrayOutput() IdentityGroupArrayOutput
	ToIdentityGroupArrayOutputWithContext(context.Context) IdentityGroupArrayOutput
}

type IdentityGroupArray []IdentityGroupInput

func (IdentityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityGroup)(nil)).Elem()
}

func (i IdentityGroupArray) ToIdentityGroupArrayOutput() IdentityGroupArrayOutput {
	return i.ToIdentityGroupArrayOutputWithContext(context.Background())
}

func (i IdentityGroupArray) ToIdentityGroupArrayOutputWithContext(ctx context.Context) IdentityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGroupArrayOutput)
}

// IdentityGroupMapInput is an input type that accepts IdentityGroupMap and IdentityGroupMapOutput values.
// You can construct a concrete instance of `IdentityGroupMapInput` via:
//
//          IdentityGroupMap{ "key": IdentityGroupArgs{...} }
type IdentityGroupMapInput interface {
	pulumi.Input

	ToIdentityGroupMapOutput() IdentityGroupMapOutput
	ToIdentityGroupMapOutputWithContext(context.Context) IdentityGroupMapOutput
}

type IdentityGroupMap map[string]IdentityGroupInput

func (IdentityGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityGroup)(nil)).Elem()
}

func (i IdentityGroupMap) ToIdentityGroupMapOutput() IdentityGroupMapOutput {
	return i.ToIdentityGroupMapOutputWithContext(context.Background())
}

func (i IdentityGroupMap) ToIdentityGroupMapOutputWithContext(ctx context.Context) IdentityGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGroupMapOutput)
}

type IdentityGroupOutput struct {
	*pulumi.OutputState
}

func (IdentityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGroup)(nil))
}

func (o IdentityGroupOutput) ToIdentityGroupOutput() IdentityGroupOutput {
	return o
}

func (o IdentityGroupOutput) ToIdentityGroupOutputWithContext(ctx context.Context) IdentityGroupOutput {
	return o
}

func (o IdentityGroupOutput) ToIdentityGroupPtrOutput() IdentityGroupPtrOutput {
	return o.ToIdentityGroupPtrOutputWithContext(context.Background())
}

func (o IdentityGroupOutput) ToIdentityGroupPtrOutputWithContext(ctx context.Context) IdentityGroupPtrOutput {
	return o.ApplyT(func(v IdentityGroup) *IdentityGroup {
		return &v
	}).(IdentityGroupPtrOutput)
}

type IdentityGroupPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityGroup)(nil))
}

func (o IdentityGroupPtrOutput) ToIdentityGroupPtrOutput() IdentityGroupPtrOutput {
	return o
}

func (o IdentityGroupPtrOutput) ToIdentityGroupPtrOutputWithContext(ctx context.Context) IdentityGroupPtrOutput {
	return o
}

type IdentityGroupArrayOutput struct{ *pulumi.OutputState }

func (IdentityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGroup)(nil))
}

func (o IdentityGroupArrayOutput) ToIdentityGroupArrayOutput() IdentityGroupArrayOutput {
	return o
}

func (o IdentityGroupArrayOutput) ToIdentityGroupArrayOutputWithContext(ctx context.Context) IdentityGroupArrayOutput {
	return o
}

func (o IdentityGroupArrayOutput) Index(i pulumi.IntInput) IdentityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityGroup {
		return vs[0].([]IdentityGroup)[vs[1].(int)]
	}).(IdentityGroupOutput)
}

type IdentityGroupMapOutput struct{ *pulumi.OutputState }

func (IdentityGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityGroup)(nil))
}

func (o IdentityGroupMapOutput) ToIdentityGroupMapOutput() IdentityGroupMapOutput {
	return o
}

func (o IdentityGroupMapOutput) ToIdentityGroupMapOutputWithContext(ctx context.Context) IdentityGroupMapOutput {
	return o
}

func (o IdentityGroupMapOutput) MapIndex(k pulumi.StringInput) IdentityGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityGroup {
		return vs[0].(map[string]IdentityGroup)[vs[1].(string)]
	}).(IdentityGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityGroupOutput{})
	pulumi.RegisterOutputType(IdentityGroupPtrOutput{})
	pulumi.RegisterOutputType(IdentityGroupArrayOutput{})
	pulumi.RegisterOutputType(IdentityGroupMapOutput{})
}
