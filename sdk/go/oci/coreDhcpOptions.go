// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Dhcp Options resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new set of DHCP options for the specified VCN. For more information, see
// [DhcpOptions](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpOptions/).
//
// For the purposes of access control, you must provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want the set of
// DHCP options to reside. Notice that the set of options doesn't have to be in the same compartment as the VCN,
// subnets, or other Networking Service components. If you're not sure which compartment to use, put the set
// of DHCP options in the same compartment as the VCN. For more information about compartments and access control, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You may optionally specify a *display name* for the set of DHCP options, otherwise a default is provided.
// It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// For more information on configuring a VCN's default DHCP options, see [Managing Default VCN Resources](https://www.terraform.io/docs/providers/oci/guides/managing_default_resources.html)
//
// ## Example Usage
//
// ## Import
//
// DhcpOptions can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreDhcpOptions:CoreDhcpOptions test_dhcp_options "id"
// ```
type CoreDhcpOptions struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The search domain name type of DHCP options
	DomainNameType pulumi.StringOutput `pulumi:"domainNameType"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) A set of DHCP options.
	Options CoreDhcpOptionsOptionArrayOutput `pulumi:"options"`
	// The current state of the set of DHCP options.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the set of DHCP options was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the VCN the set of DHCP options belongs to.
	VcnId pulumi.StringOutput `pulumi:"vcnId"`
}

// NewCoreDhcpOptions registers a new resource with the given unique name, arguments, and options.
func NewCoreDhcpOptions(ctx *pulumi.Context,
	name string, args *CoreDhcpOptionsArgs, opts ...pulumi.ResourceOption) (*CoreDhcpOptions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Options == nil {
		return nil, errors.New("invalid value for required argument 'Options'")
	}
	if args.VcnId == nil {
		return nil, errors.New("invalid value for required argument 'VcnId'")
	}
	var resource CoreDhcpOptions
	err := ctx.RegisterResource("oci:index/coreDhcpOptions:CoreDhcpOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreDhcpOptions gets an existing CoreDhcpOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreDhcpOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreDhcpOptionsState, opts ...pulumi.ResourceOption) (*CoreDhcpOptions, error) {
	var resource CoreDhcpOptions
	err := ctx.ReadResource("oci:index/coreDhcpOptions:CoreDhcpOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreDhcpOptions resources.
type coreDhcpOptionsState struct {
	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The search domain name type of DHCP options
	DomainNameType *string `pulumi:"domainNameType"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A set of DHCP options.
	Options []CoreDhcpOptionsOption `pulumi:"options"`
	// The current state of the set of DHCP options.
	State *string `pulumi:"state"`
	// Date and time the set of DHCP options was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the VCN the set of DHCP options belongs to.
	VcnId *string `pulumi:"vcnId"`
}

type CoreDhcpOptionsState struct {
	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The search domain name type of DHCP options
	DomainNameType pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A set of DHCP options.
	Options CoreDhcpOptionsOptionArrayInput
	// The current state of the set of DHCP options.
	State pulumi.StringPtrInput
	// Date and time the set of DHCP options was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The OCID of the VCN the set of DHCP options belongs to.
	VcnId pulumi.StringPtrInput
}

func (CoreDhcpOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreDhcpOptionsState)(nil)).Elem()
}

type coreDhcpOptionsArgs struct {
	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The search domain name type of DHCP options
	DomainNameType *string `pulumi:"domainNameType"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A set of DHCP options.
	Options []CoreDhcpOptionsOption `pulumi:"options"`
	// The OCID of the VCN the set of DHCP options belongs to.
	VcnId string `pulumi:"vcnId"`
}

// The set of arguments for constructing a CoreDhcpOptions resource.
type CoreDhcpOptionsArgs struct {
	// (Updatable) The OCID of the compartment to contain the set of DHCP options.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The search domain name type of DHCP options
	DomainNameType pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A set of DHCP options.
	Options CoreDhcpOptionsOptionArrayInput
	// The OCID of the VCN the set of DHCP options belongs to.
	VcnId pulumi.StringInput
}

func (CoreDhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreDhcpOptionsArgs)(nil)).Elem()
}

type CoreDhcpOptionsInput interface {
	pulumi.Input

	ToCoreDhcpOptionsOutput() CoreDhcpOptionsOutput
	ToCoreDhcpOptionsOutputWithContext(ctx context.Context) CoreDhcpOptionsOutput
}

func (*CoreDhcpOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreDhcpOptions)(nil))
}

func (i *CoreDhcpOptions) ToCoreDhcpOptionsOutput() CoreDhcpOptionsOutput {
	return i.ToCoreDhcpOptionsOutputWithContext(context.Background())
}

func (i *CoreDhcpOptions) ToCoreDhcpOptionsOutputWithContext(ctx context.Context) CoreDhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDhcpOptionsOutput)
}

func (i *CoreDhcpOptions) ToCoreDhcpOptionsPtrOutput() CoreDhcpOptionsPtrOutput {
	return i.ToCoreDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *CoreDhcpOptions) ToCoreDhcpOptionsPtrOutputWithContext(ctx context.Context) CoreDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDhcpOptionsPtrOutput)
}

type CoreDhcpOptionsPtrInput interface {
	pulumi.Input

	ToCoreDhcpOptionsPtrOutput() CoreDhcpOptionsPtrOutput
	ToCoreDhcpOptionsPtrOutputWithContext(ctx context.Context) CoreDhcpOptionsPtrOutput
}

type coreDhcpOptionsPtrType CoreDhcpOptionsArgs

func (*coreDhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreDhcpOptions)(nil))
}

func (i *coreDhcpOptionsPtrType) ToCoreDhcpOptionsPtrOutput() CoreDhcpOptionsPtrOutput {
	return i.ToCoreDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *coreDhcpOptionsPtrType) ToCoreDhcpOptionsPtrOutputWithContext(ctx context.Context) CoreDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDhcpOptionsPtrOutput)
}

// CoreDhcpOptionsArrayInput is an input type that accepts CoreDhcpOptionsArray and CoreDhcpOptionsArrayOutput values.
// You can construct a concrete instance of `CoreDhcpOptionsArrayInput` via:
//
//          CoreDhcpOptionsArray{ CoreDhcpOptionsArgs{...} }
type CoreDhcpOptionsArrayInput interface {
	pulumi.Input

	ToCoreDhcpOptionsArrayOutput() CoreDhcpOptionsArrayOutput
	ToCoreDhcpOptionsArrayOutputWithContext(context.Context) CoreDhcpOptionsArrayOutput
}

type CoreDhcpOptionsArray []CoreDhcpOptionsInput

func (CoreDhcpOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreDhcpOptions)(nil)).Elem()
}

func (i CoreDhcpOptionsArray) ToCoreDhcpOptionsArrayOutput() CoreDhcpOptionsArrayOutput {
	return i.ToCoreDhcpOptionsArrayOutputWithContext(context.Background())
}

func (i CoreDhcpOptionsArray) ToCoreDhcpOptionsArrayOutputWithContext(ctx context.Context) CoreDhcpOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDhcpOptionsArrayOutput)
}

// CoreDhcpOptionsMapInput is an input type that accepts CoreDhcpOptionsMap and CoreDhcpOptionsMapOutput values.
// You can construct a concrete instance of `CoreDhcpOptionsMapInput` via:
//
//          CoreDhcpOptionsMap{ "key": CoreDhcpOptionsArgs{...} }
type CoreDhcpOptionsMapInput interface {
	pulumi.Input

	ToCoreDhcpOptionsMapOutput() CoreDhcpOptionsMapOutput
	ToCoreDhcpOptionsMapOutputWithContext(context.Context) CoreDhcpOptionsMapOutput
}

type CoreDhcpOptionsMap map[string]CoreDhcpOptionsInput

func (CoreDhcpOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreDhcpOptions)(nil)).Elem()
}

func (i CoreDhcpOptionsMap) ToCoreDhcpOptionsMapOutput() CoreDhcpOptionsMapOutput {
	return i.ToCoreDhcpOptionsMapOutputWithContext(context.Background())
}

func (i CoreDhcpOptionsMap) ToCoreDhcpOptionsMapOutputWithContext(ctx context.Context) CoreDhcpOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDhcpOptionsMapOutput)
}

type CoreDhcpOptionsOutput struct {
	*pulumi.OutputState
}

func (CoreDhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreDhcpOptions)(nil))
}

func (o CoreDhcpOptionsOutput) ToCoreDhcpOptionsOutput() CoreDhcpOptionsOutput {
	return o
}

func (o CoreDhcpOptionsOutput) ToCoreDhcpOptionsOutputWithContext(ctx context.Context) CoreDhcpOptionsOutput {
	return o
}

func (o CoreDhcpOptionsOutput) ToCoreDhcpOptionsPtrOutput() CoreDhcpOptionsPtrOutput {
	return o.ToCoreDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o CoreDhcpOptionsOutput) ToCoreDhcpOptionsPtrOutputWithContext(ctx context.Context) CoreDhcpOptionsPtrOutput {
	return o.ApplyT(func(v CoreDhcpOptions) *CoreDhcpOptions {
		return &v
	}).(CoreDhcpOptionsPtrOutput)
}

type CoreDhcpOptionsPtrOutput struct {
	*pulumi.OutputState
}

func (CoreDhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreDhcpOptions)(nil))
}

func (o CoreDhcpOptionsPtrOutput) ToCoreDhcpOptionsPtrOutput() CoreDhcpOptionsPtrOutput {
	return o
}

func (o CoreDhcpOptionsPtrOutput) ToCoreDhcpOptionsPtrOutputWithContext(ctx context.Context) CoreDhcpOptionsPtrOutput {
	return o
}

type CoreDhcpOptionsArrayOutput struct{ *pulumi.OutputState }

func (CoreDhcpOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreDhcpOptions)(nil))
}

func (o CoreDhcpOptionsArrayOutput) ToCoreDhcpOptionsArrayOutput() CoreDhcpOptionsArrayOutput {
	return o
}

func (o CoreDhcpOptionsArrayOutput) ToCoreDhcpOptionsArrayOutputWithContext(ctx context.Context) CoreDhcpOptionsArrayOutput {
	return o
}

func (o CoreDhcpOptionsArrayOutput) Index(i pulumi.IntInput) CoreDhcpOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreDhcpOptions {
		return vs[0].([]CoreDhcpOptions)[vs[1].(int)]
	}).(CoreDhcpOptionsOutput)
}

type CoreDhcpOptionsMapOutput struct{ *pulumi.OutputState }

func (CoreDhcpOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreDhcpOptions)(nil))
}

func (o CoreDhcpOptionsMapOutput) ToCoreDhcpOptionsMapOutput() CoreDhcpOptionsMapOutput {
	return o
}

func (o CoreDhcpOptionsMapOutput) ToCoreDhcpOptionsMapOutputWithContext(ctx context.Context) CoreDhcpOptionsMapOutput {
	return o
}

func (o CoreDhcpOptionsMapOutput) MapIndex(k pulumi.StringInput) CoreDhcpOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreDhcpOptions {
		return vs[0].(map[string]CoreDhcpOptions)[vs[1].(string)]
	}).(CoreDhcpOptionsOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreDhcpOptionsOutput{})
	pulumi.RegisterOutputType(CoreDhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(CoreDhcpOptionsArrayOutput{})
	pulumi.RegisterOutputType(CoreDhcpOptionsMapOutput{})
}
