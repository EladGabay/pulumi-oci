// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetLoadBalancerBackendHealth
    {
        /// <summary>
        /// This data source provides details about a specific Backend Health resource in Oracle Cloud Infrastructure Load Balancer service.
        /// 
        /// Gets the current health status of the specified backend server.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBackendHealth = Output.Create(Oci.GetLoadBalancerBackendHealth.InvokeAsync(new Oci.GetLoadBalancerBackendHealthArgs
        ///         {
        ///             BackendName = oci_load_balancer_backend.Test_backend.Name,
        ///             BackendSetName = oci_load_balancer_backend_set.Test_backend_set.Name,
        ///             LoadBalancerId = oci_load_balancer_load_balancer.Test_load_balancer.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLoadBalancerBackendHealthResult> InvokeAsync(GetLoadBalancerBackendHealthArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLoadBalancerBackendHealthResult>("oci:index/getLoadBalancerBackendHealth:GetLoadBalancerBackendHealth", args ?? new GetLoadBalancerBackendHealthArgs(), options.WithVersion());
    }


    public sealed class GetLoadBalancerBackendHealthArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP address and port of the backend server to retrieve the health status for.  Example: `10.0.0.3:8080`
        /// </summary>
        [Input("backendName", required: true)]
        public string BackendName { get; set; } = null!;

        /// <summary>
        /// The name of the backend set associated with the backend server to retrieve the health status for.  Example: `example_backend_set`
        /// </summary>
        [Input("backendSetName", required: true)]
        public string BackendSetName { get; set; } = null!;

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend server health status to be retrieved.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public string LoadBalancerId { get; set; } = null!;

        public GetLoadBalancerBackendHealthArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLoadBalancerBackendHealthResult
    {
        public readonly string BackendName;
        public readonly string BackendSetName;
        /// <summary>
        /// A list of the most recent health check results returned for the specified backend server.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLoadBalancerBackendHealthHealthCheckResultResult> HealthCheckResults;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LoadBalancerId;
        /// <summary>
        /// The general health status of the specified backend server as reported by the primary and standby load balancers.
        /// *   **OK:** Both health checks returned `OK`.
        /// *   **WARNING:** One health check returned `OK` and one did not.
        /// *   **CRITICAL:** Neither health check returned `OK`.
        /// *   **UNKNOWN:** One or both health checks returned `UNKNOWN`, or the system was unable to retrieve metrics at this time.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLoadBalancerBackendHealthResult(
            string backendName,

            string backendSetName,

            ImmutableArray<Outputs.GetLoadBalancerBackendHealthHealthCheckResultResult> healthCheckResults,

            string id,

            string loadBalancerId,

            string status)
        {
            BackendName = backendName;
            BackendSetName = backendSetName;
            HealthCheckResults = healthCheckResults;
            Id = id;
            LoadBalancerId = loadBalancerId;
            Status = status;
        }
    }
}
