// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetIdentityAuthenticationPolicy
    {
        /// <summary>
        /// This data source provides details about a specific Authentication Policy resource in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Gets the authentication policy for the given tenancy. You must specify your tenantâ€™s OCID as the value for
        /// the compartment ID (remember that the tenancy is simply the root compartment).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAuthenticationPolicy = Output.Create(Oci.GetIdentityAuthenticationPolicy.InvokeAsync(new Oci.GetIdentityAuthenticationPolicyArgs
        ///         {
        ///             CompartmentId = @var.Tenancy_ocid,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIdentityAuthenticationPolicyResult> InvokeAsync(GetIdentityAuthenticationPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIdentityAuthenticationPolicyResult>("oci:index/getIdentityAuthenticationPolicy:GetIdentityAuthenticationPolicy", args ?? new GetIdentityAuthenticationPolicyArgs(), options.WithVersion());
    }


    public sealed class GetIdentityAuthenticationPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        public GetIdentityAuthenticationPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIdentityAuthenticationPolicyResult
    {
        /// <summary>
        /// Compartment OCID.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string Id;
        /// <summary>
        /// Network policy, Consists of a list of Network Source ids.
        /// </summary>
        public readonly Outputs.GetIdentityAuthenticationPolicyNetworkPolicyResult NetworkPolicy;
        /// <summary>
        /// Password policy, currently set for the given compartment.
        /// </summary>
        public readonly Outputs.GetIdentityAuthenticationPolicyPasswordPolicyResult PasswordPolicy;

        [OutputConstructor]
        private GetIdentityAuthenticationPolicyResult(
            string compartmentId,

            string id,

            Outputs.GetIdentityAuthenticationPolicyNetworkPolicyResult networkPolicy,

            Outputs.GetIdentityAuthenticationPolicyPasswordPolicyResult passwordPolicy)
        {
            CompartmentId = compartmentId;
            Id = id;
            NetworkPolicy = networkPolicy;
            PasswordPolicy = passwordPolicy;
        }
    }
}
