// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Network Source resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new network source in your tenancy.
//
// You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy
// is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)
// reside within the tenancy itself, unlike cloud resources such as compute instances, which typically
// reside within compartments inside the tenancy. For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You must also specify a *name* for the network source, which must be unique across all network sources in your
// tenancy, and cannot be changed.
// You can use this name or the OCID when writing policies that apply to the network source. For more information
// about policies, see [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm).
//
// You must also specify a *description* for the network source (although it can be an empty string). It does not
// have to be unique, and you can change it anytime with [UpdateNetworkSource](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/NetworkSource/UpdateNetworkSource).
// After your network resource is created, you can use it in policy to restrict access to only requests made from an allowed
// IP address specified in your network source. For more information, see [Managing Network Sources](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingnetworksources.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityNetworkSource(ctx, "testNetworkSource", &oci.IdentityNetworkSourceArgs{
// 			CompartmentId: pulumi.Any(_var.Tenancy_ocid),
// 			Description:   pulumi.Any(_var.Network_source_description),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			PublicSourceLists:  pulumi.Any(_var.Network_source_public_source_list),
// 			Services:           pulumi.Any(_var.Network_source_services),
// 			VirtualSourceLists: pulumi.Any(_var.Network_source_virtual_source_list),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NetworkSources can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityNetworkSource:IdentityNetworkSource test_network_source "id"
// ```
type IdentityNetworkSource struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayOutput `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayOutput `pulumi:"services"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists IdentityNetworkSourceVirtualSourceListArrayOutput `pulumi:"virtualSourceLists"`
}

// NewIdentityNetworkSource registers a new resource with the given unique name, arguments, and options.
func NewIdentityNetworkSource(ctx *pulumi.Context,
	name string, args *IdentityNetworkSourceArgs, opts ...pulumi.ResourceOption) (*IdentityNetworkSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	var resource IdentityNetworkSource
	err := ctx.RegisterResource("oci:index/identityNetworkSource:IdentityNetworkSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityNetworkSource gets an existing IdentityNetworkSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityNetworkSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityNetworkSourceState, opts ...pulumi.ResourceOption) (*IdentityNetworkSource, error) {
	var resource IdentityNetworkSource
	err := ctx.ReadResource("oci:index/identityNetworkSource:IdentityNetworkSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityNetworkSource resources.
type identityNetworkSourceState struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists []string `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services []string `pulumi:"services"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State *string `pulumi:"state"`
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists []IdentityNetworkSourceVirtualSourceList `pulumi:"virtualSourceLists"`
}

type IdentityNetworkSourceState struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayInput
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayInput
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State pulumi.StringPtrInput
	// Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists IdentityNetworkSourceVirtualSourceListArrayInput
}

func (IdentityNetworkSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityNetworkSourceState)(nil)).Elem()
}

type identityNetworkSourceArgs struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists []string `pulumi:"publicSourceLists"`
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services []string `pulumi:"services"`
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists []IdentityNetworkSourceVirtualSourceList `pulumi:"virtualSourceLists"`
}

// The set of arguments for constructing a IdentityNetworkSource resource.
type IdentityNetworkSourceArgs struct {
	// The OCID of the tenancy (root compartment) containing the network source object.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the network source during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the network source during creation. The name must be unique across all groups in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) A list of allowed public IP addresses and CIDR ranges.
	PublicSourceLists pulumi.StringArrayInput
	// (Updatable) A list of services allowed to make on-behalf-of requests. These requests can have different source IP addresses than those listed in the network source. Currently, only `all` and `none` are supported. The default is `all`.
	Services pulumi.StringArrayInput
	// (Updatable) A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
	VirtualSourceLists IdentityNetworkSourceVirtualSourceListArrayInput
}

func (IdentityNetworkSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityNetworkSourceArgs)(nil)).Elem()
}

type IdentityNetworkSourceInput interface {
	pulumi.Input

	ToIdentityNetworkSourceOutput() IdentityNetworkSourceOutput
	ToIdentityNetworkSourceOutputWithContext(ctx context.Context) IdentityNetworkSourceOutput
}

func (*IdentityNetworkSource) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkSource)(nil))
}

func (i *IdentityNetworkSource) ToIdentityNetworkSourceOutput() IdentityNetworkSourceOutput {
	return i.ToIdentityNetworkSourceOutputWithContext(context.Background())
}

func (i *IdentityNetworkSource) ToIdentityNetworkSourceOutputWithContext(ctx context.Context) IdentityNetworkSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkSourceOutput)
}

func (i *IdentityNetworkSource) ToIdentityNetworkSourcePtrOutput() IdentityNetworkSourcePtrOutput {
	return i.ToIdentityNetworkSourcePtrOutputWithContext(context.Background())
}

func (i *IdentityNetworkSource) ToIdentityNetworkSourcePtrOutputWithContext(ctx context.Context) IdentityNetworkSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkSourcePtrOutput)
}

type IdentityNetworkSourcePtrInput interface {
	pulumi.Input

	ToIdentityNetworkSourcePtrOutput() IdentityNetworkSourcePtrOutput
	ToIdentityNetworkSourcePtrOutputWithContext(ctx context.Context) IdentityNetworkSourcePtrOutput
}

type identityNetworkSourcePtrType IdentityNetworkSourceArgs

func (*identityNetworkSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNetworkSource)(nil))
}

func (i *identityNetworkSourcePtrType) ToIdentityNetworkSourcePtrOutput() IdentityNetworkSourcePtrOutput {
	return i.ToIdentityNetworkSourcePtrOutputWithContext(context.Background())
}

func (i *identityNetworkSourcePtrType) ToIdentityNetworkSourcePtrOutputWithContext(ctx context.Context) IdentityNetworkSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkSourcePtrOutput)
}

// IdentityNetworkSourceArrayInput is an input type that accepts IdentityNetworkSourceArray and IdentityNetworkSourceArrayOutput values.
// You can construct a concrete instance of `IdentityNetworkSourceArrayInput` via:
//
//          IdentityNetworkSourceArray{ IdentityNetworkSourceArgs{...} }
type IdentityNetworkSourceArrayInput interface {
	pulumi.Input

	ToIdentityNetworkSourceArrayOutput() IdentityNetworkSourceArrayOutput
	ToIdentityNetworkSourceArrayOutputWithContext(context.Context) IdentityNetworkSourceArrayOutput
}

type IdentityNetworkSourceArray []IdentityNetworkSourceInput

func (IdentityNetworkSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityNetworkSource)(nil)).Elem()
}

func (i IdentityNetworkSourceArray) ToIdentityNetworkSourceArrayOutput() IdentityNetworkSourceArrayOutput {
	return i.ToIdentityNetworkSourceArrayOutputWithContext(context.Background())
}

func (i IdentityNetworkSourceArray) ToIdentityNetworkSourceArrayOutputWithContext(ctx context.Context) IdentityNetworkSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkSourceArrayOutput)
}

// IdentityNetworkSourceMapInput is an input type that accepts IdentityNetworkSourceMap and IdentityNetworkSourceMapOutput values.
// You can construct a concrete instance of `IdentityNetworkSourceMapInput` via:
//
//          IdentityNetworkSourceMap{ "key": IdentityNetworkSourceArgs{...} }
type IdentityNetworkSourceMapInput interface {
	pulumi.Input

	ToIdentityNetworkSourceMapOutput() IdentityNetworkSourceMapOutput
	ToIdentityNetworkSourceMapOutputWithContext(context.Context) IdentityNetworkSourceMapOutput
}

type IdentityNetworkSourceMap map[string]IdentityNetworkSourceInput

func (IdentityNetworkSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityNetworkSource)(nil)).Elem()
}

func (i IdentityNetworkSourceMap) ToIdentityNetworkSourceMapOutput() IdentityNetworkSourceMapOutput {
	return i.ToIdentityNetworkSourceMapOutputWithContext(context.Background())
}

func (i IdentityNetworkSourceMap) ToIdentityNetworkSourceMapOutputWithContext(ctx context.Context) IdentityNetworkSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityNetworkSourceMapOutput)
}

type IdentityNetworkSourceOutput struct {
	*pulumi.OutputState
}

func (IdentityNetworkSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityNetworkSource)(nil))
}

func (o IdentityNetworkSourceOutput) ToIdentityNetworkSourceOutput() IdentityNetworkSourceOutput {
	return o
}

func (o IdentityNetworkSourceOutput) ToIdentityNetworkSourceOutputWithContext(ctx context.Context) IdentityNetworkSourceOutput {
	return o
}

func (o IdentityNetworkSourceOutput) ToIdentityNetworkSourcePtrOutput() IdentityNetworkSourcePtrOutput {
	return o.ToIdentityNetworkSourcePtrOutputWithContext(context.Background())
}

func (o IdentityNetworkSourceOutput) ToIdentityNetworkSourcePtrOutputWithContext(ctx context.Context) IdentityNetworkSourcePtrOutput {
	return o.ApplyT(func(v IdentityNetworkSource) *IdentityNetworkSource {
		return &v
	}).(IdentityNetworkSourcePtrOutput)
}

type IdentityNetworkSourcePtrOutput struct {
	*pulumi.OutputState
}

func (IdentityNetworkSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityNetworkSource)(nil))
}

func (o IdentityNetworkSourcePtrOutput) ToIdentityNetworkSourcePtrOutput() IdentityNetworkSourcePtrOutput {
	return o
}

func (o IdentityNetworkSourcePtrOutput) ToIdentityNetworkSourcePtrOutputWithContext(ctx context.Context) IdentityNetworkSourcePtrOutput {
	return o
}

type IdentityNetworkSourceArrayOutput struct{ *pulumi.OutputState }

func (IdentityNetworkSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityNetworkSource)(nil))
}

func (o IdentityNetworkSourceArrayOutput) ToIdentityNetworkSourceArrayOutput() IdentityNetworkSourceArrayOutput {
	return o
}

func (o IdentityNetworkSourceArrayOutput) ToIdentityNetworkSourceArrayOutputWithContext(ctx context.Context) IdentityNetworkSourceArrayOutput {
	return o
}

func (o IdentityNetworkSourceArrayOutput) Index(i pulumi.IntInput) IdentityNetworkSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityNetworkSource {
		return vs[0].([]IdentityNetworkSource)[vs[1].(int)]
	}).(IdentityNetworkSourceOutput)
}

type IdentityNetworkSourceMapOutput struct{ *pulumi.OutputState }

func (IdentityNetworkSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityNetworkSource)(nil))
}

func (o IdentityNetworkSourceMapOutput) ToIdentityNetworkSourceMapOutput() IdentityNetworkSourceMapOutput {
	return o
}

func (o IdentityNetworkSourceMapOutput) ToIdentityNetworkSourceMapOutputWithContext(ctx context.Context) IdentityNetworkSourceMapOutput {
	return o
}

func (o IdentityNetworkSourceMapOutput) MapIndex(k pulumi.StringInput) IdentityNetworkSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityNetworkSource {
		return vs[0].(map[string]IdentityNetworkSource)[vs[1].(string)]
	}).(IdentityNetworkSourceOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityNetworkSourceOutput{})
	pulumi.RegisterOutputType(IdentityNetworkSourcePtrOutput{})
	pulumi.RegisterOutputType(IdentityNetworkSourceArrayOutput{})
	pulumi.RegisterOutputType(IdentityNetworkSourceMapOutput{})
}
