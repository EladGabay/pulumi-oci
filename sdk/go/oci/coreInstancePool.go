// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Instance Pool resource in Oracle Cloud Infrastructure Core service.
//
// Create an instance pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreInstancePool(ctx, "testInstancePool", &oci.CoreInstancePoolArgs{
// 			CompartmentId:           pulumi.Any(_var.Compartment_id),
// 			InstanceConfigurationId: pulumi.Any(oci_core_instance_configuration.Test_instance_configuration.Id),
// 			PlacementConfigurations: CoreInstancePoolPlacementConfigurationArray{
// 				&CoreInstancePoolPlacementConfigurationArgs{
// 					AvailabilityDomain: pulumi.Any(_var.Instance_pool_placement_configurations_availability_domain),
// 					PrimarySubnetId:    pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 					FaultDomains:       pulumi.Any(_var.Instance_pool_placement_configurations_fault_domains),
// 					SecondaryVnicSubnets: CoreInstancePoolPlacementConfigurationSecondaryVnicSubnetArray{
// 						&CoreInstancePoolPlacementConfigurationSecondaryVnicSubnetArgs{
// 							SubnetId:    pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 							DisplayName: pulumi.Any(_var.Instance_pool_placement_configurations_secondary_vnic_subnets_display_name),
// 						},
// 					},
// 				},
// 			},
// 			Size: pulumi.Any(_var.Instance_pool_size),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Instance_pool_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			LoadBalancers: CoreInstancePoolLoadBalancerArray{
// 				&CoreInstancePoolLoadBalancerArgs{
// 					BackendSetName: pulumi.Any(oci_load_balancer_backend_set.Test_backend_set.Name),
// 					LoadBalancerId: pulumi.Any(oci_load_balancer_load_balancer.Test_load_balancer.Id),
// 					Port:           pulumi.Any(_var.Instance_pool_load_balancers_port),
// 					VnicSelection:  pulumi.Any(_var.Instance_pool_load_balancers_vnic_selection),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// InstancePools can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreInstancePool:CoreInstancePool test_instance_pool "id"
// ```
type CoreInstancePool struct {
	pulumi.CustomResourceState

	// The number of actual instances in the instance pool on the cloud. This attribute will be different when instance pool is used along with autoScaling Configuration.
	ActualSize pulumi.IntOutput `pulumi:"actualSize"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
	InstanceConfigurationId pulumi.StringOutput `pulumi:"instanceConfigurationId"`
	// The load balancers to attach to the instance pool.
	LoadBalancers CoreInstancePoolLoadBalancerArrayOutput `pulumi:"loadBalancers"`
	// (Updatable) The placement configurations for the instance pool. Provide one placement configuration for each availability domain.
	PlacementConfigurations CoreInstancePoolPlacementConfigurationArrayOutput `pulumi:"placementConfigurations"`
	// (Updatable) The number of instances that should be in the instance pool. Modifying this value will override the size of the instance pool. If the instance pool is linked with autoscaling configuration, autoscaling configuration could resize the instance pool at a later point. The instance pool's actual size may differ from the configured size if it is associated with an autoscaling configuration. For the actual size of the instance pool, refer to the `actualSize` attribute.
	Size pulumi.IntOutput `pulumi:"size"`
	// (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the instance pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCoreInstancePool registers a new resource with the given unique name, arguments, and options.
func NewCoreInstancePool(ctx *pulumi.Context,
	name string, args *CoreInstancePoolArgs, opts ...pulumi.ResourceOption) (*CoreInstancePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.InstanceConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceConfigurationId'")
	}
	if args.PlacementConfigurations == nil {
		return nil, errors.New("invalid value for required argument 'PlacementConfigurations'")
	}
	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	var resource CoreInstancePool
	err := ctx.RegisterResource("oci:index/coreInstancePool:CoreInstancePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreInstancePool gets an existing CoreInstancePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreInstancePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreInstancePoolState, opts ...pulumi.ResourceOption) (*CoreInstancePool, error) {
	var resource CoreInstancePool
	err := ctx.ReadResource("oci:index/coreInstancePool:CoreInstancePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreInstancePool resources.
type coreInstancePoolState struct {
	// The number of actual instances in the instance pool on the cloud. This attribute will be different when instance pool is used along with autoScaling Configuration.
	ActualSize *int `pulumi:"actualSize"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
	InstanceConfigurationId *string `pulumi:"instanceConfigurationId"`
	// The load balancers to attach to the instance pool.
	LoadBalancers []CoreInstancePoolLoadBalancer `pulumi:"loadBalancers"`
	// (Updatable) The placement configurations for the instance pool. Provide one placement configuration for each availability domain.
	PlacementConfigurations []CoreInstancePoolPlacementConfiguration `pulumi:"placementConfigurations"`
	// (Updatable) The number of instances that should be in the instance pool. Modifying this value will override the size of the instance pool. If the instance pool is linked with autoscaling configuration, autoscaling configuration could resize the instance pool at a later point. The instance pool's actual size may differ from the configured size if it is associated with an autoscaling configuration. For the actual size of the instance pool, refer to the `actualSize` attribute.
	Size *int `pulumi:"size"`
	// (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
	State *string `pulumi:"state"`
	// The date and time the instance pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CoreInstancePoolState struct {
	// The number of actual instances in the instance pool on the cloud. This attribute will be different when instance pool is used along with autoScaling Configuration.
	ActualSize pulumi.IntPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
	InstanceConfigurationId pulumi.StringPtrInput
	// The load balancers to attach to the instance pool.
	LoadBalancers CoreInstancePoolLoadBalancerArrayInput
	// (Updatable) The placement configurations for the instance pool. Provide one placement configuration for each availability domain.
	PlacementConfigurations CoreInstancePoolPlacementConfigurationArrayInput
	// (Updatable) The number of instances that should be in the instance pool. Modifying this value will override the size of the instance pool. If the instance pool is linked with autoscaling configuration, autoscaling configuration could resize the instance pool at a later point. The instance pool's actual size may differ from the configured size if it is associated with an autoscaling configuration. For the actual size of the instance pool, refer to the `actualSize` attribute.
	Size pulumi.IntPtrInput
	// (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
	State pulumi.StringPtrInput
	// The date and time the instance pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CoreInstancePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreInstancePoolState)(nil)).Elem()
}

type coreInstancePoolArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// The load balancers to attach to the instance pool.
	LoadBalancers []CoreInstancePoolLoadBalancer `pulumi:"loadBalancers"`
	// (Updatable) The placement configurations for the instance pool. Provide one placement configuration for each availability domain.
	PlacementConfigurations []CoreInstancePoolPlacementConfiguration `pulumi:"placementConfigurations"`
	// (Updatable) The number of instances that should be in the instance pool. Modifying this value will override the size of the instance pool. If the instance pool is linked with autoscaling configuration, autoscaling configuration could resize the instance pool at a later point. The instance pool's actual size may differ from the configured size if it is associated with an autoscaling configuration. For the actual size of the instance pool, refer to the `actualSize` attribute.
	Size int `pulumi:"size"`
	// (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a CoreInstancePool resource.
type CoreInstancePoolArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
	InstanceConfigurationId pulumi.StringInput
	// The load balancers to attach to the instance pool.
	LoadBalancers CoreInstancePoolLoadBalancerArrayInput
	// (Updatable) The placement configurations for the instance pool. Provide one placement configuration for each availability domain.
	PlacementConfigurations CoreInstancePoolPlacementConfigurationArrayInput
	// (Updatable) The number of instances that should be in the instance pool. Modifying this value will override the size of the instance pool. If the instance pool is linked with autoscaling configuration, autoscaling configuration could resize the instance pool at a later point. The instance pool's actual size may differ from the configured size if it is associated with an autoscaling configuration. For the actual size of the instance pool, refer to the `actualSize` attribute.
	Size pulumi.IntInput
	// (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
	State pulumi.StringPtrInput
}

func (CoreInstancePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreInstancePoolArgs)(nil)).Elem()
}

type CoreInstancePoolInput interface {
	pulumi.Input

	ToCoreInstancePoolOutput() CoreInstancePoolOutput
	ToCoreInstancePoolOutputWithContext(ctx context.Context) CoreInstancePoolOutput
}

func (*CoreInstancePool) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreInstancePool)(nil))
}

func (i *CoreInstancePool) ToCoreInstancePoolOutput() CoreInstancePoolOutput {
	return i.ToCoreInstancePoolOutputWithContext(context.Background())
}

func (i *CoreInstancePool) ToCoreInstancePoolOutputWithContext(ctx context.Context) CoreInstancePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreInstancePoolOutput)
}

func (i *CoreInstancePool) ToCoreInstancePoolPtrOutput() CoreInstancePoolPtrOutput {
	return i.ToCoreInstancePoolPtrOutputWithContext(context.Background())
}

func (i *CoreInstancePool) ToCoreInstancePoolPtrOutputWithContext(ctx context.Context) CoreInstancePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreInstancePoolPtrOutput)
}

type CoreInstancePoolPtrInput interface {
	pulumi.Input

	ToCoreInstancePoolPtrOutput() CoreInstancePoolPtrOutput
	ToCoreInstancePoolPtrOutputWithContext(ctx context.Context) CoreInstancePoolPtrOutput
}

type coreInstancePoolPtrType CoreInstancePoolArgs

func (*coreInstancePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreInstancePool)(nil))
}

func (i *coreInstancePoolPtrType) ToCoreInstancePoolPtrOutput() CoreInstancePoolPtrOutput {
	return i.ToCoreInstancePoolPtrOutputWithContext(context.Background())
}

func (i *coreInstancePoolPtrType) ToCoreInstancePoolPtrOutputWithContext(ctx context.Context) CoreInstancePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreInstancePoolPtrOutput)
}

// CoreInstancePoolArrayInput is an input type that accepts CoreInstancePoolArray and CoreInstancePoolArrayOutput values.
// You can construct a concrete instance of `CoreInstancePoolArrayInput` via:
//
//          CoreInstancePoolArray{ CoreInstancePoolArgs{...} }
type CoreInstancePoolArrayInput interface {
	pulumi.Input

	ToCoreInstancePoolArrayOutput() CoreInstancePoolArrayOutput
	ToCoreInstancePoolArrayOutputWithContext(context.Context) CoreInstancePoolArrayOutput
}

type CoreInstancePoolArray []CoreInstancePoolInput

func (CoreInstancePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreInstancePool)(nil)).Elem()
}

func (i CoreInstancePoolArray) ToCoreInstancePoolArrayOutput() CoreInstancePoolArrayOutput {
	return i.ToCoreInstancePoolArrayOutputWithContext(context.Background())
}

func (i CoreInstancePoolArray) ToCoreInstancePoolArrayOutputWithContext(ctx context.Context) CoreInstancePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreInstancePoolArrayOutput)
}

// CoreInstancePoolMapInput is an input type that accepts CoreInstancePoolMap and CoreInstancePoolMapOutput values.
// You can construct a concrete instance of `CoreInstancePoolMapInput` via:
//
//          CoreInstancePoolMap{ "key": CoreInstancePoolArgs{...} }
type CoreInstancePoolMapInput interface {
	pulumi.Input

	ToCoreInstancePoolMapOutput() CoreInstancePoolMapOutput
	ToCoreInstancePoolMapOutputWithContext(context.Context) CoreInstancePoolMapOutput
}

type CoreInstancePoolMap map[string]CoreInstancePoolInput

func (CoreInstancePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreInstancePool)(nil)).Elem()
}

func (i CoreInstancePoolMap) ToCoreInstancePoolMapOutput() CoreInstancePoolMapOutput {
	return i.ToCoreInstancePoolMapOutputWithContext(context.Background())
}

func (i CoreInstancePoolMap) ToCoreInstancePoolMapOutputWithContext(ctx context.Context) CoreInstancePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreInstancePoolMapOutput)
}

type CoreInstancePoolOutput struct {
	*pulumi.OutputState
}

func (CoreInstancePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreInstancePool)(nil))
}

func (o CoreInstancePoolOutput) ToCoreInstancePoolOutput() CoreInstancePoolOutput {
	return o
}

func (o CoreInstancePoolOutput) ToCoreInstancePoolOutputWithContext(ctx context.Context) CoreInstancePoolOutput {
	return o
}

func (o CoreInstancePoolOutput) ToCoreInstancePoolPtrOutput() CoreInstancePoolPtrOutput {
	return o.ToCoreInstancePoolPtrOutputWithContext(context.Background())
}

func (o CoreInstancePoolOutput) ToCoreInstancePoolPtrOutputWithContext(ctx context.Context) CoreInstancePoolPtrOutput {
	return o.ApplyT(func(v CoreInstancePool) *CoreInstancePool {
		return &v
	}).(CoreInstancePoolPtrOutput)
}

type CoreInstancePoolPtrOutput struct {
	*pulumi.OutputState
}

func (CoreInstancePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreInstancePool)(nil))
}

func (o CoreInstancePoolPtrOutput) ToCoreInstancePoolPtrOutput() CoreInstancePoolPtrOutput {
	return o
}

func (o CoreInstancePoolPtrOutput) ToCoreInstancePoolPtrOutputWithContext(ctx context.Context) CoreInstancePoolPtrOutput {
	return o
}

type CoreInstancePoolArrayOutput struct{ *pulumi.OutputState }

func (CoreInstancePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreInstancePool)(nil))
}

func (o CoreInstancePoolArrayOutput) ToCoreInstancePoolArrayOutput() CoreInstancePoolArrayOutput {
	return o
}

func (o CoreInstancePoolArrayOutput) ToCoreInstancePoolArrayOutputWithContext(ctx context.Context) CoreInstancePoolArrayOutput {
	return o
}

func (o CoreInstancePoolArrayOutput) Index(i pulumi.IntInput) CoreInstancePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreInstancePool {
		return vs[0].([]CoreInstancePool)[vs[1].(int)]
	}).(CoreInstancePoolOutput)
}

type CoreInstancePoolMapOutput struct{ *pulumi.OutputState }

func (CoreInstancePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreInstancePool)(nil))
}

func (o CoreInstancePoolMapOutput) ToCoreInstancePoolMapOutput() CoreInstancePoolMapOutput {
	return o
}

func (o CoreInstancePoolMapOutput) ToCoreInstancePoolMapOutputWithContext(ctx context.Context) CoreInstancePoolMapOutput {
	return o
}

func (o CoreInstancePoolMapOutput) MapIndex(k pulumi.StringInput) CoreInstancePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreInstancePool {
		return vs[0].(map[string]CoreInstancePool)[vs[1].(string)]
	}).(CoreInstancePoolOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreInstancePoolOutput{})
	pulumi.RegisterOutputType(CoreInstancePoolPtrOutput{})
	pulumi.RegisterOutputType(CoreInstancePoolArrayOutput{})
	pulumi.RegisterOutputType(CoreInstancePoolMapOutput{})
}
