// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Email Domain resource in Oracle Cloud Infrastructure Email service.
//
// Creates a new email domain. Avoid entering confidential information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewEmailEmailDomain(ctx, "testEmailDomain", &oci.EmailEmailDomainArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Email_domain_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// EmailDomains can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/emailEmailDomain:EmailEmailDomain test_email_domain "id"
// ```
type EmailEmailDomain struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId pulumi.StringOutput `pulumi:"activeDkimId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolOutput `pulumi:"isSpf"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	Name pulumi.StringOutput `pulumi:"name"`
	// The current state of the email domain.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewEmailEmailDomain registers a new resource with the given unique name, arguments, and options.
func NewEmailEmailDomain(ctx *pulumi.Context,
	name string, args *EmailEmailDomainArgs, opts ...pulumi.ResourceOption) (*EmailEmailDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource EmailEmailDomain
	err := ctx.RegisterResource("oci:index/emailEmailDomain:EmailEmailDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailEmailDomain gets an existing EmailEmailDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailEmailDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailEmailDomainState, opts ...pulumi.ResourceOption) (*EmailEmailDomain, error) {
	var resource EmailEmailDomain
	err := ctx.ReadResource("oci:index/emailEmailDomain:EmailEmailDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailEmailDomain resources.
type emailEmailDomainState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId *string `pulumi:"activeDkimId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf *bool `pulumi:"isSpf"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	Name *string `pulumi:"name"`
	// The current state of the email domain.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type EmailEmailDomainState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolPtrInput
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	Name pulumi.StringPtrInput
	// The current state of the email domain.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringPtrInput
}

func (EmailEmailDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailEmailDomainState)(nil)).Elem()
}

type emailEmailDomainArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a EmailEmailDomain resource.
type EmailEmailDomainArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	Name pulumi.StringPtrInput
}

func (EmailEmailDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailEmailDomainArgs)(nil)).Elem()
}

type EmailEmailDomainInput interface {
	pulumi.Input

	ToEmailEmailDomainOutput() EmailEmailDomainOutput
	ToEmailEmailDomainOutputWithContext(ctx context.Context) EmailEmailDomainOutput
}

func (*EmailEmailDomain) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailEmailDomain)(nil))
}

func (i *EmailEmailDomain) ToEmailEmailDomainOutput() EmailEmailDomainOutput {
	return i.ToEmailEmailDomainOutputWithContext(context.Background())
}

func (i *EmailEmailDomain) ToEmailEmailDomainOutputWithContext(ctx context.Context) EmailEmailDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailEmailDomainOutput)
}

func (i *EmailEmailDomain) ToEmailEmailDomainPtrOutput() EmailEmailDomainPtrOutput {
	return i.ToEmailEmailDomainPtrOutputWithContext(context.Background())
}

func (i *EmailEmailDomain) ToEmailEmailDomainPtrOutputWithContext(ctx context.Context) EmailEmailDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailEmailDomainPtrOutput)
}

type EmailEmailDomainPtrInput interface {
	pulumi.Input

	ToEmailEmailDomainPtrOutput() EmailEmailDomainPtrOutput
	ToEmailEmailDomainPtrOutputWithContext(ctx context.Context) EmailEmailDomainPtrOutput
}

type emailEmailDomainPtrType EmailEmailDomainArgs

func (*emailEmailDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailEmailDomain)(nil))
}

func (i *emailEmailDomainPtrType) ToEmailEmailDomainPtrOutput() EmailEmailDomainPtrOutput {
	return i.ToEmailEmailDomainPtrOutputWithContext(context.Background())
}

func (i *emailEmailDomainPtrType) ToEmailEmailDomainPtrOutputWithContext(ctx context.Context) EmailEmailDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailEmailDomainPtrOutput)
}

// EmailEmailDomainArrayInput is an input type that accepts EmailEmailDomainArray and EmailEmailDomainArrayOutput values.
// You can construct a concrete instance of `EmailEmailDomainArrayInput` via:
//
//          EmailEmailDomainArray{ EmailEmailDomainArgs{...} }
type EmailEmailDomainArrayInput interface {
	pulumi.Input

	ToEmailEmailDomainArrayOutput() EmailEmailDomainArrayOutput
	ToEmailEmailDomainArrayOutputWithContext(context.Context) EmailEmailDomainArrayOutput
}

type EmailEmailDomainArray []EmailEmailDomainInput

func (EmailEmailDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailEmailDomain)(nil)).Elem()
}

func (i EmailEmailDomainArray) ToEmailEmailDomainArrayOutput() EmailEmailDomainArrayOutput {
	return i.ToEmailEmailDomainArrayOutputWithContext(context.Background())
}

func (i EmailEmailDomainArray) ToEmailEmailDomainArrayOutputWithContext(ctx context.Context) EmailEmailDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailEmailDomainArrayOutput)
}

// EmailEmailDomainMapInput is an input type that accepts EmailEmailDomainMap and EmailEmailDomainMapOutput values.
// You can construct a concrete instance of `EmailEmailDomainMapInput` via:
//
//          EmailEmailDomainMap{ "key": EmailEmailDomainArgs{...} }
type EmailEmailDomainMapInput interface {
	pulumi.Input

	ToEmailEmailDomainMapOutput() EmailEmailDomainMapOutput
	ToEmailEmailDomainMapOutputWithContext(context.Context) EmailEmailDomainMapOutput
}

type EmailEmailDomainMap map[string]EmailEmailDomainInput

func (EmailEmailDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailEmailDomain)(nil)).Elem()
}

func (i EmailEmailDomainMap) ToEmailEmailDomainMapOutput() EmailEmailDomainMapOutput {
	return i.ToEmailEmailDomainMapOutputWithContext(context.Background())
}

func (i EmailEmailDomainMap) ToEmailEmailDomainMapOutputWithContext(ctx context.Context) EmailEmailDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailEmailDomainMapOutput)
}

type EmailEmailDomainOutput struct {
	*pulumi.OutputState
}

func (EmailEmailDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailEmailDomain)(nil))
}

func (o EmailEmailDomainOutput) ToEmailEmailDomainOutput() EmailEmailDomainOutput {
	return o
}

func (o EmailEmailDomainOutput) ToEmailEmailDomainOutputWithContext(ctx context.Context) EmailEmailDomainOutput {
	return o
}

func (o EmailEmailDomainOutput) ToEmailEmailDomainPtrOutput() EmailEmailDomainPtrOutput {
	return o.ToEmailEmailDomainPtrOutputWithContext(context.Background())
}

func (o EmailEmailDomainOutput) ToEmailEmailDomainPtrOutputWithContext(ctx context.Context) EmailEmailDomainPtrOutput {
	return o.ApplyT(func(v EmailEmailDomain) *EmailEmailDomain {
		return &v
	}).(EmailEmailDomainPtrOutput)
}

type EmailEmailDomainPtrOutput struct {
	*pulumi.OutputState
}

func (EmailEmailDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailEmailDomain)(nil))
}

func (o EmailEmailDomainPtrOutput) ToEmailEmailDomainPtrOutput() EmailEmailDomainPtrOutput {
	return o
}

func (o EmailEmailDomainPtrOutput) ToEmailEmailDomainPtrOutputWithContext(ctx context.Context) EmailEmailDomainPtrOutput {
	return o
}

type EmailEmailDomainArrayOutput struct{ *pulumi.OutputState }

func (EmailEmailDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailEmailDomain)(nil))
}

func (o EmailEmailDomainArrayOutput) ToEmailEmailDomainArrayOutput() EmailEmailDomainArrayOutput {
	return o
}

func (o EmailEmailDomainArrayOutput) ToEmailEmailDomainArrayOutputWithContext(ctx context.Context) EmailEmailDomainArrayOutput {
	return o
}

func (o EmailEmailDomainArrayOutput) Index(i pulumi.IntInput) EmailEmailDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailEmailDomain {
		return vs[0].([]EmailEmailDomain)[vs[1].(int)]
	}).(EmailEmailDomainOutput)
}

type EmailEmailDomainMapOutput struct{ *pulumi.OutputState }

func (EmailEmailDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EmailEmailDomain)(nil))
}

func (o EmailEmailDomainMapOutput) ToEmailEmailDomainMapOutput() EmailEmailDomainMapOutput {
	return o
}

func (o EmailEmailDomainMapOutput) ToEmailEmailDomainMapOutputWithContext(ctx context.Context) EmailEmailDomainMapOutput {
	return o
}

func (o EmailEmailDomainMapOutput) MapIndex(k pulumi.StringInput) EmailEmailDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EmailEmailDomain {
		return vs[0].(map[string]EmailEmailDomain)[vs[1].(string)]
	}).(EmailEmailDomainOutput)
}

func init() {
	pulumi.RegisterOutputType(EmailEmailDomainOutput{})
	pulumi.RegisterOutputType(EmailEmailDomainPtrOutput{})
	pulumi.RegisterOutputType(EmailEmailDomainArrayOutput{})
	pulumi.RegisterOutputType(EmailEmailDomainMapOutput{})
}
