// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tag resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new tag in the specified tag namespace.
//
// The tag requires either the OCID or the name of the tag namespace that will contain this
// tag definition.
//
// You must specify a *name* for the tag, which must be unique across all tags in the tag namespace
// and cannot be changed. The name can contain any ASCII character except the space (_) or period (.) characters.
// Names are case insensitive. That means, for example, "myTag" and "mytag" are not allowed in the same namespace.
// If you specify a name that's already in use in the tag namespace, a 409 error is returned.
//
// The tag must have a *description*. It does not have to be unique, and you can change it with
// [UpdateTag](https://docs.cloud.oracle.com/iaas/api/#/en/identity/latest/Tag/UpdateTag).
//
// The tag must have a value type, which is specified with a validator. Tags can use either a
// static value or a list of possible values. Static values are entered by a user applying the tag
// to a resource. Lists are created by you and the user must apply a value from the list. Lists
// are validiated.
//
// * If no `validator` is set, the user applying the tag to a resource can type in a static
//   value or leave the tag value empty.
// * If a `validator` is set, the user applying the tag to a resource must select from a list
//   of values that you supply with [EnumTagDefinitionValidator](https://docs.cloud.oracle.com/iaas/api/#/en/identity/latest/datatypes/EnumTagDefinitionValidator).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityTag(ctx, "testTag", &oci.IdentityTagArgs{
// 			Description:    pulumi.Any(_var.Tag_description),
// 			TagNamespaceId: pulumi.Any(oci_identity_tag_namespace.Test_tag_namespace.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsCostTracking: pulumi.Any(_var.Tag_is_cost_tracking),
// 			Validator: &IdentityTagValidatorArgs{
// 				ValidatorType: pulumi.Any(_var.Tag_validator_validator_type),
// 				Values:        pulumi.Any(_var.Tag_validator_values),
// 			},
// 			IsRetired: pulumi.Bool(false),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Tags can be imported using the `tagNamespaceId` and `tagName`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityTag:IdentityTag test_tag "tagNamespaces/{tagNamespaceId}/tags/{tagName}"
// ```
type IdentityTag struct {
	pulumi.CustomResourceState

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag during creation.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Indicates whether the tag is enabled for cost tracking.
	IsCostTracking pulumi.BoolOutput `pulumi:"isCostTracking"`
	// (Updatable) Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolOutput `pulumi:"isRetired"`
	// The name you assign to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId pulumi.StringOutput `pulumi:"tagNamespaceId"`
	// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validator IdentityTagValidatorPtrOutput `pulumi:"validator"`
}

// NewIdentityTag registers a new resource with the given unique name, arguments, and options.
func NewIdentityTag(ctx *pulumi.Context,
	name string, args *IdentityTagArgs, opts ...pulumi.ResourceOption) (*IdentityTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.TagNamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'TagNamespaceId'")
	}
	var resource IdentityTag
	err := ctx.RegisterResource("oci:index/identityTag:IdentityTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityTag gets an existing IdentityTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityTagState, opts ...pulumi.ResourceOption) (*IdentityTag, error) {
	var resource IdentityTag
	err := ctx.ReadResource("oci:index/identityTag:IdentityTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityTag resources.
type identityTagState struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag during creation.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Indicates whether the tag is enabled for cost tracking.
	IsCostTracking *bool `pulumi:"isCostTracking"`
	// (Updatable) Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name *string `pulumi:"name"`
	// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
	State *string `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId *string `pulumi:"tagNamespaceId"`
	// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validator *IdentityTagValidator `pulumi:"validator"`
}

type IdentityTagState struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag during creation.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Indicates whether the tag is enabled for cost tracking.
	IsCostTracking pulumi.BoolPtrInput
	// (Updatable) Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name pulumi.StringPtrInput
	// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
	State pulumi.StringPtrInput
	// The OCID of the tag namespace.
	TagNamespaceId pulumi.StringPtrInput
	// Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validator IdentityTagValidatorPtrInput
}

func (IdentityTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagState)(nil)).Elem()
}

type identityTagArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag during creation.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Indicates whether the tag is enabled for cost tracking.
	IsCostTracking *bool `pulumi:"isCostTracking"`
	// (Updatable) Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name *string `pulumi:"name"`
	// The OCID of the tag namespace.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
	// (Updatable) Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validator *IdentityTagValidator `pulumi:"validator"`
}

// The set of arguments for constructing a IdentityTag resource.
type IdentityTagArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag during creation.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Indicates whether the tag is enabled for cost tracking.
	IsCostTracking pulumi.BoolPtrInput
	// (Updatable) Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
	Name pulumi.StringPtrInput
	// The OCID of the tag namespace.
	TagNamespaceId pulumi.StringInput
	// (Updatable) Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
	Validator IdentityTagValidatorPtrInput
}

func (IdentityTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagArgs)(nil)).Elem()
}

type IdentityTagInput interface {
	pulumi.Input

	ToIdentityTagOutput() IdentityTagOutput
	ToIdentityTagOutputWithContext(ctx context.Context) IdentityTagOutput
}

func (*IdentityTag) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTag)(nil))
}

func (i *IdentityTag) ToIdentityTagOutput() IdentityTagOutput {
	return i.ToIdentityTagOutputWithContext(context.Background())
}

func (i *IdentityTag) ToIdentityTagOutputWithContext(ctx context.Context) IdentityTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagOutput)
}

func (i *IdentityTag) ToIdentityTagPtrOutput() IdentityTagPtrOutput {
	return i.ToIdentityTagPtrOutputWithContext(context.Background())
}

func (i *IdentityTag) ToIdentityTagPtrOutputWithContext(ctx context.Context) IdentityTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagPtrOutput)
}

type IdentityTagPtrInput interface {
	pulumi.Input

	ToIdentityTagPtrOutput() IdentityTagPtrOutput
	ToIdentityTagPtrOutputWithContext(ctx context.Context) IdentityTagPtrOutput
}

type identityTagPtrType IdentityTagArgs

func (*identityTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTag)(nil))
}

func (i *identityTagPtrType) ToIdentityTagPtrOutput() IdentityTagPtrOutput {
	return i.ToIdentityTagPtrOutputWithContext(context.Background())
}

func (i *identityTagPtrType) ToIdentityTagPtrOutputWithContext(ctx context.Context) IdentityTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagPtrOutput)
}

// IdentityTagArrayInput is an input type that accepts IdentityTagArray and IdentityTagArrayOutput values.
// You can construct a concrete instance of `IdentityTagArrayInput` via:
//
//          IdentityTagArray{ IdentityTagArgs{...} }
type IdentityTagArrayInput interface {
	pulumi.Input

	ToIdentityTagArrayOutput() IdentityTagArrayOutput
	ToIdentityTagArrayOutputWithContext(context.Context) IdentityTagArrayOutput
}

type IdentityTagArray []IdentityTagInput

func (IdentityTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityTag)(nil)).Elem()
}

func (i IdentityTagArray) ToIdentityTagArrayOutput() IdentityTagArrayOutput {
	return i.ToIdentityTagArrayOutputWithContext(context.Background())
}

func (i IdentityTagArray) ToIdentityTagArrayOutputWithContext(ctx context.Context) IdentityTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagArrayOutput)
}

// IdentityTagMapInput is an input type that accepts IdentityTagMap and IdentityTagMapOutput values.
// You can construct a concrete instance of `IdentityTagMapInput` via:
//
//          IdentityTagMap{ "key": IdentityTagArgs{...} }
type IdentityTagMapInput interface {
	pulumi.Input

	ToIdentityTagMapOutput() IdentityTagMapOutput
	ToIdentityTagMapOutputWithContext(context.Context) IdentityTagMapOutput
}

type IdentityTagMap map[string]IdentityTagInput

func (IdentityTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityTag)(nil)).Elem()
}

func (i IdentityTagMap) ToIdentityTagMapOutput() IdentityTagMapOutput {
	return i.ToIdentityTagMapOutputWithContext(context.Background())
}

func (i IdentityTagMap) ToIdentityTagMapOutputWithContext(ctx context.Context) IdentityTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagMapOutput)
}

type IdentityTagOutput struct {
	*pulumi.OutputState
}

func (IdentityTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTag)(nil))
}

func (o IdentityTagOutput) ToIdentityTagOutput() IdentityTagOutput {
	return o
}

func (o IdentityTagOutput) ToIdentityTagOutputWithContext(ctx context.Context) IdentityTagOutput {
	return o
}

func (o IdentityTagOutput) ToIdentityTagPtrOutput() IdentityTagPtrOutput {
	return o.ToIdentityTagPtrOutputWithContext(context.Background())
}

func (o IdentityTagOutput) ToIdentityTagPtrOutputWithContext(ctx context.Context) IdentityTagPtrOutput {
	return o.ApplyT(func(v IdentityTag) *IdentityTag {
		return &v
	}).(IdentityTagPtrOutput)
}

type IdentityTagPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTag)(nil))
}

func (o IdentityTagPtrOutput) ToIdentityTagPtrOutput() IdentityTagPtrOutput {
	return o
}

func (o IdentityTagPtrOutput) ToIdentityTagPtrOutputWithContext(ctx context.Context) IdentityTagPtrOutput {
	return o
}

type IdentityTagArrayOutput struct{ *pulumi.OutputState }

func (IdentityTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityTag)(nil))
}

func (o IdentityTagArrayOutput) ToIdentityTagArrayOutput() IdentityTagArrayOutput {
	return o
}

func (o IdentityTagArrayOutput) ToIdentityTagArrayOutputWithContext(ctx context.Context) IdentityTagArrayOutput {
	return o
}

func (o IdentityTagArrayOutput) Index(i pulumi.IntInput) IdentityTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityTag {
		return vs[0].([]IdentityTag)[vs[1].(int)]
	}).(IdentityTagOutput)
}

type IdentityTagMapOutput struct{ *pulumi.OutputState }

func (IdentityTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityTag)(nil))
}

func (o IdentityTagMapOutput) ToIdentityTagMapOutput() IdentityTagMapOutput {
	return o
}

func (o IdentityTagMapOutput) ToIdentityTagMapOutputWithContext(ctx context.Context) IdentityTagMapOutput {
	return o
}

func (o IdentityTagMapOutput) MapIndex(k pulumi.StringInput) IdentityTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityTag {
		return vs[0].(map[string]IdentityTag)[vs[1].(string)]
	}).(IdentityTagOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityTagOutput{})
	pulumi.RegisterOutputType(IdentityTagPtrOutput{})
	pulumi.RegisterOutputType(IdentityTagArrayOutput{})
	pulumi.RegisterOutputType(IdentityTagMapOutput{})
}
