// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Volume Backup Policy resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new user defined backup policy.
//
// For more information about Oracle defined backup policies and user defined backup policies,
// see [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreVolumeBackupPolicy(ctx, "testVolumeBackupPolicy", &oci.CoreVolumeBackupPolicyArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DestinationRegion: pulumi.Any(_var.Volume_backup_policy_destination_region),
// 			DisplayName:       pulumi.Any(_var.Volume_backup_policy_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			Schedules: CoreVolumeBackupPolicyScheduleArray{
// 				&CoreVolumeBackupPolicyScheduleArgs{
// 					BackupType:       pulumi.Any(_var.Volume_backup_policy_schedules_backup_type),
// 					Period:           pulumi.Any(_var.Volume_backup_policy_schedules_period),
// 					RetentionSeconds: pulumi.Any(_var.Volume_backup_policy_schedules_retention_seconds),
// 					DayOfMonth:       pulumi.Any(_var.Volume_backup_policy_schedules_day_of_month),
// 					DayOfWeek:        pulumi.Any(_var.Volume_backup_policy_schedules_day_of_week),
// 					HourOfDay:        pulumi.Any(_var.Volume_backup_policy_schedules_hour_of_day),
// 					Month:            pulumi.Any(_var.Volume_backup_policy_schedules_month),
// 					OffsetSeconds:    pulumi.Any(_var.Volume_backup_policy_schedules_offset_seconds),
// 					OffsetType:       pulumi.Any(_var.Volume_backup_policy_schedules_offset_type),
// 					TimeZone:         pulumi.Any(_var.Volume_backup_policy_schedules_time_zone),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VolumeBackupPolicies can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreVolumeBackupPolicy:CoreVolumeBackupPolicy test_volume_backup_policy "id"
// ```
type CoreVolumeBackupPolicy struct {
	pulumi.CustomResourceState

	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The paired destination region for copying scheduled backups to. Example: `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
	DestinationRegion pulumi.StringOutput `pulumi:"destinationRegion"`
	// (Updatable) A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The collection of schedules for the volume backup policy. See see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
	Schedules CoreVolumeBackupPolicyScheduleArrayOutput `pulumi:"schedules"`
	// The date and time the volume backup policy was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCoreVolumeBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewCoreVolumeBackupPolicy(ctx *pulumi.Context,
	name string, args *CoreVolumeBackupPolicyArgs, opts ...pulumi.ResourceOption) (*CoreVolumeBackupPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource CoreVolumeBackupPolicy
	err := ctx.RegisterResource("oci:index/coreVolumeBackupPolicy:CoreVolumeBackupPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreVolumeBackupPolicy gets an existing CoreVolumeBackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreVolumeBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreVolumeBackupPolicyState, opts ...pulumi.ResourceOption) (*CoreVolumeBackupPolicy, error) {
	var resource CoreVolumeBackupPolicy
	err := ctx.ReadResource("oci:index/coreVolumeBackupPolicy:CoreVolumeBackupPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreVolumeBackupPolicy resources.
type coreVolumeBackupPolicyState struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The paired destination region for copying scheduled backups to. Example: `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
	DestinationRegion *string `pulumi:"destinationRegion"`
	// (Updatable) A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The collection of schedules for the volume backup policy. See see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
	Schedules []CoreVolumeBackupPolicySchedule `pulumi:"schedules"`
	// The date and time the volume backup policy was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
}

type CoreVolumeBackupPolicyState struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The paired destination region for copying scheduled backups to. Example: `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
	DestinationRegion pulumi.StringPtrInput
	// (Updatable) A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The collection of schedules for the volume backup policy. See see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
	Schedules CoreVolumeBackupPolicyScheduleArrayInput
	// The date and time the volume backup policy was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
}

func (CoreVolumeBackupPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVolumeBackupPolicyState)(nil)).Elem()
}

type coreVolumeBackupPolicyArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The paired destination region for copying scheduled backups to. Example: `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
	DestinationRegion *string `pulumi:"destinationRegion"`
	// (Updatable) A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The collection of schedules for the volume backup policy. See see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
	Schedules []CoreVolumeBackupPolicySchedule `pulumi:"schedules"`
}

// The set of arguments for constructing a CoreVolumeBackupPolicy resource.
type CoreVolumeBackupPolicyArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The paired destination region for copying scheduled backups to. Example: `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
	DestinationRegion pulumi.StringPtrInput
	// (Updatable) A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The collection of schedules for the volume backup policy. See see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
	Schedules CoreVolumeBackupPolicyScheduleArrayInput
}

func (CoreVolumeBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVolumeBackupPolicyArgs)(nil)).Elem()
}

type CoreVolumeBackupPolicyInput interface {
	pulumi.Input

	ToCoreVolumeBackupPolicyOutput() CoreVolumeBackupPolicyOutput
	ToCoreVolumeBackupPolicyOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyOutput
}

func (*CoreVolumeBackupPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVolumeBackupPolicy)(nil))
}

func (i *CoreVolumeBackupPolicy) ToCoreVolumeBackupPolicyOutput() CoreVolumeBackupPolicyOutput {
	return i.ToCoreVolumeBackupPolicyOutputWithContext(context.Background())
}

func (i *CoreVolumeBackupPolicy) ToCoreVolumeBackupPolicyOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeBackupPolicyOutput)
}

func (i *CoreVolumeBackupPolicy) ToCoreVolumeBackupPolicyPtrOutput() CoreVolumeBackupPolicyPtrOutput {
	return i.ToCoreVolumeBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *CoreVolumeBackupPolicy) ToCoreVolumeBackupPolicyPtrOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeBackupPolicyPtrOutput)
}

type CoreVolumeBackupPolicyPtrInput interface {
	pulumi.Input

	ToCoreVolumeBackupPolicyPtrOutput() CoreVolumeBackupPolicyPtrOutput
	ToCoreVolumeBackupPolicyPtrOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyPtrOutput
}

type coreVolumeBackupPolicyPtrType CoreVolumeBackupPolicyArgs

func (*coreVolumeBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVolumeBackupPolicy)(nil))
}

func (i *coreVolumeBackupPolicyPtrType) ToCoreVolumeBackupPolicyPtrOutput() CoreVolumeBackupPolicyPtrOutput {
	return i.ToCoreVolumeBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *coreVolumeBackupPolicyPtrType) ToCoreVolumeBackupPolicyPtrOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeBackupPolicyPtrOutput)
}

// CoreVolumeBackupPolicyArrayInput is an input type that accepts CoreVolumeBackupPolicyArray and CoreVolumeBackupPolicyArrayOutput values.
// You can construct a concrete instance of `CoreVolumeBackupPolicyArrayInput` via:
//
//          CoreVolumeBackupPolicyArray{ CoreVolumeBackupPolicyArgs{...} }
type CoreVolumeBackupPolicyArrayInput interface {
	pulumi.Input

	ToCoreVolumeBackupPolicyArrayOutput() CoreVolumeBackupPolicyArrayOutput
	ToCoreVolumeBackupPolicyArrayOutputWithContext(context.Context) CoreVolumeBackupPolicyArrayOutput
}

type CoreVolumeBackupPolicyArray []CoreVolumeBackupPolicyInput

func (CoreVolumeBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreVolumeBackupPolicy)(nil)).Elem()
}

func (i CoreVolumeBackupPolicyArray) ToCoreVolumeBackupPolicyArrayOutput() CoreVolumeBackupPolicyArrayOutput {
	return i.ToCoreVolumeBackupPolicyArrayOutputWithContext(context.Background())
}

func (i CoreVolumeBackupPolicyArray) ToCoreVolumeBackupPolicyArrayOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeBackupPolicyArrayOutput)
}

// CoreVolumeBackupPolicyMapInput is an input type that accepts CoreVolumeBackupPolicyMap and CoreVolumeBackupPolicyMapOutput values.
// You can construct a concrete instance of `CoreVolumeBackupPolicyMapInput` via:
//
//          CoreVolumeBackupPolicyMap{ "key": CoreVolumeBackupPolicyArgs{...} }
type CoreVolumeBackupPolicyMapInput interface {
	pulumi.Input

	ToCoreVolumeBackupPolicyMapOutput() CoreVolumeBackupPolicyMapOutput
	ToCoreVolumeBackupPolicyMapOutputWithContext(context.Context) CoreVolumeBackupPolicyMapOutput
}

type CoreVolumeBackupPolicyMap map[string]CoreVolumeBackupPolicyInput

func (CoreVolumeBackupPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreVolumeBackupPolicy)(nil)).Elem()
}

func (i CoreVolumeBackupPolicyMap) ToCoreVolumeBackupPolicyMapOutput() CoreVolumeBackupPolicyMapOutput {
	return i.ToCoreVolumeBackupPolicyMapOutputWithContext(context.Background())
}

func (i CoreVolumeBackupPolicyMap) ToCoreVolumeBackupPolicyMapOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeBackupPolicyMapOutput)
}

type CoreVolumeBackupPolicyOutput struct {
	*pulumi.OutputState
}

func (CoreVolumeBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVolumeBackupPolicy)(nil))
}

func (o CoreVolumeBackupPolicyOutput) ToCoreVolumeBackupPolicyOutput() CoreVolumeBackupPolicyOutput {
	return o
}

func (o CoreVolumeBackupPolicyOutput) ToCoreVolumeBackupPolicyOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyOutput {
	return o
}

func (o CoreVolumeBackupPolicyOutput) ToCoreVolumeBackupPolicyPtrOutput() CoreVolumeBackupPolicyPtrOutput {
	return o.ToCoreVolumeBackupPolicyPtrOutputWithContext(context.Background())
}

func (o CoreVolumeBackupPolicyOutput) ToCoreVolumeBackupPolicyPtrOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyPtrOutput {
	return o.ApplyT(func(v CoreVolumeBackupPolicy) *CoreVolumeBackupPolicy {
		return &v
	}).(CoreVolumeBackupPolicyPtrOutput)
}

type CoreVolumeBackupPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (CoreVolumeBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVolumeBackupPolicy)(nil))
}

func (o CoreVolumeBackupPolicyPtrOutput) ToCoreVolumeBackupPolicyPtrOutput() CoreVolumeBackupPolicyPtrOutput {
	return o
}

func (o CoreVolumeBackupPolicyPtrOutput) ToCoreVolumeBackupPolicyPtrOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyPtrOutput {
	return o
}

type CoreVolumeBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (CoreVolumeBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreVolumeBackupPolicy)(nil))
}

func (o CoreVolumeBackupPolicyArrayOutput) ToCoreVolumeBackupPolicyArrayOutput() CoreVolumeBackupPolicyArrayOutput {
	return o
}

func (o CoreVolumeBackupPolicyArrayOutput) ToCoreVolumeBackupPolicyArrayOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyArrayOutput {
	return o
}

func (o CoreVolumeBackupPolicyArrayOutput) Index(i pulumi.IntInput) CoreVolumeBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreVolumeBackupPolicy {
		return vs[0].([]CoreVolumeBackupPolicy)[vs[1].(int)]
	}).(CoreVolumeBackupPolicyOutput)
}

type CoreVolumeBackupPolicyMapOutput struct{ *pulumi.OutputState }

func (CoreVolumeBackupPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreVolumeBackupPolicy)(nil))
}

func (o CoreVolumeBackupPolicyMapOutput) ToCoreVolumeBackupPolicyMapOutput() CoreVolumeBackupPolicyMapOutput {
	return o
}

func (o CoreVolumeBackupPolicyMapOutput) ToCoreVolumeBackupPolicyMapOutputWithContext(ctx context.Context) CoreVolumeBackupPolicyMapOutput {
	return o
}

func (o CoreVolumeBackupPolicyMapOutput) MapIndex(k pulumi.StringInput) CoreVolumeBackupPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreVolumeBackupPolicy {
		return vs[0].(map[string]CoreVolumeBackupPolicy)[vs[1].(string)]
	}).(CoreVolumeBackupPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreVolumeBackupPolicyOutput{})
	pulumi.RegisterOutputType(CoreVolumeBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(CoreVolumeBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(CoreVolumeBackupPolicyMapOutput{})
}
