// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AnalyticsAnalyticsInstanceCapacity {
    /**
     * The capacity model to use.
     */
    capacityType: string;
    /**
     * (Updatable) The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
     */
    capacityValue: number;
}

export interface AnalyticsAnalyticsInstanceNetworkEndpointDetails {
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
    /**
     * The subnet OCID for the private endpoint.
     */
    subnetId: string;
    /**
     * The VCN OCID for the private endpoint.
     */
    vcnId: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    whitelistedVcns: outputs.AnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn[];
}

export interface AnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn {
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
}

export interface AnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
    /**
     * (Updatable) Description of private source dns zone.
     */
    description: string;
    /**
     * (Updatable) Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
     */
    dnsZone: string;
}

export interface ApigatewayApiValidationResult {
    /**
     * Name of the validation.
     */
    name: string;
    /**
     * Result of the validation.
     */
    result: string;
}

export interface ApigatewayDeploymentSpecification {
    /**
     * (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.ApigatewayDeploymentSpecificationLoggingPolicies;
    /**
     * (Updatable) Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.ApigatewayDeploymentSpecificationRequestPolicies;
    /**
     * (Updatable) A list of routes that this API exposes.
     */
    routes: outputs.ApigatewayDeploymentSpecificationRoute[];
}

export interface ApigatewayDeploymentSpecificationLoggingPolicies {
    /**
     * (Updatable) Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.ApigatewayDeploymentSpecificationLoggingPoliciesAccessLog;
    /**
     * (Updatable) Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.ApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog;
}

export interface ApigatewayDeploymentSpecificationLoggingPoliciesAccessLog {
    /**
     * (Updatable) Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface ApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog {
    /**
     * (Updatable) Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface ApigatewayDeploymentSpecificationRequestPolicies {
    /**
     * (Updatable) Information on how to authenticate incoming requests.
     */
    authentication: outputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthentication;
    /**
     * (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.ApigatewayDeploymentSpecificationRequestPoliciesCors;
    /**
     * (Updatable) Limit the number of requests that should be handled for the specified window using a specfic key.
     */
    rateLimiting: outputs.ApigatewayDeploymentSpecificationRequestPoliciesRateLimiting;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthentication {
    /**
     * (Updatable) The list of intended recipients for the token.
     */
    audiences: string[];
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    /**
     * (Updatable) Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
     */
    isAnonymousAccessAllowed: boolean;
    /**
     * (Updatable) A list of parties that could have issued the token.
     */
    issuers: string[];
    /**
     * (Updatable) The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
     */
    maxClockSkewInSeconds: number;
    /**
     * (Updatable) A set of Public Keys that will be used to verify the JWT signature.
     */
    publicKeys: outputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys;
    /**
     * (Updatable) The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
     */
    tokenAuthScheme: string;
    /**
     * (Updatable) The name of the header containing the authentication token.
     */
    tokenHeader: string;
    /**
     * (Updatable) The name of the query parameter containing the authentication token.
     */
    tokenQueryParam: string;
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * (Updatable) A list of claims which should be validated to consider the token valid.
     */
    verifyClaims: outputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim[];
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys {
    /**
     * (Updatable) Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * (Updatable) The set of static public keys.
     */
    keys: outputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey[];
    /**
     * (Updatable) The duration for which the JWKS should be cached before it is fetched again.
     */
    maxCacheDurationInHours: number;
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * (Updatable) The uri from which to retrieve the key. It must be accessible without authentication.
     */
    uri: string;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey {
    /**
     * (Updatable) The algorithm intended for use with this key.
     */
    alg: string;
    /**
     * (Updatable) The base64 url encoded exponent of the RSA public key represented by this key.
     */
    e: string;
    /**
     * (Updatable) The format of the public key.
     */
    format: string;
    /**
     * (Updatable) Name of the claim.
     */
    key: string;
    /**
     * (Updatable) The operations for which this key is to be used.
     */
    keyOps: string[];
    /**
     * (Updatable) A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
     */
    kid: string;
    /**
     * (Updatable) The key type.
     */
    kty: string;
    /**
     * (Updatable) The base64 url encoded modulus of the RSA public key represented by this key.
     */
    n: string;
    /**
     * (Updatable) The intended use of the public key.
     */
    use: string;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim {
    /**
     * (Updatable) Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
     */
    isRequired: boolean;
    /**
     * (Updatable) Name of the claim.
     */
    key: string;
    /**
     * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesCors {
    /**
     * (Updatable) The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * (Updatable) The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * (Updatable) The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * (Updatable) The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * (Updatable) Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * (Updatable) The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesRateLimiting {
    /**
     * (Updatable) The maximum number of requests per second to allow.
     */
    rateInRequestsPerSecond: number;
    /**
     * (Updatable) The key used to group requests together.
     */
    rateKey: string;
}

export interface ApigatewayDeploymentSpecificationRoute {
    /**
     * (Updatable) The backend to forward requests to.
     */
    backend: outputs.ApigatewayDeploymentSpecificationRouteBackend;
    /**
     * (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.ApigatewayDeploymentSpecificationRouteLoggingPolicies;
    /**
     * (Updatable) A list of allowed methods on this route.
     */
    methods: string[];
    /**
     * (Updatable) A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     */
    path: string;
    /**
     * (Updatable) Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.ApigatewayDeploymentSpecificationRouteRequestPolicies;
    /**
     * (Updatable) Behavior applied to any responses sent by the API for requests on this route.
     */
    responsePolicies: outputs.ApigatewayDeploymentSpecificationRouteResponsePolicies;
}

export interface ApigatewayDeploymentSpecificationRouteBackend {
    /**
     * (Updatable) The body of the stock response from the mock backend.
     */
    body: string;
    /**
     * (Updatable) Defines a timeout for establishing a connection with a proxied server.
     */
    connectTimeoutInSeconds: number;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    /**
     * (Updatable)
     */
    headers: outputs.ApigatewayDeploymentSpecificationRouteBackendHeader[];
    /**
     * (Updatable) Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * (Updatable) Defines a timeout for reading a response from the proxied server.
     */
    readTimeoutInSeconds: number;
    /**
     * (Updatable) Defines a timeout for transmitting a request to the proxied server.
     */
    sendTimeoutInSeconds: number;
    /**
     * (Updatable) The status code of the stock response from the mock backend.
     */
    status: number;
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * (Updatable)
     */
    url: string;
}

export interface ApigatewayDeploymentSpecificationRouteBackendHeader {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) Value of the header.
     */
    value: string;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPolicies {
    /**
     * (Updatable) Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.ApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog;
    /**
     * (Updatable) Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.ApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog {
    /**
     * (Updatable) Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog {
    /**
     * (Updatable) Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPolicies {
    /**
     * (Updatable) If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     */
    authorization: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization;
    /**
     * (Updatable) Validate the payload body of the incoming API requests on a specific route.
     */
    bodyValidation: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation;
    /**
     * (Updatable) Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesCors;
    /**
     * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations;
    /**
     * (Updatable) Validate the HTTP headers on the incoming API requests on a specific route.
     */
    headerValidations: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations;
    /**
     * (Updatable) A set of transformations to apply to query parameters that pass through the gateway.
     */
    queryParameterTransformations: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations;
    /**
     * (Updatable) Validate the URL query parameters on the incoming API requests on a specific route.
     */
    queryParameterValidations: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations;
    /**
     * (Updatable) Base policy for Response Cache lookup.
     */
    responseCacheLookup: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization {
    /**
     * (Updatable) A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     */
    allowedScopes: string[];
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation {
    /**
     * (Updatable) The content of the request body.
     */
    contents: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent[];
    /**
     * (Updatable) Determines if the parameter is required in the request.
     */
    required: boolean;
    /**
     * (Updatable) Validation behavior mode.
     */
    validationMode: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent {
    /**
     * (Updatable) The mediaType is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
     */
    mediaType: string;
    /**
     * (Updatable) Validation type defines the content validation method.
     */
    validationType: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesCors {
    /**
     * (Updatable) The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * (Updatable) The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * (Updatable) The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * (Updatable) The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * (Updatable) Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * (Updatable) The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations {
    /**
     * (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders;
    /**
     * (Updatable) Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders;
    /**
     * (Updatable) Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * (Updatable) The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
    /**
     * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations {
    /**
     * (Updatable)
     */
    headers: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader[];
    /**
     * (Updatable) Validation behavior mode.
     */
    validationMode: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
    /**
     * (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterQueryParameters: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
    /**
     * (Updatable) Rename parameters on the query string as they pass through the gateway.
     */
    renameQueryParameters: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
    /**
     * (Updatable) Set parameters on the query string as they pass through the gateway.
     */
    setQueryParameters: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem[];
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
    /**
     * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * (Updatable) The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
    /**
     * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations {
    /**
     * (Updatable)
     */
    parameters: outputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter[];
    /**
     * (Updatable) Validation behavior mode.
     */
    validationMode: string;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup {
    /**
     * (Updatable) A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
     */
    cacheKeyAdditions: string[];
    /**
     * (Updatable) Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
     */
    isPrivateCachingEnabled: boolean;
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePolicies {
    /**
     * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations;
    /**
     * (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
     */
    responseCacheStore: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations {
    /**
     * (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders;
    /**
     * (Updatable) Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders;
    /**
     * (Updatable) Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * (Updatable) The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * (Updatable) The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
    /**
     * (Updatable) The list of headers.
     */
    items: outputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem[];
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
    /**
     * (Updatable) If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * (Updatable) The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * (Updatable) A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore {
    /**
     * (Updatable) Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
     */
    timeToLiveInSeconds: number;
    /**
     * (Updatable) Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface ApigatewayGatewayIpAddress {
    /**
     * An IP address.
     */
    ipAddress: string;
}

export interface ApigatewayGatewayResponseCacheDetails {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     */
    authenticationSecretId: string;
    /**
     * (Updatable) The version number of the authentication secret to use.
     */
    authenticationSecretVersionNumber: string;
    /**
     * (Updatable) Defines the timeout for establishing a connection with the Response Cache.
     */
    connectTimeoutInMs: number;
    /**
     * (Updatable) Defines if the connection should be over SSL.
     */
    isSslEnabled: boolean;
    /**
     * (Updatable) Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * (Updatable) Defines the timeout for reading data from the Response Cache.
     */
    readTimeoutInMs: number;
    /**
     * (Updatable) Defines the timeout for transmitting data to the Response Cache.
     */
    sendTimeoutInMs: number;
    /**
     * (Updatable) The set of cache store members to connect to. At present only a single server is supported.
     */
    servers: outputs.ApigatewayGatewayResponseCacheDetailsServer[];
    /**
     * (Updatable) Type of the Response Cache.
     */
    type: string;
}

export interface ApigatewayGatewayResponseCacheDetailsServer {
    /**
     * (Updatable) Hostname or IP address (IPv4 only) where the cache store is running.
     */
    host: string;
    /**
     * (Updatable) The port the cache store is exposed on.
     */
    port: number;
}

export interface ApmSyntheticsMonitorConfiguration {
    /**
     * (Updatable) Type of configuration.
     */
    configType: string;
    /**
     * (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
     */
    isCertificateValidationEnabled: boolean;
    /**
     * (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
     */
    isFailureRetried: boolean;
    /**
     * (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
     */
    isRedirectionEnabled: boolean;
    /**
     * (Updatable) Details for request HTTP authentication.
     */
    reqAuthenticationDetails: outputs.ApmSyntheticsMonitorConfigurationReqAuthenticationDetails;
    /**
     * (Updatable) Request http authentication scheme.
     */
    reqAuthenticationScheme: string;
    /**
     * (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    requestHeaders: outputs.ApmSyntheticsMonitorConfigurationRequestHeader[];
    /**
     * (Updatable) Request HTTP method.
     */
    requestMethod: string;
    /**
     * (Updatable) Request post body content.
     */
    requestPostBody: string;
    /**
     * (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
     */
    requestQueryParams: outputs.ApmSyntheticsMonitorConfigurationRequestQueryParam[];
    /**
     * (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     */
    verifyResponseCodes: string[];
    /**
     * (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
     */
    verifyResponseContent: string;
    /**
     * (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
     */
    verifyTexts: outputs.ApmSyntheticsMonitorConfigurationVerifyText[];
}

export interface ApmSyntheticsMonitorConfigurationReqAuthenticationDetails {
    /**
     * (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    authHeaders: outputs.ApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader[];
    /**
     * (Updatable) Request method.
     */
    authRequestMethod: string;
    /**
     * (Updatable) Request post body.
     */
    authRequestPostBody: string;
    /**
     * (Updatable) Authentication token.
     */
    authToken: string;
    /**
     * (Updatable) URL to get authetication token.
     */
    authUrl: string;
    /**
     * (Updatable) Username for authentication.
     */
    authUserName: string;
    /**
     * (Updatable) User password for authentication.
     */
    authUserPassword: string;
    /**
     * (Updatable) Request http oauth scheme.
     */
    oauthScheme: string;
}

export interface ApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader {
    /**
     * (Updatable) Name of the header.
     */
    headerName: string;
    /**
     * (Updatable) Value of the header.
     */
    headerValue: string;
}

export interface ApmSyntheticsMonitorConfigurationRequestHeader {
    /**
     * (Updatable) Name of the header.
     */
    headerName: string;
    /**
     * (Updatable) Value of the header.
     */
    headerValue: string;
}

export interface ApmSyntheticsMonitorConfigurationRequestQueryParam {
    /**
     * (Updatable) Name of the parameter.
     */
    paramName: string;
    /**
     * (Updatable) Value of the parameter.
     */
    paramValue: string;
}

export interface ApmSyntheticsMonitorConfigurationVerifyText {
    /**
     * (Updatable) Verification text in the response.
     */
    text: string;
}

export interface ApmSyntheticsMonitorScriptParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     */
    isSecret: boolean;
    /**
     * Details of the script parameter that can be used to overwrite the parameter present in the script.
     */
    monitorScriptParameter: outputs.ApmSyntheticsMonitorScriptParameterMonitorScriptParameter;
    /**
     * (Updatable) Name of the parameter.
     */
    paramName: string;
    /**
     * (Updatable) Value of the parameter.
     */
    paramValue: string;
}

export interface ApmSyntheticsMonitorScriptParameterMonitorScriptParameter {
    /**
     * (Updatable) Name of the parameter.
     */
    paramName: string;
    /**
     * (Updatable) Value of the parameter.
     */
    paramValue: string;
}

export interface ApmSyntheticsScriptMonitorStatusCountMap {
    /**
     * Number of disabled monitors using the script.
     */
    disabled: number;
    /**
     * Number of enabled monitors using the script.
     */
    enabled: number;
    /**
     * Number of invalid monitors using the script.
     */
    invalid: number;
    /**
     * Total number of monitors using the script.
     */
    total: number;
}

export interface ApmSyntheticsScriptParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * (Updatable) Name of the parameter.
     */
    paramName: string;
    /**
     * (Updatable) Value of the parameter.
     */
    paramValue: string;
    /**
     * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
     */
    scriptParameter: outputs.ApmSyntheticsScriptParameterScriptParameter;
}

export interface ApmSyntheticsScriptParameterScriptParameter {
    /**
     * (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * (Updatable) Name of the parameter.
     */
    paramName: string;
    /**
     * (Updatable) Value of the parameter.
     */
    paramValue: string;
}

export interface ArtifactsContainerRepositoryReadme {
    /**
     * (Updatable) Readme content. Avoid entering confidential information.
     */
    content: string;
    /**
     * (Updatable) Readme format. Supported formats are text/plain and text/markdown.
     */
    format: string;
}

export interface AutoscalingAutoScalingConfigurationAutoScalingResources {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
     */
    id: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface AutoscalingAutoScalingConfigurationPolicy {
    /**
     * The capacity requirements of the autoscaling policy.
     */
    capacity: outputs.AutoscalingAutoScalingConfigurationPolicyCapacity;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * An execution schedule for an autoscaling policy.
     */
    executionSchedule: outputs.AutoscalingAutoScalingConfigurationPolicyExecutionSchedule;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
     */
    id: string;
    /**
     * Whether the autoscaling policy is enabled.
     */
    isEnabled: boolean;
    /**
     * The type of autoscaling policy.
     */
    policyType: string;
    /**
     * An action that can be executed against a resource.
     */
    resourceAction: outputs.AutoscalingAutoScalingConfigurationPolicyResourceAction;
    rules: outputs.AutoscalingAutoScalingConfigurationPolicyRule[];
    /**
     * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface AutoscalingAutoScalingConfigurationPolicyCapacity {
    /**
     * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     */
    initial: number;
    /**
     * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     */
    max: number;
    /**
     * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     */
    min: number;
}

export interface AutoscalingAutoScalingConfigurationPolicyExecutionSchedule {
    /**
     * A cron expression that represents the time at which to execute the autoscaling policy.
     */
    expression: string;
    /**
     * The time zone for the execution schedule.
     */
    timezone: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface AutoscalingAutoScalingConfigurationPolicyResourceAction {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: string;
    /**
     * The type of resource action.
     */
    actionType: string;
}

export interface AutoscalingAutoScalingConfigurationPolicyRule {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: outputs.AutoscalingAutoScalingConfigurationPolicyRuleAction;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that is managed by the autoscaling configuration.
     */
    id: string;
    /**
     * Metric and threshold details for triggering an autoscaling action.
     */
    metric: outputs.AutoscalingAutoScalingConfigurationPolicyRuleMetric;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleAction {
    /**
     * The type of action to take.
     */
    type: string;
    value: number;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleMetric {
    metricType: string;
    threshold: outputs.AutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold {
    /**
     * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
     */
    operator: string;
    value: number;
}

export interface BastionSessionKeyDetails {
    /**
     * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
     */
    publicKeyContent: string;
}

export interface BastionSessionTargetResourceDetails {
    /**
     * The session type.
     */
    sessionType: string;
    /**
     * The display name of the target Compute instance that the session connects to.
     */
    targetResourceDisplayName: string;
    /**
     * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     */
    targetResourceId: string;
    /**
     * The name of the user on the target resource operating system that the session uses for the connection.
     */
    targetResourceOperatingSystemUserName: string;
    /**
     * The port number to connect to on the target resource.
     */
    targetResourcePort: number;
    /**
     * The private IP address of the target resource that the session connects to.
     */
    targetResourcePrivateIpAddress: string;
}

export interface BdsAutoScalingConfigurationPolicy {
    /**
     * (Updatable) Types of autoscale policies. Options are SCHEDULE-BASED or THRESHOLD-BASED. (Only THRESHOLD-BASED is supported in this release.)
     */
    policyType: string;
    /**
     * (Updatable) The list of rules for autoscaling. If an action has multiple rules, the last rule in the array will be applied.
     */
    rules: outputs.BdsAutoScalingConfigurationPolicyRule[];
}

export interface BdsAutoScalingConfigurationPolicyRule {
    /**
     * (Updatable) The valid value are CHANGE_SHAPE_SCALE_UP or CHANGE_SHAPE_SCALE_DOWN.
     */
    action: string;
    /**
     * (Updatable) Metric and threshold details for triggering an autoscale action.
     */
    metric: outputs.BdsAutoScalingConfigurationPolicyRuleMetric;
}

export interface BdsAutoScalingConfigurationPolicyRuleMetric {
    /**
     * (Updatable) Allowed value is CPU_UTILIZATION.
     */
    metricType: string;
    /**
     * (Updatable) An autoscale action is triggered when a performance metric meets or exceeds a threshold.
     */
    threshold: outputs.BdsAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface BdsAutoScalingConfigurationPolicyRuleMetricThreshold {
    /**
     * (Updatable) This value is the minimum period of time the metric value meets or exceeds the threshold value before the action is triggered. The value is in minutes.
     */
    durationInMinutes: number;
    /**
     * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
     */
    operator: string;
    /**
     * (Updatable) Integer non-negative value. 0 < value < 100
     */
    value: number;
}

export interface BdsBdsInstanceCloudSqlDetails {
    /**
     * The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     */
    isKerberosMappedToDatabaseUsers: boolean;
    /**
     * Details about the Kerberos principals.
     */
    kerberosDetails: outputs.BdsBdsInstanceCloudSqlDetailsKerberosDetail[];
    /**
     * (Updatable) Shape of the node.
     */
    shape: string;
}

export interface BdsBdsInstanceCloudSqlDetailsKerberosDetail {
    /**
     * Location of the keytab file
     */
    keytabFile: string;
    /**
     * Name of the Kerberos principal.
     */
    principalName: string;
}

export interface BdsBdsInstanceClusterDetails {
    /**
     * The URL of Ambari
     */
    ambariUrl: string;
    /**
     * Cloud SQL cell version.
     */
    bdCellVersion: string;
    /**
     * BDA version installed in the cluster
     */
    bdaVersion: string;
    /**
     * Big Data Manager version installed in the cluster.
     */
    bdmVersion: string;
    /**
     * Big Data Service version installed in the cluster.
     */
    bdsVersion: string;
    /**
     * The URL of Big Data Manager.
     */
    bigDataManagerUrl: string;
    /**
     * The URL of Cloudera Manager
     */
    clouderaManagerUrl: string;
    /**
     * Big Data SQL version.
     */
    csqlCellVersion: string;
    /**
     * Cloud SQL query server database version.
     */
    dbVersion: string;
    /**
     * The URL of the Hue server.
     */
    hueServerUrl: string;
    /**
     * Oracle Linux version installed in the cluster.
     */
    osVersion: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
     */
    timeRefreshed: string;
}

export interface BdsBdsInstanceMasterNode {
    /**
     * The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * (Updatable) Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node will be created.
     */
    subnetId: string;
}

export interface BdsBdsInstanceNetworkConfig {
    /**
     * The CIDR IP address block of the VCN.
     */
    cidrBlock: string;
    /**
     * A boolean flag whether to configure a NAT gateway.
     */
    isNatGatewayRequired: boolean;
}

export interface BdsBdsInstanceNode {
    /**
     * The list of block volumes attached to a given node.
     */
    attachedBlockVolumes: outputs.BdsBdsInstanceNodeAttachedBlockVolume[];
    /**
     * The name of the availability domain in which the node is running.
     */
    availabilityDomain: string;
    /**
     * (Updatable) Name of the Big Data Service cluster.
     */
    displayName: string;
    /**
     * The name of the fault domain in which the node is running.
     */
    faultDomain: string;
    /**
     * The fully-qualified hostname (FQDN) of the node.
     */
    hostname: string;
    /**
     * The OCID of the image from which the node was created.
     */
    imageId: string;
    /**
     * The OCID of the underlying Oracle Cloud Infrastructure Compute instance.
     */
    instanceId: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * The Big Data Service cluster node type.
     */
    nodeType: string;
    /**
     * (Updatable) Shape of the node.
     */
    shape: string;
    /**
     * The fingerprint of the SSH key used for node access.
     */
    sshFingerprint: string;
    /**
     * The state of the cluster.
     */
    state: string;
    /**
     * The OCID of the subnet in which the node will be created.
     */
    subnetId: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
}

export interface BdsBdsInstanceNodeAttachedBlockVolume {
    /**
     * The OCID of the volume attachment.
     */
    volumeAttachmentId: string;
    /**
     * The size of the volume in GBs.
     */
    volumeSizeInGbs: string;
}

export interface BdsBdsInstanceUtilNode {
    /**
     * The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * (Updatable) Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node will be created.
     */
    subnetId: string;
}

export interface BdsBdsInstanceWorkerNode {
    /**
     * The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * (Updatable) Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node will be created.
     */
    subnetId: string;
}

export interface BlockchainBlockchainPlatformComponentDetails {
    /**
     * List of OSNs
     */
    osns: outputs.BlockchainBlockchainPlatformComponentDetailsOsn[];
    /**
     * List of Peers
     */
    peers: outputs.BlockchainBlockchainPlatformComponentDetailsPeer[];
}

export interface BlockchainBlockchainPlatformComponentDetailsOsn {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.BlockchainBlockchainPlatformComponentDetailsOsnOcpuAllocationParam;
    /**
     * OSN identifier
     */
    osnKey: string;
    /**
     * The current state of the Platform Instance.
     */
    state: string;
}

export interface BlockchainBlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface BlockchainBlockchainPlatformComponentDetailsPeer {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * peer alias
     */
    alias: string;
    /**
     * Host name of VM
     */
    host: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.BlockchainBlockchainPlatformComponentDetailsPeerOcpuAllocationParam;
    /**
     * peer identifier
     */
    peerKey: string;
    /**
     * Peer role
     */
    role: string;
    /**
     * The current state of the Platform Instance.
     */
    state: string;
}

export interface BlockchainBlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface BlockchainBlockchainPlatformHostOcpuUtilizationInfo {
    /**
     * Host name of VM
     */
    host: string;
    /**
     * Number of total OCPU capacity on the host
     */
    ocpuCapacityNumber: number;
    /**
     * Number of OCPU utilized
     */
    ocpuUtilizationNumber: number;
}

export interface BlockchainBlockchainPlatformReplicas {
    /**
     * Number of CA replicas
     */
    caCount: number;
    /**
     * Number of console replicas
     */
    consoleCount: number;
    /**
     * Number of REST proxy replicas
     */
    proxyCount: number;
}

export interface BlockchainOsnOcpuAllocationParam {
    /**
     * (Updatable) Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface BlockchainPeerOcpuAllocationParam {
    /**
     * (Updatable) Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface CloudGuardDataMaskRuleTargetSelected {
    /**
     * (Updatable) Target selection.
     */
    kind: string;
    /**
     * (Updatable) Types of Targets
     */
    values: string[];
}

export interface CloudGuardDetectorRecipeDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.CloudGuardDetectorRecipeDetectorRuleCandidateResponderRule[];
    /**
     * (Updatable) DetectorRecipe Description
     */
    description: string;
    /**
     * (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
     */
    details: outputs.CloudGuardDetectorRecipeDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * (Updatable) DetectorRecipeRule Identifier
     */
    detectorRuleId: string;
    /**
     * (Updatable) DetectorRecipe Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardDetectorRecipeDetectorRuleCandidateResponderRule {
    /**
     * (Updatable) DetectorRecipe Display Name
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetails {
    /**
     * (Updatable)
     */
    condition: string;
    /**
     * (Updatable) Configuration details
     */
    configurations: outputs.CloudGuardDetectorRecipeDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * (Updatable) Enables the control
     */
    isEnabled: boolean;
    /**
     * (Updatable) user defined labels for a detector rule
     */
    labels: string[];
    /**
     * (Updatable) The Risk Level
     */
    riskLevel: string;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * (Updatable) configuration data type
     */
    dataType: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
    /**
     * (Updatable) List of configuration values
     */
    values: outputs.CloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue[];
}

export interface CloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue {
    /**
     * (Updatable) configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * (Updatable) type of the managed list
     */
    managedListType: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.CloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule[];
    /**
     * (Updatable) DetectorRecipe Description
     */
    description: string;
    /**
     * (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
     */
    details: outputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * (Updatable) DetectorRecipeRule Identifier
     */
    detectorRuleId: string;
    /**
     * (Updatable) DetectorRecipe Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
    /**
     * (Updatable) DetectorRecipe Display Name
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetails {
    /**
     * (Updatable)
     */
    condition: string;
    /**
     * (Updatable) Configuration details
     */
    configurations: outputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * (Updatable) Enables the control
     */
    isEnabled: boolean;
    /**
     * (Updatable) user defined labels for a detector rule
     */
    labels: string[];
    /**
     * (Updatable) The Risk Level
     */
    riskLevel: string;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * (Updatable) configuration data type
     */
    dataType: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
    /**
     * (Updatable) List of configuration values
     */
    values: outputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * (Updatable) configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * (Updatable) type of the managed list
     */
    managedListType: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface CloudGuardResponderRecipeEffectiveResponderRule {
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId: string;
    /**
     * (Updatable) ResponderRecipe Description
     */
    description: string;
    /**
     * (Updatable) Details of UpdateResponderRuleDetails.
     */
    details: outputs.CloudGuardResponderRecipeEffectiveResponderRuleDetails;
    /**
     * (Updatable) ResponderRecipe Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * (Updatable) ResponderRecipeRule Identifier
     */
    responderRuleId: string;
    /**
     * The current state of the Example.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface CloudGuardResponderRecipeEffectiveResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.CloudGuardResponderRecipeEffectiveResponderRuleDetailsConfiguration[];
    /**
     * (Updatable) Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface CloudGuardResponderRecipeEffectiveResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface CloudGuardResponderRecipeResponderRule {
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId: string;
    /**
     * (Updatable) ResponderRecipe Description
     */
    description: string;
    /**
     * (Updatable) Details of UpdateResponderRuleDetails.
     */
    details: outputs.CloudGuardResponderRecipeResponderRuleDetails;
    /**
     * (Updatable) ResponderRecipe Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * (Updatable) ResponderRecipeRule Identifier
     */
    responderRuleId: string;
    /**
     * The current state of the Example.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface CloudGuardResponderRecipeResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.CloudGuardResponderRecipeResponderRuleDetailsConfiguration[];
    /**
     * (Updatable) Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface CloudGuardResponderRecipeResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface CloudGuardTargetTargetDetectorRecipe {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * The target description.
     */
    description: string;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * Identifier for DetectorRecipe.
     */
    detectorRecipeId: string;
    /**
     * (Updatable) Overrides to be applied to Detector Rule associated with the target
     */
    detectorRules: outputs.CloudGuardTargetTargetDetectorRecipeDetectorRule[];
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    effectiveDetectorRules: outputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * (Updatable) The current state of the DetectorRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRule {
    /**
     * The target description.
     */
    description: string;
    /**
     * (Updatable) Details of ResponderRule.
     */
    details: outputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * (Updatable) Identifier for DetectorRule.
     */
    detectorRuleId: string;
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * (Updatable) The current state of the DetectorRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetails {
    /**
     * (Updatable) Condition group corresponding to each compartment
     */
    conditionGroups: outputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup[];
    /**
     * (Updatable) Configurations associated with the ResponderRule
     */
    configurations: outputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * (Updatable)
     */
    condition: string;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue[];
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
    /**
     * The target description.
     */
    description: string;
    /**
     * (Updatable) Details of ResponderRule.
     */
    details: outputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * (Updatable) Identifier for DetectorRule.
     */
    detectorRuleId: string;
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * (Updatable) The current state of the DetectorRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
    /**
     * (Updatable) Condition group corresponding to each compartment
     */
    conditionGroups: outputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup[];
    /**
     * (Updatable) Configurations associated with the ResponderRule
     */
    configurations: outputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * (Updatable)
     */
    condition: string;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface CloudGuardTargetTargetResponderRecipe {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * The target description.
     */
    description: string;
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * List of responder rules associated with the recipe after applying all defaults
     */
    effectiveResponderRules: outputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * Identifier for ResponderRecipe.
     */
    responderRecipeId: string;
    /**
     * (Updatable) Override responder rules associated with reponder recipe in a target.
     */
    responderRules: outputs.CloudGuardTargetTargetResponderRecipeResponderRule[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRule {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * The target description.
     */
    description: string;
    /**
     * (Updatable) Details of ResponderRule.
     */
    details: outputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetails;
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * (Updatable) Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * (Updatable) The current state of the DetectorRule.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetails {
    /**
     * (Updatable)
     */
    condition: string;
    /**
     * (Updatable) Configurations associated with the ResponderRule
     */
    configurations: outputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * (Updatable) Execution Mode for ResponderRule
     */
    mode: string;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRule {
    /**
     * (Updatable) compartment associated with condition
     */
    compartmentId: string;
    /**
     * The target description.
     */
    description: string;
    /**
     * (Updatable) Details of ResponderRule.
     */
    details: outputs.CloudGuardTargetTargetResponderRecipeResponderRuleDetails;
    /**
     * (Updatable) DetectorTemplate Identifier
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * (Updatable) Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * (Updatable) The current state of the DetectorRule.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRuleDetails {
    /**
     * (Updatable)
     */
    condition: string;
    /**
     * (Updatable) Configurations associated with the ResponderRule
     */
    configurations: outputs.CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * (Updatable) Execution Mode for ResponderRule
     */
    mode: string;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration {
    /**
     * (Updatable) Unique name of the configuration
     */
    configKey: string;
    /**
     * (Updatable) configuration name
     */
    name: string;
    /**
     * (Updatable) configuration value
     */
    value: string;
}

export interface ContainerengineClusterEndpointConfig {
    /**
     * Whether the cluster should be assigned a public IP address. Defaults to false. If set to true on a private subnet, the cluster provisioning will fail.
     */
    isPublicIpEnabled: boolean;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to apply to the cluster endpoint. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     */
    nsgIds?: string[];
    /**
     * The OCID of the regional subnet in which to place the Cluster endpoint.
     */
    subnetId: string;
}

export interface ContainerengineClusterEndpoints {
    /**
     * The non-native networking Kubernetes API server endpoint.
     */
    kubernetes: string;
    /**
     * The private native networking Kubernetes API server endpoint.
     */
    privateEndpoint: string;
    /**
     * The public native networking Kubernetes API server endpoint, if one was requested.
     */
    publicEndpoint: string;
}

export interface ContainerengineClusterImagePolicyConfig {
    /**
     * (Updatable) Whether the image verification policy is enabled. Defaults to false. If set to true, the images will be verified against the policy at runtime.
     */
    isPolicyEnabled: boolean;
    /**
     * (Updatable) A list of KMS key details.
     */
    keyDetails: outputs.ContainerengineClusterImagePolicyConfigKeyDetail[];
}

export interface ContainerengineClusterImagePolicyConfigKeyDetail {
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption. When used, `kubernetesVersion` must be at least `v1.13.0`.
     */
    kmsKeyId: string;
}

export interface ContainerengineClusterMetadata {
    /**
     * The user who created the cluster.
     */
    createdByUserId: string;
    /**
     * The OCID of the work request which created the cluster.
     */
    createdByWorkRequestId: string;
    /**
     * The user who deleted the cluster.
     */
    deletedByUserId: string;
    /**
     * The OCID of the work request which deleted the cluster.
     */
    deletedByWorkRequestId: string;
    /**
     * The time the cluster was created.
     */
    timeCreated: string;
    /**
     * The time the cluster was deleted.
     */
    timeDeleted: string;
    /**
     * The time the cluster was updated.
     */
    timeUpdated: string;
    /**
     * The user who updated the cluster.
     */
    updatedByUserId: string;
    /**
     * The OCID of the work request which updated the cluster.
     */
    updatedByWorkRequestId: string;
}

export interface ContainerengineClusterOptions {
    /**
     * Configurable cluster add-ons
     */
    addOns: outputs.ContainerengineClusterOptionsAddOns;
    /**
     * (Updatable) Configurable cluster admission controllers
     */
    admissionControllerOptions: outputs.ContainerengineClusterOptionsAdmissionControllerOptions;
    /**
     * Network configuration for Kubernetes.
     */
    kubernetesNetworkConfig: outputs.ContainerengineClusterOptionsKubernetesNetworkConfig;
    /**
     * The OCIDs of the subnets used for Kubernetes services load balancers.
     */
    serviceLbSubnetIds: string[];
}

export interface ContainerengineClusterOptionsAddOns {
    /**
     * Whether or not to enable the Kubernetes Dashboard add-on.
     */
    isKubernetesDashboardEnabled: boolean;
    /**
     * Whether or not to enable the Tiller add-on.
     */
    isTillerEnabled: boolean;
}

export interface ContainerengineClusterOptionsAdmissionControllerOptions {
    /**
     * (Updatable) Whether or not to enable the Pod Security Policy admission controller.
     */
    isPodSecurityPolicyEnabled: boolean;
}

export interface ContainerengineClusterOptionsKubernetesNetworkConfig {
    /**
     * The CIDR block for Kubernetes pods.
     */
    podsCidr: string;
    /**
     * The CIDR block for Kubernetes services.
     */
    servicesCidr: string;
}

export interface ContainerengineNodePoolInitialNodeLabel {
    /**
     * (Updatable) The key of the pair.
     */
    key: string;
    /**
     * (Updatable) The value of the pair.
     */
    value: string;
}

export interface ContainerengineNodePoolNode {
    /**
     * (Updatable) The availability domain in which to place nodes. Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * An error that may be associated with the node.
     */
    error: outputs.ContainerengineNodePoolNodeError;
    /**
     * The fault domain of this node.
     */
    faultDomain: string;
    /**
     * The OCID of the compute instance backing this node.
     */
    id: string;
    /**
     * (Updatable) The version of Kubernetes to install on the nodes in the node pool.
     */
    kubernetesVersion: string;
    /**
     * Details about the state of the node.
     */
    lifecycleDetails: string;
    /**
     * (Updatable) The name of the node pool. Avoid entering confidential information.
     */
    name: string;
    /**
     * The OCID of the node pool to which this node belongs.
     */
    nodePoolId: string;
    /**
     * The private IP address of this node.
     */
    privateIp: string;
    /**
     * The public IP address of this node.
     */
    publicIp: string;
    /**
     * The state of the node.
     */
    state: string;
    /**
     * (Updatable) The OCID of the subnet in which to place nodes.
     */
    subnetId: string;
}

export interface ContainerengineNodePoolNodeConfigDetails {
    /**
     * (Updatable) The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * (Updatable) The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
     */
    placementConfigs: outputs.ContainerengineNodePoolNodeConfigDetailsPlacementConfig[];
    /**
     * (Updatable) The number of nodes that should be in the node pool.
     */
    size: number;
}

export interface ContainerengineNodePoolNodeConfigDetailsPlacementConfig {
    /**
     * (Updatable) The availability domain in which to place nodes. Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * (Updatable) The OCID of the subnet in which to place nodes.
     */
    subnetId: string;
}

export interface ContainerengineNodePoolNodeError {
    /**
     * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
     */
    code: string;
    /**
     * A human-readable error string of the upstream error.
     */
    message: string;
    /**
     * The status of the HTTP response encountered in the upstream error.
     */
    status: string;
}

export interface ContainerengineNodePoolNodeShapeConfig {
    /**
     * (Updatable) The total amount of memory available to each node, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * (Updatable) The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
     */
    ocpus: number;
}

export interface ContainerengineNodePoolNodeSource {
    /**
     * (Updatable) The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * The user-friendly name of the entity corresponding to the OCID.
     */
    sourceName: string;
    /**
     * (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface ContainerengineNodePoolNodeSourceDetails {
    /**
     * (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
     */
    bootVolumeSizeInGbs: string;
    /**
     * (Updatable) The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface CoreBootVolumeBackupSourceDetails {
    bootVolumeBackupId: string;
    /**
     * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
     */
    kmsKeyId?: string;
    /**
     * The region of the volume backup source.
     */
    region: string;
}

export interface CoreBootVolumeBootVolumeReplica {
    /**
     * (Updatable) The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The boot volume replica's Oracle ID (OCID).
     */
    bootVolumeReplicaId: string;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
}

export interface CoreBootVolumeSourceDetails {
    /**
     * The OCID of the boot volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
     */
    type: string;
}

export interface CoreClusterNetworkInstancePool {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
     */
    compartmentId: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
     */
    instanceConfigurationId: string;
    /**
     * The load balancers attached to the instance pool.
     */
    loadBalancers: outputs.CoreClusterNetworkInstancePoolLoadBalancer[];
    /**
     * The placement configurations for the instance pool.
     */
    placementConfigurations: outputs.CoreClusterNetworkInstancePoolPlacementConfiguration[];
    /**
     * (Updatable) The number of instances that should be in the instance pool.
     */
    size: number;
    /**
     * The current state of the cluster network.
     */
    state: string;
    /**
     * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface CoreClusterNetworkInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value used for the backends.
     */
    port: number;
    /**
     * The current state of the cluster network.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface CoreClusterNetworkInstancePoolPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface CoreClusterNetworkPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
}

export interface CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface CoreComputeCapacityReservationInstanceReservationConfig {
    /**
     * (Updatable) The fault domain to use for instances created using this reservation configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
     */
    faultDomain?: string;
    /**
     * (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
     */
    instanceShape: string;
    /**
     * (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
     */
    instanceShapeConfig: outputs.CoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig;
    /**
     * (Updatable) The amount of capacity to reserve in this reservation configuration.
     */
    reservedCount: string;
    /**
     * The amount of capacity in use out of the total capacity reserved in this reservation configuration.
     */
    usedCount: string;
}

export interface CoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
    /**
     * (Updatable) The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * (Updatable) The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface CoreDefaultDhcpOptionsOption {
    customDnsServers?: string[];
    searchDomainNames: string[];
    serverType: string;
    type: string;
}

export interface CoreDefaultRouteTableRouteRule {
    /**
     * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
     */
    cidrBlock: string;
    description: string;
    destination: string;
    destinationType: string;
    networkEntityId: string;
}

export interface CoreDefaultSecurityListEgressSecurityRule {
    description: string;
    destination: string;
    destinationType: string;
    icmpOptions?: outputs.CoreDefaultSecurityListEgressSecurityRuleIcmpOptions;
    protocol: string;
    stateless: boolean;
    tcpOptions?: outputs.CoreDefaultSecurityListEgressSecurityRuleTcpOptions;
    udpOptions?: outputs.CoreDefaultSecurityListEgressSecurityRuleUdpOptions;
}

export interface CoreDefaultSecurityListEgressSecurityRuleIcmpOptions {
    code?: number;
    type: number;
}

export interface CoreDefaultSecurityListEgressSecurityRuleTcpOptions {
    max?: number;
    min?: number;
    sourcePortRange?: outputs.CoreDefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange;
}

export interface CoreDefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
    max: number;
    min: number;
}

export interface CoreDefaultSecurityListEgressSecurityRuleUdpOptions {
    max?: number;
    min?: number;
    sourcePortRange?: outputs.CoreDefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange;
}

export interface CoreDefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
    max: number;
    min: number;
}

export interface CoreDefaultSecurityListIngressSecurityRule {
    description: string;
    icmpOptions?: outputs.CoreDefaultSecurityListIngressSecurityRuleIcmpOptions;
    protocol: string;
    source: string;
    sourceType: string;
    stateless?: boolean;
    tcpOptions?: outputs.CoreDefaultSecurityListIngressSecurityRuleTcpOptions;
    udpOptions?: outputs.CoreDefaultSecurityListIngressSecurityRuleUdpOptions;
}

export interface CoreDefaultSecurityListIngressSecurityRuleIcmpOptions {
    code?: number;
    type: number;
}

export interface CoreDefaultSecurityListIngressSecurityRuleTcpOptions {
    max?: number;
    min?: number;
    sourcePortRange?: outputs.CoreDefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange;
}

export interface CoreDefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
    max: number;
    min: number;
}

export interface CoreDefaultSecurityListIngressSecurityRuleUdpOptions {
    max?: number;
    min?: number;
    sourcePortRange?: outputs.CoreDefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange;
}

export interface CoreDefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
    max: number;
    min: number;
}

export interface CoreDhcpOptionsOption {
    /**
     * (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
     */
    customDnsServers?: string[];
    /**
     * (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
     */
    searchDomainNames: string[];
    /**
     * (Updatable) 
     * * **VcnLocal:** Reserved for future use.
     * * **VcnLocalPlusInternet:** Also referred to as "Internet and VCN Resolver". Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
     * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
     */
    serverType: string;
    /**
     * (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
     */
    type: string;
}

export interface CoreDrgAttachmentManagementNetworkDetails {
    /**
     * -(Required) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     */
    id: string;
    /**
     * The IPSec connection that contains the attached IPSec tunnel.
     */
    ipsecConnectionId: string;
    /**
     * (Updatable)- The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
     */
    routeTableId: string;
    /**
     * The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VIRTUAL_CIRCUIT`
     * * `routeTableId`(Optional)(Updatable) - The OCID of the route table the DRG attachment is using.
     */
    type: string;
}

export interface CoreDrgAttachmentNetworkDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     */
    id: string;
    /**
     * The IPSec connection that contains the attached IPSec tunnel.
     */
    ipsecConnectionId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table used by the DRG attachment.
     */
    routeTableId: string;
    /**
     * (Updatable) The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
     */
    type: string;
}

export interface CoreDrgAttachmentsListDrgAllAttachment {
    /**
     * The Oracle-assigned ID of the DRG attachment
     */
    id: string;
}

export interface CoreDrgDefaultDrgRouteTables {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table assigned to DRG attachments of type IPSEC_TUNNEL on creation.
     */
    ipsecTunnel: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type REMOTE_PEERING_CONNECTION on creation.
     */
    remotePeeringConnection: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VCN on creation.
     */
    vcn: string;
    /**
     * The OCID of the default DRG route table to be assigned to DRG attachments of type VIRTUAL_CIRCUIT on creation.
     */
    virtualCircuit: string;
}

export interface CoreDrgRouteDistributionStatementMatchCriteria {
    /**
     * The type of the network resource to be included in this match. A match for a network type implies that all DRG attachments of that type insert routes into the table.
     */
    attachmentType?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG attachment.
     */
    drgAttachmentId?: string;
    /**
     * (Updatable) The type of the match criteria for a route distribution statement.
     */
    matchType?: string;
}

export interface CoreImageAgentFeatures {
    /**
     * This attribute is not used.
     */
    isManagementSupported: boolean;
    /**
     * This attribute is not used.
     */
    isMonitoringSupported: boolean;
}

export interface CoreImageImageSourceDetails {
    /**
     * The Object Storage bucket for the image.
     */
    bucketName?: string;
    /**
     * The Object Storage namespace for the image.
     */
    namespaceName?: string;
    /**
     * The Object Storage name for the image.
     */
    objectName?: string;
    /**
     * The image's operating system.  Example: `Oracle Linux`
     */
    operatingSystem?: string;
    /**
     * The image's operating system version.  Example: `7.2`
     */
    operatingSystemVersion?: string;
    /**
     * The format of the image to be imported.  Only monolithic images are supported. This attribute is not used for exported Oracle images with the Oracle Cloud Infrastructure image format. Allowed values are:
     * * `QCOW2`
     * * `VMDK`
     */
    sourceImageType?: string;
    /**
     * The source type for the image. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
     */
    sourceType: string;
    /**
     * The Object Storage URL for the image.
     */
    sourceUri?: string;
}

export interface CoreImageLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface CoreInstanceAgentConfig {
    /**
     * (Updatable) Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * (Updatable) Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     */
    isManagementDisabled: boolean;
    /**
     * (Updatable) Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     */
    isMonitoringDisabled: boolean;
    /**
     * (Updatable) The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.CoreInstanceAgentConfigPluginsConfig[];
}

export interface CoreInstanceAgentConfigPluginsConfig {
    /**
     * (Updatable) Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * (Updatable) The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface CoreInstanceAvailabilityConfig {
    /**
     * (Updatable) Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
     */
    isLiveMigrationPreferred: boolean;
    /**
     * (Updatable) The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface CoreInstanceConfigurationInstanceDetails {
    blockVolumes: outputs.CoreInstanceConfigurationInstanceDetailsBlockVolume[];
    /**
     * The type of instance details. Supported instanceType is compute
     */
    instanceType: string;
    /**
     * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    launchDetails: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetails;
    secondaryVnics: outputs.CoreInstanceConfigurationInstanceDetailsSecondaryVnic[];
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolume {
    /**
     * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
     */
    attachDetails: outputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails;
    /**
     * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
     */
    createDetails: outputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails;
    /**
     * The OCID of the volume.
     */
    volumeId: string;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails {
    /**
     * The device name.
     */
    device: string;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Whether the attachment should be created in read-only mode.
     */
    isReadOnly: boolean;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    isShareable: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    useChap: boolean;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails {
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
     */
    backupPolicyId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the volume.
     */
    kmsKeyId: string;
    /**
     * The size of the volume in GBs.
     */
    sizeInGbs: string;
    sourceDetails: outputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails;
    /**
     * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
     */
    vpusPerGb: string;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails {
    /**
     * The OCID of the volume backup.
     */
    id: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetails {
    /**
     * Configuration options for the Oracle Cloud Agent software running on the instance.
     */
    agentConfig: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig;
    /**
     * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     */
    availabilityConfig: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig;
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the compute capacity reservation this instance is launched under.
     */
    capacityReservationId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails;
    /**
     * The OCID of dedicated VM host.
     */
    dedicatedVmHostId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     */
    faultDomain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     */
    instanceOptions: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions;
    /**
     * This is an advanced option.
     */
    ipxeScript: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     */
    launchMode: string;
    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     */
    launchOptions: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions;
    /**
     * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     */
    metadata: {[key: string]: any};
    /**
     * The platform configuration requested for the instance.
     */
    platformConfig: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig;
    /**
     * Configuration options for preemptible instances.
     */
    preemptibleInstanceConfig: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig;
    /**
     * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     */
    preferredMaintenanceAction: string;
    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The shape configuration requested for the instance.
     */
    shapeConfig: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig;
    sourceDetails: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig {
    /**
     * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     */
    isManagementDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     */
    isMonitoringDisabled: boolean;
    /**
     * The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig[];
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig {
    /**
     * Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig {
    /**
     * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord?: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds?: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions {
    /**
     * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig {
    /**
     * The number of NUMA nodes per socket.
     */
    numaNodesPerSocket: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig {
    /**
     * The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
    /**
     * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig {
    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails {
    /**
     * The OCID of the boot volume used to boot the instance.
     */
    bootVolumeId: string;
    /**
     * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the image used to boot the instance.
     */
    imageId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface CoreInstanceConfigurationInstanceDetailsSecondaryVnic {
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     */
    nicIndex: number;
}

export interface CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord?: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds?: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface CoreInstanceCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a DNS record. If set to false, no DNS record registion for the VNIC; if set to true, DNS record will be registered. The default value is true.  Example: `true`
     */
    assignPrivateDnsRecord?: boolean;
    /**
     * (Updatable) Whether the VNIC should be assigned a public IP address. Defaults to whether the subnet is public or private. If not set and the VNIC is being created in a private subnet (that is, where `prohibitPublicIpOnVnic` = true in the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/)), then no public IP address is assigned. If not set and the subnet is public (`prohibitPublicIpOnVnic` = false), then a public IP address is assigned. If set to true and `prohibitPublicIpOnVnic` = true, an error is returned.
     */
    assignPublicIp?: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My bare metal instance`
     */
    displayName: string;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
     */
    hostnameLabel: string;
    /**
     * (Updatable) A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds?: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This is the VNIC's *primary* private IP address. The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
     */
    privateIp: string;
    /**
     * (Updatable) Whether the source/destination check is disabled on the VNIC. Defaults to `false`, which means the check is performed. For information about why you would skip the source/destination check, see [Using a Private IP as a Route Target](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm#privateip).
     */
    skipSourceDestCheck: boolean;
    /**
     * Deprecated. Instead use `subnetId` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). At least one of them is required; if you provide both, the values must match.
     */
    subnetId: string;
    /**
     * Provide this attribute only if you are an Oracle Cloud VMware Solution customer and creating a secondary VNIC in a VLAN. The value is the OCID of the VLAN. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     */
    vlanId: string;
}

export interface CoreInstanceInstanceOptions {
    /**
     * (Updatable) Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface CoreInstanceLaunchOptions {
    /**
     * (Updatable) Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * (Updatable) Use this for update operation only. This field is  Deprecated during create. For create use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * (Updatable) Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface CoreInstancePlatformConfig {
    /**
     * The number of NUMA nodes per socket (NPS).
     */
    numaNodesPerSocket: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface CoreInstancePoolInstanceLoadBalancerBackend {
    /**
     * The health of the backend as observed by the load balancer.
     */
    backendHealthStatus: string;
    /**
     * The name of the backend in the backend set.
     */
    backendName: string;
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The OCID of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
     */
    state: string;
}

export interface CoreInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer to add instances to.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer to attach to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value to use when creating the backend set.
     */
    port: number;
    /**
     * (Updatable) The target state for the instance pool update operation (ignored at create time and should not be set). Could be set to RUNNING or STOPPED.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface CoreInstancePoolPlacementConfiguration {
    /**
     * (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * (Updatable) The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * (Updatable) The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.CoreInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface CoreInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * (Updatable) The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * (Updatable) The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface CoreInstancePreemptibleInstanceConfig {
    /**
     * The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.CoreInstancePreemptibleInstanceConfigPreemptionAction;
}

export interface CoreInstancePreemptibleInstanceConfigPreemptionAction {
    /**
     * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface CoreInstanceShapeConfig {
    /**
     * (Updatable) The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * A short description of the instance's graphics processing unit (GPU).
     */
    gpuDescription: string;
    /**
     * The number of GPUs available to the instance.
     */
    gpus: number;
    /**
     * A short description of the local disks available to this instance.
     */
    localDiskDescription: string;
    /**
     * The number of local disks available to the instance.
     */
    localDisks: number;
    /**
     * The aggregate size of all local disks, in gigabytes.
     */
    localDisksTotalSizeInGbs: number;
    /**
     * The maximum number of VNIC attachments for the instance.
     */
    maxVnicAttachments: number;
    /**
     * (Updatable) The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The networking bandwidth available to the instance, in gigabits per second.
     */
    networkingBandwidthInGbps: number;
    /**
     * (Updatable) The total number of OCPUs available to the instance.
     */
    ocpus: number;
    /**
     * A short description of the instance's processor (CPU).
     */
    processorDescription: string;
}

export interface CoreInstanceSourceDetails {
    /**
     * (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
     */
    kmsKeyId: string;
    /**
     * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
     */
    sourceId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface CoreIpsecConnectionTunnelManagementBgpSessionInfo {
    /**
     * the state of the BGP.
     */
    bgpState: string;
    /**
     * If the tunnel's `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel's BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
     */
    customerBgpAsn: string;
    /**
     * The IP address for the CPE end of the inside tunnel interface.
     */
    customerInterfaceIp: string;
    /**
     * This is the value of the Oracle Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
     */
    oracleBgpAsn: string;
    /**
     * The IP address for the Oracle end of the inside tunnel interface.
     */
    oracleInterfaceIp: string;
}

export interface CoreIpsecConnectionTunnelManagementEncryptionDomainConfig {
    /**
     * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
     */
    cpeTrafficSelectors: string[];
    /**
     * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
     */
    oracleTrafficSelectors: string[];
}

export interface CoreNetworkSecurityGroupSecurityRuleIcmpOptions {
    /**
     * The ICMP code (optional).
     */
    code?: number;
    /**
     * The ICMP type.
     */
    type: number;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptions {
    destinationPortRange?: outputs.CoreNetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange;
    sourcePortRange?: outputs.CoreNetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange {
    /**
     * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number, which must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange {
    /**
     * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number, which must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptions {
    destinationPortRange: outputs.CoreNetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange;
    sourcePortRange: outputs.CoreNetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange {
    /**
     * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number, which must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange {
    /**
     * The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number, which must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreRouteTableRouteRule {
    /**
     * (Updatable) Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
     *
     * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
     */
    cidrBlock: string;
    /**
     * (Updatable) An optional description of your choice for the rule.
     */
    description: string;
    /**
     * (Updatable) Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
     */
    destination: string;
    /**
     * (Updatable) Type of destination for the rule. Required if you provide a `destination`.
     * * `CIDR_BLOCK`: If the rule's `destination` is an IP address range in CIDR notation.
     * * `SERVICE_CIDR_BLOCK`: If the rule's `destination` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic destined for a particular `Service` through a service gateway).
     */
    destinationType: string;
    /**
     * (Updatable) The OCID for the route rule's target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
     */
    networkEntityId: string;
}

export interface CoreSecurityListEgressSecurityRule {
    /**
     * (Updatable) An optional description of your choice for the rule.
     */
    description: string;
    /**
     * (Updatable) Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
     */
    destination: string;
    /**
     * (Updatable) Type of destination for the rule. The default is `CIDR_BLOCK`.
     */
    destinationType: string;
    /**
     * (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
     * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
     * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
     */
    icmpOptions?: outputs.CoreSecurityListEgressSecurityRuleIcmpOptions;
    /**
     * (Updatable) The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
     */
    protocol: string;
    /**
     * (Updatable) A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
     */
    stateless: boolean;
    /**
     * (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
     */
    tcpOptions?: outputs.CoreSecurityListEgressSecurityRuleTcpOptions;
    /**
     * (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
     */
    udpOptions?: outputs.CoreSecurityListEgressSecurityRuleUdpOptions;
}

export interface CoreSecurityListEgressSecurityRuleIcmpOptions {
    /**
     * (Updatable) The ICMP code (optional).
     */
    code?: number;
    /**
     * (Updatable) The ICMP type.
     */
    type: number;
}

export interface CoreSecurityListEgressSecurityRuleTcpOptions {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max?: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min?: number;
    /**
     * (Updatable)
     */
    sourcePortRange?: outputs.CoreSecurityListEgressSecurityRuleTcpOptionsSourcePortRange;
}

export interface CoreSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreSecurityListEgressSecurityRuleUdpOptions {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max?: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min?: number;
    /**
     * (Updatable)
     */
    sourcePortRange?: outputs.CoreSecurityListEgressSecurityRuleUdpOptionsSourcePortRange;
}

export interface CoreSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreSecurityListIngressSecurityRule {
    /**
     * (Updatable) An optional description of your choice for the rule.
     */
    description: string;
    /**
     * (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
     * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
     * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
     */
    icmpOptions?: outputs.CoreSecurityListIngressSecurityRuleIcmpOptions;
    /**
     * (Updatable) The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
     */
    protocol: string;
    /**
     * (Updatable) Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
     */
    source: string;
    /**
     * (Updatable) Type of source for the rule. The default is `CIDR_BLOCK`.
     * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
     * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
     */
    sourceType: string;
    /**
     * (Updatable) A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
     */
    stateless?: boolean;
    /**
     * (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
     */
    tcpOptions?: outputs.CoreSecurityListIngressSecurityRuleTcpOptions;
    /**
     * (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
     */
    udpOptions?: outputs.CoreSecurityListIngressSecurityRuleUdpOptions;
}

export interface CoreSecurityListIngressSecurityRuleIcmpOptions {
    /**
     * (Updatable) The ICMP code (optional).
     */
    code?: number;
    /**
     * (Updatable) The ICMP type.
     */
    type: number;
}

export interface CoreSecurityListIngressSecurityRuleTcpOptions {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max?: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min?: number;
    /**
     * (Updatable)
     */
    sourcePortRange?: outputs.CoreSecurityListIngressSecurityRuleTcpOptionsSourcePortRange;
}

export interface CoreSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreSecurityListIngressSecurityRuleUdpOptions {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max?: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min?: number;
    /**
     * (Updatable)
     */
    sourcePortRange?: outputs.CoreSecurityListIngressSecurityRuleUdpOptionsSourcePortRange;
}

export interface CoreSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
    /**
     * (Updatable) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * (Updatable) The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface CoreServiceGatewayService {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/).
     */
    serviceId: string;
    /**
     * The name of the service.
     */
    serviceName: string;
}

export interface CoreVirtualCircuitCrossConnectMapping {
    /**
     * (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
     */
    bgpMd5authKey: string;
    /**
     * (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     */
    crossConnectOrCrossConnectGroupId: string;
    /**
     * (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
     */
    customerBgpPeeringIp: string;
    /**
     * (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
     */
    customerBgpPeeringIpv6: string;
    /**
     * (Updatable) The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIp: string;
    /**
     * (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle's end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIpv6: string;
    /**
     * (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     */
    vlan: number;
}

export interface CoreVirtualCircuitPublicPrefix {
    /**
     * (Updatable) An individual public IP prefix (CIDR) to add to the public virtual circuit. All prefix sizes are allowed.
     */
    cidrBlock: string;
}

export interface CoreVnicAttachmentCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a DNS record. If set to false, no DNS record registion for the VNIC; if set to true, DNS record will be registered. Example: `true`
     */
    assignPrivateDnsRecord?: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. Defaults to whether the subnet is public or private. If not set and the VNIC is being created in a private subnet (that is, where `prohibitPublicIpOnVnic` = true in the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/)), then no public IP address is assigned. If not set and the subnet is public (`prohibitPublicIpOnVnic` = false), then a public IP address is assigned. If set to true and `prohibitPublicIpOnVnic` = true, an error is returned.
     */
    assignPublicIp?: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * (Updatable) The hostname for the VNIC's primary private IP. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be unique across all VNICs in the subnet and comply with [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
     */
    hostnameLabel: string;
    /**
     * (Updatable) A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds?: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This is the VNIC's *primary* private IP address. The value appears in the [Vnic](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vnic/) object and also the [PrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/) object returned by [ListPrivateIps](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/ListPrivateIps) and [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PrivateIp/GetPrivateIp).
     */
    privateIp: string;
    /**
     * (Updatable) Whether the source/destination check is disabled on the VNIC. Defaults to `false`, which means the check is performed. For information about why you would skip the source/destination check, see [Using a Private IP as a Route Target](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm#privateip).
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. When launching an instance, use this `subnetId` instead of the deprecated `subnetId` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/requests/LaunchInstanceDetails). At least one of them is required; if you provide both, the values must match.
     */
    subnetId: string;
    /**
     * Provide this attribute only if you are an Oracle Cloud VMware Solution customer and creating a secondary VNIC in a VLAN. The value is the OCID of the VLAN. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     */
    vlanId: string;
}

export interface CoreVolumeAttachmentMultipathDevice {
    /**
     * The volume's iSCSI IP address.  Example: `169.254.2.2`
     */
    ipv4: string;
    /**
     * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     */
    iqn: string;
    /**
     * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
     */
    port: number;
}

export interface CoreVolumeBackupPolicySchedule {
    /**
     * (Updatable) The type of volume backup to create.
     */
    backupType: string;
    /**
     * (Updatable) The day of the month to schedule the volume backup.
     */
    dayOfMonth?: number;
    /**
     * (Updatable) The day of the week to schedule the volume backup.
     */
    dayOfWeek?: string;
    /**
     * (Updatable) The hour of the day to schedule the volume backup.
     */
    hourOfDay?: number;
    /**
     * (Updatable) The month of the year to schedule the volume backup.
     */
    month?: string;
    /**
     * (Updatable) The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
     */
    offsetSeconds?: number;
    /**
     * (Updatable) Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
     */
    offsetType?: string;
    /**
     * (Updatable) The volume backup frequency.
     */
    period: string;
    /**
     * (Updatable) How long, in seconds, to keep the volume backups created by this schedule.
     */
    retentionSeconds: number;
    /**
     * (Updatable) Specifies what time zone is the schedule in
     * enum:
     * - `UTC`
     * - `REGIONAL_DATA_CENTER_TIME`
     */
    timeZone: string;
}

export interface CoreVolumeBackupSourceDetails {
    /**
     * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
     */
    kmsKeyId?: string;
    /**
     * The region of the volume backup source.
     */
    region: string;
    /**
     * The OCID of the source volume backup.
     */
    volumeBackupId: string;
}

export interface CoreVolumeBlockVolumeReplica {
    /**
     * (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The block volume replica's Oracle ID (OCID).
     */
    blockVolumeReplicaId: string;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
}

export interface CoreVolumeGroupBackupSourceDetails {
    /**
     * The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
     */
    kmsKeyId?: string;
    /**
     * The region of the volume backup source.
     */
    region: string;
    /**
     * The OCID of the source volume group backup.
     */
    volumeGroupBackupId: string;
}

export interface CoreVolumeGroupSourceDetails {
    /**
     * The type can be one of these values: `volumeGroupBackupId`, `volumeGroupId`, `volumeIds`
     */
    type: string;
    /**
     * The OCID of the volume group backup to restore from.
     */
    volumeGroupBackupId?: string;
    /**
     * The OCID of the volume group to clone from.
     */
    volumeGroupId?: string;
    /**
     * OCIDs for the volumes in this volume group.
     */
    volumeIds?: string[];
}

export interface CoreVolumeSourceDetails {
    /**
     * The OCID of the block volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
     */
    type: string;
}

export interface DataSafeTargetDatabaseConnectionOption {
    /**
     * (Updatable) The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     */
    connectionType: string;
    /**
     * (Updatable) The OCID of the Data Safe private endpoint.
     */
    datasafePrivateEndpointId: string;
    /**
     * (Updatable) The OCID of the on-premises connector.
     */
    onPremConnectorId: string;
}

export interface DataSafeTargetDatabaseCredentials {
    /**
     * (Updatable) The password of the database user.
     */
    password: string;
    /**
     * (Updatable) The database user name.
     */
    userName: string;
}

export interface DataSafeTargetDatabaseDatabaseDetails {
    /**
     * (Updatable) The OCID of the autonomous database registered as a target database in Data Safe.
     */
    autonomousDatabaseId: string;
    /**
     * (Updatable) The database type.
     */
    databaseType: string;
    /**
     * (Updatable) The OCID of the cloud database system registered as a target database in Data Safe.
     */
    dbSystemId: string;
    /**
     * (Updatable) The infrastructure type the database is running on.
     */
    infrastructureType: string;
    /**
     * (Updatable) The OCID of the compute instance on which the database is running.
     */
    instanceId: string;
    /**
     * (Updatable) A List of either the IP Addresses or FQDN names of the database hosts.
     */
    ipAddresses: string[];
    /**
     * (Updatable) The port number of the database listener.
     */
    listenerPort: number;
    /**
     * (Updatable) The service name of the database registered as target database.
     */
    serviceName: string;
    /**
     * (Updatable) The OCID of the VM cluster in which the database is running.
     */
    vmClusterId: string;
}

export interface DataSafeTargetDatabaseTlsConfig {
    /**
     * (Updatable) The format of the certificate store.
     */
    certificateStoreType: string;
    /**
     * (Updatable) Base64 encoded string of key store file content.
     */
    keyStoreContent: string;
    /**
     * (Updatable) Status to represent whether the database connection is TLS enabled or not.
     */
    status: string;
    /**
     * (Updatable) The password to read the trust store and key store files, if they are password protected.
     */
    storePassword: string;
    /**
     * (Updatable) Base64 encoded string of trust store file content.
     */
    trustStoreContent: string;
}

export interface DatabaseAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails;
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword?: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindow {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetails {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface DatabaseAutonomousDatabaseApexDetails {
    /**
     * The Oracle APEX Application Development version.
     */
    apexVersion: string;
    /**
     * The Oracle REST Data Services (ORDS) version.
     */
    ordsVersion: string;
}

export interface DatabaseAutonomousDatabaseBackupConfig {
    /**
     * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
     */
    manualBackupBucketName: string;
    /**
     * The manual backup destination type.
     */
    manualBackupType: string;
}

export interface DatabaseAutonomousDatabaseConnectionStrings {
    /**
     * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    dedicated: string;
    /**
     * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
     */
    high: string;
    /**
     * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    low: string;
    /**
     * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
     */
    medium: string;
}

export interface DatabaseAutonomousDatabaseConnectionUrls {
    /**
     * Oracle Application Express (APEX) URL.
     */
    apexUrl: string;
    /**
     * The URL of the Graph Studio for the Autonomous Database.
     */
    graphStudioUrl: string;
    /**
     * Oracle Machine Learning user management URL.
     */
    machineLearningUserManagementUrl: string;
    /**
     * Oracle SQL Developer Web URL.
     */
    sqlDevWebUrl: string;
}

export interface DatabaseAutonomousDatabaseCustomerContact {
    /**
     * (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface DatabaseAutonomousDatabaseKeyHistoryEntry {
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * The date and time the kms key activated.
     */
    timeActivated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface DatabaseAutonomousDatabaseStandbyDb {
    /**
     * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     */
    lagTimeInSeconds: number;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * (Updatable) The current state of the Autonomous Database. Could be set to AVAILABLE or STOPPED
     */
    state: string;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindow {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetails {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseBackupDestinationAssociatedDatabase {
    /**
     * The display name of the database that is associated with the backup destination.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
}

export interface DatabaseBackupDestinationMountTypeDetails {
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     */
    localMountPointPath: string;
    /**
     * Mount type for backup destination.
     */
    mountType: string;
    /**
     * Specifies the directory on which to mount the file system
     */
    nfsServerExport: string;
    /**
     * IP addresses for NFS Auto mount.
     */
    nfsServers: string[];
}

export interface DatabaseCloudExadataInfrastructureCustomerContact {
    /**
     * (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindow {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseCloudExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindowMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseCloudVmClusterIormConfigCache {
    /**
     * An array of IORM settings for all the database in the Exadata DB system.
     */
    dbPlans: outputs.DatabaseCloudVmClusterIormConfigCacheDbPlan[];
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current value for the IORM objective. The default is `AUTO`.
     */
    objective: string;
    /**
     * The current state of the cloud VM cluster.
     */
    state: string;
}

export interface DatabaseCloudVmClusterIormConfigCacheDbPlan {
    /**
     * The database name. For the default `DbPlan`, the `dbName` is `default`.
     */
    dbName: string;
    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     */
    flashCacheLimit: string;
    /**
     * The relative priority of this database.
     */
    share: number;
}

export interface DatabaseDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the Database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * Host name based CDB Connection String.
     */
    cdbDefault: string;
    /**
     * IP based CDB Connection String.
     */
    cdbIpDefault: string;
}

export interface DatabaseDatabaseDatabase {
    /**
     * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    adminPassword: string;
    /**
     * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    backupId?: string;
    /**
     * The password to open the TDE wallet.
     */
    backupTdePassword?: string;
    /**
     * The character set for the database.  The default is AL32UTF8. Allowed values are:
     */
    characterSet: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    /**
     * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.DatabaseDatabaseDatabaseDbBackupConfig;
    /**
     * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     */
    dbName: string;
    /**
     * The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
     */
    dbUniqueName: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     */
    ncharacterSet: string;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    /**
     * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
     */
    tdeWalletPassword: string;
}

export interface DatabaseDatabaseDatabaseDbBackupConfig {
    /**
     * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type?: string;
}

export interface DatabaseDatabaseDbBackupConfig {
    /**
     * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface DatabaseDatabaseUpgradeConnectionStrings {
    /**
     * All connection strings to use to connect to the Database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * Host name based CDB Connection String.
     */
    cdbDefault: string;
    /**
     * IP based CDB Connection String.
     */
    cdbIpDefault: string;
}

export interface DatabaseDatabaseUpgradeDatabaseUpgradeSourceDetails {
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to upgrade a database.
     */
    databaseSoftwareImageId: string;
    /**
     * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     */
    dbVersion: string;
    /**
     * Additional upgrade options supported by DBUA(Database Upgrade Assistant). Example: "-upgradeTimezone false -keepEvents"
     */
    options: string;
    /**
     * The source of the Oracle Database software to be used for the upgrade.
     * * Use `DB_VERSION` to specify a generally-available Oracle Database software version to upgrade the database.
     * * Use `DB_SOFTWARE_IMAGE` to specify a [database software image](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/databasesoftwareimage.htm) to upgrade the database.
     */
    source: string;
}

export interface DatabaseDatabaseUpgradeDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseDatabaseUpgradeDbBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseDatabaseUpgradeDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface DatabaseDbHomeDatabase {
    /**
     * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    adminPassword: string;
    /**
     * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    backupId: string;
    /**
     * The password to open the TDE wallet.
     */
    backupTdePassword: string;
    /**
     * The character set for the database.  The default is AL32UTF8. Allowed values are:
     */
    characterSet: string;
    connectionStrings: outputs.DatabaseDbHomeDatabaseConnectionString[];
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    /**
     * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.DatabaseDbHomeDatabaseDbBackupConfig;
    /**
     * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     */
    dbName: string;
    dbUniqueName: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     */
    ncharacterSet: string;
    /**
     * List of one-off patches for Database Homes.
     */
    oneOffPatches: string[];
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    /**
     * The current state of the Database Home.
     */
    state: string;
    /**
     * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
     */
    tdeWalletPassword: string;
    /**
     * The date and time the Database Home was created.
     */
    timeCreated: string;
    /**
     * The point in time of the original database from which the new database is created. If not specifed, the latest backup is used to create the database.
     */
    timeStampForPointInTimeRecovery: string;
}

export interface DatabaseDbHomeDatabaseConnectionString {
    allConnectionStrings: {[key: string]: any};
    cdbDefault: string;
    cdbIpDefault: string;
}

export interface DatabaseDbHomeDatabaseDbBackupConfig {
    /**
     * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Type of the database backup destination. Supported values: `NFS`.
     */
    type: string;
}

export interface DatabaseDbSystemDbHome {
    createAsync?: boolean;
    /**
     * (Updatable) Details for creating a database by restoring from a source database system.
     */
    database: outputs.DatabaseDbSystemDbHomeDatabase;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseSoftwareImageId: string;
    dbHomeLocation: string;
    /**
     * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     */
    dbVersion: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name for the DB system. The name does not have to be unique.
     */
    displayName: string;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     */
    lastPatchHistoryEntryId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current state of the DB system.
     */
    state: string;
    /**
     * The date and time the DB system was created.
     */
    timeCreated: string;
}

export interface DatabaseDbSystemDbHomeDatabase {
    /**
     * A strong password for SYS, SYSTEM, PDB Admin and TDE Wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    adminPassword: string;
    /**
     * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    backupId: string;
    /**
     * The password to open the TDE wallet.
     */
    backupTdePassword: string;
    /**
     * The character set for the database.  The default is AL32UTF8. Allowed values are:
     */
    characterSet: string;
    connectionStrings: outputs.DatabaseDbSystemDbHomeDatabaseConnectionString[];
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseSoftwareImageId: string;
    /**
     * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.DatabaseDbSystemDbHomeDatabaseDbBackupConfig;
    /**
     * The database domain. In a distributed database system, DB_DOMAIN specifies the logical location of the database within the network structure.
     */
    dbDomain: string;
    /**
     * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     */
    dbName: string;
    dbUniqueName: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     */
    ncharacterSet: string;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    /**
     * The current state of the DB system.
     */
    state: string;
    /**
     * The optional password to open the TDE wallet. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numeric, and two special characters. The special characters must be _, \#, or -.
     */
    tdeWalletPassword: string;
    /**
     * The date and time the DB system was created.
     */
    timeCreated: string;
    /**
     * The point in time of the original database from which the new database is created. If not specifed, the latest backup is used to create the database.
     */
    timeStampForPointInTimeRecovery: string;
}

export interface DatabaseDbSystemDbHomeDatabaseConnectionString {
    allConnectionStrings: {[key: string]: any};
    cdbDefault: string;
    cdbIpDefault: string;
}

export interface DatabaseDbSystemDbHomeDatabaseDbBackupConfig {
    /**
     * (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * (Updatable) Backup destination details.
     */
    backupDestinationDetails: outputs.DatabaseDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface DatabaseDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface DatabaseDbSystemDbSystemOptions {
    /**
     * The storage option used in DB system. ASM - Automatic storage management LVM - Logical Volume management
     */
    storageManagement: string;
}

export interface DatabaseDbSystemIormConfigCache {
    /**
     * An array of IORM settings for all the database in the Exadata DB system.
     */
    dbPlans: outputs.DatabaseDbSystemIormConfigCacheDbPlan[];
    dbSystemId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current value for the IORM objective. The default is `AUTO`.
     */
    objective: string;
    /**
     * The current state of the DB system.
     */
    state: string;
}

export interface DatabaseDbSystemIormConfigCacheDbPlan {
    /**
     * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     */
    dbName: string;
    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     */
    flashCacheLimit: string;
    /**
     * The relative priority of this database.
     */
    share: number;
}

export interface DatabaseDbSystemMaintenanceWindow {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseDbSystemMaintenanceWindowDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseDbSystemMaintenanceWindowMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseDbSystemMaintenanceWindowDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseDbSystemMaintenanceWindowDetails {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseDbSystemMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseDbSystemMaintenanceWindowDetailsMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseDbSystemMaintenanceWindowDetailsDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseDbSystemMaintenanceWindowDetailsMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseDbSystemMaintenanceWindowMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseExadataInfrastructureContact {
    /**
     * (Updatable) The email for the Exadata Infrastructure contact.
     */
    email: string;
    /**
     * (Updatable) If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
     */
    isContactMosValidated: boolean;
    /**
     * (Updatable) If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
     */
    isPrimary: boolean;
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
    /**
     * (Updatable) The phone number for the Exadata Infrastructure contact.
     */
    phoneNumber?: string;
}

export interface DatabaseExadataInfrastructureMaintenanceWindow {
    /**
     * (Updatable) Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.DatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * (Updatable) The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * (Updatable) Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * (Updatable) Months during the year when maintenance should be performed.
     */
    months: outputs.DatabaseExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * (Updatable) The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * (Updatable) Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface DatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseExadataInfrastructureMaintenanceWindowMonth {
    /**
     * (Updatable) Name of the month of the year.
     */
    name: string;
}

export interface DatabaseExadataInfrastructureStorageContact {
    email: string;
    isContactMosValidated: boolean;
    isPrimary: boolean;
    name: string;
    phoneNumber?: string;
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindow {
    daysOfWeeks: outputs.DatabaseExadataInfrastructureStorageMaintenanceWindowDaysOfWeek[];
    hoursOfDays: number[];
    leadTimeInWeeks: number;
    months: outputs.DatabaseExadataInfrastructureStorageMaintenanceWindowMonth[];
    preference: string;
    weeksOfMonths: number[];
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindowDaysOfWeek {
    name: string;
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindowMonth {
    name: string;
}

export interface DatabaseExadataIormConfigDbPlan {
    /**
     * (Updatable) The database name. For the default `DbPlan`, the `dbName` is `default`.
     */
    dbName: string;
    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     */
    flashCacheLimit: string;
    /**
     * (Updatable) The relative priority of this database.
     */
    share: number;
}

export interface DatabaseExternalContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface DatabaseExternalDatabaseConnectorConnectionCredentials {
    /**
     * (Updatable) The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
     */
    credentialName: string;
    /**
     * (Updatable) The type of credential used to connect to the database.
     */
    credentialType: string;
    /**
     * (Updatable) The password that will be used to connect to the database.
     */
    password?: string;
    /**
     * (Updatable) The role of the user that will be connecting to the database.
     */
    role: string;
    /**
     * (Updatable) The username that will be used to connect to the database.
     */
    username?: string;
}

export interface DatabaseExternalDatabaseConnectorConnectionString {
    /**
     * (Updatable) The host name of the database.
     */
    hostname: string;
    /**
     * (Updatable) The port used to connect to the database.
     */
    port: number;
    /**
     * (Updatable) The protocol used to connect to the database.
     */
    protocol: string;
    /**
     * (Updatable) The name of the service alias used to connect to the database.
     */
    service: string;
}

export interface DatabaseExternalNonContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface DatabaseExternalNonContainerDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface DatabaseExternalPluggableDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface DatabaseExternalPluggableDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface DatabaseKeyStoreAssociatedDatabase {
    /**
     * The name of the database that is associated with the key store.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    id: string;
}

export interface DatabaseKeyStoreTypeDetails {
    /**
     * (Updatable) The administrator username to connect to Oracle Key Vault
     */
    adminUsername: string;
    /**
     * (Updatable) The list of Oracle Key Vault connection IP addresses.
     */
    connectionIps: string[];
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    secretId: string;
    /**
     * (Updatable) The type of key store.
     */
    type: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface DatabaseManagementManagedDatabaseGroupManagedDatabase {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
     */
    compartmentId: string;
    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
     */
    databaseSubType: string;
    /**
     * The type of Oracle Database installation.
     */
    databaseType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed database that needs to be added to the Managed Database Group.
     */
    id: string;
    /**
     * The name of the Managed Database Group. Valid characters are uppercase or lowercase letters, numbers, and "_". The name of the Managed Database Group cannot be modified. It must be unique in the compartment and must begin with an alphabetic character.
     */
    name: string;
    /**
     * The date and time the Managed Database was added to the group.
     */
    timeAdded: string;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterCredentials {
    /**
     * The password for the database user name.
     */
    password: string;
    /**
     * The role of the database user. Indicates whether the database user is a normal user or sysdba.
     */
    role: string;
    /**
     * The database user name used to perform management activity.
     */
    userName: string;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterParameter {
    /**
     * The parameter name.
     */
    name: string;
    /**
     * A comment string to associate with the change in parameter value. It cannot contain control characters or a line break.
     */
    updateComment: string;
    /**
     * The parameter value.
     */
    value: string;
}

export interface DatabaseManagementManagedDatabasesResetDatabaseParameterCredentials {
    /**
     * The password for the database user name.
     */
    password: string;
    /**
     * The role of the database user. Indicates whether the database user is a normal user or sysdba.
     */
    role: string;
    /**
     * The database user name used to perform management activity.
     */
    userName: string;
}

export interface DatabaseMigrationAdditionalMigration {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
     */
    cloudExadataInfrastructureId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
     */
    cloudVmClusterId: string;
    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
}

export interface DatabaseMigrationConnectionAdminCredentials {
    /**
     * (Updatable) Admin password
     */
    password: string;
    /**
     * (Updatable) Admin username
     */
    username: string;
}

export interface DatabaseMigrationConnectionConnectDescriptor {
    /**
     * (Updatable) Connect String. Required if no host, port nor databaseServiceName were specified. If a Private Endpoint was specified in the Connection, the host entry should be a valid IP address. Supported formats: Easy connect: <host>:<port>/<db_service_name> Long format: (description= (address=(port=<port>)(host=<host>))(connect_data=(service_name=<db_service_name>)))
     */
    connectString: string;
    /**
     * (Updatable) Database service name. Required if no connectString was specified.
     */
    databaseServiceName: string;
    /**
     * (Updatable) Name of the host the sshkey is valid for.
     */
    host: string;
    /**
     * (Updatable) Port of the connect descriptor. Required if no connectString was specified.
     */
    port: number;
}

export interface DatabaseMigrationConnectionPrivateEndpoint {
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
     */
    id: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.  Required if the id was not specified.
     */
    subnetId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to. Required if the id was not specified.
     */
    vcnId: string;
}

export interface DatabaseMigrationConnectionSshDetails {
    /**
     * (Updatable) Name of the host the sshkey is valid for.
     */
    host: string;
    /**
     * (Updatable) Private ssh key string.
     */
    sshkey: string;
    /**
     * (Updatable) Sudo location
     */
    sudoLocation: string;
    /**
     * (Updatable) SSH user
     */
    user: string;
}

export interface DatabaseMigrationConnectionVaultDetails {
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * (Updatable) OCID of the vault encryption key
     */
    keyId: string;
    /**
     * (Updatable) OCID of the vault
     */
    vaultId: string;
}

export interface DatabaseMigrationJobProgress {
    /**
     * Current phase of the job.
     */
    currentPhase: string;
    /**
     * Current status of the job.
     */
    currentStatus: string;
    /**
     * List of phase status for the job.
     */
    phases: outputs.DatabaseMigrationJobProgressPhase[];
}

export interface DatabaseMigrationJobProgressPhase {
    /**
     * Duration of the phase in milliseconds
     */
    durationInMs: number;
    /**
     * Phase name
     */
    name: string;
    /**
     * Percent progress of job phase.
     */
    progress: number;
    /**
     * Phase status
     */
    status: string;
}

export interface DatabaseMigrationJobUnsupportedObject {
    /**
     * Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * Owner of the object (regular expression is allowed)
     */
    owner: string;
    /**
     * Type of unsupported object
     */
    type: string;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetails {
    /**
     * (Updatable) Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
     */
    databaseLinkDetails: outputs.DatabaseMigrationMigrationDataTransferMediumDetailsDatabaseLinkDetails;
    /**
     * (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Datapump dump files for the migration.
     */
    objectStorageDetails: outputs.DatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageDetails;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetailsDatabaseLinkDetails {
    /**
     * (Updatable) Name of directory object in database
     */
    name: string;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageDetails {
    /**
     * (Updatable) Bucket name.
     */
    bucket: string;
    /**
     * (Updatable) Namespace name of the object store bucket.
     */
    namespace: string;
}

export interface DatabaseMigrationMigrationDatapumpSettings {
    /**
     * (Updatable) Optional parameters for Datapump Export and Import. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-62324358-2F26-4A94-B69F-1075D53FA96D__BABDECJE
     */
    dataPumpParameters: outputs.DatabaseMigrationMigrationDatapumpSettingsDataPumpParameters;
    /**
     * (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
     */
    exportDirectoryObject: outputs.DatabaseMigrationMigrationDatapumpSettingsExportDirectoryObject;
    /**
     * (Updatable) Directory object details, used to define either import or export directory objects in Data Pump Settings. Import directory is required for Non-Autonomous target connections. If specified for an autonomous target, it will show an error. Export directory will error if there are database link details specified.
     */
    importDirectoryObject: outputs.DatabaseMigrationMigrationDatapumpSettingsImportDirectoryObject;
    /**
     * (Updatable) DataPump job mode. Refer to docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-92C2CB46-8BC9-414D-B62E-79CD788C1E62__BABBDEHD
     */
    jobMode: string;
    /**
     * (Updatable) Defines remapping to be applied to objects as they are processed. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-0FC32790-91E6-4781-87A3-229DE024CB3D.
     */
    metadataRemaps: outputs.DatabaseMigrationMigrationDatapumpSettingsMetadataRemap[];
}

export interface DatabaseMigrationMigrationDatapumpSettingsDataPumpParameters {
    /**
     * (Updatable) Estimate size of dumps that will be generated.
     */
    estimate: string;
    /**
     * (Updatable) Exclude paratemers for export and import.
     */
    excludeParameters: string[];
    /**
     * (Updatable) Maximum number of worker processes that can be used for a Datapump Export job.
     */
    exportParallelismDegree: number;
    /**
     * (Updatable) Maximum number of worker processes that can be used for a Datapump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     */
    importParallelismDegree: number;
    /**
     * (Updatable) False to force datapump worker process to run on one instance.
     */
    isCluster: boolean;
    /**
     * (Updatable) IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     */
    tableExistsAction: string;
}

export interface DatabaseMigrationMigrationDatapumpSettingsExportDirectoryObject {
    /**
     * (Updatable) Name of directory object in database
     */
    name: string;
    /**
     * (Updatable) Absolute path of directory on database server
     */
    path: string;
}

export interface DatabaseMigrationMigrationDatapumpSettingsImportDirectoryObject {
    /**
     * (Updatable) Name of directory object in database
     */
    name: string;
    /**
     * (Updatable) Absolute path of directory on database server
     */
    path: string;
}

export interface DatabaseMigrationMigrationDatapumpSettingsMetadataRemap {
    /**
     * (Updatable) Specifies the new value that oldValue should be translated into.
     */
    newValue: string;
    /**
     * (Updatable) Specifies the value which needs to be reset.
     */
    oldValue: string;
    /**
     * (Updatable) Migration type.
     */
    type: string;
}

export interface DatabaseMigrationMigrationExcludeObject {
    /**
     * (Updatable) Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * (Updatable) Owner of the object (regular expression is allowed)
     */
    owner: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetails {
    /**
     * (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
     */
    hub: outputs.DatabaseMigrationMigrationGoldenGateDetailsHub;
    /**
     * (Updatable) Optional settings for Oracle GoldenGate processes
     */
    settings: outputs.DatabaseMigrationMigrationGoldenGateDetailsSettings;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsHub {
    /**
     * (Updatable) OCID of Golden Gate compute instance.
     */
    computeId: string;
    /**
     * (Updatable) Database Admin Credentials details.
     */
    restAdminCredentials: outputs.DatabaseMigrationMigrationGoldenGateDetailsHubRestAdminCredentials;
    /**
     * (Updatable) Database Admin Credentials details.
     */
    sourceContainerDbAdminCredentials: outputs.DatabaseMigrationMigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials;
    /**
     * (Updatable) Database Admin Credentials details.
     */
    sourceDbAdminCredentials: outputs.DatabaseMigrationMigrationGoldenGateDetailsHubSourceDbAdminCredentials;
    /**
     * (Updatable) Name of Microservices deployment to operate on source DB
     */
    sourceMicroservicesDeploymentName: string;
    /**
     * (Updatable) Database Admin Credentials details.
     */
    targetDbAdminCredentials: outputs.DatabaseMigrationMigrationGoldenGateDetailsHubTargetDbAdminCredentials;
    /**
     * (Updatable) Name of Microservices deployment to operate on target DB
     */
    targetMicroservicesDeploymentName: string;
    /**
     * (Updatable) Oracle GoldenGate hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
     */
    url: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsHubRestAdminCredentials {
    /**
     * (Updatable) Admin password
     */
    password: string;
    /**
     * (Updatable) Admin username
     */
    username: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials {
    /**
     * (Updatable) Admin password
     */
    password: string;
    /**
     * (Updatable) Admin username
     */
    username: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsHubSourceDbAdminCredentials {
    /**
     * (Updatable) Admin password
     */
    password: string;
    /**
     * (Updatable) Admin username
     */
    username: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsHubTargetDbAdminCredentials {
    /**
     * (Updatable) Admin password
     */
    password: string;
    /**
     * (Updatable) Admin username
     */
    username: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsSettings {
    /**
     * (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     */
    acceptableLag: number;
    /**
     * (Updatable) Parameters for Extract processes.
     */
    extract: outputs.DatabaseMigrationMigrationGoldenGateDetailsSettingsExtract;
    /**
     * (Updatable) Parameters for Replicat processes.
     */
    replicat: outputs.DatabaseMigrationMigrationGoldenGateDetailsSettingsReplicat;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsSettingsExtract {
    /**
     * (Updatable) Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
     */
    longTransDuration: number;
    /**
     * (Updatable) Extract performance.
     */
    performanceProfile: string;
}

export interface DatabaseMigrationMigrationGoldenGateDetailsSettingsReplicat {
    /**
     * (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
     */
    mapParallelism: number;
    /**
     * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    maxApplyParallelism: number;
    /**
     * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    minApplyParallelism: number;
}

export interface DatabaseMigrationMigrationVaultDetails {
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * (Updatable) OCID of the vault encryption key
     */
    keyId: string;
    /**
     * (Updatable) OCID of the vault
     */
    vaultId: string;
}

export interface DatabasePluggableDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the pluggable database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * A host name-based PDB connection string.
     */
    pdbDefault: string;
    /**
     * An IP-based PDB connection string.
     */
    pdbIpDefault: string;
}

export interface DatabasePluggableDatabasesLocalCloneConnectionStrings {
    /**
     * All connection strings to use to connect to the pluggable database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * A host name-based PDB connection string.
     */
    pdbDefault: string;
    /**
     * An IP-based PDB connection string.
     */
    pdbIpDefault: string;
}

export interface DatabasePluggableDatabasesRemoteCloneConnectionStrings {
    /**
     * All connection strings to use to connect to the pluggable database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * A host name-based PDB connection string.
     */
    pdbDefault: string;
    /**
     * An IP-based PDB connection string.
     */
    pdbIpDefault: string;
}

export interface DatabaseVmClusterNetworkScan {
    /**
     * (Updatable) The node host name.
     */
    hostname: string;
    /**
     * (Updatable) The list of SCAN IP addresses. Three addresses should be provided.
     */
    ips: string[];
    /**
     * (Updatable) The SCAN TCPIP port. Default is 1521.
     */
    port: number;
}

export interface DatabaseVmClusterNetworkVmNetwork {
    /**
     * (Updatable) The network domain name.
     */
    domainName: string;
    /**
     * (Updatable) The network gateway.
     */
    gateway: string;
    /**
     * (Updatable) The network netmask.
     */
    netmask: string;
    /**
     * (Updatable) The network type.
     */
    networkType: string;
    /**
     * (Updatable) The list of node details.
     */
    nodes: outputs.DatabaseVmClusterNetworkVmNetworkNode[];
    /**
     * (Updatable) The network VLAN ID.
     */
    vlanId: string;
}

export interface DatabaseVmClusterNetworkVmNetworkNode {
    /**
     * (Updatable) The node host name.
     */
    hostname: string;
    /**
     * (Updatable) The node IP address.
     */
    ip: string;
    /**
     * (Updatable) The node virtual IP (VIP) address.
     */
    vip: string;
    /**
     * (Updatable) The node virtual IP (VIP) host name.
     */
    vipHostname: string;
}

export interface DataflowApplicationParameter {
    /**
     * (Updatable) The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * (Updatable) The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface DataflowInvokeRunParameter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface DatascienceModelCustomMetadataList {
    /**
     * (Updatable) Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * (Updatable) A short description of the model.
     */
    description: string;
    /**
     * (Updatable) key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * (Updatable) Value of model metadata
     */
    value: string;
}

export interface DatascienceModelDefinedMetadataList {
    /**
     * (Updatable) Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * (Updatable) A short description of the model.
     */
    description: string;
    /**
     * (Updatable) key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * (Updatable) Value of model metadata
     */
    value: string;
}

export interface DatascienceModelDeploymentCategoryLogDetails {
    /**
     * (Updatable) The log details.
     */
    access: outputs.DatascienceModelDeploymentCategoryLogDetailsAccess;
    /**
     * (Updatable) The log details.
     */
    predict: outputs.DatascienceModelDeploymentCategoryLogDetailsPredict;
}

export interface DatascienceModelDeploymentCategoryLogDetailsAccess {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface DatascienceModelDeploymentCategoryLogDetailsPredict {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetails {
    /**
     * (Updatable) The type of the model deployment.
     */
    deploymentType: string;
    /**
     * (Updatable) The model configuration details.
     */
    modelConfigurationDetails: outputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails {
    /**
     * (Updatable) The network bandwidth for the model.
     */
    bandwidthMbps: number;
    /**
     * (Updatable) The model deployment instance configuration
     */
    instanceConfiguration: outputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration;
    /**
     * (Updatable) The OCID of the model you want to deploy.
     */
    modelId: string;
    /**
     * (Updatable) The scaling policy to apply to each model of the deployment.
     */
    scalingPolicy: outputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration {
    /**
     * (Updatable) The shape used to launch the model deployment instances.
     */
    instanceShapeName: string;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy {
    /**
     * (Updatable) The number of instances for the model deployment.
     */
    instanceCount: number;
    /**
     * (Updatable) The type of scaling policy.
     */
    policyType: string;
}

export interface DatascienceNotebookSessionNotebookSessionConfigurationDetails {
    /**
     * (Updatable) A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
     */
    blockStorageSizeInGbs: number;
    /**
     * (Updatable) Details for the notebook session shape configuration.
     */
    notebookSessionShapeConfigDetails: outputs.DatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails;
    /**
     * (Updatable) The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
     */
    shape: string;
    /**
     * (Updatable) A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
     */
    subnetId: string;
}

export interface DatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
    /**
     * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
     */
    memoryInGbs: number;
    /**
     * (Updatable) A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
     */
    ocpus: number;
}

export interface DevopsDeployArtifactDeployArtifactSource {
    /**
     * (Updatable) base64 Encoded String
     */
    base64encodedContent: string;
    /**
     * (Updatable) Specifies the artifact path in the repository.
     */
    deployArtifactPath: string;
    /**
     * (Updatable) Specifies types of artifact sources.
     */
    deployArtifactSourceType: string;
    /**
     * (Updatable) Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
     */
    deployArtifactVersion: string;
    /**
     * (Updatable) Specifies image digest for the version of the image.
     */
    imageDigest: string;
    /**
     * (Updatable) Specifies OCIR Image Path - optionally include tag.
     */
    imageUri: string;
    /**
     * (Updatable) The OCID of a repository
     */
    repositoryId: string;
}

export interface DevopsDeployEnvironmentComputeInstanceGroupSelectors {
    /**
     * (Updatable) A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
     */
    items: outputs.DevopsDeployEnvironmentComputeInstanceGroupSelectorsItem[];
}

export interface DevopsDeployEnvironmentComputeInstanceGroupSelectorsItem {
    /**
     * (Updatable) Compute instance OCID identifiers that are members of this group.
     */
    computeInstanceIds: string[];
    /**
     * (Updatable) Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
     */
    query: string;
    /**
     * (Updatable) Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
     */
    region: string;
    /**
     * (Updatable) Defines the type of the instance selector for the group.
     */
    selectorType: string;
}

export interface DevopsDeployPipelineDeployPipelineArtifacts {
    /**
     * (Updatable) List of parameters defined for a deployment pipeline.
     */
    items: outputs.DevopsDeployPipelineDeployPipelineArtifactsItem[];
}

export interface DevopsDeployPipelineDeployPipelineArtifactsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.DevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * (Updatable) List of parameters defined for a deployment pipeline.
     */
    items: outputs.DevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface DevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeployPipelineDeployPipelineEnvironments {
    /**
     * (Updatable) List of parameters defined for a deployment pipeline.
     */
    items: outputs.DevopsDeployPipelineDeployPipelineEnvironmentsItem[];
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.DevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * (Updatable) List of parameters defined for a deployment pipeline.
     */
    items: outputs.DevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * (Updatable) Deployment pipeline display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeployPipelineDeployPipelineParameters {
    /**
     * (Updatable) List of parameters defined for a deployment pipeline.
     */
    items: outputs.DevopsDeployPipelineDeployPipelineParametersItem[];
}

export interface DevopsDeployPipelineDeployPipelineParametersItem {
    /**
     * (Updatable) Default value of the parameter.
     */
    defaultValue: string;
    /**
     * (Updatable) Optional description about the deployment pipeline.
     */
    description: string;
    /**
     * (Updatable) Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
     */
    name: string;
}

export interface DevopsDeployStageApprovalPolicy {
    /**
     * (Updatable) Approval policy type.
     */
    approvalPolicyType: string;
    /**
     * (Updatable) A minimum number of approvals required for stage to proceed.
     */
    numberOfApprovalsRequired: number;
}

export interface DevopsDeployStageBlueBackendIps {
    /**
     * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface DevopsDeployStageDeployStagePredecessorCollection {
    /**
     * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: outputs.DevopsDeployStageDeployStagePredecessorCollectionItem[];
}

export interface DevopsDeployStageDeployStagePredecessorCollectionItem {
    /**
     * (Updatable) The OCID of the predecessor stage. If a stage is the first stage in the pipeline, then the ID is the pipeline's OCID.
     */
    id: string;
}

export interface DevopsDeployStageFailurePolicy {
    /**
     * (Updatable) The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     */
    failureCount: number;
    /**
     * (Updatable) The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     */
    failurePercentage: number;
    /**
     * (Updatable) The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface DevopsDeployStageGreenBackendIps {
    /**
     * (Updatable) The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface DevopsDeployStageLoadBalancerConfig {
    /**
     * (Updatable) Listen port for the backend server.
     */
    backendPort: number;
    /**
     * (Updatable) Name of the load balancer listener.
     */
    listenerName: string;
    /**
     * (Updatable) The OCID of the load balancer.
     */
    loadBalancerId: string;
    /**
     * The current state of the deployment stage.
     */
    state: string;
}

export interface DevopsDeployStageRollbackPolicy {
    /**
     * (Updatable) The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface DevopsDeployStageRolloutPolicy {
    /**
     * (Updatable) The number that will be used to determine how many instances will be deployed concurrently.
     */
    batchCount: number;
    /**
     * (Updatable) The duration of delay between batch rollout. The default delay is 1 minute.
     */
    batchDelayInSeconds: number;
    /**
     * (Updatable) The percentage that will be used to determine how many instances will be deployed concurrently.
     */
    batchPercentage: number;
    /**
     * (Updatable) The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
    /**
     * (Updatable) Indicates the criteria to stop.
     */
    rampLimitPercent: number;
}

export interface DevopsDeployStageWaitCriteria {
    /**
     * (Updatable) The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
     */
    waitDuration: string;
    /**
     * (Updatable) Wait criteria type.
     */
    waitType: string;
}

export interface DevopsDeploymentDeployArtifactOverrideArguments {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeployArtifactOverrideArgumentsItem[];
}

export interface DevopsDeploymentDeployArtifactOverrideArgumentsItem {
    /**
     * The OCID of the artifact to which this parameter applies.
     */
    deployArtifactId: string;
    /**
     * Name of the parameter (case-sensitive).
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface DevopsDeploymentDeployPipelineArtifacts {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeployPipelineArtifactsItem[];
}

export interface DevopsDeploymentDeployPipelineArtifactsItem {
    /**
     * The OCID of the artifact to which this parameter applies.
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.DevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface DevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * Specifies the OCID of the stage to be redeployed.
     */
    deployStageId: string;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeploymentDeployPipelineEnvironments {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeployPipelineEnvironmentsItem[];
}

export interface DevopsDeploymentDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.DevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface DevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * Specifies the OCID of the stage to be redeployed.
     */
    deployStageId: string;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName: string;
}

export interface DevopsDeploymentDeploymentArguments {
    /**
     * List of arguments provided at the time of deployment.
     */
    items: outputs.DevopsDeploymentDeploymentArgumentsItem[];
}

export interface DevopsDeploymentDeploymentArgumentsItem {
    /**
     * Name of the parameter (case-sensitive).
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface DevopsDeploymentDeploymentExecutionProgress {
    /**
     * Map of stage OCIDs to deploy stage execution progress model.
     */
    deployStageExecutionProgress: {[key: string]: any};
    /**
     * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeFinished: string;
    /**
     * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeStarted: string;
}

export interface DevopsProjectNotificationConfig {
    /**
     * (Updatable) The topic ID for notifications.
     */
    topicId: string;
}

export interface DnsResolverAttachedView {
    /**
     * (Updatable) The OCID of the view.
     */
    viewId: string;
}

export interface DnsResolverEndpoint {
    /**
     * (Updatable) The OCID of the owning compartment.
     */
    compartmentId: string;
    /**
     * The type of resolver endpoint. VNIC is currently the only supported type.
     */
    endpointType: string;
    /**
     * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
     */
    forwardingAddress: string;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
     */
    isForwarding: boolean;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for listening.
     */
    isListening: boolean;
    /**
     * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
     */
    listeningAddress: string;
    /**
     * The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
     */
    name: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
     */
    subnetId: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface DnsResolverRule {
    /**
     * (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
     */
    action: string;
    /**
     * (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
     */
    clientAddressConditions: string[];
    /**
     * (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
     */
    destinationAddresses: string[];
    /**
     * (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
     */
    qnameCoverConditions: string[];
    /**
     * (Updatable) Name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
     */
    sourceEndpointName: string;
}

export interface DnsRrsetItem {
    /**
     * The fully qualified domain name where the record can be located.
     */
    domain: string;
    /**
     * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
     */
    isProtected: boolean;
    /**
     * (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
     */
    rdata: string;
    /**
     * A unique identifier for the record within its zone.
     */
    recordHash: string;
    /**
     * The latest version of the record's zone in which its RRSet differs from the preceding version.
     */
    rrsetVersion: string;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype: string;
    /**
     * (Updatable) The Time To Live for the record, in seconds.
     */
    ttl: number;
}

export interface DnsSteeringPolicyAnswer {
    /**
     * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
     */
    isDisabled: boolean;
    /**
     * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     */
    name: string;
    /**
     * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
     */
    pool: string;
    /**
     * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rdata: string;
    /**
     * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rtype: string;
}

export interface DnsSteeringPolicyRule {
    /**
     * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
     */
    cases: outputs.DnsSteeringPolicyRuleCase[];
    /**
     * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
     */
    defaultAnswerDatas: outputs.DnsSteeringPolicyRuleDefaultAnswerData[];
    /**
     * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
     */
    defaultCount: number;
    /**
     * A user-defined description of the rule's purpose or behavior.
     */
    description: string;
    /**
     * The type of a rule determines its sorting/filtering behavior.
     */
    ruleType: string;
}

export interface DnsSteeringPolicyRuleCase {
    /**
     * An array of `SteeringPolicyPriorityAnswerData` objects.
     */
    answerDatas: outputs.DnsSteeringPolicyRuleCaseAnswerData[];
    /**
     * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
     */
    caseCondition: string;
    /**
     * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
     */
    count: number;
}

export interface DnsSteeringPolicyRuleCaseAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface DnsSteeringPolicyRuleDefaultAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface DnsZoneExternalMaster {
    /**
     * (Updatable) The server's IP address (IPv4 or IPv6).
     */
    address: string;
    /**
     * (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
     */
    port: number;
    /**
     * (Updatable) The OCID of the TSIG key.
     */
    tsigKeyId: string;
}

export interface DnsZoneNameserver {
    /**
     * The hostname of the nameserver.
     */
    hostname: string;
}

export interface EventsRuleActions {
    /**
     * (Updatable) A list of one or more ActionDetails objects.
     */
    actions: outputs.EventsRuleActionsAction[];
}

export interface EventsRuleActionsAction {
    /**
     * (Updatable) The action to perform if the condition in the rule matches an event.
     * * **ONS:** Send to an Oracle Notification Service topic.
     * * **OSS:** Send to a stream from Oracle Streaming Service.
     * * **FAAS:** Send to an Oracle Functions Service endpoint.
     */
    actionType: string;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
     */
    description: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
     */
    functionId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     */
    id: string;
    /**
     * (Updatable) Whether or not this rule is currently enabled.  Example: `true`
     */
    isEnabled: boolean;
    /**
     * A message generated by the Events service about the current state of this rule.
     */
    lifecycleMessage: string;
    /**
     * The current state of the rule.
     */
    state: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
     */
    streamId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
     */
    topicId: string;
}

export interface FileStorageExportExportOption {
    /**
     * (Updatable) Type of access to grant clients using the file system through this export. If unspecified defaults to `READ_ONLY`.
     */
    access: string;
    /**
     * (Updatable) GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to `65534`.
     */
    anonymousGid: string;
    /**
     * (Updatable) UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to `65534`.
     */
    anonymousUid: string;
    /**
     * (Updatable) Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If `ALL`, all users and groups are remapped; if `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `ROOT`.
     */
    identitySquash: string;
    /**
     * (Updatable) If `true`, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to `true`.
     */
    requirePrivilegedSourcePort: boolean;
    /**
     * (Updatable) Clients these options should apply to. Must be a either single IPv4 address or single IPv4 CIDR block.
     */
    source: string;
}

export interface FileStorageFileSystemSourceDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    parentFileSystemId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    sourceSnapshotId: string;
}

export interface FunctionsApplicationTraceConfig {
    /**
     * (Updatable) The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
     */
    domainId: string;
    /**
     * (Updatable) Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface FunctionsFunctionTraceConfig {
    /**
     * (Updatable) Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface GetAnalyticsAnalyticsInstanceCapacity {
    /**
     * The capacity model to use.
     */
    capacityType: string;
    /**
     * The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
     */
    capacityValue: number;
}

export interface GetAnalyticsAnalyticsInstanceNetworkEndpointDetails {
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
    /**
     * OCID of the customer subnet connected to private access channel.
     */
    subnetId: string;
    /**
     * OCID of the customer VCN peered with private access channel.
     */
    vcnId: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    whitelistedVcns: outputs.GetAnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn[];
}

export interface GetAnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn {
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
}

export interface GetAnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
    /**
     * Description of private source dns zone.
     */
    description: string;
    /**
     * Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
     */
    dnsZone: string;
}

export interface GetAnalyticsAnalyticsInstancesAnalyticsInstance {
    /**
     * Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
     */
    capacity: outputs.GetAnalyticsAnalyticsInstancesAnalyticsInstanceCapacity;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description of the vanity url.
     */
    description: string;
    /**
     * Email address receiving notifications.
     */
    emailNotification: string;
    /**
     * A filter to only return resources matching the feature set. Values are case-insensitive.
     */
    featureSet: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
    idcsAccessToken: string;
    /**
     * The license used for the service.
     */
    licenseType: string;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails: outputs.GetAnalyticsAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetails;
    /**
     * Map of PrivateAccessChannel unique identifier key as KEY and PrivateAccessChannel Object as VALUE.
     */
    privateAccessChannels: {[key: string]: any};
    /**
     * URL of the Analytics service.
     */
    serviceUrl: string;
    /**
     * A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the instance was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the instance was last updated (in the format defined by RFC3339). This timestamp represents updates made through this API. External events do not influence it.
     */
    timeUpdated: string;
    /**
     * Map of VanityUrl unique identifier key as KEY and VanityUrl Object as VALUE.
     */
    vanityUrlDetails: {[key: string]: any};
}

export interface GetAnalyticsAnalyticsInstancesAnalyticsInstanceCapacity {
    /**
     * A filter to only return resources matching the capacity type enum. Values are case-insensitive.
     */
    capacityType: string;
    /**
     * The capacity value selected (OLPU count, number of users, ...etc...). This parameter affects the number of CPUs, amount of memory or other resources allocated to the instance.
     */
    capacityValue: number;
}

export interface GetAnalyticsAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetails {
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
    /**
     * OCID of the customer subnet connected to private access channel.
     */
    subnetId: string;
    /**
     * OCID of the customer VCN peered with private access channel.
     */
    vcnId: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    whitelistedVcns: outputs.GetAnalyticsAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn[];
}

export interface GetAnalyticsAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn {
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
    /**
     * Source IP addresses or IP address ranges igress rules.
     */
    whitelistedIps: string[];
}

export interface GetAnalyticsAnalyticsInstancesFilter {
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayApiDeploymentSpecificationLoggingPolicy {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayApiDeploymentSpecificationLoggingPolicyAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayApiDeploymentSpecificationLoggingPolicyExecutionLog;
}

export interface GetApigatewayApiDeploymentSpecificationLoggingPolicyAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayApiDeploymentSpecificationLoggingPolicyExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicy {
    /**
     * Information on how to authenticate incoming requests.
     */
    authentication: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyAuthentication;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyCors;
    /**
     * Limit the number of requests that should be handled for the specified window using a specfic key.
     */
    rateLimiting: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyRateLimiting;
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyAuthentication {
    /**
     * The list of intended recipients for the token.
     */
    audiences: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    /**
     * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
     */
    isAnonymousAccessAllowed: boolean;
    /**
     * A list of parties that could have issued the token.
     */
    issuers: string[];
    /**
     * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
     */
    maxClockSkewInSeconds: number;
    /**
     * A set of Public Keys that will be used to verify the JWT signature.
     */
    publicKeys: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeys;
    /**
     * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
     */
    tokenAuthScheme: string;
    /**
     * The name of the header containing the authentication token.
     */
    tokenHeader: string;
    /**
     * The name of the query parameter containing the authentication token.
     */
    tokenQueryParam: string;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * A list of claims which should be validated to consider the token valid.
     */
    verifyClaims: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim[];
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeys {
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * The set of static public keys.
     */
    keys: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeysKey[];
    /**
     * The duration for which the JWKS should be cached before it is fetched again.
     */
    maxCacheDurationInHours: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * The uri from which to retrieve the key. It must be accessible without authentication.
     */
    uri: string;
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationPublicKeysKey {
    /**
     * The algorithm intended for use with this key.
     */
    alg: string;
    /**
     * The base64 url encoded exponent of the RSA public key represented by this key.
     */
    e: string;
    /**
     * The format of the public key.
     */
    format: string;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * The operations for which this key is to be used.
     */
    keyOps: string[];
    /**
     * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
     */
    kid: string;
    /**
     * The key type.
     */
    kty: string;
    /**
     * The base64 url encoded modulus of the RSA public key represented by this key.
     */
    n: string;
    /**
     * The intended use of the public key.
     */
    use: string;
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyAuthenticationVerifyClaim {
    /**
     * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
     */
    isRequired: boolean;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayApiDeploymentSpecificationRequestPolicyRateLimiting {
    /**
     * The maximum number of requests per second to allow.
     */
    rateInRequestsPerSecond: number;
    /**
     * The key used to group requests together.
     */
    rateKey: string;
}

export interface GetApigatewayApiDeploymentSpecificationRoute {
    /**
     * The backend to forward requests to.
     */
    backend: outputs.GetApigatewayApiDeploymentSpecificationRouteBackend;
    /**
     * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.GetApigatewayApiDeploymentSpecificationRouteLoggingPolicies;
    /**
     * A list of allowed methods on this route.
     */
    methods: string[];
    /**
     * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     */
    path: string;
    /**
     * Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPolicies;
    /**
     * Behavior applied to any responses sent by the API for requests on this route.
     */
    responsePolicies: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePolicies;
}

export interface GetApigatewayApiDeploymentSpecificationRouteBackend {
    /**
     * The body of the stock response from the mock backend.
     */
    body: string;
    /**
     * Defines a timeout for establishing a connection with a proxied server.
     */
    connectTimeoutInSeconds: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    headers: outputs.GetApigatewayApiDeploymentSpecificationRouteBackendHeader[];
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * Defines a timeout for reading a response from the proxied server.
     */
    readTimeoutInSeconds: number;
    /**
     * Defines a timeout for transmitting a request to the proxied server.
     */
    sendTimeoutInSeconds: number;
    /**
     * The status code of the stock response from the mock backend.
     */
    status: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    url: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteBackendHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Value of the header.
     */
    value: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteLoggingPolicies {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayApiDeploymentSpecificationRouteLoggingPoliciesAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayApiDeploymentSpecificationRouteLoggingPoliciesExecutionLog;
}

export interface GetApigatewayApiDeploymentSpecificationRouteLoggingPoliciesAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayApiDeploymentSpecificationRouteLoggingPoliciesExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPolicies {
    /**
     * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     */
    authorization: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesAuthorization;
    /**
     * Validate the payload body of the incoming API requests on a specific route.
     */
    bodyValidation: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesBodyValidation;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesCors;
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformations;
    /**
     * Validate the HTTP headers on the incoming API requests on a specific route.
     */
    headerValidations: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderValidations;
    /**
     * A set of transformations to apply to query parameters that pass through the gateway.
     */
    queryParameterTransformations: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations;
    /**
     * Validate the URL query parameters on the incoming API requests on a specific route.
     */
    queryParameterValidations: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations;
    /**
     * Base policy for Response Cache lookup.
     */
    responseCacheLookup: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesAuthorization {
    /**
     * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     */
    allowedScopes: string[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesBodyValidation {
    /**
     * The content of the request body.
     */
    contents: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesBodyValidationContent[];
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesBodyValidationContent {
    /**
     * The media type is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
     */
    mediaType: string;
    /**
     * Validation type defines the content validation method.
     */
    validationType: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderValidations {
    headers: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
    /**
     * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterQueryParameters: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
    /**
     * Rename parameters on the query string as they pass through the gateway.
     */
    renameQueryParameters: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
    /**
     * Set parameters on the query string as they pass through the gateway.
     */
    setQueryParameters: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations {
    parameters: outputs.GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayApiDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup {
    /**
     * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
     */
    cacheKeyAdditions: string[];
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
     */
    isPrivateCachingEnabled: boolean;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePolicies {
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformations;
    /**
     * Base policy for how a response from a backend is cached in the Response Cache.
     */
    responseCacheStore: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesResponseCacheStore;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayApiDeploymentSpecificationRouteResponsePoliciesResponseCacheStore {
    /**
     * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
     */
    timeToLiveInSeconds: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayApiValidationResult {
    /**
     * Name of the validation.
     */
    name: string;
    /**
     * Result of the validation.
     */
    result: string;
}

export interface GetApigatewayApiValidationValidation {
    /**
     * Details of validation.
     */
    details: outputs.GetApigatewayApiValidationValidationDetail[];
    /**
     * Name of the validation.
     */
    name: string;
    /**
     * Result of the validation.
     */
    result: string;
}

export interface GetApigatewayApiValidationValidationDetail {
    /**
     * Description of the warning/error.
     */
    msg: string;
    /**
     * Severity of the issue.
     */
    severity: string;
    /**
     * Position of the issue in the specification file (line, column).
     */
    srcs: outputs.GetApigatewayApiValidationValidationDetailSrc[];
}

export interface GetApigatewayApiValidationValidationDetailSrc {
    items: any[];
}

export interface GetApigatewayApisApiCollection {
    items: outputs.GetApigatewayApisApiCollectionItem[];
}

export interface GetApigatewayApisApiCollectionItem {
    /**
     * The ocid of the compartment in which to list resources.
     */
    compartmentId: string;
    content: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    id: string;
    /**
     * A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
     * * 'New' for just updated API Specifications
     * * 'Validating' for a document which is being validated.
     * * 'Valid' the document has been validated without any errors or warnings
     * * 'Warning' the document has been validated and contains warnings
     * * 'Error' the document has been validated and contains errors
     * * 'Failed' the document validation failed
     * * 'Canceled' the document validation was canceled
     */
    lifecycleDetails: string;
    /**
     * Type of API Specification file.
     */
    specificationType: string;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state: string;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
    /**
     * Status of each feature available from the API.
     */
    validationResults: outputs.GetApigatewayApisApiCollectionItemValidationResult[];
}

export interface GetApigatewayApisApiCollectionItemValidationResult {
    /**
     * Name of the validation.
     */
    name: string;
    /**
     * Result of the validation.
     */
    result: string;
}

export interface GetApigatewayApisFilter {
    /**
     * Name of the validation.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayCertificatesCertificateCollection {
    items: outputs.GetApigatewayCertificatesCertificateCollectionItem[];
}

export interface GetApigatewayCertificatesCertificateCollectionItem {
    /**
     * The data of the leaf certificate in pem format.
     */
    certificate: string;
    /**
     * The ocid of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    id: string;
    /**
     * The intermediate certificate data associated with the certificate in pem format.
     */
    intermediateCertificates: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    privateKey: string;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE` or `DELETED`
     */
    state: string;
    /**
     * The entity to be secured by the certificate and additional host names.
     */
    subjectNames: string[];
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The date and time the certificate will expire.
     */
    timeNotValidAfter: string;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetApigatewayCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayDeploymentSpecification {
    /**
     * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.GetApigatewayDeploymentSpecificationLoggingPolicies;
    /**
     * Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.GetApigatewayDeploymentSpecificationRequestPolicies;
    /**
     * A list of routes that this API exposes.
     */
    routes: outputs.GetApigatewayDeploymentSpecificationRoute[];
}

export interface GetApigatewayDeploymentSpecificationLoggingPolicies {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayDeploymentSpecificationLoggingPoliciesAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog;
}

export interface GetApigatewayDeploymentSpecificationLoggingPoliciesAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayDeploymentSpecificationRequestPolicies {
    /**
     * Information on how to authenticate incoming requests.
     */
    authentication: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesAuthentication;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesCors;
    /**
     * Limit the number of requests that should be handled for the specified window using a specfic key.
     */
    rateLimiting: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesRateLimiting;
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesAuthentication {
    /**
     * The list of intended recipients for the token.
     */
    audiences: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    /**
     * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
     */
    isAnonymousAccessAllowed: boolean;
    /**
     * A list of parties that could have issued the token.
     */
    issuers: string[];
    /**
     * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
     */
    maxClockSkewInSeconds: number;
    /**
     * A set of Public Keys that will be used to verify the JWT signature.
     */
    publicKeys: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys;
    /**
     * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
     */
    tokenAuthScheme: string;
    /**
     * The name of the header containing the authentication token.
     */
    tokenHeader: string;
    /**
     * The name of the query parameter containing the authentication token.
     */
    tokenQueryParam: string;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * A list of claims which should be validated to consider the token valid.
     */
    verifyClaims: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim[];
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys {
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * The set of static public keys.
     */
    keys: outputs.GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey[];
    /**
     * The duration for which the JWKS should be cached before it is fetched again.
     */
    maxCacheDurationInHours: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * The uri from which to retrieve the key. It must be accessible without authentication.
     */
    uri: string;
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey {
    /**
     * The algorithm intended for use with this key.
     */
    alg: string;
    /**
     * The base64 url encoded exponent of the RSA public key represented by this key.
     */
    e: string;
    /**
     * The format of the public key.
     */
    format: string;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * The operations for which this key is to be used.
     */
    keyOps: string[];
    /**
     * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
     */
    kid: string;
    /**
     * The key type.
     */
    kty: string;
    /**
     * The base64 url encoded modulus of the RSA public key represented by this key.
     */
    n: string;
    /**
     * The intended use of the public key.
     */
    use: string;
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim {
    /**
     * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
     */
    isRequired: boolean;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayDeploymentSpecificationRequestPoliciesRateLimiting {
    /**
     * The maximum number of requests per second to allow.
     */
    rateInRequestsPerSecond: number;
    /**
     * The key used to group requests together.
     */
    rateKey: string;
}

export interface GetApigatewayDeploymentSpecificationRoute {
    /**
     * The backend to forward requests to.
     */
    backend: outputs.GetApigatewayDeploymentSpecificationRouteBackend;
    /**
     * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.GetApigatewayDeploymentSpecificationRouteLoggingPolicies;
    /**
     * A list of allowed methods on this route.
     */
    methods: string[];
    /**
     * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     */
    path: string;
    /**
     * Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.GetApigatewayDeploymentSpecificationRouteRequestPolicies;
    /**
     * Behavior applied to any responses sent by the API for requests on this route.
     */
    responsePolicies: outputs.GetApigatewayDeploymentSpecificationRouteResponsePolicies;
}

export interface GetApigatewayDeploymentSpecificationRouteBackend {
    /**
     * The body of the stock response from the mock backend.
     */
    body: string;
    /**
     * Defines a timeout for establishing a connection with a proxied server.
     */
    connectTimeoutInSeconds: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    headers: outputs.GetApigatewayDeploymentSpecificationRouteBackendHeader[];
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * Defines a timeout for reading a response from the proxied server.
     */
    readTimeoutInSeconds: number;
    /**
     * Defines a timeout for transmitting a request to the proxied server.
     */
    sendTimeoutInSeconds: number;
    /**
     * The status code of the stock response from the mock backend.
     */
    status: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    url: string;
}

export interface GetApigatewayDeploymentSpecificationRouteBackendHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Value of the header.
     */
    value: string;
}

export interface GetApigatewayDeploymentSpecificationRouteLoggingPolicies {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog;
}

export interface GetApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPolicies {
    /**
     * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     */
    authorization: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization;
    /**
     * Validate the payload body of the incoming API requests on a specific route.
     */
    bodyValidation: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesCors;
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations;
    /**
     * Validate the HTTP headers on the incoming API requests on a specific route.
     */
    headerValidations: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations;
    /**
     * A set of transformations to apply to query parameters that pass through the gateway.
     */
    queryParameterTransformations: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations;
    /**
     * Validate the URL query parameters on the incoming API requests on a specific route.
     */
    queryParameterValidations: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations;
    /**
     * Base policy for Response Cache lookup.
     */
    responseCacheLookup: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization {
    /**
     * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     */
    allowedScopes: string[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation {
    /**
     * The content of the request body.
     */
    contents: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent[];
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent {
    /**
     * The media type is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
     */
    mediaType: string;
    /**
     * Validation type defines the content validation method.
     */
    validationType: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations {
    headers: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
    /**
     * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterQueryParameters: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
    /**
     * Rename parameters on the query string as they pass through the gateway.
     */
    renameQueryParameters: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
    /**
     * Set parameters on the query string as they pass through the gateway.
     */
    setQueryParameters: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations {
    parameters: outputs.GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup {
    /**
     * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
     */
    cacheKeyAdditions: string[];
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
     */
    isPrivateCachingEnabled: boolean;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePolicies {
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations;
    /**
     * Base policy for how a response from a backend is cached in the Response Cache.
     */
    responseCacheStore: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore {
    /**
     * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
     */
    timeToLiveInSeconds: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollection {
    /**
     * The ocid of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * The endpoint to access this deployment on the gateway.
     */
    endpoint: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Filter deployments by the gateway ocid.
     */
    gatewayId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    /**
     * A path on which to deploy all routes contained in the API deployment specification. For more information, see [Deploying an API on an API Gateway by Creating an API Deployment](https://docs.cloud.oracle.com/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
     */
    pathPrefix: string;
    /**
     * The logical configuration of the API exposed by a deployment.
     */
    specification: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecification;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
     */
    state: string;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecification {
    /**
     * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPolicies;
    /**
     * Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPolicies;
    /**
     * A list of routes that this API exposes.
     */
    routes: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRoute[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPolicies {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPoliciesAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPoliciesExecutionLog;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPoliciesAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationLoggingPoliciesExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPolicies {
    /**
     * Information on how to authenticate incoming requests.
     */
    authentication: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthentication;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesCors;
    /**
     * Limit the number of requests that should be handled for the specified window using a specfic key.
     */
    rateLimiting: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesRateLimiting;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthentication {
    /**
     * The list of intended recipients for the token.
     */
    audiences: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    /**
     * Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS route authorization.
     */
    isAnonymousAccessAllowed: boolean;
    /**
     * A list of parties that could have issued the token.
     */
    issuers: string[];
    /**
     * The maximum expected time difference between the system clocks of the token issuer and the API Gateway.
     */
    maxClockSkewInSeconds: number;
    /**
     * A set of Public Keys that will be used to verify the JWT signature.
     */
    publicKeys: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationPublicKeys;
    /**
     * The authentication scheme that is to be used when authenticating the token. This must to be provided if "tokenHeader" is specified.
     */
    tokenAuthScheme: string;
    /**
     * The name of the header containing the authentication token.
     */
    tokenHeader: string;
    /**
     * The name of the query parameter containing the authentication token.
     */
    tokenQueryParam: string;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * A list of claims which should be validated to consider the token valid.
     */
    verifyClaims: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationVerifyClaim[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationPublicKeys {
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * The set of static public keys.
     */
    keys: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationPublicKeysKey[];
    /**
     * The duration for which the JWKS should be cached before it is fetched again.
     */
    maxCacheDurationInHours: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    /**
     * The uri from which to retrieve the key. It must be accessible without authentication.
     */
    uri: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationPublicKeysKey {
    /**
     * The algorithm intended for use with this key.
     */
    alg: string;
    /**
     * The base64 url encoded exponent of the RSA public key represented by this key.
     */
    e: string;
    /**
     * The format of the public key.
     */
    format: string;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * The operations for which this key is to be used.
     */
    keyOps: string[];
    /**
     * A unique key ID. This key will be used to verify the signature of a JWT with matching "kid".
     */
    kid: string;
    /**
     * The key type.
     */
    kty: string;
    /**
     * The base64 url encoded modulus of the RSA public key represented by this key.
     */
    n: string;
    /**
     * The intended use of the public key.
     */
    use: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesAuthenticationVerifyClaim {
    /**
     * Whether the claim is required to be present in the JWT or not. If set to "false", the claim values will be matched only if the claim is present in the JWT.
     */
    isRequired: boolean;
    /**
     * Name of the claim.
     */
    key: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRequestPoliciesRateLimiting {
    /**
     * The maximum number of requests per second to allow.
     */
    rateInRequestsPerSecond: number;
    /**
     * The key used to group requests together.
     */
    rateKey: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRoute {
    /**
     * The backend to forward requests to.
     */
    backend: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteBackend;
    /**
     * Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     */
    loggingPolicies: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicies;
    /**
     * A list of allowed methods on this route.
     */
    methods: string[];
    /**
     * A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     */
    path: string;
    /**
     * Behavior applied to any requests received by the API on this route.
     */
    requestPolicies: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPolicies;
    /**
     * Behavior applied to any responses sent by the API for requests on this route.
     */
    responsePolicies: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePolicies;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteBackend {
    /**
     * The body of the stock response from the mock backend.
     */
    body: string;
    /**
     * Defines a timeout for establishing a connection with a proxied server.
     */
    connectTimeoutInSeconds: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     */
    functionId: string;
    headers: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteBackendHeader[];
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * Defines a timeout for reading a response from the proxied server.
     */
    readTimeoutInSeconds: number;
    /**
     * Defines a timeout for transmitting a request to the proxied server.
     */
    sendTimeoutInSeconds: number;
    /**
     * The status code of the stock response from the mock backend.
     */
    status: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
    url: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteBackendHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Value of the header.
     */
    value: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicies {
    /**
     * Configures the logging policies for the access logs of an API Deployment.
     */
    accessLog: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPoliciesAccessLog;
    /**
     * Configures the logging policies for the execution logs of an API Deployment.
     */
    executionLog: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPoliciesExecutionLog;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPoliciesAccessLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteLoggingPoliciesExecutionLog {
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Specifies the log level used to control logging output of execution logs. Enabling logging at a given level also enables logging at all higher levels.
     */
    logLevel: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPolicies {
    /**
     * If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     */
    authorization: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesAuthorization;
    /**
     * Validate the payload body of the incoming API requests on a specific route.
     */
    bodyValidation: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesBodyValidation;
    /**
     * Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     */
    cors: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesCors;
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformations;
    /**
     * Validate the HTTP headers on the incoming API requests on a specific route.
     */
    headerValidations: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderValidations;
    /**
     * A set of transformations to apply to query parameters that pass through the gateway.
     */
    queryParameterTransformations: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformations;
    /**
     * Validate the URL query parameters on the incoming API requests on a specific route.
     */
    queryParameterValidations: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterValidations;
    /**
     * Base policy for Response Cache lookup.
     */
    responseCacheLookup: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesResponseCacheLookup;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesAuthorization {
    /**
     * A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     */
    allowedScopes: string[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesBodyValidation {
    /**
     * The content of the request body.
     */
    contents: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesBodyValidationContent[];
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesBodyValidationContent {
    /**
     * The key is a [media type range](https://tools.ietf.org/html/rfc7231#appendix-D) subset restricted to the following schema
     */
    mediaType: string;
    /**
     * Validation type defines the content validation method.
     */
    validationType: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesCors {
    /**
     * The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header. '*' will allow all headers.
     */
    allowedHeaders: string[];
    /**
     * The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the Access-Control-Allow-Methods header. '*' will allow all methods.
     */
    allowedMethods: string[];
    /**
     * The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the scheme, full hostname, and port if necessary.
     */
    allowedOrigins: string[];
    /**
     * The list of headers that the client will be allowed to see from the response as indicated by the Access-Control-Expose-Headers header. '*' will expose all headers.
     */
    exposedHeaders: string[];
    /**
     * Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
     */
    isAllowCredentialsEnabled: boolean;
    /**
     * The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age if greater than 0.
     */
    maxAgeInSeconds: number;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderValidations {
    headers: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderValidationsHeader[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesHeaderValidationsHeader {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformations {
    /**
     * Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterQueryParameters: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
    /**
     * Rename parameters on the query string as they pass through the gateway.
     */
    renameQueryParameters: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
    /**
     * Set parameters on the query string as they pass through the gateway.
     */
    setQueryParameters: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterValidations {
    parameters: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterValidationsParameter[];
    /**
     * Validation behavior mode.
     */
    validationMode: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * Determines if the parameter is required in the request.
     */
    required: boolean;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteRequestPoliciesResponseCacheLookup {
    /**
     * A list of context expressions whose values will be added to the base cache key. Values should contain an expression enclosed within ${} delimiters. Only the request context is available.
     */
    cacheKeyAdditions: string[];
    /**
     * Whether this policy is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Set true to allow caching responses where the request has an Authorization header. Ensure you have configured your  cache key additions to get the level of isolation across authenticated requests that you require.
     */
    isPrivateCachingEnabled: boolean;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePolicies {
    /**
     * A set of transformations to apply to HTTP headers that pass through the gateway.
     */
    headerTransformations: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformations;
    /**
     * Base policy for how a response from a backend is cached in the Response Cache.
     */
    responseCacheStore: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesResponseCacheStore;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformations {
    /**
     * Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     */
    filterHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders;
    /**
     * Rename HTTP headers as they pass through the gateway.
     */
    renameHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders;
    /**
     * Set HTTP headers as they pass through the gateway.
     */
    setHeaders: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem[];
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
    /**
     * The original case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    from: string;
    /**
     * The new name of the header.  This name must be unique across transformation policies.
     */
    to: string;
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
    /**
     * The list of headers.
     */
    items: outputs.GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
    /**
     * If a header with the same name already exists in the request, OVERWRITE will overwrite the value, APPEND will append to the existing value, or SKIP will keep the existing value.
     */
    ifExists: string;
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayDeploymentsDeploymentCollectionSpecificationRouteResponsePoliciesResponseCacheStore {
    /**
     * Sets the number of seconds for a response from a backend being stored in the Response Cache before it expires.
     */
    timeToLiveInSeconds: number;
    /**
     * Type of the Response Cache Store Policy.
     */
    type: string;
}

export interface GetApigatewayDeploymentsFilter {
    /**
     * The case-insensitive name of the header.  This name must be unique across transformation policies.
     */
    name: string;
    regex?: boolean;
    /**
     * A list of new values.  Each value can be a constant or may include one or more expressions enclosed within ${} delimiters.
     */
    values: string[];
}

export interface GetApigatewayGatewayIpAddress {
    /**
     * An IP address.
     */
    ipAddress: string;
}

export interface GetApigatewayGatewayResponseCacheDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     */
    authenticationSecretId: string;
    /**
     * The version number of the authentication secret to use.
     */
    authenticationSecretVersionNumber: string;
    /**
     * Defines the timeout for establishing a connection with the Response Cache.
     */
    connectTimeoutInMs: number;
    /**
     * Defines if the connection should be over SSL.
     */
    isSslEnabled: boolean;
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * Defines the timeout for reading data from the Response Cache.
     */
    readTimeoutInMs: number;
    /**
     * Defines the timeout for transmitting data to the Response Cache.
     */
    sendTimeoutInMs: number;
    /**
     * The set of cache store members to connect to. At present only a single server is supported.
     */
    servers: outputs.GetApigatewayGatewayResponseCacheDetailsServer[];
    /**
     * Type of the Response Cache.
     */
    type: string;
}

export interface GetApigatewayGatewayResponseCacheDetailsServer {
    /**
     * Hostname or IP address (IPv4 only) where the cache store is running.
     */
    host: string;
    /**
     * The port the cache store is exposed on.
     */
    port: number;
}

export interface GetApigatewayGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayGatewaysGatewayCollection {
    /**
     * Filter gateways by the certificate ocid.
     */
    certificateId: string;
    /**
     * The ocid of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Gateway endpoint type. `PUBLIC` will have a public ip address assigned to it, while `PRIVATE` will only be accessible on a private IP address on the subnet.  Example: `PUBLIC` or `PRIVATE`
     */
    endpointType: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for APIs deployed on the gateway.
     */
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    id: string;
    /**
     * An array of IP addresses associated with the gateway.
     */
    ipAddresses: outputs.GetApigatewayGatewaysGatewayCollectionIpAddress[];
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    /**
     * Base Gateway response cache.
     */
    responseCacheDetails: outputs.GetApigatewayGatewaysGatewayCollectionResponseCacheDetails;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in which related resources are created.
     */
    subnetId: string;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetApigatewayGatewaysGatewayCollectionIpAddress {
    /**
     * An IP address.
     */
    ipAddress: string;
}

export interface GetApigatewayGatewaysGatewayCollectionResponseCacheDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     */
    authenticationSecretId: string;
    /**
     * The version number of the authentication secret to use.
     */
    authenticationSecretVersionNumber: string;
    /**
     * Defines the timeout for establishing a connection with the Response Cache.
     */
    connectTimeoutInMs: number;
    /**
     * Defines if the connection should be over SSL.
     */
    isSslEnabled: boolean;
    /**
     * Defines whether or not to uphold SSL verification.
     */
    isSslVerifyDisabled: boolean;
    /**
     * Defines the timeout for reading data from the Response Cache.
     */
    readTimeoutInMs: number;
    /**
     * Defines the timeout for transmitting data to the Response Cache.
     */
    sendTimeoutInMs: number;
    /**
     * The set of cache store members to connect to. At present only a single server is supported.
     */
    servers: outputs.GetApigatewayGatewaysGatewayCollectionResponseCacheDetailsServer[];
    /**
     * Type of the Response Cache.
     */
    type: string;
}

export interface GetApigatewayGatewaysGatewayCollectionResponseCacheDetailsServer {
    /**
     * Hostname or IP address (IPv4 only) where the cache store is running.
     */
    host: string;
    /**
     * The port the cache store is exposed on.
     */
    port: number;
}

export interface GetApmApmDomainsApmDomain {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Where APM Agents upload their observations and metrics.
     */
    dataUploadEndpoint: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description of the APM Domain.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation.
     */
    id: string;
    /**
     * Indicates if this is an Always Free resource.
     */
    isFreeTier: boolean;
    /**
     * A filter to return only resources that match the given life-cycle state.
     */
    state: string;
    /**
     * The time the the APM Domain was created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the APM Domain was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
}

export interface GetApmApmDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmDataKeysDataKey {
    /**
     * Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
     */
    name: string;
    /**
     * Type of the Data Key.
     */
    type: string;
    /**
     * Value of the Data Key.
     */
    value: string;
}

export interface GetApmDataKeysFilter {
    /**
     * Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsMonitorConfiguration {
    /**
     * Type of configuration.
     */
    configType: string;
    /**
     * If certificate validation is enabled, then the call will fail in case of certification errors.
     */
    isCertificateValidationEnabled: boolean;
    /**
     * If isFailureRetried is enabled, then a failed call will be retried.
     */
    isFailureRetried: boolean;
    /**
     * If redirection enabled, then redirects will be allowed while accessing target URL.
     */
    isRedirectionEnabled: boolean;
    /**
     * Details for request HTTP authentication.
     */
    reqAuthenticationDetails: outputs.GetApmSyntheticsMonitorConfigurationReqAuthenticationDetails;
    /**
     * Request http authentication scheme.
     */
    reqAuthenticationScheme: string;
    /**
     * List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    requestHeaders: outputs.GetApmSyntheticsMonitorConfigurationRequestHeader[];
    /**
     * Request HTTP method.
     */
    requestMethod: string;
    /**
     * Request post body content.
     */
    requestPostBody: string;
    /**
     * List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
     */
    requestQueryParams: outputs.GetApmSyntheticsMonitorConfigurationRequestQueryParam[];
    /**
     * Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     */
    verifyResponseCodes: string[];
    /**
     * Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
     */
    verifyResponseContent: string;
    /**
     * Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
     */
    verifyTexts: outputs.GetApmSyntheticsMonitorConfigurationVerifyText[];
}

export interface GetApmSyntheticsMonitorConfigurationReqAuthenticationDetails {
    /**
     * List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    authHeaders: outputs.GetApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader[];
    /**
     * Request method.
     */
    authRequestMethod: string;
    /**
     * Request post body.
     */
    authRequestPostBody: string;
    /**
     * Authentication token.
     */
    authToken: string;
    /**
     * URL to get authetication token.
     */
    authUrl: string;
    /**
     * Username for authentication.
     */
    authUserName: string;
    /**
     * User password for authentication.
     */
    authUserPassword: string;
    /**
     * Request http oauth scheme.
     */
    oauthScheme: string;
}

export interface GetApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader {
    /**
     * Name of the header.
     */
    headerName: string;
    /**
     * Value of the header.
     */
    headerValue: string;
}

export interface GetApmSyntheticsMonitorConfigurationRequestHeader {
    /**
     * Name of the header.
     */
    headerName: string;
    /**
     * Value of the header.
     */
    headerValue: string;
}

export interface GetApmSyntheticsMonitorConfigurationRequestQueryParam {
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsMonitorConfigurationVerifyText {
    /**
     * Verification text in the response.
     */
    text: string;
}

export interface GetApmSyntheticsMonitorScriptParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     */
    isSecret: boolean;
    /**
     * Details of the script parameter that can be used to overwrite the parameter present in the script.
     */
    monitorScriptParameter: outputs.GetApmSyntheticsMonitorScriptParameterMonitorScriptParameter;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsMonitorScriptParameterMonitorScriptParameter {
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsMonitorsFilter {
    /**
     * Name of the vantage point.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsMonitorsMonitorCollection {
    items: outputs.GetApmSyntheticsMonitorsMonitorCollectionItem[];
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItem {
    /**
     * The APM domain ID the request is intended for.
     */
    apmDomainId: string;
    /**
     * Details of monitor configuration.
     */
    configuration: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfiguration;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
     */
    id: string;
    /**
     * A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
     */
    monitorType: string;
    /**
     * Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds.
     */
    repeatIntervalInSeconds: number;
    /**
     * A filter to return only monitors using scriptId.
     */
    scriptId: string;
    /**
     * Name of the script.
     */
    scriptName: string;
    /**
     * List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
     */
    scriptParameters: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemScriptParameter[];
    /**
     * A filter to return only monitors that match the status given.
     */
    status: string;
    /**
     * Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
     */
    target: string;
    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     */
    timeCreated: string;
    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     */
    timeUpdated: string;
    /**
     * Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
     */
    timeoutInSeconds: number;
    /**
     * Number of vantage points where monitor is running.
     */
    vantagePointCount: number;
    /**
     * List of vantage points from where monitor is running.
     */
    vantagePoints: string[];
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfiguration {
    /**
     * Type of configuration.
     */
    configType: string;
    /**
     * If certificate validation is enabled, then the call will fail in case of certification errors.
     */
    isCertificateValidationEnabled: boolean;
    /**
     * If isFailureRetried is enabled, then a failed call will be retried.
     */
    isFailureRetried: boolean;
    /**
     * If redirection enabled, then redirects will be allowed while accessing target URL.
     */
    isRedirectionEnabled: boolean;
    /**
     * Details for request HTTP authentication.
     */
    reqAuthenticationDetails: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails;
    /**
     * Request http authentication scheme.
     */
    reqAuthenticationScheme: string;
    /**
     * List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    requestHeaders: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationRequestHeader[];
    /**
     * Request HTTP method.
     */
    requestMethod: string;
    /**
     * Request post body content.
     */
    requestPostBody: string;
    /**
     * List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
     */
    requestQueryParams: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationRequestQueryParam[];
    /**
     * Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     */
    verifyResponseCodes: string[];
    /**
     * Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
     */
    verifyResponseContent: string;
    /**
     * Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
     */
    verifyTexts: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationVerifyText[];
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails {
    /**
     * List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
     */
    authHeaders: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader[];
    /**
     * Request method.
     */
    authRequestMethod: string;
    /**
     * Request post body.
     */
    authRequestPostBody: string;
    /**
     * Authentication token.
     */
    authToken: string;
    /**
     * URL to get authetication token.
     */
    authUrl: string;
    /**
     * Username for authentication.
     */
    authUserName: string;
    /**
     * User password for authentication.
     */
    authUserPassword: string;
    /**
     * Request http oauth scheme.
     */
    oauthScheme: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader {
    /**
     * Name of the header.
     */
    headerName: string;
    /**
     * Value of the header.
     */
    headerValue: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationRequestHeader {
    /**
     * Name of the header.
     */
    headerName: string;
    /**
     * Value of the header.
     */
    headerValue: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemConfigurationVerifyText {
    /**
     * Verification text in the response.
     */
    text: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemScriptParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     */
    isSecret: boolean;
    /**
     * Details of the script parameter that can be used to overwrite the parameter present in the script.
     */
    monitorScriptParameter: outputs.GetApmSyntheticsMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter {
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsPublicVantagePointItem {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Geographic summary about a vantage point.
     */
    geo: outputs.GetApmSyntheticsPublicVantagePointItemGeo;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
}

export interface GetApmSyntheticsPublicVantagePointItemGeo {
    /**
     * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
     */
    adminDivCode: string;
    /**
     * Common English-language name for the city.
     */
    cityName: string;
    /**
     * The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
     */
    countryCode: string;
    /**
     * The common English-language name for the country.
     */
    countryName: string;
    /**
     * Degrees north of the Equator.
     */
    latitude: number;
    /**
     * Degrees east of the prime meridian.
     */
    longitude: number;
}

export interface GetApmSyntheticsPublicVantagePointsFilter {
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsPublicVantagePointsPublicVantagePointCollection {
    /**
     * List of PublicVantagePointSummary items.
     */
    items: outputs.GetApmSyntheticsPublicVantagePointsPublicVantagePointCollectionItem[];
}

export interface GetApmSyntheticsPublicVantagePointsPublicVantagePointCollectionItem {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Geographic summary about a vantage point.
     */
    geo: outputs.GetApmSyntheticsPublicVantagePointsPublicVantagePointCollectionItemGeo;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
}

export interface GetApmSyntheticsPublicVantagePointsPublicVantagePointCollectionItemGeo {
    /**
     * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
     */
    adminDivCode: string;
    /**
     * Common English-language name for the city.
     */
    cityName: string;
    /**
     * The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
     */
    countryCode: string;
    /**
     * The common English-language name for the country.
     */
    countryName: string;
    /**
     * Degrees north of the Equator.
     */
    latitude: number;
    /**
     * Degrees east of the prime meridian.
     */
    longitude: number;
}

export interface GetApmSyntheticsResultResultDataSet {
    /**
     * Data content in byte format. Example: Zip or Screenshot.
     */
    byteContent: string;
    /**
     * Name of the data.
     */
    name: string;
    /**
     * Data content in string format. Example: HAR.
     */
    stringContent: string;
    /**
     * The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     */
    timestamp: string;
}

export interface GetApmSyntheticsScriptMonitorStatusCountMap {
    /**
     * Number of disabled monitors using the script.
     */
    disabled: number;
    /**
     * Number of enabled monitors using the script.
     */
    enabled: number;
    /**
     * Number of invalid monitors using the script.
     */
    invalid: number;
    /**
     * Total number of monitors using the script.
     */
    total: number;
}

export interface GetApmSyntheticsScriptParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
    /**
     * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
     */
    scriptParameter: outputs.GetApmSyntheticsScriptParameterScriptParameter;
}

export interface GetApmSyntheticsScriptParameterScriptParameter {
    /**
     * If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetApmSyntheticsScriptsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsScriptsScriptCollection {
    items: outputs.GetApmSyntheticsScriptsScriptCollectionItem[];
}

export interface GetApmSyntheticsScriptsScriptCollectionItem {
    /**
     * The APM domain ID the request is intended for.
     */
    apmDomainId: string;
    /**
     * The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
     */
    content: string;
    /**
     * File name of the uploaded script content.
     */
    contentFileName: string;
    /**
     * Size of the script content.
     */
    contentSizeInBytes: number;
    /**
     * A filter to return only resources that match the content type given.
     */
    contentType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     */
    id: string;
    /**
     * Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
     */
    monitorStatusCountMap: outputs.GetApmSyntheticsScriptsScriptCollectionItemMonitorStatusCountMap;
    /**
     * List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
     */
    parameters: outputs.GetApmSyntheticsScriptsScriptCollectionItemParameter[];
    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     */
    timeCreated: string;
    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     */
    timeUpdated: string;
    /**
     * The time when the script was uploaded.
     */
    timeUploaded: string;
}

export interface GetApmSyntheticsScriptsScriptCollectionItemMonitorStatusCountMap {
    /**
     * Number of disabled monitors using the script.
     */
    disabled: number;
    /**
     * Number of enabled monitors using the script.
     */
    enabled: number;
    /**
     * Number of invalid monitors using the script.
     */
    invalid: number;
    /**
     * Total number of monitors using the script.
     */
    total: number;
}

export interface GetApmSyntheticsScriptsScriptCollectionItemParameter {
    /**
     * If parameter value is default or overwritten.
     */
    isOverwritten: boolean;
    /**
     * If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
    /**
     * Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
     */
    scriptParameter: outputs.GetApmSyntheticsScriptsScriptCollectionItemParameterScriptParameter;
}

export interface GetApmSyntheticsScriptsScriptCollectionItemParameterScriptParameter {
    /**
     * If the parameter value is secret and should be kept confidential, then set isSecret to true.
     */
    isSecret: boolean;
    /**
     * Name of the parameter.
     */
    paramName: string;
    /**
     * Value of the parameter.
     */
    paramValue: string;
}

export interface GetArtifactsContainerImageLayer {
    /**
     * The sha256 digest of the image layer.
     */
    digest: string;
    /**
     * The size of the layer in bytes.
     */
    sizeInBytes: string;
    /**
     * The creation time of the version.
     */
    timeCreated: string;
}

export interface GetArtifactsContainerImageSignaturesContainerImageSignatureCollection {
    items: outputs.GetArtifactsContainerImageSignaturesContainerImageSignatureCollectionItem[];
    remainingItemsCount: number;
}

export interface GetArtifactsContainerImageSignaturesContainerImageSignatureCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The id of the user or principal that created the resource.
     */
    createdBy: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image signature.  Example: `ocid1.containerimagesignature.oc1..exampleuniqueID`
     */
    id: string;
    /**
     * A filter to return a container image summary only for the specified container image OCID.
     */
    imageId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
     */
    kmsKeyId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
     */
    kmsKeyVersionId: string;
    /**
     * The base64 encoded signature payload that was signed.
     */
    message: string;
    /**
     * The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
     */
    signature: string;
    /**
     * The algorithm to be used for signing. These are the only supported signing algorithms for container images.
     */
    signingAlgorithm: string;
    /**
     * An RFC 3339 timestamp indicating when the image was created.
     */
    timeCreated: string;
}

export interface GetArtifactsContainerImageSignaturesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerImageVersion {
    /**
     * The OCID of the user or principal that pushed the version.
     */
    createdBy: string;
    /**
     * The creation time of the version.
     */
    timeCreated: string;
    /**
     * The version name.
     */
    version: string;
}

export interface GetArtifactsContainerImagesContainerImageCollection {
    items: outputs.GetArtifactsContainerImagesContainerImageCollectionItem[];
    remainingItemsCount: number;
}

export interface GetArtifactsContainerImagesContainerImageCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the user or principal that pushed the version.
     */
    createdBy: string;
    /**
     * The sha256 digest of the image layer.
     */
    digest: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
     */
    id: string;
    /**
     * Layers of which the image is composed, ordered by the layer digest.
     */
    layers: outputs.GetArtifactsContainerImagesContainerImageCollectionItemLayer[];
    /**
     * The total size of the container image layers in bytes.
     */
    layersSizeInBytes: string;
    /**
     * The size of the container image manifest in bytes.
     */
    manifestSizeInBytes: number;
    /**
     * Total number of pulls.
     */
    pullCount: string;
    /**
     * A filter to return container images only for the specified container repository OCID.
     */
    repositoryId: string;
    /**
     * A filter to return container images or container image signatures that match the repository name.  Example: `foo` or `foo*`
     */
    repositoryName: string;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state: string;
    /**
     * The creation time of the version.
     */
    timeCreated: string;
    /**
     * An RFC 3339 timestamp indicating when the image was last pulled.
     */
    timeLastPulled: string;
    /**
     * A filter to return container images that match the version.  Example: `foo` or `foo*`
     */
    version: string;
    /**
     * The versions associated with this image.
     */
    versions: outputs.GetArtifactsContainerImagesContainerImageCollectionItemVersion[];
}

export interface GetArtifactsContainerImagesContainerImageCollectionItemLayer {
    /**
     * The sha256 digest of the image layer.
     */
    digest: string;
    /**
     * The size of the layer in bytes.
     */
    sizeInBytes: string;
    /**
     * The creation time of the version.
     */
    timeCreated: string;
}

export interface GetArtifactsContainerImagesContainerImageCollectionItemVersion {
    /**
     * The OCID of the user or principal that pushed the version.
     */
    createdBy: string;
    /**
     * The creation time of the version.
     */
    timeCreated: string;
    /**
     * A filter to return container images that match the version.  Example: `foo` or `foo*`
     */
    version: string;
}

export interface GetArtifactsContainerImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerRepositoriesContainerRepositoryCollection {
    /**
     * Total number of images.
     */
    imageCount: number;
    items: outputs.GetArtifactsContainerRepositoriesContainerRepositoryCollectionItem[];
    /**
     * Total number of layers.
     */
    layerCount: number;
    /**
     * Total storage in bytes consumed by layers.
     */
    layersSizeInBytes: string;
    remainingItemsCount: number;
    repositoryCount: number;
}

export interface GetArtifactsContainerRepositoriesContainerRepositoryCollectionItem {
    /**
     * Total storage size in GBs that will be charged.
     */
    billableSizeInGbs: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The id of the user or principal that created the resource.
     */
    createdBy: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.  Example: `ocid1.containerrepo.oc1..exampleuniqueID`
     */
    id: string;
    /**
     * Total number of images.
     */
    imageCount: number;
    /**
     * Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     */
    isImmutable: boolean;
    /**
     * A filter to return resources that match the isPublic value.
     */
    isPublic: boolean;
    /**
     * Total number of layers.
     */
    layerCount: number;
    /**
     * Total storage in bytes consumed by layers.
     */
    layersSizeInBytes: string;
    /**
     * Container repository readme.
     */
    readme: outputs.GetArtifactsContainerRepositoriesContainerRepositoryCollectionItemReadme;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state: string;
    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     */
    timeCreated: string;
    /**
     * An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     */
    timeLastPushed: string;
}

export interface GetArtifactsContainerRepositoriesContainerRepositoryCollectionItemReadme {
    /**
     * Readme content. Avoid entering confidential information.
     */
    content: string;
    /**
     * Readme format. Supported formats are text/plain and text/markdown.
     */
    format: string;
}

export interface GetArtifactsContainerRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerRepositoryReadme {
    /**
     * Readme content. Avoid entering confidential information.
     */
    content: string;
    /**
     * Readme format. Supported formats are text/plain and text/markdown.
     */
    format: string;
}

export interface GetArtifactsGenericArtifactsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsGenericArtifactsGenericArtifactCollection {
    items: outputs.GetArtifactsGenericArtifactsGenericArtifactCollectionItem[];
}

export interface GetArtifactsGenericArtifactsGenericArtifactCollectionItem {
    artifactId: string;
    /**
     * Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     */
    artifactPath: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return the resources for the specified OCID.
     */
    id: string;
    /**
     * A filter to return the artifacts only for the specified repository OCID.
     */
    repositoryId: string;
    /**
     * Filter results by a specified SHA256 digest for the artifact.
     */
    sha256: string;
    /**
     * The size of the artifact in bytes.
     */
    sizeInBytes: string;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state: string;
    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     */
    timeCreated: string;
    /**
     * Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     */
    version: string;
}

export interface GetArtifactsRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsRepositoriesRepositoryCollection {
    items: outputs.GetArtifactsRepositoriesRepositoryCollectionItem[];
}

export interface GetArtifactsRepositoriesRepositoryCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The repository description.
     */
    description: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return the resources for the specified OCID.
     */
    id: string;
    /**
     * A filter to return resources that match the isImmutable value.
     */
    isImmutable: boolean;
    /**
     * The repository's supported artifact type.
     */
    repositoryType: string;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state: string;
    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     */
    timeCreated: string;
}

export interface GetAuditEventsAuditEvent {
    /**
     * The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
     */
    cloudEventsVersion: string;
    /**
     * The content type of the data contained in `data`.  Example: `application/json`
     */
    contentType: string;
    /**
     * The payload of the event. Information within `data` comes from the resource emitting the event.
     */
    data: outputs.GetAuditEventsAuditEventData;
    /**
     * The GUID of the event.
     */
    eventId: string;
    /**
     * The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
     */
    eventTime: string;
    /**
     * The type of event that happened.
     */
    eventType: string;
    /**
     * The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
     */
    eventTypeVersion: string;
    /**
     * The source of the event.  Example: `ComputeApi`
     */
    source: string;
}

export interface GetAuditEventsAuditEventData {
    /**
     * A container object for attribues unique to the resource emitting the event.
     */
    additionalDetails: {[key: string]: any};
    /**
     * The availability domain where the resource resides.
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The name of the compartment. This value is the friendly name associated with compartmentId. This value can change, but the service logs the value that appeared at the time of the audit event.  Example: `CompartmentA`
     */
    compartmentName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * This value links multiple audit events that are part of the same API operation. For example,  a long running API operations that emit an event at the start and the end of an operation would use the same value in this field for both events.
     */
    eventGroupingId: string;
    /**
     * Name of the API operation that generated this event.  Example: `GetInstance`
     */
    eventName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name,  type, or namespace. Exists for cross-compatibility only. For more information,  see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A container object for identity attributes.
     */
    identity: outputs.GetAuditEventsAuditEventDataIdentity;
    /**
     * A container object for request attributes.
     */
    request: outputs.GetAuditEventsAuditEventDataRequest;
    /**
     * An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) or some other ID for the resource emitting the event.
     */
    resourceId: string;
    /**
     * The name of the resource emitting the event.
     */
    resourceName: string;
    /**
     * A container object for response attributes.
     */
    response: outputs.GetAuditEventsAuditEventDataResponse;
    /**
     * A container object for state change attributes.
     */
    stateChange: outputs.GetAuditEventsAuditEventDataStateChange;
}

export interface GetAuditEventsAuditEventDataIdentity {
    /**
     * The type of authentication used.  Example: `natv`
     */
    authType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
     */
    callerId: string;
    /**
     * The name of the user or service. This value is the friendly name associated with `callerId`.
     */
    callerName: string;
    /**
     * This value identifies any Console session associated with this request.
     */
    consoleSessionId: string;
    /**
     * The credential ID of the user. This value is extracted from the HTTP 'Authorization' request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
     */
    credentials: string;
    /**
     * The IP address of the source of the request.  Example: `172.24.80.88`
     */
    ipAddress: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
     */
    principalId: string;
    /**
     * The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
     */
    principalName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
     */
    tenantId: string;
    /**
     * The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
     */
    userAgent: string;
}

export interface GetAuditEventsAuditEventDataRequest {
    /**
     * The HTTP method of the request.  Example: `GET`
     */
    action: string;
    /**
     * The headers of the response.
     */
    headers: {[key: string]: any};
    /**
     * The opc-request-id of the request.
     */
    id: string;
    /**
     * The parameters supplied by the caller during this operation.
     */
    parameters: {[key: string]: any};
    /**
     * The full path of the API request.  Example: `/20160918/instances/ocid1.instance.oc1.phx.<unique_ID>`
     */
    path: string;
}

export interface GetAuditEventsAuditEventDataResponse {
    /**
     * The headers of the response.
     */
    headers: {[key: string]: any};
    /**
     * A friendly description of what happened during the operation. Use this for troubleshooting.
     */
    message: string;
    /**
     * This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
     */
    payload: {[key: string]: any};
    /**
     * The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
     */
    responseTime: string;
    /**
     * The status code of the response.  Example: `200`
     */
    status: string;
}

export interface GetAuditEventsAuditEventDataStateChange {
    /**
     * Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
     */
    current: {[key: string]: any};
    /**
     * Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
     */
    previous: {[key: string]: any};
}

export interface GetAuditEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoscalingAutoScalingConfigurationAutoScalingResources {
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface GetAutoscalingAutoScalingConfigurationPolicy {
    /**
     * The capacity requirements of the autoscaling policy.
     */
    capacity: outputs.GetAutoscalingAutoScalingConfigurationPolicyCapacity;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The schedule for executing the autoscaling policy.
     */
    executionSchedule: outputs.GetAutoscalingAutoScalingConfigurationPolicyExecutionSchedule;
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * Whether the autoscaling policy is enabled.
     */
    isEnabled: boolean;
    /**
     * The type of autoscaling policy.
     */
    policyType: string;
    /**
     * An action that can be executed against a resource.
     */
    resourceAction: outputs.GetAutoscalingAutoScalingConfigurationPolicyResourceAction;
    rules: outputs.GetAutoscalingAutoScalingConfigurationPolicyRule[];
    /**
     * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyCapacity {
    /**
     * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     */
    initial: number;
    /**
     * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     */
    max: number;
    /**
     * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     */
    min: number;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyExecutionSchedule {
    /**
     * A cron expression that represents the time at which to execute the autoscaling policy.
     */
    expression: string;
    /**
     * The time zone for the execution schedule.
     */
    timezone: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyResourceAction {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: string;
    /**
     * The type of resource action.
     */
    actionType: string;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyRule {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: outputs.GetAutoscalingAutoScalingConfigurationPolicyRuleAction;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * Metric and threshold details for triggering an autoscaling action.
     */
    metric: outputs.GetAutoscalingAutoScalingConfigurationPolicyRuleMetric;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyRuleAction {
    /**
     * The type of action to take.
     */
    type: string;
    value: number;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyRuleMetric {
    metricType: string;
    threshold: outputs.GetAutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface GetAutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold {
    /**
     * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
     */
    operator: string;
    value: number;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfiguration {
    /**
     * A resource that is managed by an autoscaling configuration. The only supported type is "instancePool."
     */
    autoScalingResources: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResources;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.
     */
    compartmentId: string;
    /**
     * For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
     */
    coolDownInSeconds: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * Whether the autoscaling policy is enabled.
     */
    isEnabled: boolean;
    /**
     * The maximum number of resources to scale out to.
     */
    maxResourceCount: number;
    /**
     * The minimum number of resources to scale in to.
     */
    minResourceCount: number;
    /**
     * Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
     */
    policies: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicy[];
    /**
     * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResources {
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicy {
    /**
     * The capacity requirements of the autoscaling policy.
     */
    capacity: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The schedule for executing the autoscaling policy.
     */
    executionSchedule: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule;
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * Whether the autoscaling policy is enabled.
     */
    isEnabled: boolean;
    /**
     * The type of autoscaling policy.
     */
    policyType: string;
    /**
     * An action that can be executed against a resource.
     */
    resourceAction: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction;
    rules: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRule[];
    /**
     * The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity {
    /**
     * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     */
    initial: number;
    /**
     * For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     */
    max: number;
    /**
     * For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     */
    min: number;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule {
    /**
     * A cron expression that represents the time at which to execute the autoscaling policy.
     */
    expression: string;
    /**
     * The time zone for the execution schedule.
     */
    timezone: string;
    /**
     * The type of action to take.
     */
    type: string;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: string;
    /**
     * The type of resource action.
     */
    actionType: string;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRule {
    /**
     * The action to take when autoscaling is triggered.
     */
    action: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleAction;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * ID of the condition that is assigned after creation.
     */
    id: string;
    /**
     * Metric and threshold details for triggering an autoscaling action.
     */
    metric: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleAction {
    /**
     * The type of action to take.
     */
    type: string;
    value: number;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric {
    metricType: string;
    threshold: outputs.GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface GetAutoscalingAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold {
    /**
     * The comparison operator to use. Options are greater than (`GT`), greater than or equal to (`GTE`), less than (`LT`), and less than or equal to (`LTE`).
     */
    operator: string;
    value: number;
}

export interface GetAutoscalingAutoScalingConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBastionBastionsBastion {
    /**
     * The type of bastion.
     */
    bastionType: string;
    /**
     * A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     */
    clientCidrBlockAllowLists: string[];
    /**
     * The unique identifier (OCID) of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique identifier (OCID) of the bastion, which can't be changed after creation.
     */
    id: string;
    /**
     * A message describing the current state in more detail.
     */
    lifecycleDetails: string;
    /**
     * The maximum amount of time that any session on the bastion can remain active.
     */
    maxSessionTtlInSeconds: number;
    /**
     * The maximum number of active sessions allowed on the bastion.
     */
    maxSessionsAllowed: number;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
    /**
     * The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
     */
    phoneBookEntry: string;
    /**
     * The private IP address of the created private endpoint.
     */
    privateEndpointIpAddress: string;
    /**
     * The current state of the bastion.
     */
    state: string;
    /**
     * A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     */
    staticJumpHostIpAddresses: string[];
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The unique identifier (OCID) of the subnet that the bastion connects to.
     */
    targetSubnetId: string;
    /**
     * The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
     */
    targetVcnId: string;
    /**
     * The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetBastionBastionsFilter {
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBastionSessionKeyDetails {
    /**
     * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
     */
    publicKeyContent: string;
}

export interface GetBastionSessionTargetResourceDetails {
    /**
     * The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     */
    sessionType: string;
    /**
     * The display name of the target Compute instance that the session connects to.
     */
    targetResourceDisplayName: string;
    /**
     * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     */
    targetResourceId: string;
    /**
     * The name of the user on the target resource operating system that the session uses for the connection.
     */
    targetResourceOperatingSystemUserName: string;
    /**
     * The port number to connect to on the target resource.
     */
    targetResourcePort: number;
    /**
     * The private IP address of the target resource that the session connects to.
     */
    targetResourcePrivateIpAddress: string;
}

export interface GetBastionSessionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBastionSessionsSession {
    /**
     * The unique identifier (OCID) of the bastion in which to list sessions.
     */
    bastionId: string;
    /**
     * The name of the bastion that is hosting this session.
     */
    bastionName: string;
    /**
     * The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
     */
    bastionPublicHostKeyInfo: string;
    /**
     * The username that the session uses to connect to the target resource.
     */
    bastionUserName: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * The unique identifier (OCID) of the session, which can't be changed after creation.
     */
    id: string;
    /**
     * Public key details for a bastion session.
     */
    keyDetails: outputs.GetBastionSessionsSessionKeyDetails;
    /**
     * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     */
    keyType: string;
    /**
     * A message describing the current session state in more detail.
     */
    lifecycleDetails: string;
    /**
     * The amount of time the session can remain active.
     */
    sessionTtlInSeconds: number;
    /**
     * The connection message for the session.
     */
    sshMetadata: {[key: string]: any};
    /**
     * The current state of the session.
     */
    state: string;
    /**
     * Details about a bastion session's target resource.
     */
    targetResourceDetails: outputs.GetBastionSessionsSessionTargetResourceDetails;
    /**
     * The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetBastionSessionsSessionKeyDetails {
    /**
     * The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
     */
    publicKeyContent: string;
}

export interface GetBastionSessionsSessionTargetResourceDetails {
    /**
     * The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     */
    sessionType: string;
    /**
     * The display name of the target Compute instance that the session connects to.
     */
    targetResourceDisplayName: string;
    /**
     * The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     */
    targetResourceId: string;
    /**
     * The name of the user on the target resource operating system that the session uses for the connection.
     */
    targetResourceOperatingSystemUserName: string;
    /**
     * The port number to connect to on the target resource.
     */
    targetResourcePort: number;
    /**
     * The private IP address of the target resource that the session connects to.
     */
    targetResourcePrivateIpAddress: string;
}

export interface GetBdsAutoScalingConfigurationPolicy {
    /**
     * Types of autoscale policies. Options are SCHEDULE-BASED or THRESHOLD-BASED. (Only THRESHOLD-BASED is supported in this release.)
     */
    policyType: string;
    /**
     * The list of rules for autoscaling. If an action has multiple rules, the last rule in the array will be applied.
     */
    rules: outputs.GetBdsAutoScalingConfigurationPolicyRule[];
}

export interface GetBdsAutoScalingConfigurationPolicyRule {
    /**
     * The valid value are CHANGE_SHAPE_SCALE_UP or CHANGE_SHAPE_SCALE_DOWN.
     */
    action: string;
    /**
     * Metric and threshold details for triggering an autoscale action.
     */
    metric: outputs.GetBdsAutoScalingConfigurationPolicyRuleMetric;
}

export interface GetBdsAutoScalingConfigurationPolicyRuleMetric {
    /**
     * Allowed value is CPU_UTILIZATION.
     */
    metricType: string;
    /**
     * An autoscale action is triggered when a performance metric meets or exceeds a threshold.
     */
    threshold: outputs.GetBdsAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface GetBdsAutoScalingConfigurationPolicyRuleMetricThreshold {
    /**
     * This value is the minimum period of time the metric value meets or exceeds the threshold value before the action is triggered. The value is in minutes.
     */
    durationInMinutes: number;
    /**
     * The comparison operator to use. Options are greater than (GT) or less than (LT).
     */
    operator: string;
    /**
     * Integer non-negative value. 0 < value < 100
     */
    value: number;
}

export interface GetBdsAutoScalingConfigurationsAutoScalingConfiguration {
    bdsInstanceId: string;
    clusterAdminPassword: string;
    displayName: string;
    id: string;
    isEnabled: boolean;
    nodeType: string;
    policy: outputs.GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicy;
    state: string;
    timeCreated: string;
    timeUpdated: string;
}

export interface GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicy {
    policyType: string;
    rules: outputs.GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRule[];
}

export interface GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRule {
    action: string;
    metric: outputs.GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric;
}

export interface GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetric {
    metricType: string;
    threshold: outputs.GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold;
}

export interface GetBdsAutoScalingConfigurationsAutoScalingConfigurationPolicyRuleMetricThreshold {
    durationInMinutes: number;
    operator: string;
    value: number;
}

export interface GetBdsAutoScalingConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstanceCloudSqlDetails {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     */
    isKerberosMappedToDatabaseUsers: boolean;
    /**
     * Details about the Kerberos principals.
     */
    kerberosDetails: outputs.GetBdsBdsInstanceCloudSqlDetailsKerberosDetail[];
    /**
     * Shape of the node.
     */
    shape: string;
}

export interface GetBdsBdsInstanceCloudSqlDetailsKerberosDetail {
    /**
     * Location of the keytab file
     */
    keytabFile: string;
    /**
     * Name of the Kerberos principal.
     */
    principalName: string;
}

export interface GetBdsBdsInstanceClusterDetails {
    /**
     * The URL of Ambari
     */
    ambariUrl: string;
    /**
     * Cloud SQL cell version.
     */
    bdCellVersion: string;
    /**
     * BDA version installed in the cluster
     */
    bdaVersion: string;
    /**
     * Big Data Manager version installed in the cluster.
     */
    bdmVersion: string;
    /**
     * Big Data Service version installed in the cluster.
     */
    bdsVersion: string;
    /**
     * The URL of Big Data Manager.
     */
    bigDataManagerUrl: string;
    /**
     * The URL of Cloudera Manager
     */
    clouderaManagerUrl: string;
    /**
     * Big Data SQL version.
     */
    csqlCellVersion: string;
    /**
     * Cloud SQL query server database version.
     */
    dbVersion: string;
    /**
     * The URL of the Hue server.
     */
    hueServerUrl: string;
    /**
     * Oracle Linux version installed in the cluster.
     */
    osVersion: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
     */
    timeRefreshed: string;
}

export interface GetBdsBdsInstanceMasterNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstanceNetworkConfig {
    /**
     * The CIDR IP address block of the VCN.
     */
    cidrBlock: string;
    /**
     * A boolean flag whether to configure a NAT gateway.
     */
    isNatGatewayRequired: boolean;
}

export interface GetBdsBdsInstanceNode {
    /**
     * The list of block volumes attached to a given node.
     */
    attachedBlockVolumes: outputs.GetBdsBdsInstanceNodeAttachedBlockVolume[];
    /**
     * The name of the availability domain in which the node is running.
     */
    availabilityDomain: string;
    /**
     * The name of the node.
     */
    displayName: string;
    /**
     * The name of the fault domain in which the node is running.
     */
    faultDomain: string;
    /**
     * The fully-qualified hostname (FQDN) of the node.
     */
    hostname: string;
    /**
     * The OCID of the image from which the node was created.
     */
    imageId: string;
    /**
     * The OCID of the underlying Oracle Cloud Infrastructure Compute instance.
     */
    instanceId: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * Cluster node type.
     */
    nodeType: string;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The fingerprint of the SSH key used for node access.
     */
    sshFingerprint: string;
    /**
     * The state of the cluster.
     */
    state: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
}

export interface GetBdsBdsInstanceNodeAttachedBlockVolume {
    /**
     * The OCID of the volume attachment.
     */
    volumeAttachmentId: string;
    /**
     * The size of the volume in GBs.
     */
    volumeSizeInGbs: string;
}

export interface GetBdsBdsInstanceUtilNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstanceWorkerNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstancesBdsInstance {
    /**
     * The information about added Cloud SQL capability
     */
    cloudSqlDetails: outputs.GetBdsBdsInstancesBdsInstanceCloudSqlDetails;
    clusterAdminPassword: string;
    /**
     * Specific info about a Hadoop cluster
     */
    clusterDetails: outputs.GetBdsBdsInstancesBdsInstanceClusterDetails;
    clusterPublicKey: string;
    /**
     * Version of the Hadoop distribution.
     */
    clusterVersion: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The user who created the cluster.
     */
    createdBy: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Big Data Service resource.
     */
    id: string;
    /**
     * Boolean flag specifying whether or not Cloud SQL should be configured.
     */
    isCloudSqlConfigured: boolean;
    /**
     * Boolean flag specifying whether or not the cluster is highly available (HA)
     */
    isHighAvailability: boolean;
    /**
     * Boolean flag specifying whether or not the cluster should be set up as secure.
     */
    isSecure: boolean;
    masterNode: outputs.GetBdsBdsInstancesBdsInstanceMasterNode;
    /**
     * Additional configuration of the user's network.
     */
    networkConfig: outputs.GetBdsBdsInstancesBdsInstanceNetworkConfig;
    /**
     * The list of nodes in the cluster.
     */
    nodes: outputs.GetBdsBdsInstancesBdsInstanceNode[];
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * The state of the cluster.
     */
    state: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
     */
    timeUpdated: string;
    utilNode: outputs.GetBdsBdsInstancesBdsInstanceUtilNode;
    workerNode: outputs.GetBdsBdsInstancesBdsInstanceWorkerNode;
}

export interface GetBdsBdsInstancesBdsInstanceCloudSqlDetails {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     */
    isKerberosMappedToDatabaseUsers: boolean;
    /**
     * Details about the Kerberos principals.
     */
    kerberosDetails: outputs.GetBdsBdsInstancesBdsInstanceCloudSqlDetailsKerberosDetail[];
    /**
     * Shape of the node.
     */
    shape: string;
}

export interface GetBdsBdsInstancesBdsInstanceCloudSqlDetailsKerberosDetail {
    /**
     * Location of the keytab file
     */
    keytabFile: string;
    /**
     * Name of the Kerberos principal.
     */
    principalName: string;
}

export interface GetBdsBdsInstancesBdsInstanceClusterDetails {
    /**
     * The URL of Ambari
     */
    ambariUrl: string;
    /**
     * Cloud SQL cell version.
     */
    bdCellVersion: string;
    /**
     * BDA version installed in the cluster
     */
    bdaVersion: string;
    /**
     * Big Data Manager version installed in the cluster.
     */
    bdmVersion: string;
    /**
     * Big Data Service version installed in the cluster.
     */
    bdsVersion: string;
    /**
     * The URL of Big Data Manager.
     */
    bigDataManagerUrl: string;
    /**
     * The URL of Cloudera Manager
     */
    clouderaManagerUrl: string;
    /**
     * Big Data SQL version.
     */
    csqlCellVersion: string;
    /**
     * Cloud SQL query server database version.
     */
    dbVersion: string;
    /**
     * The URL of the Hue server.
     */
    hueServerUrl: string;
    /**
     * Oracle Linux version installed in the cluster.
     */
    osVersion: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
     */
    timeRefreshed: string;
}

export interface GetBdsBdsInstancesBdsInstanceMasterNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstancesBdsInstanceNetworkConfig {
    /**
     * The CIDR IP address block of the VCN.
     */
    cidrBlock: string;
    /**
     * A boolean flag whether to configure a NAT gateway.
     */
    isNatGatewayRequired: boolean;
}

export interface GetBdsBdsInstancesBdsInstanceNode {
    /**
     * The list of block volumes attached to a given node.
     */
    attachedBlockVolumes: outputs.GetBdsBdsInstancesBdsInstanceNodeAttachedBlockVolume[];
    /**
     * The name of the availability domain in which the node is running.
     */
    availabilityDomain: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * The name of the fault domain in which the node is running.
     */
    faultDomain: string;
    /**
     * The fully-qualified hostname (FQDN) of the node.
     */
    hostname: string;
    /**
     * The OCID of the image from which the node was created.
     */
    imageId: string;
    /**
     * The OCID of the underlying Oracle Cloud Infrastructure Compute instance.
     */
    instanceId: string;
    /**
     * IP address of the node.
     */
    ipAddress: string;
    /**
     * Cluster node type.
     */
    nodeType: string;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The fingerprint of the SSH key used for node access.
     */
    sshFingerprint: string;
    /**
     * The state of the cluster.
     */
    state: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated: string;
}

export interface GetBdsBdsInstancesBdsInstanceNodeAttachedBlockVolume {
    /**
     * The OCID of the volume attachment.
     */
    volumeAttachmentId: string;
    /**
     * The size of the volume in GBs.
     */
    volumeSizeInGbs: string;
}

export interface GetBdsBdsInstancesBdsInstanceUtilNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstancesBdsInstanceWorkerNode {
    /**
     * The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     */
    blockVolumeSizeInGbs: string;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes: number;
    /**
     * Shape of the node.
     */
    shape: string;
    /**
     * The OCID of the subnet in which the node is to be created.
     */
    subnetId: string;
}

export interface GetBdsBdsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainBlockchainPlatformComponentDetails {
    /**
     * List of OSNs
     */
    osns: outputs.GetBlockchainBlockchainPlatformComponentDetailsOsn[];
    /**
     * List of Peers
     */
    peers: outputs.GetBlockchainBlockchainPlatformComponentDetailsPeer[];
}

export interface GetBlockchainBlockchainPlatformComponentDetailsOsn {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainBlockchainPlatformComponentDetailsOsnOcpuAllocationParam;
    /**
     * OSN identifier
     */
    osnKey: string;
    /**
     * The current state of the Platform Instance.
     */
    state: string;
}

export interface GetBlockchainBlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainBlockchainPlatformComponentDetailsPeer {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * peer alias
     */
    alias: string;
    /**
     * Host name of VM
     */
    host: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainBlockchainPlatformComponentDetailsPeerOcpuAllocationParam;
    /**
     * peer identifier
     */
    peerKey: string;
    /**
     * Peer role
     */
    role: string;
    /**
     * The current state of the Platform Instance.
     */
    state: string;
}

export interface GetBlockchainBlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainBlockchainPlatformHostOcpuUtilizationInfo {
    /**
     * Host name of VM
     */
    host: string;
    /**
     * Number of total OCPU capacity on the host
     */
    ocpuCapacityNumber: number;
    /**
     * Number of OCPU utilized
     */
    ocpuUtilizationNumber: number;
}

export interface GetBlockchainBlockchainPlatformReplicas {
    /**
     * Number of CA replicas
     */
    caCount: number;
    /**
     * Number of console replicas
     */
    consoleCount: number;
    /**
     * Number of REST proxy replicas
     */
    proxyCount: number;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollection {
    items: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItem[];
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItem {
    caCertArchiveText: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Blockchain Platform component details.
     */
    componentDetails: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     */
    computeShape: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Platform Instance Description
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
     */
    displayName: string;
    federatedUserId: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * List of OcpuUtilization for all hosts
     */
    hostOcpuUtilizationInfos: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo[];
    /**
     * unique identifier that is immutable on creation
     */
    id: string;
    idcsAccessToken: string;
    /**
     * Bring your own license
     */
    isByol: boolean;
    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     */
    isMultiAd: boolean;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    loadBalancerShape: string;
    /**
     * Role of platform - FOUNDER or PARTICIPANT
     */
    platformRole: string;
    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     */
    platformShapeType: string;
    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     */
    replicas: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemReplicas;
    /**
     * Service endpoint URL, valid post-provisioning
     */
    serviceEndpoint: string;
    /**
     * The version of the Platform Instance.
     */
    serviceVersion: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * Storage size in TBs
     */
    storageSizeInTbs: number;
    /**
     * Storage used in TBs
     */
    storageUsedInTbs: number;
    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
    /**
     * Number of total OCPUs allocated to the platform cluster
     */
    totalOcpuCapacity: number;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails {
    /**
     * List of OSNs
     */
    osns: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn[];
    /**
     * List of Peers
     */
    peers: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer[];
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam;
    /**
     * OSN identifier
     */
    osnKey: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * peer alias
     */
    alias: string;
    /**
     * Host name of VM
     */
    host: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam;
    /**
     * peer identifier
     */
    peerKey: string;
    /**
     * Peer role
     */
    role: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo {
    /**
     * Host name of VM
     */
    host: string;
    /**
     * Number of total OCPU capacity on the host
     */
    ocpuCapacityNumber: number;
    /**
     * Number of OCPU utilized
     */
    ocpuUtilizationNumber: number;
}

export interface GetBlockchainBlockchainPlatformsBlockchainPlatformCollectionItemReplicas {
    /**
     * Number of CA replicas
     */
    caCount: number;
    /**
     * Number of console replicas
     */
    consoleCount: number;
    /**
     * Number of REST proxy replicas
     */
    proxyCount: number;
}

export interface GetBlockchainBlockchainPlatformsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainOsnOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainOsnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainOsnsOsnCollection {
    items: outputs.GetBlockchainOsnsOsnCollectionItem[];
}

export interface GetBlockchainOsnsOsnCollectionItem {
    /**
     * Availability Domain of OSN
     */
    ad: string;
    /**
     * Unique service identifier.
     */
    blockchainPlatformId: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainOsnsOsnCollectionItemOcpuAllocationParam;
    /**
     * OSN identifier
     */
    osnKey: string;
    /**
     * The current state of the OSN.
     */
    state: string;
}

export interface GetBlockchainOsnsOsnCollectionItemOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainPeerOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBlockchainPeersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainPeersPeerCollection {
    items: outputs.GetBlockchainPeersPeerCollectionItem[];
}

export interface GetBlockchainPeersPeerCollectionItem {
    /**
     * Availability Domain of peer
     */
    ad: string;
    /**
     * peer alias
     */
    alias: string;
    /**
     * Unique service identifier.
     */
    blockchainPlatformId: string;
    /**
     * Host on which the Peer exists
     */
    host: string;
    /**
     * OCPU allocation parameter
     */
    ocpuAllocationParam: outputs.GetBlockchainPeersPeerCollectionItemOcpuAllocationParam;
    /**
     * peer identifier
     */
    peerKey: string;
    /**
     * Peer role
     */
    role: string;
    /**
     * The current state of the peer.
     */
    state: string;
}

export interface GetBlockchainPeersPeerCollectionItemOcpuAllocationParam {
    /**
     * Number of OCPU allocation
     */
    ocpuAllocationNumber: number;
}

export interface GetBudgetAlertRulesAlertRule {
    /**
     * The unique Budget OCID
     */
    budgetId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the alert rule.
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the alert rule
     */
    id: string;
    /**
     * Custom message that will be sent when alert is triggered
     */
    message: string;
    /**
     * Delimited list of email addresses to receive the alert when it triggers. Delimiter character can be comma, space, TAB, or semicolon.
     */
    recipients: string;
    /**
     * The current state of the resource to filter by.
     */
    state: string;
    /**
     * The threshold for triggering the alert. If thresholdType is PERCENTAGE, the maximum value is 10000.
     */
    threshold: number;
    /**
     * The type of threshold.
     */
    thresholdType: string;
    /**
     * Time when budget was created
     */
    timeCreated: string;
    /**
     * Time when budget was updated
     */
    timeUpdated: string;
    /**
     * The type of alert. Valid values are ACTUAL (the alert will trigger based on actual usage) or FORECAST (the alert will trigger based on predicted usage).
     */
    type: string;
    /**
     * Version of the alert rule. Starts from 1 and increments by 1.
     */
    version: number;
}

export interface GetBudgetAlertRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBudgetBudgetsBudget {
    /**
     * The actual spend in currency for the current budget cycle
     */
    actualSpend: number;
    /**
     * Total number of alert rules in the budget
     */
    alertRuleCount: number;
    /**
     * The amount of the budget expressed in the currency of the customer's rate card.
     */
    amount: number;
    /**
     * The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     */
    budgetProcessingPeriodStartOffset: number;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the budget.
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * The forecasted spend in currency by the end of the current budget cycle
     */
    forecastedSpend: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the budget
     */
    id: string;
    /**
     * The reset period for the budget.
     */
    resetPeriod: string;
    /**
     * The current state of the resource to filter by.
     */
    state: string;
    /**
     * This is DEPRECATED. For backwards compatability, the property will be populated when targetType is "COMPARTMENT" AND targets contains EXACT ONE target compartment ocid. For all other scenarios, this property will be left empty.
     *
     * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
     */
    targetCompartmentId: string;
    /**
     * The type of target to filter by.
     * * ALL - List all budgets
     * * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
     * * TAG - List all budgets with targetType == "TAG"
     */
    targetType: string;
    /**
     * The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}".
     */
    targets: string[];
    /**
     * Time that budget was created
     */
    timeCreated: string;
    /**
     * The time that the budget spend was last computed
     */
    timeSpendComputed: string;
    /**
     * Time that budget was updated
     */
    timeUpdated: string;
    /**
     * Version of the budget. Starts from 1 and increments by 1.
     */
    version: number;
}

export interface GetBudgetBudgetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardDataMaskRuleTargetSelected {
    /**
     * Target selection.
     */
    kind: string;
    /**
     * Types of Targets
     */
    values: string[];
}

export interface GetCloudGuardDataMaskRulesDataMaskRuleCollection {
    items: outputs.GetCloudGuardDataMaskRulesDataMaskRuleCollectionItem[];
}

export interface GetCloudGuardDataMaskRulesDataMaskRuleCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Data Mask Categories
     */
    dataMaskCategories: string[];
    /**
     * The status of the dataMaskRule.
     */
    dataMaskRuleStatus: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The data mask rule description.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * OCID of iamGroup
     */
    iamGroupId: string;
    /**
     * Unique identifier that is immutable on creation
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecyleDetails: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
     */
    targetSelected: outputs.GetCloudGuardDataMaskRulesDataMaskRuleCollectionItemTargetSelected;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDataMaskRulesDataMaskRuleCollectionItemTargetSelected {
    /**
     * Target selection.
     */
    kind: string;
    /**
     * Types of Targets
     */
    values: string[];
}

export interface GetCloudGuardDataMaskRulesFilter {
    name: string;
    regex?: boolean;
    /**
     * Types of Targets
     */
    values: string[];
}

export interface GetCloudGuardDetectorRecipeDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.GetCloudGuardDetectorRecipeDetectorRuleCandidateResponderRule[];
    /**
     * Description for DetectorRecipeDetectorRule
     */
    description: string;
    /**
     * Details of a Detector Rule
     */
    details: outputs.GetCloudGuardDetectorRecipeDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * displayName
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDetectorRecipeDetectorRuleCandidateResponderRule {
    /**
     * displayName
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface GetCloudGuardDetectorRecipeDetectorRuleDetails {
    condition: string;
    /**
     * Configuration details
     */
    configurations: outputs.GetCloudGuardDetectorRecipeDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Enables the control
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardDetectorRecipeDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardDetectorRecipeEffectiveDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.GetCloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule[];
    /**
     * Description for DetectorRecipeDetectorRule
     */
    description: string;
    /**
     * Details of a Detector Rule
     */
    details: outputs.GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * displayName
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
    /**
     * displayName
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetails {
    condition: string;
    /**
     * Configuration details
     */
    configurations: outputs.GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Enables the control
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollection {
    items: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItem[];
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description for DetectorRecipeDetectorRule
     */
    description: string;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * List of detector rules for the detector type for recipe - user input
     */
    detectorRules: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRule[];
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    effectiveDetectorRules: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Owner of detector recipe
     */
    owner: string;
    /**
     * Recipe Ocid of the Source Recipe to be cloned
     */
    sourceDetectorRecipeId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule[];
    /**
     * Description for DetectorRecipeDetectorRule
     */
    description: string;
    /**
     * Details of a Detector Rule
     */
    details: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails {
    condition: string;
    /**
     * Configuration details
     */
    configurations: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Enables the control
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
    /**
     * List of CandidateResponderRule related to this rule
     */
    candidateResponderRules: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule[];
    /**
     * Description for DetectorRecipeDetectorRule
     */
    description: string;
    /**
     * Details of a Detector Rule
     */
    details: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for DetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Ocid for detector recipe
     */
    id: string;
    /**
     * Preferred state
     */
    isPreferred: boolean;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails {
    condition: string;
    /**
     * Configuration details
     */
    configurations: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Enables the control
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardDetectorRecipesFilter {
    /**
     * configuration name
     */
    name: string;
    regex?: boolean;
    /**
     * List of configuration values
     */
    values: string[];
}

export interface GetCloudGuardManagedListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardManagedListsManagedListCollection {
    items: outputs.GetCloudGuardManagedListsManagedListCollectionItem[];
}

export interface GetCloudGuardManagedListsManagedListCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * ManagedList description
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * provider of the feed
     */
    feedProvider: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation
     */
    id: string;
    /**
     * If this list is editable or not
     */
    isEditable: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecyleDetails: string;
    /**
     * List of ManagedListItem
     */
    listItems: string[];
    /**
     * The type of the ManagedList.
     */
    listType: string;
    /**
     * OCID of the Source ManagedList
     */
    sourceManagedListId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the managed list was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the managed list was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardResponderRecipeEffectiveResponderRule {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardResponderRecipeEffectiveResponderRuleDetails;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The current state of the Example.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardResponderRecipeEffectiveResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardResponderRecipeEffectiveResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardResponderRecipeEffectiveResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardResponderRecipeResponderRule {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardResponderRecipeResponderRuleDetails;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The current state of the Example.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardResponderRecipeResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardResponderRecipeResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardResponderRecipeResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardResponderRecipesFilter {
    /**
     * configuration name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollection {
    items: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItem[];
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * List of responder rules associated with the recipe
     */
    effectiveResponderRules: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Identifier for ResponderRecipe.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * List of responder rules associated with the recipe
     */
    responderRules: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRule[];
    /**
     * The id of the source responder recipe.
     */
    sourceResponderRecipeId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRule {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRuleDetails;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the responder recipe was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipe {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * Unique identifier for Detector Recipe of which this is an extension
     */
    detectorRecipeId: string;
    /**
     * List of detector rules for the detector type for recipe - user input
     */
    detectorRules: outputs.GetCloudGuardTargetTargetDetectorRecipeDetectorRule[];
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    effectiveDetectorRules: outputs.GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * The current state of the ResponderRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeDetectorRule {
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the ResponderRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetails {
    /**
     * Condition group corresponding to each compartment
     */
    conditionGroups: outputs.GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup[];
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    condition: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The current state of the ResponderRule.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
    /**
     * Condition group corresponding to each compartment
     */
    conditionGroups: outputs.GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup[];
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    condition: string;
}

export interface GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetTargetResponderRecipe {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * List of responder rules associated with the recipe after applying all defaults
     */
    effectiveResponderRules: outputs.GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * Unique identifier for Responder Recipe of which this is an extension
     */
    responderRecipeId: string;
    /**
     * List of responder rules associated with the recipe - user input
     */
    responderRules: outputs.GetCloudGuardTargetTargetResponderRecipeResponderRule[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRule {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetails;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The current state of the ResponderRule.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeResponderRule {
    /**
     * Compartment Identifier
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetTargetResponderRecipeResponderRuleDetails;
    /**
     * ResponderRule Display Name
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The current state of the ResponderRule.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetsFilter {
    /**
     * configuration name
     */
    name: string;
    regex?: boolean;
    /**
     * List of configuration values
     */
    values: string[];
}

export interface GetCloudGuardTargetsTargetCollection {
    items: outputs.GetCloudGuardTargetsTargetCollectionItem[];
}

export interface GetCloudGuardTargetsTargetCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * List of inherited compartments
     */
    inheritedByCompartments: string[];
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecyleDetails: string;
    /**
     * Total number of recipes attached to target
     */
    recipeCount: number;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * List of detector recipes associated with target
     */
    targetDetectorRecipes: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipe[];
    /**
     * Resource ID which the target uses to monitor
     */
    targetResourceId: string;
    /**
     * possible type of targets
     */
    targetResourceType: string;
    /**
     * List of responder recipes associated with target
     */
    targetResponderRecipes: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipe[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipe {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * Unique identifier for Detector Recipe of which this is an extension
     */
    detectorRecipeId: string;
    /**
     * List of detector rules for the detector type for recipe - user input
     */
    detectorRules: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule[];
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    effectiveDetectorRules: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails {
    /**
     * Condition group corresponding to each compartment
     */
    conditionGroups: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup[];
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    condition: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails;
    /**
     * detector for the rule
     */
    detector: string;
    /**
     * The unique identifier of the detector rule
     */
    detectorRuleId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of cloudguard managed list types related to this rule
     */
    managedListTypes: string[];
    /**
     * Recommendation for TargetDetectorRecipeDetectorRule
     */
    recommendation: string;
    /**
     * resource type of the configuration to which the rule is applied
     */
    resourceType: string;
    /**
     * service type of the configuration to which the rule is applied
     */
    serviceType: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails {
    /**
     * Condition group corresponding to each compartment
     */
    conditionGroups: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup[];
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration[];
    /**
     * configuration allowed or not
     */
    isConfigurationAllowed: boolean;
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * user defined labels for a detector rule
     */
    labels: string[];
    /**
     * The Risk Level
     */
    riskLevel: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    condition: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration data type
     */
    dataType: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
    /**
     * List of configuration values
     */
    values: outputs.GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue[];
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
    /**
     * configuration list item type, either CUSTOM or MANAGED
     */
    listType: string;
    /**
     * type of the managed list
     */
    managedListType: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipe {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * List of responder rules associated with the recipe after applying all defaults
     */
    effectiveResponderRules: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule[];
    /**
     * Unique identifier of TargetResponderRecipe that is immutable on creation
     */
    id: string;
    /**
     * Owner of ResponderRecipe
     */
    owner: string;
    /**
     * Unique identifier for Responder Recipe of which this is an extension
     */
    responderRecipeId: string;
    /**
     * List of responder rules associated with the recipe - user input
     */
    responderRules: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * ResponderRule Description
     */
    description: string;
    /**
     * Details of ResponderRule.
     */
    details: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * List of Policy
     */
    policies: string[];
    /**
     * Identifier for ResponderRule.
     */
    responderRuleId: string;
    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     */
    state: string;
    /**
     * Supported Execution Modes
     */
    supportedModes: string[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the target was updated. Format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * Type of Responder
     */
    type: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails {
    condition: string;
    /**
     * ResponderRule configurations
     */
    configurations: outputs.GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration[];
    /**
     * Identifies state for ResponderRule
     */
    isEnabled: boolean;
    /**
     * Execution Mode for ResponderRule
     */
    mode: string;
}

export interface GetCloudGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration {
    /**
     * Unique name of the configuration
     */
    configKey: string;
    /**
     * configuration name
     */
    name: string;
    /**
     * configuration value
     */
    value: string;
}

export interface GetComputeinstanceagentInstanceAgentPluginsFilter {
    /**
     * The plugin name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetComputeinstanceagentInstanceAgentPluginsInstanceAgentPlugin {
    /**
     * The optional message from the agent plugin
     */
    message: string;
    /**
     * The plugin name
     */
    name: string;
    /**
     * The plugin status
     */
    status: string;
    /**
     * The last update time of the plugin in UTC
     */
    timeLastUpdatedUtc: string;
}

export interface GetComputeinstanceagentInstanceAvailablePluginsAvailablePlugin {
    /**
     * Is the plugin enabled or disabled by default
     */
    isEnabledByDefault: boolean;
    /**
     * Is the plugin supported or not
     */
    isSupported: boolean;
    /**
     * The plugin name
     */
    name: string;
    /**
     * A brief description of the plugin functionality
     */
    summary: string;
}

export interface GetComputeinstanceagentInstanceAvailablePluginsFilter {
    /**
     * The plugin name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineClustersCluster {
    /**
     * Available Kubernetes versions to which the clusters masters may be upgraded.
     */
    availableKubernetesUpgrades: string[];
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The network configuration for access to the Cluster control plane.
     */
    endpointConfig: outputs.GetContainerengineClustersClusterEndpointConfig;
    /**
     * Endpoints served up by the cluster masters.
     */
    endpoints: outputs.GetContainerengineClustersClusterEndpoints;
    /**
     * The OCID of the cluster.
     */
    id: string;
    /**
     * The image verification policy for signature validation.
     */
    imagePolicyConfig: outputs.GetContainerengineClustersClusterImagePolicyConfig;
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
     */
    kmsKeyId: string;
    /**
     * The version of Kubernetes running on the cluster masters.
     */
    kubernetesVersion: string;
    /**
     * Details about the state of the cluster masters.
     */
    lifecycleDetails: string;
    /**
     * Metadata about the cluster.
     */
    metadata: outputs.GetContainerengineClustersClusterMetadata;
    /**
     * The name to filter on.
     */
    name: string;
    /**
     * Optional attributes for the cluster.
     */
    options: outputs.GetContainerengineClustersClusterOptions;
    /**
     * A cluster lifecycle state to filter on. Can have multiple parameters of this name.
     */
    state: string;
    /**
     * The OCID of the virtual cloud network (VCN) in which the cluster exists.
     */
    vcnId: string;
}

export interface GetContainerengineClustersClusterEndpointConfig {
    /**
     * Whether the cluster should be assigned a public IP address. Defaults to false. If set to true on a private subnet, the cluster provisioning will fail.
     */
    isPublicIpEnabled: boolean;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to apply to the cluster endpoint. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * The OCID of the regional subnet in which to place the Cluster endpoint.
     */
    subnetId: string;
}

export interface GetContainerengineClustersClusterEndpoints {
    /**
     * The non-native networking Kubernetes API server endpoint.
     */
    kubernetes: string;
    /**
     * The private native networking Kubernetes API server endpoint.
     */
    privateEndpoint: string;
    /**
     * The public native networking Kubernetes API server endpoint, if one was requested.
     */
    publicEndpoint: string;
}

export interface GetContainerengineClustersClusterImagePolicyConfig {
    /**
     * Whether the image verification policy is enabled. Defaults to false. If set to true, the images will be verified against the policy at runtime.
     */
    isPolicyEnabled: boolean;
    /**
     * A list of KMS key details.
     */
    keyDetails: outputs.GetContainerengineClustersClusterImagePolicyConfigKeyDetail[];
}

export interface GetContainerengineClustersClusterImagePolicyConfigKeyDetail {
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
     */
    kmsKeyId: string;
}

export interface GetContainerengineClustersClusterMetadata {
    /**
     * The user who created the cluster.
     */
    createdByUserId: string;
    /**
     * The OCID of the work request which created the cluster.
     */
    createdByWorkRequestId: string;
    /**
     * The user who deleted the cluster.
     */
    deletedByUserId: string;
    /**
     * The OCID of the work request which deleted the cluster.
     */
    deletedByWorkRequestId: string;
    /**
     * The time the cluster was created.
     */
    timeCreated: string;
    /**
     * The time the cluster was deleted.
     */
    timeDeleted: string;
    /**
     * The time the cluster was updated.
     */
    timeUpdated: string;
    /**
     * The user who updated the cluster.
     */
    updatedByUserId: string;
    /**
     * The OCID of the work request which updated the cluster.
     */
    updatedByWorkRequestId: string;
}

export interface GetContainerengineClustersClusterOptions {
    /**
     * Configurable cluster add-ons
     */
    addOns: outputs.GetContainerengineClustersClusterOptionsAddOns;
    /**
     * Configurable cluster admission controllers
     */
    admissionControllerOptions: outputs.GetContainerengineClustersClusterOptionsAdmissionControllerOptions;
    /**
     * Network configuration for Kubernetes.
     */
    kubernetesNetworkConfig: outputs.GetContainerengineClustersClusterOptionsKubernetesNetworkConfig;
    /**
     * The OCIDs of the subnets used for Kubernetes services load balancers.
     */
    serviceLbSubnetIds: string[];
}

export interface GetContainerengineClustersClusterOptionsAddOns {
    /**
     * Whether or not to enable the Kubernetes Dashboard add-on.
     */
    isKubernetesDashboardEnabled: boolean;
    /**
     * Whether or not to enable the Tiller add-on.
     */
    isTillerEnabled: boolean;
}

export interface GetContainerengineClustersClusterOptionsAdmissionControllerOptions {
    /**
     * Whether or not to enable the Pod Security Policy admission controller.
     */
    isPodSecurityPolicyEnabled: boolean;
}

export interface GetContainerengineClustersClusterOptionsKubernetesNetworkConfig {
    /**
     * The CIDR block for Kubernetes pods.
     */
    podsCidr: string;
    /**
     * The CIDR block for Kubernetes services.
     */
    servicesCidr: string;
}

export interface GetContainerengineClustersFilter {
    /**
     * The name to filter on.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineNodePoolInitialNodeLabel {
    /**
     * The key of the pair.
     */
    key: string;
    /**
     * The value of the pair.
     */
    value: string;
}

export interface GetContainerengineNodePoolNode {
    /**
     * The name of the availability domain in which this node is placed.
     */
    availabilityDomain: string;
    /**
     * An error that may be associated with the node.
     */
    error: outputs.GetContainerengineNodePoolNodeError;
    /**
     * The fault domain of this node.
     */
    faultDomain: string;
    /**
     * The OCID of the compute instance backing this node.
     */
    id: string;
    /**
     * The version of Kubernetes this node is running.
     */
    kubernetesVersion: string;
    /**
     * Details about the state of the node.
     */
    lifecycleDetails: string;
    /**
     * The name of the node.
     */
    name: string;
    /**
     * The OCID of the node pool.
     */
    nodePoolId: string;
    /**
     * The private IP address of this node.
     */
    privateIp: string;
    /**
     * The public IP address of this node.
     */
    publicIp: string;
    /**
     * The state of the node.
     */
    state: string;
    /**
     * The OCID of the subnet in which this node is placed.
     */
    subnetId: string;
}

export interface GetContainerengineNodePoolNodeConfigDetails {
    /**
     * The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
     */
    placementConfigs: outputs.GetContainerengineNodePoolNodeConfigDetailsPlacementConfig[];
    /**
     * The number of nodes in the node pool.
     */
    size: number;
}

export interface GetContainerengineNodePoolNodeConfigDetailsPlacementConfig {
    /**
     * The name of the availability domain in which this node is placed.
     */
    availabilityDomain: string;
    /**
     * The OCID of the subnet in which this node is placed.
     */
    subnetId: string;
}

export interface GetContainerengineNodePoolNodeError {
    /**
     * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
     */
    code: string;
    /**
     * A human-readable error string of the upstream error.
     */
    message: string;
    /**
     * The status of the HTTP response encountered in the upstream error.
     */
    status: string;
}

export interface GetContainerengineNodePoolNodeShapeConfig {
    /**
     * The total amount of memory available to each node, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
     */
    ocpus: number;
}

export interface GetContainerengineNodePoolNodeSource {
    /**
     * The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * The user-friendly name of the entity corresponding to the OCID.
     */
    sourceName: string;
    /**
     * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface GetContainerengineNodePoolNodeSourceDetails {
    /**
     * The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface GetContainerengineNodePoolOptionSource {
    /**
     * The OCID of the image.
     */
    imageId: string;
    /**
     * The user-friendly name of the entity corresponding to the OCID.
     */
    sourceName: string;
    /**
     * The source type of this option. `IMAGE` means the OCID is of an image.
     */
    sourceType: string;
}

export interface GetContainerengineNodePoolsFilter {
    /**
     * The name to filter on.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineNodePoolsNodePool {
    /**
     * The OCID of the cluster.
     */
    clusterId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the compute instance backing this node.
     */
    id: string;
    /**
     * A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     */
    initialNodeLabels: outputs.GetContainerengineNodePoolsNodePoolInitialNodeLabel[];
    /**
     * The version of Kubernetes this node is running.
     */
    kubernetesVersion: string;
    /**
     * The name to filter on.
     */
    name: string;
    /**
     * The configuration of nodes in the node pool.
     */
    nodeConfigDetails: outputs.GetContainerengineNodePoolsNodePoolNodeConfigDetails;
    /**
     * Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     *
     * @deprecated The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageId: string;
    /**
     * Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
     *
     * @deprecated The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageName: string;
    /**
     * A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     */
    nodeMetadata: {[key: string]: any};
    /**
     * The OCID of the node pool to which this node belongs.
     */
    nodePoolId: string;
    /**
     * The name of the node shape of the nodes in the node pool.
     */
    nodeShape: string;
    /**
     * The shape configuration of the nodes.
     */
    nodeShapeConfig: outputs.GetContainerengineNodePoolsNodePoolNodeShapeConfig;
    /**
     * Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
     */
    nodeSource: outputs.GetContainerengineNodePoolsNodePoolNodeSource;
    /**
     * Source running on the nodes in the node pool.
     */
    nodeSourceDetails: outputs.GetContainerengineNodePoolsNodePoolNodeSourceDetails;
    /**
     * The nodes in the node pool.
     */
    nodes: outputs.GetContainerengineNodePoolsNodePoolNode[];
    /**
     * The number of nodes in each subnet.
     */
    quantityPerSubnet: number;
    /**
     * The SSH public key on each node in the node pool on launch.
     */
    sshPublicKey: string;
    /**
     * The OCIDs of the subnets in which to place nodes for this node pool.
     */
    subnetIds: string[];
}

export interface GetContainerengineNodePoolsNodePoolInitialNodeLabel {
    /**
     * The key of the pair.
     */
    key: string;
    /**
     * The value of the pair.
     */
    value: string;
}

export interface GetContainerengineNodePoolsNodePoolNode {
    /**
     * The name of the availability domain in which this node is placed.
     */
    availabilityDomain: string;
    /**
     * An error that may be associated with the node.
     */
    error: outputs.GetContainerengineNodePoolsNodePoolNodeError;
    /**
     * The fault domain of this node.
     */
    faultDomain: string;
    /**
     * The OCID of the compute instance backing this node.
     */
    id: string;
    /**
     * The version of Kubernetes this node is running.
     */
    kubernetesVersion: string;
    /**
     * Details about the state of the node.
     */
    lifecycleDetails: string;
    /**
     * The name to filter on.
     */
    name: string;
    /**
     * The OCID of the node pool to which this node belongs.
     */
    nodePoolId: string;
    /**
     * The private IP address of this node.
     */
    privateIp: string;
    /**
     * The public IP address of this node.
     */
    publicIp: string;
    /**
     * The state of the node.
     */
    state: string;
    /**
     * The OCID of the subnet in which this node is placed.
     */
    subnetId: string;
}

export interface GetContainerengineNodePoolsNodePoolNodeConfigDetails {
    /**
     * The OCIDs of the Network Security Group(s) to associate nodes for this node pool with. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * The placement configurations for the node pool. Provide one placement configuration for each availability domain in which you intend to launch a node.
     */
    placementConfigs: outputs.GetContainerengineNodePoolsNodePoolNodeConfigDetailsPlacementConfig[];
    /**
     * The number of nodes in the node pool.
     */
    size: number;
}

export interface GetContainerengineNodePoolsNodePoolNodeConfigDetailsPlacementConfig {
    /**
     * The name of the availability domain in which this node is placed.
     */
    availabilityDomain: string;
    /**
     * The OCID of the subnet in which this node is placed.
     */
    subnetId: string;
}

export interface GetContainerengineNodePoolsNodePoolNodeError {
    /**
     * A short error code that defines the upstream error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
     */
    code: string;
    /**
     * A human-readable error string of the upstream error.
     */
    message: string;
    /**
     * The status of the HTTP response encountered in the upstream error.
     */
    status: string;
}

export interface GetContainerengineNodePoolsNodePoolNodeShapeConfig {
    /**
     * The total amount of memory available to each node, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to each node in the node pool. See [here](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Shape/) for details.
     */
    ocpus: number;
}

export interface GetContainerengineNodePoolsNodePoolNodeSource {
    /**
     * The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * The user-friendly name of the entity corresponding to the OCID.
     */
    sourceName: string;
    /**
     * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface GetContainerengineNodePoolsNodePoolNodeSourceDetails {
    /**
     * The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the image used to boot the node.
     */
    imageId: string;
    /**
     * The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     */
    sourceType: string;
}

export interface GetContainerengineWorkRequestErrorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestErrorsWorkRequestError {
    /**
     * A short error code that defines the error, meant for programmatic parsing. See [API Errors](https://docs.cloud.oracle.com/iaas/Content/API/References/apierrors.htm).
     */
    code: string;
    /**
     * A human-readable error string.
     */
    message: string;
    /**
     * The date and time the error occurred.
     */
    timestamp: string;
}

export interface GetContainerengineWorkRequestLogEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestLogEntriesWorkRequestLogEntry {
    /**
     * The description of an action that occurred.
     */
    message: string;
    /**
     * The date and time the log entry occurred.
     */
    timestamp: string;
}

export interface GetContainerengineWorkRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestsWorkRequest {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the work request.
     */
    id: string;
    /**
     * The type of work the work request is doing.
     */
    operationType: string;
    /**
     * The resources this work request affects.
     */
    resources: outputs.GetContainerengineWorkRequestsWorkRequestResource[];
    /**
     * A work request status to filter on. Can have multiple parameters of this name.
     */
    status: string;
    /**
     * The time the work request was accepted.
     */
    timeAccepted: string;
    /**
     * The time the work request was finished.
     */
    timeFinished: string;
    /**
     * The time the work request was started.
     */
    timeStarted: string;
}

export interface GetContainerengineWorkRequestsWorkRequestResource {
    /**
     * The way in which this resource was affected by the work tracked by the work request.
     */
    actionType: string;
    /**
     * The resource type the work request affects.
     */
    entityType: string;
    /**
     * The URI path on which the user can issue a GET request to access the resource metadata.
     */
    entityUri: string;
    /**
     * The OCID of the resource the work request affects.
     */
    identifier: string;
}

export interface GetCoreAppCatalogListingResourceVersionsAppCatalogListingResourceVersion {
    /**
     * List of accessible ports for instances launched with this listing resource version.
     */
    accessiblePorts: number[];
    /**
     * Allowed actions for the listing resource.
     */
    allowedActions: string[];
    /**
     * List of regions that this listing resource version is available.
     */
    availableRegions: string[];
    /**
     * Array of shapes compatible with this resource.
     */
    compatibleShapes: string[];
    /**
     * The OCID of the listing.
     */
    listingId: string;
    /**
     * OCID of the listing resource.
     */
    listingResourceId: string;
    /**
     * Resource Version.
     */
    listingResourceVersion: string;
    /**
     * Date and time the listing resource version was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     */
    timePublished: string;
}

export interface GetCoreAppCatalogListingResourceVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreAppCatalogListingsAppCatalogListing {
    /**
     * Listing's contact URL.
     */
    contactUrl: string;
    /**
     * Description of the listing.
     */
    description: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * the region free ocid of the listing resource.
     */
    listingId: string;
    /**
     * Publisher's logo URL.
     */
    publisherLogoUrl: string;
    /**
     * A filter to return only the publisher that matches the given publisher name exactly.
     */
    publisherName: string;
    /**
     * The short summary for the listing.
     */
    summary: string;
    /**
     * Date and time the listing was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     */
    timePublished: string;
}

export interface GetCoreAppCatalogListingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreAppCatalogSubscriptionsAppCatalogSubscription {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The display name of the listing.
     */
    displayName: string;
    eulaLink?: string;
    /**
     * A filter to return only the listings that matches the given listing id.
     */
    listingId: string;
    /**
     * Listing resource id.
     */
    listingResourceId: string;
    /**
     * Listing resource version.
     */
    listingResourceVersion: string;
    oracleTermsOfUseLink: string;
    /**
     * Name of the publisher who published this listing.
     */
    publisherName: string;
    signature: string;
    /**
     * The short summary to the listing.
     */
    summary: string;
    /**
     * Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     */
    timeCreated: string;
    timeRetrieved: string;
}

export interface GetCoreAppCatalogSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBlockVolumeReplicasBlockVolumeReplica {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the source block volume.
     */
    blockVolumeId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The block volume replica's Oracle ID (OCID).
     */
    id: string;
    /**
     * The size of the source block volume, in GBs.
     */
    sizeInGbs: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the block volume replica was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the block volume replica was last synced from the source block volume. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeLastSynced: string;
}

export interface GetCoreBlockVolumeReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeAttachmentsBootVolumeAttachment {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the boot volume.
     */
    bootVolumeId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.  Example: `My boot volume`
     */
    displayName: string;
    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     */
    encryptionInTransitType: string;
    /**
     * The OCID of the boot volume attachment.
     */
    id: string;
    /**
     * The OCID of the instance.
     */
    instanceId: string;
    /**
     * Whether in-transit encryption for the boot volume's paravirtualized attachment is enabled or not.
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * The current state of the boot volume attachment.
     */
    state: string;
    /**
     * The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreBootVolumeAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeBackupSourceDetails {
    /**
     * The OCID of the boot volume backup.
     */
    bootVolumeBackupId: string;
    /**
     * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId: string;
    region: string;
}

export interface GetCoreBootVolumeBackupsBootVolumeBackup {
    /**
     * The OCID of the boot volume.
     */
    bootVolumeId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     */
    expirationTime: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the boot volume backup.
     */
    id: string;
    /**
     * The image OCID used to create the boot volume the backup is taken from.
     */
    imageId: string;
    /**
     * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId: string;
    /**
     * The size of the boot volume, in GBs.
     */
    sizeInGbs: string;
    /**
     * A filter to return only resources that originated from the given source boot volume backup.
     */
    sourceBootVolumeBackupId: string;
    sourceDetails: outputs.GetCoreBootVolumeBackupsBootVolumeBackupSourceDetails;
    /**
     * Specifies whether the backup was created manually, or via scheduled backup policy.
     */
    sourceType: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the boot volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the request to create the boot volume backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeRequestReceived: string;
    /**
     * The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
     */
    type: string;
    /**
     * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the boot volume and whether the backup is full or incremental.
     */
    uniqueSizeInGbs: string;
}

export interface GetCoreBootVolumeBackupsBootVolumeBackupSourceDetails {
    bootVolumeBackupId: string;
    /**
     * The OCID of the Key Management master encryption assigned to the boot volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId: string;
    region: string;
}

export interface GetCoreBootVolumeBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeBootVolumeReplica {
    /**
     * The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The boot volume replica's Oracle ID (OCID).
     */
    bootVolumeReplicaId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetCoreBootVolumeReplicasBootVolumeReplica {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the source boot volume.
     */
    bootVolumeId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The boot volume replica's Oracle ID (OCID).
     */
    id: string;
    /**
     * The image OCID used to create the boot volume the replica is replicated from.
     */
    imageId: string;
    /**
     * The size of the source boot volume, in GBs.
     */
    sizeInGbs: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the boot volume replica was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the boot volume replica was last synced from the source boot volume. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeLastSynced: string;
}

export interface GetCoreBootVolumeReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeSourceDetails {
    /**
     * The OCID of the boot volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
     */
    type: string;
}

export interface GetCoreBootVolumesBootVolume {
    /**
     * The number of Volume Performance Units per GB that this boot volume is effectively tuned to when it's idle.
     */
    autoTunedVpusPerGb: string;
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
     */
    backupPolicyId: string;
    /**
     * The list of boot volume replicas of this boot volume
     */
    bootVolumeReplicas: outputs.GetCoreBootVolumesBootVolumeBootVolumeReplica[];
    bootVolumeReplicasDeletion: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the boot volume replica.
     */
    id: string;
    /**
     * The image OCID used to create the boot volume.
     */
    imageId: string;
    /**
     * Specifies whether the auto-tune performance is enabled for this boot volume.
     */
    isAutoTuneEnabled: boolean;
    /**
     * Specifies whether the boot volume's data has finished copying from the source boot volume or boot volume backup.
     */
    isHydrated: boolean;
    /**
     * The OCID of the Key Management master encryption key assigned to the boot volume.
     */
    kmsKeyId: string;
    /**
     * The size of the boot volume in GBs.
     */
    sizeInGbs: string;
    /**
     * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
     */
    sizeInMbs: string;
    sourceDetails: outputs.GetCoreBootVolumesBootVolumeSourceDetails;
    /**
     * The current state of a boot volume.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The OCID of the volume group.
     */
    volumeGroupId: string;
    /**
     * The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
     */
    vpusPerGb: string;
}

export interface GetCoreBootVolumesBootVolumeBootVolumeReplica {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The boot volume replica's Oracle ID (OCID).
     */
    bootVolumeReplicaId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetCoreBootVolumesBootVolumeSourceDetails {
    /**
     * The OCID of the boot volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `bootVolume`, `bootVolumeBackup`, `bootVolumeReplica`
     */
    type: string;
}

export interface GetCoreBootVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreByoipAllocatedRangesByoipAllocatedRangeCollection {
    /**
     * A list of subranges of a BYOIP CIDR block allocated to an IP pool.
     */
    items: outputs.GetCoreByoipAllocatedRangesByoipAllocatedRangeCollectionItem[];
}

export interface GetCoreByoipAllocatedRangesByoipAllocatedRangeCollectionItem {
    /**
     * The BYOIP CIDR block range or subrange allocated to an IP pool. This could be all or part of a BYOIP CIDR block.
     */
    cidrBlock: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IP pool containing the CIDR block.
     */
    publicIpPoolId: string;
}

export interface GetCoreByoipAllocatedRangesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreByoipRangesByoipRangeCollection {
    items: outputs.GetCoreByoipRangesByoipRangeCollectionItem[];
}

export interface GetCoreByoipRangesByoipRangeCollectionItem {
    /**
     * The public IPv4 CIDR block being imported from on-premises to the Oracle cloud.
     */
    cidrBlock?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `ByoipRange` resource.
     */
    id: string;
    /**
     * The `ByoipRange` resource's current status.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state: string;
    /**
     * The date and time the `ByoipRange` resource was advertised to the internet by BGP, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeAdvertised: string;
    /**
     * The date and time the `ByoipRange` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the `ByoipRange` resource was validated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeValidated: string;
    /**
     * The date and time the `ByoipRange` resource was withdrawn from advertisement by BGP to the internet, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeWithdrawn: string;
    /**
     * The validation token is an internally-generated ASCII string used in the validation process. See [Importing a CIDR block](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/BYOIP.htm#import_cidr) for details.
     */
    validationToken: string;
}

export interface GetCoreByoipRangesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreClusterNetworkInstancePool {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the instance pool.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
     */
    instanceConfigurationId: string;
    /**
     * The load balancers attached to the instance pool.
     */
    loadBalancers: outputs.GetCoreClusterNetworkInstancePoolLoadBalancer[];
    /**
     * The placement configurations for the instance pool.
     */
    placementConfigurations: outputs.GetCoreClusterNetworkInstancePoolPlacementConfiguration[];
    /**
     * The number of instances that should be in the instance pool.
     */
    size: number;
    /**
     * The current state of the cluster network.
     */
    state: string;
    /**
     * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreClusterNetworkInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value used for the backends.
     */
    port: number;
    /**
     * The current state of the cluster network.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface GetCoreClusterNetworkInstancePoolPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreClusterNetworkInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreClusterNetworkInstancesInstance {
    /**
     * The availability domain the instance is running in.
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The fault domain the instance is running in.
     */
    faultDomain: string;
    /**
     * The OCID of the instance.
     */
    id: string;
    /**
     * The OCID of the instance confgiuration used to create the instance.
     */
    instanceConfigurationId: string;
    /**
     * The load balancer backends that are configured for the instance pool instance.
     */
    loadBalancerBackends: outputs.GetCoreClusterNetworkInstancesInstanceLoadBalancerBackend[];
    /**
     * The region that contains the availability domain the instance is running in.
     */
    region: string;
    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The current state of the instance pool instance.
     */
    state: string;
    /**
     * The date and time the instance pool instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreClusterNetworkInstancesInstanceLoadBalancerBackend {
    /**
     * The health of the backend as observed by the load balancer.
     */
    backendHealthStatus: string;
    /**
     * The name of the backend in the backend set.
     */
    backendName: string;
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The OCID of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The current state of the instance pool instance.
     */
    state: string;
}

export interface GetCoreClusterNetworkPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreClusterNetworksClusterNetwork {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The instance pools in the cluster network.
     */
    instancePools: outputs.GetCoreClusterNetworksClusterNetworkInstancePool[];
    /**
     * The location for where the instance pools in a cluster network will place instances.
     */
    placementConfiguration: outputs.GetCoreClusterNetworksClusterNetworkPlacementConfiguration;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the resource was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetCoreClusterNetworksClusterNetworkInstancePool {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
     */
    instanceConfigurationId: string;
    /**
     * The load balancers attached to the instance pool.
     */
    loadBalancers: outputs.GetCoreClusterNetworksClusterNetworkInstancePoolLoadBalancer[];
    /**
     * The placement configurations for the instance pool.
     */
    placementConfigurations: outputs.GetCoreClusterNetworksClusterNetworkInstancePoolPlacementConfiguration[];
    /**
     * The number of instances that should be in the instance pool.
     */
    size: number;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreClusterNetworksClusterNetworkInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value used for the backends.
     */
    port: number;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface GetCoreClusterNetworksClusterNetworkInstancePoolPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreClusterNetworksClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreClusterNetworksClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreClusterNetworksClusterNetworkPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreClusterNetworksClusterNetworkPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreClusterNetworksClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreClusterNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationInstanceReservationConfig {
    /**
     * The fault domain of this reservation configuration.  If a value is not supplied, this reservation configuration is applicable to all fault domains in the specified availability domain. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm).
     */
    faultDomain: string;
    /**
     * The shape to use when launching instances using compute capacity reservations. The shape determines the number of CPUs, the amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
     */
    instanceShape: string;
    /**
     * The shape configuration requested when launching instances in a compute capacity reservation.
     */
    instanceShapeConfig: outputs.GetCoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig;
    /**
     * The amount of capacity reserved in this configuration.
     */
    reservedCount: string;
    /**
     * The amount of capacity in use out of the total capacity reserved in this reservation configuration.
     */
    usedCount: string;
}

export interface GetCoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface GetCoreComputeCapacityReservationInstanceShapesComputeCapacityReservationInstanceShape {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The name of the available shape used to launch instances in a compute capacity reservation.
     */
    instanceShape: string;
}

export interface GetCoreComputeCapacityReservationInstanceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationInstancesCapacityReservationInstance {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The fault domain the instance is running in.
     */
    faultDomain: string;
    /**
     * The OCID of the instance.
     */
    id: string;
    /**
     * The shape of the instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The shape configuration requested when launching instances in a compute capacity reservation.
     */
    shapeConfig: outputs.GetCoreComputeCapacityReservationInstancesCapacityReservationInstanceShapeConfig;
}

export interface GetCoreComputeCapacityReservationInstancesCapacityReservationInstanceShapeConfig {
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface GetCoreComputeCapacityReservationInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationsComputeCapacityReservation {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute capacity reservation.
     */
    id: string;
    /**
     * The reservation configurations for the capacity reservation.
     */
    instanceReservationConfigs: outputs.GetCoreComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfig[];
    /**
     * Whether this capacity reservation is the default. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
     */
    isDefaultReservation: boolean;
    /**
     * The number of instances for which capacity will be held with this compute capacity reservation. This number is the sum of the values of the `reservedCount` fields for all of the instance reservation configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
     */
    reservedInstanceCount: string;
    /**
     * A filter to only return resources that match the given lifecycle state.
     */
    state: string;
    /**
     * The date and time the compute capacity reservation was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the compute capacity reservation was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated: string;
    /**
     * The total number of instances currently consuming space in this compute capacity reservation. This number is the sum of the values of the `usedCount` fields for all of the instance reservation configurations under this reservation. The purpose of this field is to calculate the percentage usage of the reservation.
     */
    usedInstanceCount: string;
}

export interface GetCoreComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfig {
    /**
     * The fault domain of this reservation configuration.  If a value is not supplied, this reservation configuration is applicable to all fault domains in the specified availability domain. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm).
     */
    faultDomain: string;
    /**
     * The shape to use when launching instances using compute capacity reservations. The shape determines the number of CPUs, the amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
     */
    instanceShape: string;
    /**
     * The shape configuration requested when launching instances in a compute capacity reservation.
     */
    instanceShapeConfig: outputs.GetCoreComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig;
    /**
     * The amount of capacity reserved in this configuration.
     */
    reservedCount: string;
    /**
     * The amount of capacity in use out of the total capacity reserved in this reservation configuration.
     */
    usedCount: string;
}

export interface GetCoreComputeCapacityReservationsComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface GetCoreComputeCapacityReservationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeGlobalImageCapabilitySchemasComputeGlobalImageCapabilitySchema {
    /**
     * A filter to return only resources that match the given compartment OCID exactly.
     */
    compartmentId: string;
    /**
     * The name of the global capabilities version resource that is considered the current version.
     */
    currentVersionName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
     */
    id: string;
    /**
     * The date and time the compute global image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreComputeGlobalImageCapabilitySchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsComputeGlobalImageCapabilitySchemaVersion {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute global image capability schema
     */
    computeGlobalImageCapabilitySchemaId: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The name of the compute global image capability schema version
     */
    name: string;
    /**
     * The map of each capability name to its ImageCapabilityDescriptor.
     */
    schemaData: {[key: string]: any};
    /**
     * The date and time the compute global image capability schema version was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsFilter {
    /**
     * The name of the compute global image capability schema version
     */
    name: string;
    regex?: boolean;
    /**
     * the list of values for the enum
     */
    values: string[];
}

export interface GetCoreComputeImageCapabilitySchemasComputeImageCapabilitySchema {
    /**
     * A filter to return only resources that match the given compartment OCID exactly.
     */
    compartmentId: string;
    /**
     * The ocid of the compute global image capability schema
     */
    computeGlobalImageCapabilitySchemaId: string;
    /**
     * The name of the compute global image capability schema version
     */
    computeGlobalImageCapabilitySchemaVersionName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an image.
     */
    imageId: string;
    /**
     * The map of each capability name to its ImageCapabilityDescriptor.
     */
    schemaData: {[key: string]: any};
    /**
     * The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreComputeImageCapabilitySchemasFilter {
    name: string;
    regex?: boolean;
    /**
     * the list of values for the enum
     */
    values: string[];
}

export interface GetCoreConsoleHistoriesConsoleHistory {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My console history metadata`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the console history metadata object.
     */
    id: string;
    /**
     * The OCID of the instance.
     */
    instanceId: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the history was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreConsoleHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCpeDeviceShapeCpeDeviceInfo {
    /**
     * The platform or software version of the CPE device.
     */
    platformSoftwareVersion: string;
    /**
     * The vendor that makes the CPE device.
     */
    vendor: string;
}

export interface GetCoreCpeDeviceShapeParameter {
    /**
     * A descriptive label for the question (for example, to display in a form in a graphical interface). Avoid entering confidential information.
     */
    displayName: string;
    /**
     * A description or explanation of the question, to help the customer answer accurately.
     */
    explanation: string;
    /**
     * A string that identifies the question.
     */
    key: string;
}

export interface GetCoreCpeDeviceShapesCpeDeviceShape {
    /**
     * Basic information about a particular CPE device type.
     */
    cpeDeviceInfo: outputs.GetCoreCpeDeviceShapesCpeDeviceShapeCpeDeviceInfo;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape. This value uniquely identifies the type of CPE device.
     */
    cpeDeviceShapeId: string;
    /**
     * A template of CPE device configuration information that will be merged with the customer's answers to the questions to render the final CPE device configuration content. Also see:
     * * [GetCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/GetCpeDeviceConfigContent)
     * * [GetIpsecCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/GetIpsecCpeDeviceConfigContent)
     * * [GetTunnelCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/GetTunnelCpeDeviceConfigContent)
     */
    template: string;
}

export interface GetCoreCpeDeviceShapesCpeDeviceShapeCpeDeviceInfo {
    /**
     * The platform or software version of the CPE device.
     */
    platformSoftwareVersion: string;
    /**
     * The vendor that makes the CPE device.
     */
    vendor: string;
}

export interface GetCoreCpeDeviceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCpesCpe {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE's device type. The Networking service maintains a general list of CPE device types (for example, Cisco ASA). For each type, Oracle provides CPE configuration content that can help a network engineer configure the CPE. The OCID uniquely identifies the type of device. To get the OCIDs for the device types on the list, see [ListCpeDeviceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CpeDeviceShapeSummary/ListCpeDeviceShapes).
     */
    cpeDeviceShapeId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The CPE's Oracle ID (OCID).
     */
    id: string;
    /**
     * The public IP address of the on-premises router.
     */
    ipAddress: string;
    /**
     * The date and time the CPE was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreCpesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectGroupsCrossConnectGroup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A reference name or identifier for the physical fiber connection that this cross-connect group uses.
     */
    customerReferenceName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The cross-connect group's Oracle ID (OCID).
     */
    id: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreCrossConnectGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectLocationsCrossConnectLocation {
    /**
     * A description of the location.
     */
    description: string;
    /**
     * The name of the location.  Example: `CyrusOne, Chandler, AZ`
     */
    name: string;
}

export interface GetCoreCrossConnectLocationsFilter {
    /**
     * The name of the location.  Example: `CyrusOne, Chandler, AZ`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectPortSpeedShapesCrossConnectPortSpeedShape {
    /**
     * The name of the port speed shape.  Example: `10 Gbps`
     */
    name: string;
    /**
     * The port speed in Gbps.  Example: `10`
     */
    portSpeedInGbps: number;
}

export interface GetCoreCrossConnectPortSpeedShapesFilter {
    /**
     * The name of the port speed shape.  Example: `10 Gbps`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectsCrossConnect {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect group.
     */
    crossConnectGroupId: string;
    /**
     * A reference name or identifier for the physical fiber connection that this cross-connect uses.
     */
    customerReferenceName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    farCrossConnectOrCrossConnectGroupId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The cross-connect's Oracle ID (OCID).
     */
    id: string;
    isActive: boolean;
    /**
     * The name of the FastConnect location where this cross-connect is installed.
     */
    locationName: string;
    nearCrossConnectOrCrossConnectGroupId: string;
    /**
     * A string identifying the meet-me room port for this cross-connect.
     */
    portName: string;
    /**
     * The port speed for this cross-connect.  Example: `10 Gbps`
     */
    portSpeedShapeName: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreCrossConnectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The name of the virtual machine instance shapes that can be launched on a dedicated VM host.
     */
    instanceShapeName: string;
}

export interface GetCoreDedicatedVmHostInstanceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostShapesDedicatedVmHostShape {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The name of the dedicated VM host shape. You can enumerate all available shapes by calling [ListDedicatedVmHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/dedicatedVmHostShapes).
     */
    dedicatedVmHostShape: string;
}

export interface GetCoreDedicatedVmHostShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostsDedicatedVmHost {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The dedicated virtual machine host shape. The shape determines the number of CPUs and other resources available for VMs.
     */
    dedicatedVmHostShape: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The fault domain for the dedicated virtual machine host's assigned instances. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault).
     */
    faultDomain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated VM host.
     */
    id: string;
    /**
     * The current available memory of the dedicated VM host, in GBs.
     */
    remainingMemoryInGbs: number;
    /**
     * The current available OCPUs of the dedicated VM host.
     */
    remainingOcpus: number;
    /**
     * A filter to only return resources that match the given lifecycle state.
     */
    state: string;
    /**
     * The date and time the dedicated VM host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The current total memory of the dedicated VM host, in GBs.
     */
    totalMemoryInGbs: number;
    /**
     * The current total OCPUs of the dedicated VM host.
     */
    totalOcpus: number;
}

export interface GetCoreDedicatedVmHostsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostsInstancesDedicatedVmHostInstance {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the virtual machine instance.
     */
    instanceId: string;
    /**
     * The shape of the VM instance.
     */
    shape: string;
    /**
     * The date and time the virtual machine instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreDedicatedVmHostsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDhcpOptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDhcpOptionsOption {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The search domain name type of DHCP options
     */
    domainNameType: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Oracle ID (OCID) for the set of DHCP options.
     */
    id: string;
    /**
     * The collection of individual DHCP options.
     */
    options: outputs.GetCoreDhcpOptionsOptionOption[];
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the set of DHCP options was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreDhcpOptionsOptionOption {
    /**
     * If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
     */
    customDnsServers: string[];
    /**
     * A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
     */
    searchDomainNames: string[];
    /**
     * * **VcnLocal:** Reserved for future use.
     * * **VcnLocalPlusInternet:** Also referred to as "Internet and VCN Resolver". Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
     * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
     */
    serverType: string;
    /**
     * The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
     */
    type: string;
}

export interface GetCoreDrgAttachmentsDrgAttachment {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     */
    drgId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
     */
    drgRouteTableId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
     */
    exportDrgRouteDistributionId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     */
    id: string;
    /**
     * Indicates whether the DRG attachment and attached network live in a different tenancy than the DRG.  Example: `false`
     */
    isCrossTenancy: boolean;
    networkDetails: outputs.GetCoreDrgAttachmentsDrgAttachmentNetworkDetails;
    removeExportDrgRouteDistributionTrigger: boolean;
    /**
     * The OCID of the route table the DRG attachment is using.
     */
    routeTableId: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the DRG attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreDrgAttachmentsDrgAttachmentNetworkDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     */
    id: string;
    /**
     * The IPSec connection that contains the attached IPSec tunnel.
     */
    ipsecConnectionId: string;
    /**
     * The OCID of the route table the DRG attachment is using.
     */
    routeTableId: string;
    /**
     * The type can be one of these values: `IPSEC_TUNNEL`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
     */
    type: string;
}

export interface GetCoreDrgAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteDistributionStatementsDrgRouteDistributionStatement {
    /**
     * `ACCEPT` indicates the route should be imported or exported as-is.
     */
    action: string;
    /**
     * The Oracle-assigned ID of the route distribution statement.
     */
    id: string;
    /**
     * The action is applied only if all of the match criteria is met. If there are no match criteria in a statement, any input is considered a match and the action is applied.
     */
    matchCriterias: outputs.GetCoreDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria[];
    /**
     * This field specifies the priority of each statement in a route distribution. Priorities must be unique within a particular route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
     */
    priority: number;
}

export interface GetCoreDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria {
    /**
     * The type of the network resource to be included in this match. A match for a network type implies that all DRG attachments of that type insert routes into the table.
     */
    attachmentType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG attachment.
     */
    drgAttachmentId: string;
    /**
     * The type of the match criteria for a route distribution statement.
     */
    matchType: string;
}

export interface GetCoreDrgRouteDistributionStatementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteDistributionsDrgRouteDistribution {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the route distribution.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Whether this distribution defines how routes get imported into route tables or exported through DRG attachments.
     */
    distributionType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     */
    drgId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The route distribution's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     */
    id: string;
    /**
     * A filter that only returns resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the route distribution was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreDrgRouteDistributionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteTableRouteRulesDrgRouteRule {
    /**
     * Represents the range of IP addresses to match against when routing traffic.
     */
    destination: string;
    /**
     * The type of destination for the rule. the type is required if `direction` = `EGRESS`.
     */
    destinationType: string;
    /**
     * The Oracle-assigned ID of the DRG route rule.
     */
    id: string;
    /**
     * Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
     */
    isBlackhole: boolean;
    /**
     * Indicates that the route was not imported due to a conflict between route rules.
     */
    isConflict: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment responsible for reaching the network destination.
     */
    nextHopDrgAttachmentId: string;
    /**
     * The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route's provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
     */
    routeProvenance: string;
    /**
     * Static routes are specified through the DRG route table API. Dynamic routes are learned by the DRG from the DRG attachments through various routing protocols.
     */
    routeType: string;
}

export interface GetCoreDrgRouteTableRouteRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteTablesDrgRouteTable {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the DRG is in. The DRG route table is always in the same compartment as the DRG.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     */
    drgId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the import route distribution.
     */
    importDrgRouteDistributionId: string;
    /**
     * If you want traffic to be routed using ECMP across your virtual circuits or IPSec tunnels to your on-premises network, enable ECMP on the DRG route table to which these attachments import routes.
     */
    isEcmpEnabled: boolean;
    removeImportTrigger: boolean;
    /**
     * A filter that only returns matches for the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the DRG route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreDrgRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgsDrg {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The default DRG route table for this DRG. Each network type has a default DRG route table.
     */
    defaultDrgRouteTables: outputs.GetCoreDrgsDrgDefaultDrgRouteTables;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this DRG's default export route distribution for the DRG attachments.
     */
    defaultExportDrgRouteDistributionId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The DRG's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     */
    id: string;
    redundancyStatus: string;
    /**
     * The DRG's current state.
     */
    state: string;
    /**
     * The date and time the DRG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreDrgsDrgDefaultDrgRouteTables {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table assigned to DRG attachments of type IPSEC_TUNNEL on creation.
     */
    ipsecTunnel: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type REMOTE_PEERING_CONNECTION on creation.
     */
    remotePeeringConnection: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the default DRG route table to be assigned to DRG attachments of type VCN on creation.
     */
    vcn: string;
    /**
     * The OCID of the default DRG route table to be assigned to DRG attachments of type VIRTUAL_CIRCUIT on creation.
     */
    virtualCircuit: string;
}

export interface GetCoreDrgsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreFastConnectProviderServicesFastConnectProviderService {
    /**
     * Who is responsible for managing the virtual circuit bandwidth.
     */
    bandwithShapeManagement: string;
    /**
     * Who is responsible for managing the ASN information for the network at the other end of the connection from Oracle.
     */
    customerAsnManagement: string;
    /**
     * The location of the provider's website or portal. This portal is where you can get information about the provider service, create a virtual circuit connection from the provider to Oracle Cloud Infrastructure, and retrieve your provider service key for that virtual circuit connection.  Example: `https://example.com`
     */
    description: string;
    /**
     * The OCID of the service offered by the provider.
     */
    id: string;
    /**
     * Who is responsible for managing the private peering BGP information.
     */
    privatePeeringBgpManagement: string;
    /**
     * The name of the provider.
     */
    providerName: string;
    /**
     * Who is responsible for managing the provider service key.
     */
    providerServiceKeyManagement: string;
    /**
     * The name of the service offered by the provider.
     */
    providerServiceName: string;
    /**
     * Who is responsible for managing the public peering BGP information.
     */
    publicPeeringBgpManagement: string;
    /**
     * Total number of cross-connect or cross-connect groups required for the virtual circuit.
     */
    requiredTotalCrossConnects: number;
    /**
     * An array of virtual circuit types supported by this service.
     */
    supportedVirtualCircuitTypes: string[];
    /**
     * Provider service type.
     */
    type: string;
}

export interface GetCoreFastConnectProviderServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreImageAgentFeatures {
    /**
     * This attribute is not used.
     */
    isManagementSupported: boolean;
    /**
     * This attribute is not used.
     */
    isMonitoringSupported: boolean;
}

export interface GetCoreImageImageSourceDetails {
    bucketName: string;
    namespaceName: string;
    objectName: string;
    /**
     * The image's operating system.  Example: `Oracle Linux`
     */
    operatingSystem: string;
    /**
     * The image's operating system version.  Example: `7.2`
     */
    operatingSystemVersion: string;
    sourceImageType: string;
    sourceType: string;
    sourceUri: string;
}

export interface GetCoreImageLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreImageShapeMemoryConstraint {
    /**
     * The maximum amount of memory, in gigabytes.
     */
    maxInGbs: number;
    /**
     * The minimum amount of memory, in gigabytes.
     */
    minInGbs: number;
}

export interface GetCoreImageShapeOcpuConstraint {
    /**
     * The maximum number of OCPUs supported for this image and shape.
     */
    max: number;
    /**
     * The minimum number of OCPUs supported for this image and shape.
     */
    min: number;
}

export interface GetCoreImageShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreImageShapesImageShapeCompatibility {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
     */
    imageId: string;
    /**
     * For a flexible image and shape, the amount of memory supported for instances that use this image.
     */
    memoryConstraints: outputs.GetCoreImageShapesImageShapeCompatibilityMemoryConstraints;
    /**
     * OCPU options for an image and shape.
     */
    ocpuConstraints: outputs.GetCoreImageShapesImageShapeCompatibilityOcpuConstraints;
    /**
     * The shape name.
     */
    shape: string;
}

export interface GetCoreImageShapesImageShapeCompatibilityMemoryConstraints {
    /**
     * The maximum amount of memory, in gigabytes.
     */
    maxInGbs: number;
    /**
     * The minimum amount of memory, in gigabytes.
     */
    minInGbs: number;
}

export interface GetCoreImageShapesImageShapeCompatibilityOcpuConstraints {
    /**
     * The maximum number of OCPUs supported for this image and shape.
     */
    max: number;
    /**
     * The minimum number of OCPUs supported for this image and shape.
     */
    min: number;
}

export interface GetCoreImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreImagesImage {
    /**
     * Oracle Cloud Agent features supported on the image.
     */
    agentFeatures: outputs.GetCoreImagesImageAgentFeatures;
    /**
     * The OCID of the image originally used to launch the instance.
     */
    baseImageId: string;
    /**
     * The size of the internal storage for this image that is subject to billing (1 GB = 1,073,741,824 bytes).  Example: `100`
     */
    billableSizeInGbs: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.  Example: `true`
     */
    createImageAllowed: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the image.
     */
    id: string;
    imageSourceDetails: outputs.GetCoreImagesImageImageSourceDetails;
    instanceId: string;
    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     */
    launchMode: string;
    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     */
    launchOptions: outputs.GetCoreImagesImageLaunchOptions;
    /**
     * The listing type of the image. The default value is "NONE".
     */
    listingType: string;
    /**
     * The image's operating system.  Example: `Oracle Linux`
     */
    operatingSystem: string;
    /**
     * The image's operating system version.  Example: `7.2`
     */
    operatingSystemVersion: string;
    /**
     * The boot volume size for an instance launched from this image (1 MB = 1,048,576 bytes). Note this is not the same as the size of the image when it was exported or the actual size of the image.  Example: `47694`
     */
    sizeInMbs: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the image was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreImagesImageAgentFeatures {
    /**
     * This attribute is not used.
     */
    isManagementSupported: boolean;
    /**
     * This attribute is not used.
     */
    isMonitoringSupported: boolean;
}

export interface GetCoreImagesImageImageSourceDetails {
    bucketName: string;
    namespaceName: string;
    objectName: string;
    /**
     * The image's operating system.  Example: `Oracle Linux`
     */
    operatingSystem: string;
    /**
     * The image's operating system version.  Example: `7.2`
     */
    operatingSystemVersion: string;
    sourceImageType: string;
    sourceType: string;
    sourceUri: string;
}

export interface GetCoreImagesImageLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreInstanceAgentConfig {
    /**
     * Whether Oracle Cloud Agent can run all of the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can run all the available management plugins.
     */
    isManagementDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins.
     */
    isMonitoringDisabled: boolean;
    /**
     * The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.GetCoreInstanceAgentConfigPluginsConfig[];
}

export interface GetCoreInstanceAgentConfigPluginsConfig {
    /**
     * Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface GetCoreInstanceAvailabilityConfig {
    /**
     * Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
     */
    isLiveMigrationPreferred: boolean;
    /**
     * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface GetCoreInstanceConfigurationInstanceDetails {
    blockVolumes: outputs.GetCoreInstanceConfigurationInstanceDetailsBlockVolume[];
    /**
     * The type of instance details. Supported instanceType is compute
     */
    instanceType: string;
    /**
     * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    launchDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetails;
    secondaryVnics: outputs.GetCoreInstanceConfigurationInstanceDetailsSecondaryVnic[];
}

export interface GetCoreInstanceConfigurationInstanceDetailsBlockVolume {
    /**
     * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
     */
    attachDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails;
    /**
     * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
     */
    createDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails;
    /**
     * The OCID of the volume.
     */
    volumeId: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails {
    /**
     * The device name.
     */
    device: string;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Whether the attachment should be created in read-only mode.
     */
    isReadOnly: boolean;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    isShareable: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    useChap: boolean;
}

export interface GetCoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails {
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
     */
    backupPolicyId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the volume.
     */
    kmsKeyId: string;
    /**
     * The size of the volume in GBs.
     */
    sizeInGbs: string;
    sourceDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails;
    /**
     * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
     */
    vpusPerGb: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails {
    /**
     * The OCID of the volume backup.
     */
    id: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetails {
    /**
     * Configuration options for the Oracle Cloud Agent software running on the instance.
     */
    agentConfig: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig;
    /**
     * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     */
    availabilityConfig: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig;
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the compute capacity reservation this instance is launched under.
     */
    capacityReservationId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails;
    /**
     * The OCID of dedicated VM host.
     */
    dedicatedVmHostId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     */
    faultDomain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     */
    instanceOptions: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions;
    /**
     * This is an advanced option.
     */
    ipxeScript: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     */
    launchMode: string;
    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     */
    launchOptions: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions;
    /**
     * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     */
    metadata: {[key: string]: any};
    /**
     * The platform configuration requested for the instance.
     */
    platformConfig: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig;
    /**
     * Configuration options for preemptible instances.
     */
    preemptibleInstanceConfig: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig;
    /**
     * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     */
    preferredMaintenanceAction: string;
    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The shape configuration requested for the instance.
     */
    shapeConfig: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig;
    sourceDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig {
    /**
     * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     */
    isManagementDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     */
    isMonitoringDisabled: boolean;
    /**
     * The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig[];
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig {
    /**
     * Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig {
    /**
     * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions {
    /**
     * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig {
    /**
     * The number of NUMA nodes per socket.
     */
    numaNodesPerSocket: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig {
    /**
     * The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
    /**
     * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig {
    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface GetCoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails {
    /**
     * The OCID of the boot volume used to boot the instance.
     */
    bootVolumeId: string;
    /**
     * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the image used to boot the instance.
     */
    imageId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface GetCoreInstanceConfigurationInstanceDetailsSecondaryVnic {
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.GetCoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     */
    nicIndex: number;
}

export interface GetCoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface GetCoreInstanceConfigurationsFilter {
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceConfigurationsInstanceConfiguration {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Parameters that were not specified when the instance configuration was created, but that are required to launch an instance from the instance configuration. See the [LaunchInstanceConfiguration](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstanceConfiguration) operation.
     */
    deferredFields: string[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the volume backup.
     */
    id: string;
    instanceDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetails;
    instanceId: string;
    source: string;
    /**
     * The date and time the instance configuration was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetails {
    blockVolumes: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolume[];
    /**
     * The type of instance details. Supported instanceType is compute
     */
    instanceType: string;
    /**
     * Instance launch details for creating an instance from an instance configuration. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    launchDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetails;
    secondaryVnics: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsSecondaryVnic[];
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolume {
    /**
     * Volume attachmentDetails. Please see [AttachVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/AttachVolumeDetails/)
     */
    attachDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails;
    /**
     * Creates a new block volume. Please see [CreateVolumeDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVolumeDetails/)
     */
    createDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails;
    /**
     * The OCID of the volume.
     */
    volumeId: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails {
    /**
     * The device name.
     */
    device: string;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Whether the attachment should be created in read-only mode.
     */
    isReadOnly: boolean;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    isShareable: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    useChap: boolean;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails {
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
     */
    backupPolicyId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the volume.
     */
    kmsKeyId: string;
    /**
     * The size of the volume in GBs.
     */
    sizeInGbs: string;
    sourceDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails;
    /**
     * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
     */
    vpusPerGb: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails {
    /**
     * The OCID of the volume backup.
     */
    id: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetails {
    /**
     * Configuration options for the Oracle Cloud Agent software running on the instance.
     */
    agentConfig: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig;
    /**
     * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     */
    availabilityConfig: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig;
    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the compute capacity reservation this instance is launched under.
     */
    capacityReservationId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails;
    /**
     * The OCID of dedicated VM host.
     */
    dedicatedVmHostId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     */
    faultDomain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     */
    instanceOptions: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions;
    /**
     * This is an advanced option.
     */
    ipxeScript: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     */
    launchMode: string;
    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     */
    launchOptions: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions;
    /**
     * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     */
    metadata: {[key: string]: any};
    /**
     * The platform configuration requested for the instance.
     */
    platformConfig: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig;
    /**
     * Configuration options for preemptible instances.
     */
    preemptibleInstanceConfig: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig;
    /**
     * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     */
    preferredMaintenanceAction: string;
    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The shape configuration requested for the instance.
     */
    shapeConfig: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig;
    sourceDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig {
    /**
     * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     */
    isManagementDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     */
    isMonitoringDisabled: boolean;
    /**
     * The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig[];
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig {
    /**
     * Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig {
    /**
     * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions {
    /**
     * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig {
    /**
     * The number of NUMA nodes per socket.
     */
    numaNodesPerSocket: string;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig {
    /**
     * The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
    /**
     * Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig {
    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails {
    /**
     * The OCID of the boot volume used to boot the instance.
     */
    bootVolumeId: string;
    /**
     * The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the image used to boot the instance.
     */
    imageId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsSecondaryVnic {
    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     */
    createVnicDetails: outputs.GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails;
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Which physical network interface card (NIC) the VNIC will use. Defaults to 0. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     */
    nicIndex: number;
}

export interface GetCoreInstanceConfigurationsInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails {
    /**
     * Whether the VNIC should be assigned a private DNS record. See the `assignPrivateDnsRecord` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CreateVnicDetails/) for more information.
     */
    assignPrivateDnsRecord: boolean;
    /**
     * Whether the VNIC should be assigned a public IP address. See the `assignPublicIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    assignPublicIp: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the VNIC's primary private IP. See the `hostnameLabel` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    hostnameLabel: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * A private IP address of your choice to assign to the VNIC. See the `privateIp` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    privateIp: string;
    /**
     * Whether the source/destination check is disabled on the VNIC. See the `skipSourceDestCheck` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in. See the `subnetId` attribute of [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) for more information.
     */
    subnetId: string;
}

export interface GetCoreInstanceConsoleConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceConsoleConnectionsInstanceConsoleConnection {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The SSH connection string for the console connection.
     */
    connectionString: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The SSH public key fingerprint for the console connection.
     */
    fingerprint: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the console connection.
     */
    id: string;
    /**
     * The OCID of the instance.
     */
    instanceId: string;
    publicKey: string;
    /**
     * The current state of the console connection.
     */
    state: string;
    /**
     * The SSH connection string for the SSH tunnel used to connect to the console connection over VNC.
     */
    vncConnectionString: string;
}

export interface GetCoreInstanceCreateVnicDetails {
    assignPrivateDnsRecord: boolean;
    assignPublicIp: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My bare metal instance`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the instance VNIC's primary private IP.
     */
    hostnameLabel: string;
    nsgIds: string[];
    /**
     * The private IP address of instance VNIC. To set the private IP address, use the `privateIp` argument in create_vnic_details.
     */
    privateIp: string;
    skipSourceDestCheck: boolean;
    subnetId: string;
    vlanId: string;
}

export interface GetCoreInstanceDevicesDevice {
    /**
     * A filter to return only available devices or only used devices.
     */
    isAvailable: boolean;
    /**
     * A filter to return only devices that match the given name exactly.
     */
    name: string;
}

export interface GetCoreInstanceDevicesFilter {
    /**
     * A filter to return only devices that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceInstanceOptions {
    /**
     * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface GetCoreInstanceLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreInstancePlatformConfig {
    /**
     * The number of NUMA nodes per socket (NPS).
     */
    numaNodesPerSocket: string;
    /**
     * (Required) The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstancePoolInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancePoolInstancesInstance {
    autoTerminateInstanceOnDelete: boolean;
    /**
     * The availability domain the instance is running in.
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    decrementSizeOnDelete: boolean;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The fault domain the instance is running in.
     */
    faultDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration used to create the instance.
     */
    instanceConfigurationId: string;
    instanceId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool.
     */
    instancePoolId: string;
    /**
     * The load balancer backends that are configured for the instance pool instance.
     */
    loadBalancerBackends: outputs.GetCoreInstancePoolInstancesInstanceLoadBalancerBackend[];
    /**
     * The region that contains the availability domain the instance is running in.
     */
    region: string;
    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     */
    shape: string;
    /**
     * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
     */
    state: string;
    /**
     * The date and time the instance pool instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreInstancePoolInstancesInstanceLoadBalancerBackend {
    /**
     * The health of the backend as observed by the load balancer.
     */
    backendHealthStatus: string;
    /**
     * The name of the backend in the backend set.
     */
    backendName: string;
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The OCID of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The lifecycle state of the instance. Refer to `lifecycleState` in the [Instance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance) resource.
     */
    state: string;
}

export interface GetCoreInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value used for the backends.
     */
    port: number;
    /**
     * The current state of the instance pool.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface GetCoreInstancePoolPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * The display name of the VNIC. This is also use to match against the instance configuration defined secondary VNIC.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreInstancePoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancePoolsInstancePool {
    actualSize: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance configuration associated with the instance pool.
     */
    instanceConfigurationId: string;
    /**
     * The load balancers attached to the instance pool.
     */
    loadBalancers: outputs.GetCoreInstancePoolsInstancePoolLoadBalancer[];
    /**
     * The placement configurations for the instance pool.
     */
    placementConfigurations: outputs.GetCoreInstancePoolsInstancePoolPlacementConfiguration[];
    /**
     * The number of actual instances in the instance pool on the cloud. This attribute will be different when instance pool is used along with autoScaling Configuration.
     */
    size: number;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the instance pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreInstancePoolsInstancePoolLoadBalancer {
    /**
     * The name of the backend set on the load balancer.
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attachment.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance pool of the load balancer attachment.
     */
    instancePoolId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer attached to the instance pool.
     */
    loadBalancerId: string;
    /**
     * The port value used for the backends.
     */
    port: number;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * Indicates which VNIC on each instance in the instance pool should be used to associate with the load balancer. Possible values are "PrimaryVnic" or the displayName of one of the secondary VNICs on the instance configuration that is associated with the instance pool.
     */
    vnicSelection: string;
}

export interface GetCoreInstancePoolsInstancePoolPlacementConfiguration {
    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The fault domains to place instances.
     */
    faultDomains: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances.
     */
    primarySubnetId: string;
    /**
     * The set of secondary VNIC data for instances in the pool.
     */
    secondaryVnicSubnets: outputs.GetCoreInstancePoolsInstancePoolPlacementConfigurationSecondaryVnicSubnet[];
}

export interface GetCoreInstancePoolsInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The subnet [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the secondary VNIC.
     */
    subnetId: string;
}

export interface GetCoreInstancePreemptibleInstanceConfig {
    /**
     * (Required) The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.GetCoreInstancePreemptibleInstanceConfigPreemptionAction;
}

export interface GetCoreInstancePreemptibleInstanceConfigPreemptionAction {
    /**
     * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * (Required) The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstanceShapeConfig {
    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * A short description of the instance's graphics processing unit (GPU).
     */
    gpuDescription: string;
    /**
     * The number of GPUs available to the instance.
     */
    gpus: number;
    /**
     * A short description of the local disks available to this instance.
     */
    localDiskDescription: string;
    /**
     * The number of local disks available to the instance.
     */
    localDisks: number;
    /**
     * The aggregate size of all local disks, in gigabytes.
     */
    localDisksTotalSizeInGbs: number;
    /**
     * The maximum number of VNIC attachments for the instance.
     */
    maxVnicAttachments: number;
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The networking bandwidth available to the instance, in gigabits per second.
     */
    networkingBandwidthInGbps: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
    /**
     * A short description of the instance's processor (CPU).
     */
    processorDescription: string;
}

export interface GetCoreInstanceSourceDetails {
    /**
     * The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
     */
    kmsKeyId: string;
    /**
     * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
     */
    sourceId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface GetCoreInstancesFilter {
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancesInstance {
    /**
     * Configuration options for the Oracle Cloud Agent software running on the instance.
     */
    agentConfig: outputs.GetCoreInstancesInstanceAgentConfig;
    /**
     * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     */
    availabilityConfig: outputs.GetCoreInstancesInstanceAvailabilityConfig;
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the attached boot volume. If the `sourceType` is `bootVolume`, this will be the same OCID as the `sourceId`.
     */
    bootVolumeId: string;
    /**
     * The OCID of the compute capacity reservation.
     */
    capacityReservationId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    createVnicDetails: outputs.GetCoreInstancesInstanceCreateVnicDetails;
    /**
     * The OCID of dedicated VM host.
     */
    dedicatedVmHostId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * The name of the fault domain the instance is running in.
     */
    faultDomain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * @deprecated The 'hostname_label' field has been deprecated. Please use 'hostname_label under create_vnic_details' instead.
     */
    hostnameLabel: string;
    /**
     * The OCID of the instance.
     */
    id: string;
    /**
     * Deprecated. Use `sourceDetails` instead.
     *
     * @deprecated The 'image' field has been deprecated. Please use 'source_details' instead. If both fields are specified, then 'source_details' will be used.
     */
    image: string;
    /**
     * Optional mutable instance options
     */
    instanceOptions: outputs.GetCoreInstancesInstanceInstanceOptions;
    /**
     * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     */
    ipxeScript: string;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     */
    launchMode: string;
    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     */
    launchOptions: outputs.GetCoreInstancesInstanceLaunchOptions;
    /**
     * Custom metadata that you provide.
     */
    metadata: {[key: string]: any};
    /**
     * The platform configuration for the instance.
     */
    platformConfig: outputs.GetCoreInstancesInstancePlatformConfig;
    /**
     * (Optional) Configuration options for preemptible instances.
     */
    preemptibleInstanceConfig: outputs.GetCoreInstancesInstancePreemptibleInstanceConfig;
    /**
     * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    privateIp: string;
    publicIp: string;
    /**
     * The region that contains the availability domain the instance is running in.
     */
    region: string;
    /**
     * The shape of the instance. The shape determines the number of CPUs and the amount of memory allocated to the instance. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     */
    shape: string;
    /**
     * The shape configuration for an instance. The shape configuration determines the resources allocated to an instance.
     */
    shapeConfig: outputs.GetCoreInstancesInstanceShapeConfig;
    sourceDetails: outputs.GetCoreInstancesInstanceSourceDetails;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * @deprecated The 'subnet_id' field has been deprecated. Please use 'subnet_id under create_vnic_details' instead.
     */
    subnetId: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the instance is expected to be stopped / started,  in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). After that time if instance hasn't been rebooted, Oracle will reboot the instance within 24 hours of the due time. Regardless of how the instance was stopped, the flag will be reset to empty as soon as instance reaches Stopped state. Example: `2018-05-25T21:10:29.600Z`
     */
    timeMaintenanceRebootDue: string;
}

export interface GetCoreInstancesInstanceAgentConfig {
    /**
     * Whether Oracle Cloud Agent can run all of the available plugins. This includes the management and monitoring plugins.
     */
    areAllPluginsDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can run all the available management plugins.
     */
    isManagementDisabled: boolean;
    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins.
     */
    isMonitoringDisabled: boolean;
    /**
     * The configuration of plugins associated with this instance.
     */
    pluginsConfigs: outputs.GetCoreInstancesInstanceAgentConfigPluginsConfig[];
}

export interface GetCoreInstancesInstanceAgentConfigPluginsConfig {
    /**
     * Whether the plugin should be enabled or disabled.
     */
    desiredState: string;
    /**
     * The plugin name. To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     */
    name: string;
}

export interface GetCoreInstancesInstanceAvailabilityConfig {
    /**
     * Whether live migration is preferred for infrastructure maintenance.  If null preference is specified, live migration will be preferred for infrastructure maintenance for applicable instances.
     */
    isLiveMigrationPreferred: boolean;
    /**
     * The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     */
    recoveryAction: string;
}

export interface GetCoreInstancesInstanceCreateVnicDetails {
    assignPrivateDnsRecord: boolean;
    assignPublicIp: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    hostnameLabel: string;
    nsgIds: string[];
    privateIp: string;
    skipSourceDestCheck: boolean;
    subnetId: string;
    vlanId: string;
}

export interface GetCoreInstancesInstanceInstanceOptions {
    /**
     * Whether to disable the legacy (/v1) instance metadata service endpoints. Customers who have migrated to /v2 should set this to true for added security. Default is false.
     */
    areLegacyImdsEndpointsDisabled: boolean;
}

export interface GetCoreInstancesInstanceLaunchOptions {
    /**
     * Emulation type for the boot volume.
     */
    bootVolumeType: string;
    /**
     * Firmware used to boot VM. Select the option that matches your operating system.
     */
    firmware: string;
    /**
     * Whether to enable consistent volume naming feature. Defaults to false.
     */
    isConsistentVolumeNamingEnabled: boolean;
    /**
     * Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Emulation type for the physical network interface card (NIC).
     */
    networkType: string;
    /**
     * Emulation type for volume.
     */
    remoteDataVolumeType: string;
}

export interface GetCoreInstancesInstancePlatformConfig {
    /**
     * The number of NUMA nodes per socket (NPS).
     */
    numaNodesPerSocket: string;
    /**
     * (Required) The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstancesInstancePreemptibleInstanceConfig {
    /**
     * (Required) The action to run when the preemptible instance is interrupted for eviction.
     */
    preemptionAction: outputs.GetCoreInstancesInstancePreemptibleInstanceConfigPreemptionAction;
}

export interface GetCoreInstancesInstancePreemptibleInstanceConfigPreemptionAction {
    /**
     * (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     */
    preserveBootVolume: boolean;
    /**
     * (Required) The type of action to run when the instance is interrupted for eviction.
     */
    type: string;
}

export interface GetCoreInstancesInstanceShapeConfig {
    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     */
    baselineOcpuUtilization: string;
    /**
     * A short description of the instance's graphics processing unit (GPU).
     */
    gpuDescription: string;
    /**
     * The number of GPUs available to the instance.
     */
    gpus: number;
    /**
     * A short description of the local disks available to this instance.
     */
    localDiskDescription: string;
    /**
     * The number of local disks available to the instance.
     */
    localDisks: number;
    /**
     * The aggregate size of all local disks, in gigabytes.
     */
    localDisksTotalSizeInGbs: number;
    /**
     * The maximum number of VNIC attachments for the instance.
     */
    maxVnicAttachments: number;
    /**
     * The total amount of memory available to the instance, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * The networking bandwidth available to the instance, in gigabits per second.
     */
    networkingBandwidthInGbps: number;
    /**
     * The total number of OCPUs available to the instance.
     */
    ocpus: number;
    /**
     * A short description of the instance's processor (CPU).
     */
    processorDescription: string;
}

export interface GetCoreInstancesInstanceSourceDetails {
    /**
     * The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     */
    bootVolumeSizeInGbs: string;
    /**
     * The OCID of the Key Management key to assign as the master encryption key for the boot volume.
     */
    kmsKeyId: string;
    /**
     * The OCID of an image or a boot volume to use, depending on the value of `sourceType`.
     */
    sourceId: string;
    /**
     * The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     */
    sourceType: string;
}

export interface GetCoreInternetGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInternetGatewaysGateway {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Whether the gateway is enabled. When the gateway is disabled, traffic is not routed to/from the Internet, regardless of route rules.
     */
    enabled: boolean;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The internet gateway's Oracle ID (OCID).
     */
    id: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the internet gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreIpsecConfigFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConfigTunnel {
    /**
     * The IP address of Oracle's VPN headend.  Example: `203.0.113.50 `
     */
    ipAddress: string;
    /**
     * The shared secret of the IPSec tunnel.
     */
    sharedSecret: string;
    /**
     * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreIpsecConnectionTunnelBgpSessionInfo {
    /**
     * the state of the BGP.
     */
    bgpState: string;
    /**
     * This is the value of the remote Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
     */
    customerBgpAsn: string;
    /**
     * This is the IPv4 Address used in the BGP peering session for the non-Oracle router. Example: 10.0.0.2/31
     */
    customerInterfaceIp: string;
    /**
     * This is the value of the Oracle Bgp ASN in asplain format, as a string. Example: 1587232876 (4 byte ASN) or 12345 (2 byte ASN)
     */
    oracleBgpAsn: string;
    /**
     * This is the IPv4 Address used in the BGP peering session for the Oracle router. Example: 10.0.0.1/31
     */
    oracleInterfaceIp: string;
}

export interface GetCoreIpsecConnectionTunnelEncryptionDomainConfig {
    /**
     * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
     */
    cpeTrafficSelectors: string[];
    /**
     * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
     */
    oracleTrafficSelectors: string[];
}

export interface GetCoreIpsecConnectionTunnelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConnectionTunnelsIpSecConnectionTunnel {
    /**
     * Information for establishing a BGP session for the IPSec tunnel.
     */
    bgpSessionInfo: outputs.GetCoreIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfo;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the tunnel.
     */
    compartmentId: string;
    /**
     * The IP address of the CPE's VPN headend.  Example: `203.0.113.22`
     */
    cpeIp: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Configuration information used by the encryption domain policy.
     */
    encryptionDomainConfig: outputs.GetCoreIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfig;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
     */
    id: string;
    /**
     * Internet Key Exchange protocol version.
     */
    ikeVersion: string;
    /**
     * The type of routing used for this tunnel (either BGP dynamic routing or static routing).
     */
    routing: string;
    /**
     * The tunnel's lifecycle state.
     */
    state: string;
    /**
     * The status of the tunnel based on IPSec protocol characteristics.
     */
    status: string;
    /**
     * The date and time the IPSec connection tunnel was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * When the status of the tunnel last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeStatusUpdated: string;
    /**
     * The IP address of Oracle's VPN headend.  Example: `203.0.113.21`
     */
    vpnIp: string;
}

export interface GetCoreIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfo {
    /**
     * The state of the BGP IPv6 session.
     */
    bgpIpv6state: string;
    /**
     * The state of the BGP session.
     */
    bgpState: string;
    /**
     * If the tunnel's `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel's BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
     */
    customerBgpAsn: string;
    /**
     * The IP address for the CPE end of the inside tunnel interface.
     */
    customerInterfaceIp: string;
    /**
     * The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
     */
    customerInterfaceIpv6: string;
    /**
     * The Oracle BGP ASN.
     */
    oracleBgpAsn: string;
    /**
     * The IP address for the Oracle end of the inside tunnel interface.
     */
    oracleInterfaceIp: string;
    /**
     * The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
     */
    oracleInterfaceIpv6: string;
}

export interface GetCoreIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfig {
    /**
     * Lists IPv4 or IPv6-enabled subnets in your on-premises network.
     */
    cpeTrafficSelectors: string[];
    /**
     * Lists IPv4 or IPv6-enabled subnets in your Oracle tenancy.
     */
    oracleTrafficSelectors: string[];
}

export interface GetCoreIpsecConnectionsConnection {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE.
     */
    cpeId: string;
    /**
     * Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier here must correspond to the value for `cpeLocalIdentifierType`.
     */
    cpeLocalIdentifier: string;
    /**
     * The type of identifier for your CPE device. The value here must correspond to the value for `cpeLocalIdentifier`.
     */
    cpeLocalIdentifierType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     */
    drgId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The IPSec connection's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     */
    id: string;
    /**
     * The IPSec connection's current state.
     */
    state: string;
    /**
     * Static routes to the CPE. The CIDR must not be a multicast address or class E address.
     */
    staticRoutes: string[];
    /**
     * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreIpsecConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecStatusFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecStatusTunnel {
    /**
     * The IP address of Oracle's VPN headend.  Example: `203.0.113.50`
     */
    ipAddress: string;
    /**
     * The tunnel's current state.
     */
    state: string;
    /**
     * The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * When the state of the tunnel last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeStateModified: string;
}

export interface GetCoreIpv6sFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpv6sIpv6 {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the IPv6. This is the same as the VNIC's compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPv6.
     */
    id: string;
    /**
     * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
     */
    ipAddress: string;
    /**
     * The IPv6's current state.
     */
    state: string;
    /**
     * The OCID of the subnet.
     */
    subnetId: string;
    /**
     * The date and time the IPv6 was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The OCID of the VNIC.
     */
    vnicId: string;
}

export interface GetCoreListingResourceVersionsAppCatalogListingResourceVersion {
    accessiblePorts: number[];
    allowedActions: string[];
    availableRegions: string[];
    compatibleShapes: string[];
    listingId: string;
    listingResourceId: string;
    listingResourceVersion: string;
    timePublished: string;
}

export interface GetCoreListingResourceVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreLocalPeeringGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreLocalPeeringGatewaysLocalPeeringGateway {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The LPG's Oracle ID (OCID).
     */
    id: string;
    /**
     * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     */
    isCrossTenancyPeering: boolean;
    /**
     * The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
     */
    peerAdvertisedCidr: string;
    /**
     * The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet's traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
     */
    peerAdvertisedCidrDetails: string[];
    /**
     * The OCID of the peered LPG
     */
    peerId: string;
    /**
     * Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
     */
    peeringStatus: string;
    /**
     * Additional information regarding the peering status, if applicable.
     */
    peeringStatusDetails: string;
    /**
     * The OCID of the route table the LPG is using.
     */
    routeTableId: string;
    /**
     * The LPG's current lifecycle state.
     */
    state: string;
    /**
     * The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreNatGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNatGatewaysNatGateway {
    /**
     * Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
     */
    blockTraffic: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the NAT gateway.
     */
    id: string;
    /**
     * The IP address associated with the NAT gateway.
     */
    natIp: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
     */
    publicIpId: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the NAT gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRule {
    /**
     * An optional description of your choice for the rule.
     */
    description: string;
    /**
     * Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
     */
    destination: string;
    /**
     * Type of destination for the rule. Required if `direction` = `EGRESS`.
     */
    destinationType: string;
    /**
     * Direction of the security rule. Set to `EGRESS` for rules that allow outbound IP packets, or `INGRESS` for rules that allow inbound IP packets.
     */
    direction: string;
    /**
     * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
     * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
     * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
     */
    icmpOptions: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleIcmpOptions;
    /**
     * An Oracle-assigned identifier for the security rule. You specify this ID when you want to update or delete the rule.  Example: `04ABEC`
     */
    id: string;
    /**
     * Whether the rule is valid. The value is `True` when the rule is first created. If the rule's `source` or `destination` is a network security group, the value changes to `False` if that network security group is deleted.
     */
    isValid: boolean;
    /**
     * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
     */
    protocol: string;
    /**
     * Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
     */
    source: string;
    /**
     * Type of source for the rule. Required if `direction` = `INGRESS`.
     * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
     * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
     * * `NETWORK_SECURITY_GROUP`: If the rule's `source` is the OCID of a [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    sourceType: string;
    /**
     * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if egress traffic allows TCP destination port 80, there should be an ingress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
     */
    stateless: boolean;
    /**
     * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
     */
    tcpOptions: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptions;
    /**
     * The date and time the security rule was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
     */
    udpOptions: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptions;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleIcmpOptions {
    /**
     * The ICMP code (optional).
     */
    code: number;
    /**
     * The ICMP type.
     */
    type: number;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptions {
    destinationPortRange: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionsDestinationPortRange;
    sourcePortRange: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionsSourcePortRange;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionsDestinationPortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleTcpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptions {
    destinationPortRange: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionsDestinationPortRange;
    sourcePortRange: outputs.GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionsSourcePortRange;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionsDestinationPortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesSecurityRuleUdpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreNetworkSecurityGroupVnicsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupVnicsNetworkSecurityGroupVnic {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent resource that the VNIC is attached to (for example, a Compute instance).
     */
    resourceId: string;
    /**
     * The date and time the VNIC was added to the network security group, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeAssociated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     */
    vnicId: string;
}

export interface GetCoreNetworkSecurityGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupsNetworkSecurityGroup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security group.
     */
    id: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the network security group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCorePeerRegionForRemotePeeringsFilter {
    /**
     * The region's name.  Example: `us-phoenix-1`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePeerRegionForRemotePeeringsPeerRegionForRemotePeering {
    /**
     * The region's name.  Example: `us-phoenix-1`
     */
    name: string;
}

export interface GetCorePrivateIpsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePrivateIpsPrivateIp {
    /**
     * The private IP's availability domain. This attribute will be null if this is a *secondary* private IP assigned to a VNIC that is in a *regional* subnet.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The OCID of the compartment containing the private IP.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the private IP. Used for DNS. The value is the hostname portion of the private IP's fully qualified domain name (FQDN) (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be unique across all VNICs in the subnet and comply with [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123).
     */
    hostnameLabel: string;
    /**
     * The private IP's Oracle ID (OCID).
     */
    id: string;
    /**
     * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
     */
    ipAddress: string;
    /**
     * Whether this private IP is the primary one on the VNIC. Primary private IPs are unassigned and deleted automatically when the VNIC is terminated.  Example: `true`
     */
    isPrimary: boolean;
    /**
     * true if the IP is reserved and can exist detached from vnic
     */
    isReserved: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
     */
    subnetId: string;
    /**
     * The date and time the private IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN.
     */
    vlanId: string;
    /**
     * The OCID of the VNIC.
     */
    vnicId: string;
}

export interface GetCorePublicIpPoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePublicIpPoolsPublicIpPoolCollection {
    items: outputs.GetCorePublicIpPoolsPublicIpPoolCollectionItem[];
}

export interface GetCorePublicIpPoolsPublicIpPoolCollectionItem {
    /**
     * The CIDR blocks added to this pool. This could be all or a portion of a BYOIP CIDR block.
     */
    cidrBlocks: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
     */
    id: string;
    /**
     * The public IP pool's current state.
     */
    state: string;
    /**
     * The date and time the public IP pool was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCorePublicIpsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePublicIpsPublicIp {
    /**
     * The OCID of the entity the public IP is assigned to, or in the process of being assigned to.
     */
    assignedEntityId: string;
    /**
     * The type of entity the public IP is assigned to, or in the process of being assigned to.
     */
    assignedEntityType: string;
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The public IP's Oracle ID (OCID).
     */
    id: string;
    /**
     * The public IP address of the `publicIp` object.  Example: `203.0.113.2`
     */
    ipAddress: string;
    /**
     * A filter to return only public IPs that match given lifetime.
     */
    lifetime: string;
    /**
     * Deprecated. Use `assignedEntityId` instead.
     */
    privateIpId: string;
    /**
     * A filter to return only resources that belong to the given public IP pool.
     */
    publicIpPoolId: string;
    /**
     * Whether the public IP is regional or specific to a particular availability domain.
     * * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs have `scope` = `REGION`, as do ephemeral public IPs assigned to a regional entity.
     * * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
     */
    scope: string;
    /**
     * The public IP's current state.
     */
    state: string;
    /**
     * The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreRemotePeeringConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreRemotePeeringConnectionsRemotePeeringConnection {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     */
    drgId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the RPC.
     */
    id: string;
    /**
     * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     */
    isCrossTenancyPeering: boolean;
    /**
     * If this RPC is peered, this value is the OCID of the other RPC.
     */
    peerId: string;
    /**
     * If this RPC is peered, this value is the region that contains the other RPC.  Example: `us-ashburn-1`
     */
    peerRegionName: string;
    /**
     * If this RPC is peered, this value is the OCID of the other RPC's tenancy.
     */
    peerTenancyId: string;
    /**
     * Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
     */
    peeringStatus: string;
    /**
     * The RPC's current lifecycle state.
     */
    state: string;
    /**
     * The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetCoreRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreRouteTablesRouteTable {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The route table's Oracle ID (OCID).
     */
    id: string;
    /**
     * The collection of rules for routing destination IPs to network devices.
     */
    routeRules: outputs.GetCoreRouteTablesRouteTableRouteRule[];
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreRouteTablesRouteTableRouteRule {
    /**
     * Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
     *
     * @deprecated The 'cidr_block' field has been deprecated. Please use 'destination' instead.
     */
    cidrBlock: string;
    /**
     * An optional description of your choice for the rule.
     */
    description: string;
    /**
     * Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
     */
    destination: string;
    /**
     * Type of destination for the rule. Required if you provide a `destination`.
     * * `CIDR_BLOCK`: If the rule's `destination` is an IP address range in CIDR notation.
     * * `SERVICE_CIDR_BLOCK`: If the rule's `destination` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic destined for a particular `Service` through a service gateway).
     */
    destinationType: string;
    /**
     * The OCID for the route rule's target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
     */
    networkEntityId: string;
}

export interface GetCoreSecurityListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreSecurityListsSecurityList {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Rules for allowing egress IP packets.
     */
    egressSecurityRules: outputs.GetCoreSecurityListsSecurityListEgressSecurityRule[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The security list's Oracle Cloud ID (OCID).
     */
    id: string;
    /**
     * Rules for allowing ingress IP packets.
     */
    ingressSecurityRules: outputs.GetCoreSecurityListsSecurityListIngressSecurityRule[];
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the security list was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRule {
    /**
     * An optional description of your choice for the rule.
     */
    description: string;
    /**
     * Conceptually, this is the range of IP addresses that a packet originating from the instance can go to.
     */
    destination: string;
    /**
     * Type of destination for the rule. The default is `CIDR_BLOCK`.
     */
    destinationType: string;
    /**
     * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
     * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
     * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
     */
    icmpOptions: outputs.GetCoreSecurityListsSecurityListEgressSecurityRuleIcmpOptions;
    /**
     * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
     */
    protocol: string;
    /**
     * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
     */
    stateless: boolean;
    /**
     * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed. 
     * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
     */
    tcpOptions: outputs.GetCoreSecurityListsSecurityListEgressSecurityRuleTcpOptions;
    /**
     * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed. 
     * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
     */
    udpOptions: outputs.GetCoreSecurityListsSecurityListEgressSecurityRuleUdpOptions;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRuleIcmpOptions {
    /**
     * The ICMP code (optional).
     */
    code: number;
    /**
     * The ICMP type.
     */
    type: number;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRuleTcpOptions {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
    sourcePortRange: outputs.GetCoreSecurityListsSecurityListEgressSecurityRuleTcpOptionsSourcePortRange;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRuleUdpOptions {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
    sourcePortRange: outputs.GetCoreSecurityListsSecurityListEgressSecurityRuleUdpOptionsSourcePortRange;
}

export interface GetCoreSecurityListsSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRule {
    /**
     * An optional description of your choice for the rule.
     */
    description: string;
    /**
     * Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
     * * [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
     * * [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
     */
    icmpOptions: outputs.GetCoreSecurityListsSecurityListIngressSecurityRuleIcmpOptions;
    /**
     * The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP ("1"), TCP ("6"), UDP ("17"), and ICMPv6 ("58").
     */
    protocol: string;
    /**
     * Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.
     */
    source: string;
    /**
     * Type of source for the rule. The default is `CIDR_BLOCK`.
     * * `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.
     * * `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).
     */
    sourceType: string;
    /**
     * A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if ingress traffic allows TCP destination port 80, there should be an egress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.
     */
    stateless: boolean;
    /**
     * Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed. 
     * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
     */
    tcpOptions: outputs.GetCoreSecurityListsSecurityListIngressSecurityRuleTcpOptions;
    /**
     * Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed. 
     * * The following 2 attributes specify an inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.
     */
    udpOptions: outputs.GetCoreSecurityListsSecurityListIngressSecurityRuleUdpOptions;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRuleIcmpOptions {
    /**
     * The ICMP code (optional).
     */
    code: number;
    /**
     * The ICMP type.
     */
    type: number;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRuleTcpOptions {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
    sourcePortRange: outputs.GetCoreSecurityListsSecurityListIngressSecurityRuleTcpOptionsSourcePortRange;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRuleUdpOptions {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
    sourcePortRange: outputs.GetCoreSecurityListsSecurityListIngressSecurityRuleUdpOptionsSourcePortRange;
}

export interface GetCoreSecurityListsSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
    /**
     * The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.
     */
    max: number;
    /**
     * The minimum port number. Must not be greater than the maximum port number.
     */
    min: number;
}

export interface GetCoreServiceGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreServiceGatewaysServiceGateway {
    /**
     * Whether the service gateway blocks all traffic through it. The default is `false`. When this is `true`, traffic is not routed to any services, regardless of route rules.  Example: `true`
     */
    blockTraffic: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service gateway.
     */
    id: string;
    /**
     * The OCID of the route table the service gateway is using. For information about why you would associate a route table with a service gateway, see [Transit Routing: Private Access to Oracle Services](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/transitroutingoracleservices.htm).
     */
    routeTableId: string;
    /**
     * List of the [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Service/) objects enabled for this service gateway. The list can be empty. You can enable a particular `Service` by using [AttachServiceId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ServiceGateway/AttachServiceId) or [UpdateServiceGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ServiceGateway/UpdateServiceGateway).
     */
    services: outputs.GetCoreServiceGatewaysServiceGatewayService[];
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the service gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
}

export interface GetCoreServiceGatewaysServiceGatewayService {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service.
     */
    serviceId: string;
    /**
     * The name of the service.
     */
    serviceName: string;
}

export interface GetCoreServicesFilter {
    /**
     * Name of the `Service` object. This name can change and is not guaranteed to be unique.  Example: `OCI PHX Object Storage`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreServicesService {
    /**
     * A string that represents the regional public IP address ranges for the Oracle service or services covered by this `Service` object. Also known as the `Service` object's *service CIDR label*.
     */
    cidrBlock: string;
    /**
     * Description of the Oracle service or services covered by this `Service` object.  Example: `OCI PHX Object Storage`
     */
    description: string;
    /**
     * The `Service` object's [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    id: string;
    /**
     * Name of the `Service` object. This name can change and is not guaranteed to be unique.  Example: `OCI PHX Object Storage`
     */
    name: string;
}

export interface GetCoreShapeFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreShapeShape {
    baselineOcpuUtilizations: string[];
    gpuDescription: string;
    gpus: number;
    isLiveMigrationSupported: boolean;
    localDiskDescription: string;
    localDisks: number;
    localDisksTotalSizeInGbs: number;
    maxVnicAttachmentOptions: outputs.GetCoreShapeShapeMaxVnicAttachmentOptions;
    maxVnicAttachments: number;
    memoryInGbs: number;
    memoryOptions: outputs.GetCoreShapeShapeMemoryOptions;
    minTotalBaselineOcpusRequired: number;
    name: string;
    networkingBandwidthInGbps: number;
    networkingBandwidthOptions: outputs.GetCoreShapeShapeNetworkingBandwidthOptions;
    ocpuOptions: outputs.GetCoreShapeShapeOcpuOptions;
    ocpus: number;
    processorDescription: string;
}

export interface GetCoreShapeShapeMaxVnicAttachmentOptions {
    defaultPerOcpu: number;
    max: number;
    min: number;
}

export interface GetCoreShapeShapeMemoryOptions {
    defaultPerOcpuInGbs: number;
    maxInGbs: number;
    maxPerOcpuInGbs: number;
    minInGbs: number;
    minPerOcpuInGbs: number;
}

export interface GetCoreShapeShapeNetworkingBandwidthOptions {
    defaultPerOcpuInGbps: number;
    maxInGbps: number;
    minInGbps: number;
}

export interface GetCoreShapeShapeOcpuOptions {
    max: number;
    min: number;
}

export interface GetCoreShapesFilter {
    /**
     * The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreShapesShape {
    /**
     * For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
     */
    baselineOcpuUtilizations: string[];
    /**
     * A short description of the graphics processing unit (GPU) available for this shape.
     */
    gpuDescription: string;
    /**
     * The number of GPUs available for this shape.
     */
    gpus: number;
    /**
     * Whether Live Migration is currently supported for this shape.
     */
    isLiveMigrationSupported: boolean;
    /**
     * A short description of the local disks available for this shape.
     */
    localDiskDescription: string;
    /**
     * The number of local disks available for this shape.
     */
    localDisks: number;
    /**
     * The aggregate size of the local disks available for this shape, in gigabytes.
     */
    localDisksTotalSizeInGbs: number;
    /**
     * For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
     */
    maxVnicAttachmentOptions: outputs.GetCoreShapesShapeMaxVnicAttachmentOptions;
    /**
     * The maximum number of VNIC attachments available for this shape.
     */
    maxVnicAttachments: number;
    /**
     * The default amount of memory available for this shape, in gigabytes.
     */
    memoryInGbs: number;
    /**
     * For a flexible shape, the amount of memory available for instances that use this shape.
     */
    memoryOptions: outputs.GetCoreShapesShapeMemoryOptions;
    /**
     * For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
     */
    minTotalBaselineOcpusRequired: number;
    /**
     * The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     */
    name: string;
    /**
     * The networking bandwidth available for this shape, in gigabits per second.
     */
    networkingBandwidthInGbps: number;
    /**
     * For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
     */
    networkingBandwidthOptions: outputs.GetCoreShapesShapeNetworkingBandwidthOptions;
    /**
     * For a flexible shape, the number of OCPUs available for instances that use this shape.
     */
    ocpuOptions: outputs.GetCoreShapesShapeOcpuOptions;
    /**
     * The default number of OCPUs available for this shape.
     */
    ocpus: number;
    /**
     * A short description of the shape's processor (CPU).
     */
    processorDescription: string;
}

export interface GetCoreShapesShapeMaxVnicAttachmentOptions {
    /**
     * The default number of VNIC attachments allowed per OCPU.
     */
    defaultPerOcpu: number;
    /**
     * The maximum number of OCPUs.
     */
    max: number;
    /**
     * The minimum number of OCPUs.
     */
    min: number;
}

export interface GetCoreShapesShapeMemoryOptions {
    /**
     * The default amount of memory per OCPU available for this shape, in gigabytes.
     */
    defaultPerOcpuInGbs: number;
    /**
     * The maximum amount of memory, in gigabytes.
     */
    maxInGbs: number;
    /**
     * The maximum amount of memory per OCPU available for this shape, in gigabytes.
     */
    maxPerOcpuInGbs: number;
    /**
     * The minimum amount of memory, in gigabytes.
     */
    minInGbs: number;
    /**
     * The minimum amount of memory per OCPU available for this shape, in gigabytes.
     */
    minPerOcpuInGbs: number;
}

export interface GetCoreShapesShapeNetworkingBandwidthOptions {
    /**
     * The default amount of networking bandwidth per OCPU, in gigabits per second.
     */
    defaultPerOcpuInGbps: number;
    /**
     * The maximum amount of networking bandwidth, in gigabits per second.
     */
    maxInGbps: number;
    /**
     * The minimum amount of networking bandwidth, in gigabits per second.
     */
    minInGbps: number;
}

export interface GetCoreShapesShapeOcpuOptions {
    /**
     * The maximum number of OCPUs.
     */
    max: number;
    /**
     * The minimum number of OCPUs.
     */
    min: number;
}

export interface GetCoreSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreSubnetsSubnet {
    /**
     * The subnet's availability domain. This attribute will be null if this is a regional subnet instead of an AD-specific subnet. Oracle recommends creating regional subnets.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The subnet's CIDR block.  Example: `10.0.1.0/24`
     */
    cidrBlock: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The OCID of the set of DHCP options that the subnet uses.
     */
    dhcpOptionsId: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * A DNS label for the subnet, used in conjunction with the VNIC's hostname and VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be an alphanumeric string that begins with a letter and is unique within the VCN. The value cannot be changed.
     */
    dnsLabel: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The subnet's Oracle ID (OCID).
     */
    id: string;
    /**
     * For an IPv6-enabled subnet, this is the IPv6 CIDR block for the subnet's IP address space. The subnet size is always /64. See [IPv6 Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).  Example: `2001:0db8:0123:1111::/64`
     */
    ipv6cidrBlock: string;
    /**
     * For an IPv6-enabled subnet, this is the IPv6 address of the virtual router.  Example: `2001:0db8:0123:1111:89ab:cdef:1234:5678`
     */
    ipv6virtualRouterIp: string;
    /**
     * Whether to disallow ingress internet traffic to VNICs within this subnet. Defaults to false.
     */
    prohibitInternetIngress: boolean;
    /**
     * Whether VNICs within this subnet can have public IP addresses. Defaults to false, which means VNICs created in this subnet will automatically be assigned public IP addresses unless specified otherwise during instance launch or VNIC creation (with the `assignPublicIp` flag in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/)). If `prohibitPublicIpOnVnic` is set to true, VNICs created in this subnet cannot have public IP addresses (that is, it's a private subnet).  Example: `true`
     */
    prohibitPublicIpOnVnic: boolean;
    /**
     * The OCID of the route table that the subnet uses.
     */
    routeTableId: string;
    /**
     * The OCIDs of the security list or lists that the subnet uses. Remember that security lists are associated *with the subnet*, but the rules are applied to the individual VNICs in the subnet.
     */
    securityListIds: string[];
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The subnet's domain name, which consists of the subnet's DNS label, the VCN's DNS label, and the `oraclevcn.com` domain.
     */
    subnetDomainName: string;
    /**
     * The date and time the subnet was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
    /**
     * The IP address of the virtual router.  Example: `10.0.14.1`
     */
    virtualRouterIp: string;
    /**
     * The MAC address of the virtual router.  Example: `00:00:00:00:00:01`
     */
    virtualRouterMac: string;
}

export interface GetCoreVcnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVcnsVirtualNetwork {
    /**
     * Deprecated. The first CIDR IP address from cidrBlocks.  Example: `172.16.0.0/16`
     */
    cidrBlock: string;
    /**
     * The list of IPv4 CIDR blocks the VCN will use.
     */
    cidrBlocks: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID for the VCN's default set of DHCP options.
     */
    defaultDhcpOptionsId: string;
    /**
     * The OCID for the VCN's default route table.
     */
    defaultRouteTableId: string;
    /**
     * The OCID for the VCN's default security list.
     */
    defaultSecurityListId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * A DNS label for the VCN, used in conjunction with the VNIC's hostname and subnet's DNS label to form a fully qualified domain name (FQDN) for each VNIC within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`). Must be an alphanumeric string that begins with a letter. The value cannot be changed.
     */
    dnsLabel: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The VCN's Oracle ID (OCID).
     */
    id: string;
    /**
     * For an IPv6-enabled VCN, this is the list of IPv6 CIDR blocks for the VCN's IP address space. The CIDRs are provided by Oracle and the sizes are always /56.
     */
    ipv6cidrBlocks: string[];
    isIpv6enabled: boolean;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the VCN was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The VCN's domain name, which consists of the VCN's DNS label, and the `oraclevcn.com` domain.
     */
    vcnDomainName: string;
}

export interface GetCoreVirtualCircuitBandwidthShapesFilter {
    /**
     * The name of the bandwidth shape.  Example: `10 Gbps`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitBandwidthShapesVirtualCircuitBandwidthShape {
    /**
     * The bandwidth in Mbps.  Example: `10000`
     */
    bandwidthInMbps: number;
    /**
     * The name of the bandwidth shape.  Example: `10 Gbps`
     */
    name: string;
}

export interface GetCoreVirtualCircuitCrossConnectMapping {
    /**
     * The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
     */
    bgpMd5authKey: string;
    /**
     * The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     */
    crossConnectOrCrossConnectGroupId: string;
    /**
     * The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
     */
    customerBgpPeeringIp: string;
    /**
     * The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
     */
    customerBgpPeeringIpv6: string;
    /**
     * The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIp: string;
    /**
     * The IPv6 address for Oracle's end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIpv6: string;
    /**
     * The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     */
    vlan: number;
}

export interface GetCoreVirtualCircuitPublicPrefix {
    cidrBlock: string;
}

export interface GetCoreVirtualCircuitPublicPrefixesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefix {
    /**
     * Publix IP prefix (CIDR) that the customer specified.
     */
    cidrBlock: string;
    /**
     * A filter to only return resources that match the given verification state.
     */
    verificationState: string;
}

export interface GetCoreVirtualCircuitsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitsVirtualCircuit {
    /**
     * The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
     */
    bandwidthShapeName: string;
    /**
     * The state of the Ipv6 BGP session associated with the virtual circuit.
     */
    bgpIpv6sessionState: string;
    /**
     * Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
     *
     * @deprecated The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead.
     */
    bgpManagement: string;
    /**
     * The state of the Ipv4 BGP session associated with the virtual circuit.
     */
    bgpSessionState: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
     */
    crossConnectMappings: outputs.GetCoreVirtualCircuitsVirtualCircuitCrossConnectMapping[];
    /**
     * The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer's edge router and Oracle, the value is the customer's ASN. If the BGP session is between the provider's edge router and Oracle, the value is the provider's ASN. Can be a 2-byte or 4-byte ASN. Uses "asplain" format.
     */
    customerAsn: string;
    /**
     * Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
     *
     * @deprecated The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead.
     */
    customerBgpAsn: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the customer's [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
     */
    gatewayId: string;
    /**
     * The virtual circuit's Oracle ID (OCID).
     */
    id: string;
    /**
     * The Oracle BGP ASN.
     */
    oracleBgpAsn: number;
    /**
     * The OCID of the service offered by the provider (if the customer is connecting via a provider).
     */
    providerServiceId: string;
    /**
     * The service key name offered by the provider (if the customer is connecting via a provider).
     */
    providerServiceKeyName: string;
    /**
     * The provider's state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
     */
    providerState: string;
    /**
     * For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
     */
    publicPrefixes: outputs.GetCoreVirtualCircuitsVirtualCircuitPublicPrefix[];
    /**
     * Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
     */
    referenceComment: string;
    /**
     * The Oracle Cloud Infrastructure region where this virtual circuit is located.
     */
    region: string;
    /**
     * The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
     */
    routingPolicies: string[];
    /**
     * Provider service type.
     */
    serviceType: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     */
    type: string;
    virtualCircuitId: string;
}

export interface GetCoreVirtualCircuitsVirtualCircuitCrossConnectMapping {
    /**
     * The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don't use BGP MD5 authentication.
     */
    bgpMd5authKey: string;
    /**
     * The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     */
    crossConnectOrCrossConnectGroupId: string;
    /**
     * The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider's edge router. Must use a /30 or /31 subnet mask.
     */
    customerBgpPeeringIp: string;
    /**
     * The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer's edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider's edge router. Only subnet masks from /64 up to /127 are allowed.
     */
    customerBgpPeeringIpv6: string;
    /**
     * The IPv4 address for Oracle's end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIp: string;
    /**
     * The IPv6 address for Oracle's end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer's edge router, the customer specifies this information. If the session goes from Oracle to a provider's edge router, the provider specifies this.
     */
    oracleBgpPeeringIpv6: string;
    /**
     * The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     */
    vlan: number;
}

export interface GetCoreVirtualCircuitsVirtualCircuitPublicPrefix {
    cidrBlock: string;
}

export interface GetCoreVirtualNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualNetworksVirtualNetwork {
    cidrBlock: string;
    cidrBlocks: string[];
    compartmentId: string;
    defaultDhcpOptionsId: string;
    defaultRouteTableId: string;
    defaultSecurityListId: string;
    definedTags: {[key: string]: any};
    displayName: string;
    dnsLabel: string;
    freeformTags: {[key: string]: any};
    id: string;
    ipv6cidrBlocks: string[];
    isIpv6enabled: boolean;
    state: string;
    timeCreated: string;
    vcnDomainName: string;
}

export interface GetCoreVlansFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVlansVlan {
    /**
     * The VLAN's availability domain. This attribute will be null if this is a regional VLAN rather than an AD-specific VLAN.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The range of IPv4 addresses that will be used for layer 3 communication with hosts outside the VLAN.  Example: `192.168.1.0/24`
     */
    cidrBlock: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The VLAN's Oracle ID (OCID).
     */
    id: string;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to use with this VLAN. All VNICs in the VLAN belong to these NSGs. For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NetworkSecurityGroup/).
     */
    nsgIds: string[];
    /**
     * The OCID of the route table that the VLAN uses.
     */
    routeTableId: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the VLAN was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     */
    vcnId: string;
    /**
     * The IEEE 802.1Q VLAN tag of this VLAN.  Example: `100`
     */
    vlanTag: number;
}

export interface GetCoreVnicAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVnicAttachmentsVnicAttachment {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    createVnicDetails: outputs.GetCoreVnicAttachmentsVnicAttachmentCreateVnicDetails;
    /**
     * A user-friendly name. Does not have to be unique. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The OCID of the VNIC attachment.
     */
    id: string;
    /**
     * The OCID of the instance.
     */
    instanceId: string;
    /**
     * Which physical network interface card (NIC) the VNIC uses. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     */
    nicIndex: number;
    /**
     * The current state of the VNIC attachment.
     */
    state: string;
    /**
     * The OCID of the subnet to create the VNIC in.
     */
    subnetId: string;
    /**
     * The date and time the VNIC attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     */
    vlanId: string;
    /**
     * The Oracle-assigned VLAN tag of the attached VNIC. Available after the attachment process is complete.
     */
    vlanTag: number;
    /**
     * The OCID of the VNIC.
     */
    vnicId: string;
}

export interface GetCoreVnicAttachmentsVnicAttachmentCreateVnicDetails {
    assignPrivateDnsRecord: boolean;
    assignPublicIp: string;
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique. Avoid entering confidential information.
     */
    displayName: string;
    freeformTags: {[key: string]: any};
    hostnameLabel: string;
    nsgIds: string[];
    privateIp: string;
    skipSourceDestCheck: boolean;
    /**
     * The OCID of the subnet to create the VNIC in.
     */
    subnetId: string;
    /**
     * The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     */
    vlanId: string;
}

export interface GetCoreVolumeAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeAttachmentsVolumeAttachment {
    /**
     * The type of volume attachment.
     */
    attachmentType: string;
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the "CHAP password".)
     */
    chapSecret: string;
    /**
     * The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.<unique_ID>`
     */
    chapUsername: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     *
     * @deprecated The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    compartmentId: string;
    /**
     * The device name.
     */
    device: string;
    /**
     * A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.  Example: `My volume attachment`
     */
    displayName: string;
    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     */
    encryptionInTransitType: string;
    /**
     * The OCID of the volume attachment.
     */
    id: string;
    /**
     * The OCID of the instance.
     */
    instanceId: string;
    /**
     * The volume's iSCSI IP address.  Example: `169.254.2.2`
     */
    ipv4: string;
    /**
     * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     */
    iqn: string;
    /**
     * Whether the attachment is multipath or not.
     */
    isMultipath: boolean;
    /**
     * Whether in-transit encryption for the data volume's paravirtualized attachment is enabled or not.
     */
    isPvEncryptionInTransitEnabled: boolean;
    /**
     * Whether the attachment was created in read-only mode.
     */
    isReadOnly: boolean;
    isShareable: boolean;
    /**
     * The iscsi login state of the volume attachment. For a multipath volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     */
    iscsiLoginState: string;
    /**
     * A list of secondary multipath devices
     */
    multipathDevices: outputs.GetCoreVolumeAttachmentsVolumeAttachmentMultipathDevice[];
    /**
     * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
     */
    port: number;
    /**
     * The current state of the volume attachment.
     */
    state: string;
    /**
     * The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    useChap: boolean;
    /**
     * The OCID of the volume.
     */
    volumeId: string;
}

export interface GetCoreVolumeAttachmentsVolumeAttachmentMultipathDevice {
    /**
     * The volume's iSCSI IP address.  Example: `169.254.2.2`
     */
    ipv4: string;
    /**
     * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     */
    iqn: string;
    /**
     * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
     */
    port: number;
}

export interface GetCoreVolumeBackupPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupPoliciesVolumeBackupPolicy {
    /**
     * The OCID of the compartment. If no compartment is specified, the Oracle defined backup policies are listed.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The paired destination region for copying scheduled backups to. Example `us-ashburn-1`. See [Region Pairs](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#RegionPairs) for details about paired regions.
     */
    destinationRegion: string;
    /**
     * A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the volume backup policy.
     */
    id: string;
    /**
     * The collection of schedules that this policy will apply.
     */
    schedules: outputs.GetCoreVolumeBackupPoliciesVolumeBackupPolicySchedule[];
    /**
     * The date and time the volume backup policy was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
}

export interface GetCoreVolumeBackupPoliciesVolumeBackupPolicySchedule {
    /**
     * The type of volume backup to create.
     */
    backupType: string;
    /**
     * The day of the month to schedule the volume backup.
     */
    dayOfMonth: number;
    /**
     * The day of the week to schedule the volume backup.
     */
    dayOfWeek: string;
    /**
     * The hour of the day to schedule the volume backup.
     */
    hourOfDay: number;
    /**
     * The month of the year to schedule the volume backup.
     */
    month: string;
    /**
     * The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
     */
    offsetSeconds: number;
    /**
     * Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
     */
    offsetType: string;
    /**
     * The volume backup frequency.
     */
    period: string;
    /**
     * How long, in seconds, to keep the volume backups created by this schedule.
     */
    retentionSeconds: number;
    /**
     * Specifies what time zone is the schedule in
     */
    timeZone: string;
}

export interface GetCoreVolumeBackupPolicyAssignmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment {
    /**
     * The OCID of an asset (e.g. a volume).
     */
    assetId: string;
    /**
     * The OCID of the volume backup policy assignment.
     */
    id: string;
    /**
     * The OCID of the volume backup policy that has been assigned to the volume.
     */
    policyId: string;
    /**
     * The date and time the volume backup policy was assigned to the volume. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
}

export interface GetCoreVolumeBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupsVolumeBackup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     */
    expirationTime: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the volume backup.
     */
    id: string;
    /**
     * The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId: string;
    /**
     * The size of the volume, in GBs.
     */
    sizeInGbs: string;
    /**
     * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
     *
     * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
     */
    sizeInMbs: string;
    sourceDetails: outputs.GetCoreVolumeBackupsVolumeBackupSourceDetails;
    /**
     * Specifies whether the backup was created manually, or via scheduled backup policy.
     */
    sourceType: string;
    /**
     * A filter to return only resources that originated from the given source volume backup.
     */
    sourceVolumeBackupId: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     */
    timeRequestReceived: string;
    /**
     * The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
     */
    type: string;
    /**
     * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     */
    uniqueSizeInGbs: string;
    /**
     * The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     *
     * @deprecated The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
     */
    uniqueSizeInMbs: string;
    /**
     * The OCID of the volume.
     */
    volumeId: string;
}

export interface GetCoreVolumeBackupsVolumeBackupSourceDetails {
    /**
     * The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId: string;
    region: string;
    volumeBackupId: string;
}

export interface GetCoreVolumeBlockVolumeReplica {
    /**
     * The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The block volume replica's Oracle ID (OCID).
     */
    blockVolumeReplicaId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetCoreVolumeGroupBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeGroupBackupsVolumeGroupBackup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     */
    expirationTime: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the volume group backup.
     */
    id: string;
    /**
     * The aggregate size of the volume group backup, in GBs.
     */
    sizeInGbs: string;
    /**
     * The aggregate size of the volume group backup, in MBs.
     */
    sizeInMbs: string;
    sourceDetails: outputs.GetCoreVolumeGroupBackupsVolumeGroupBackupSourceDetails;
    /**
     * Specifies whether the volume group backup was created manually, or via scheduled backup policy.
     */
    sourceType: string;
    /**
     * The OCID of the source volume group backup.
     */
    sourceVolumeGroupBackupId: string;
    /**
     * The current state of a volume group backup.
     */
    state: string;
    /**
     * The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeRequestReceived: string;
    /**
     * The type of backup.
     */
    type: string;
    /**
     * The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     */
    uniqueSizeInGbs: string;
    /**
     * The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     */
    uniqueSizeInMbs: string;
    /**
     * OCIDs for the volume backups in this volume group backup.
     */
    volumeBackupIds: string[];
    /**
     * The OCID of the volume group.
     */
    volumeGroupId: string;
}

export interface GetCoreVolumeGroupBackupsVolumeGroupBackupSourceDetails {
    kmsKeyId: string;
    region: string;
    volumeGroupBackupId: string;
}

export interface GetCoreVolumeGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeGroupsVolumeGroup {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    backupPolicyId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID for the volume group.
     */
    id: string;
    /**
     * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
     */
    isHydrated: boolean;
    /**
     * The aggregate size of the volume group in GBs.
     */
    sizeInGbs: string;
    /**
     * The aggregate size of the volume group in MBs.
     */
    sizeInMbs: string;
    /**
     * Specifies the source for a volume group.
     */
    sourceDetails: outputs.GetCoreVolumeGroupsVolumeGroupSourceDetails;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * OCIDs for the volumes in this volume group.
     */
    volumeIds: string[];
}

export interface GetCoreVolumeGroupsVolumeGroupSourceDetails {
    /**
     * The type can be one of these values: `volumeGroupBackupId`, `volumeGroupId`, `volumeIds`
     */
    type: string;
    /**
     * The OCID of the volume group backup to restore from, if the type is `volumeGroupBackup`
     */
    volumeGroupBackupId: string;
    /**
     * The OCID of the volume group to clone from, if the type is `volumeGroup`
     */
    volumeGroupId: string;
    /**
     * OCIDs for the volumes in this volume group.
     */
    volumeIds: string[];
}

export interface GetCoreVolumeSourceDetails {
    /**
     * The OCID of the block volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
     */
    type: string;
}

export interface GetCoreVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumesVolume {
    /**
     * The number of Volume Performance Units per GB that this volume is effectively tuned to when it's idle.
     */
    autoTunedVpusPerGb: string;
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
     */
    backupPolicyId: string;
    /**
     * The list of block volume replicas of this volume.
     */
    blockVolumeReplicas: outputs.GetCoreVolumesVolumeBlockVolumeReplica[];
    blockVolumeReplicasDeletion: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the block volume replica.
     */
    id: string;
    /**
     * Specifies whether the auto-tune performance is enabled for this volume.
     */
    isAutoTuneEnabled: boolean;
    /**
     * Specifies whether the cloned volume's data has finished copying from the source volume or backup.
     */
    isHydrated: boolean;
    /**
     * The OCID of the Key Management key which is the master encryption key for the volume.
     */
    kmsKeyId: string;
    /**
     * The size of the volume in GBs.
     */
    sizeInGbs: string;
    /**
     * The size of the volume in MBs. This field is deprecated. Use `sizeInGbs` instead.
     *
     * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
     */
    sizeInMbs: string;
    sourceDetails: outputs.GetCoreVolumesVolumeSourceDetails;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    volumeBackupId: string;
    /**
     * The OCID of the volume group.
     */
    volumeGroupId: string;
    /**
     * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
     */
    vpusPerGb: string;
}

export interface GetCoreVolumesVolumeBlockVolumeReplica {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The block volume replica's Oracle ID (OCID).
     */
    blockVolumeReplicaId: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
}

export interface GetCoreVolumesVolumeSourceDetails {
    /**
     * The OCID of the block volume replica.
     */
    id: string;
    /**
     * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
     */
    type: string;
}

export interface GetDataSafeDataSafePrivateEndpointsDataSafePrivateEndpoint {
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the private endpoint.
     */
    description: string;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName: string;
    /**
     * The three-label fully qualified domain name (FQDN) of the private endpoint. The customer VCN's DNS records are updated with this FQDN.
     */
    endpointFqdn: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Data Safe private endpoint.
     */
    id: string;
    /**
     * The OCIDs of the network security groups that the private endpoint belongs to.
     */
    nsgIds: string[];
    /**
     * The OCID of the underlying private endpoint.
     */
    privateEndpointId: string;
    /**
     * The private IP address of the private endpoint.
     */
    privateEndpointIp: string;
    /**
     * A filter to return only resources that match the specified lifecycle state.
     */
    state: string;
    /**
     * The OCID of the subnet.
     */
    subnetId: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the private endpoint was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * A filter to return only resources that match the specified VCN OCID.
     */
    vcnId: string;
}

export interface GetDataSafeDataSafePrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeOnPremConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeOnPremConnectorsOnPremConnector {
    /**
     * Latest available version of the on-premises connector.
     */
    availableVersion: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Created version of the on-premises connector.
     */
    createdVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the on-premises connector.
     */
    description: string;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the on-premises connector.
     */
    id: string;
    /**
     * Details about the current state of the on-premises connector.
     */
    lifecycleDetails: string;
    /**
     * The current state of the on-premises connector.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the on-premises connector was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
}

export interface GetDataSafeTargetDatabaseConnectionOption {
    /**
     * The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     */
    connectionType: string;
    /**
     * The OCID of the Data Safe private endpoint.
     */
    datasafePrivateEndpointId: string;
    /**
     * The OCID of the on-premises connector.
     */
    onPremConnectorId: string;
}

export interface GetDataSafeTargetDatabaseCredentials {
    /**
     * The password of the database user.
     */
    password: string;
    /**
     * The database user name.
     */
    userName: string;
}

export interface GetDataSafeTargetDatabaseDatabaseDetails {
    /**
     * The OCID of the autonomous database registered as a target database in Data Safe.
     */
    autonomousDatabaseId: string;
    /**
     * The database type.
     */
    databaseType: string;
    /**
     * The OCID of the cloud database system registered as a target database in Data Safe.
     */
    dbSystemId: string;
    /**
     * The infrastructure type the database is running on.
     */
    infrastructureType: string;
    /**
     * The OCID of the compute instance on which the database is running.
     */
    instanceId: string;
    /**
     * A List of either the IP Addresses or FQDN names of the database hosts.
     */
    ipAddresses: string[];
    /**
     * The port number of the database listener.
     */
    listenerPort: number;
    /**
     * The service name of the database registered as target database.
     */
    serviceName: string;
    /**
     * The OCID of the VM cluster in which the database is running.
     */
    vmClusterId: string;
}

export interface GetDataSafeTargetDatabaseTlsConfig {
    /**
     * The format of the certificate store.
     */
    certificateStoreType: string;
    /**
     * Base64 encoded string of key store file content.
     */
    keyStoreContent: string;
    /**
     * Status to represent whether the database connection is TLS enabled or not.
     */
    status: string;
    /**
     * The password to read the trust store and key store files, if they are password protected.
     */
    storePassword: string;
    /**
     * Base64 encoded string of trust store file content.
     */
    trustStoreContent: string;
}

export interface GetDataSafeTargetDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasesTargetDatabase {
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Types of connection supported by Data Safe.
     */
    connectionOption: outputs.GetDataSafeTargetDatabasesTargetDatabaseConnectionOption;
    /**
     * The database credentials required for Data Safe to connect to the database.
     */
    credentials: outputs.GetDataSafeTargetDatabasesTargetDatabaseCredentials;
    /**
     * Details of the database for the registration in Data Safe. To choose applicable database type and infrastructure type refer to  https://confluence.oci.oraclecorp.com/display/DATASAFE/Target+V2+Design
     */
    databaseDetails: outputs.GetDataSafeTargetDatabasesTargetDatabaseDatabaseDetails;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the target database in Data Safe.
     */
    description: string;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Data Safe target database.
     */
    id: string;
    /**
     * Details about the current state of the target database in Data Safe.
     */
    lifecycleDetails: string;
    /**
     * A filter to return the target databases that matches the current state of the target database.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the database was registered in Data Safe and created as a target database in Data Safe.
     */
    timeCreated: string;
    /**
     * The date and time of the target database update in Data Safe.
     */
    timeUpdated: string;
    /**
     * The details required to establish a TLS enabled connection.
     */
    tlsConfig: outputs.GetDataSafeTargetDatabasesTargetDatabaseTlsConfig;
}

export interface GetDataSafeTargetDatabasesTargetDatabaseConnectionOption {
    /**
     * The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     */
    connectionType: string;
    /**
     * The OCID of the Data Safe private endpoint.
     */
    datasafePrivateEndpointId: string;
    /**
     * The OCID of the on-premises connector.
     */
    onPremConnectorId: string;
}

export interface GetDataSafeTargetDatabasesTargetDatabaseCredentials {
    /**
     * The password of the database user.
     */
    password: string;
    /**
     * The database user name.
     */
    userName: string;
}

export interface GetDataSafeTargetDatabasesTargetDatabaseDatabaseDetails {
    /**
     * The OCID of the autonomous database registered as a target database in Data Safe.
     */
    autonomousDatabaseId: string;
    /**
     * A filter to return target databases that match the database type of the target database.
     */
    databaseType: string;
    /**
     * The OCID of the cloud database system registered as a target database in Data Safe.
     */
    dbSystemId: string;
    /**
     * A filter to return target databases that match the infrastructure type of the target database.
     */
    infrastructureType: string;
    /**
     * The OCID of the compute instance on which the database is running.
     */
    instanceId: string;
    /**
     * A List of either the IP Addresses or FQDN names of the database hosts.
     */
    ipAddresses: string[];
    /**
     * The port number of the database listener.
     */
    listenerPort: number;
    /**
     * The service name of the database registered as target database.
     */
    serviceName: string;
    /**
     * The OCID of the VM cluster in which the database is running.
     */
    vmClusterId: string;
}

export interface GetDataSafeTargetDatabasesTargetDatabaseTlsConfig {
    /**
     * The format of the certificate store.
     */
    certificateStoreType: string;
    /**
     * Base64 encoded string of key store file content.
     */
    keyStoreContent: string;
    /**
     * Status to represent whether the database connection is TLS enabled or not.
     */
    status: string;
    /**
     * The password to read the trust store and key store files, if they are password protected.
     */
    storePassword: string;
    /**
     * Base64 encoded string of trust store file content.
     */
    trustStoreContent: string;
}

export interface GetDatabaseAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails;
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
    /**
     * The OCID of the Autonomous Container Database.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface GetDatabaseAutonomousContainerDatabaseDataguardAssociationsAutonomousContainerDatabaseDataguardAssociation {
    /**
     * The lag time between updates to the primary Autonomous Container Database and application of the redo data on the standby Autonomous Container Database, as computed by the reporting database.  Example: `9 seconds`
     */
    applyLag: string;
    /**
     * The rate at which redo logs are synchronized between the associated Autonomous Container Databases.  Example: `180 Mb per second`
     */
    applyRate: string;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousContainerDatabaseId: string;
    /**
     * The OCID of the Autonomous Data Guard created for a given Autonomous Container Database.
     */
    id: string;
    /**
     * Additional information about the current lifecycleState, if available.
     */
    lifecycleDetails: string;
    /**
     * The OCID of the peer Autonomous Container Database-Autonomous Data Guard association.
     */
    peerAutonomousContainerDatabaseDataguardAssociationId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Container Database.
     */
    peerAutonomousContainerDatabaseId: string;
    /**
     * The current state of Autonomous Data Guard.
     */
    peerLifecycleState: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    peerRole: string;
    /**
     * The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
     */
    protectionMode: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    role: string;
    /**
     * The current state of Autonomous Data Guard.
     */
    state: string;
    /**
     * The date and time the Autonomous DataGuard association was created.
     */
    timeCreated: string;
    /**
     * The date and time when the last role change action happened.
     */
    timeLastRoleChanged: string;
    /**
     * The date and time of the last update to the apply lag, apply rate, and transport lag values.
     */
    timeLastSynced: string;
    /**
     * The approximate number of seconds of redo data not yet available on the standby Autonomous Container Database, as computed by the reporting database.  Example: `7 seconds`
     */
    transportLag: string;
}

export interface GetDatabaseAutonomousContainerDatabaseDataguardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetails {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabaseMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
    /**
     * The OCID of the Autonomous Container Database.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabase {
    /**
     * The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousExadataInfrastructureId: string;
    /**
     * The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousVmClusterId: string;
    /**
     * A filter to return only resources that match the given availability domain exactly.
     */
    availabilityDomain: string;
    /**
     * Backup options for the Autonomous Container Database.
     */
    backupConfig: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
     */
    dbUniqueName: string;
    /**
     * Oracle Database version of the Autonomous Container Database.
     */
    dbVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Autonomous Container Database.
     */
    id: string;
    /**
     * A filter to return only resources that match the given Infrastructure Type.
     */
    infrastructureType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    keyStoreId: string;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    lastMaintenanceRunId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow;
    maintenanceWindowDetails: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetails;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    nextMaintenanceRunId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     */
    patchId: string;
    /**
     * Database patch model preference.
     */
    patchModel: string;
    peerAutonomousContainerDatabaseBackupConfig: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig;
    peerAutonomousContainerDatabaseCompartmentId: string;
    peerAutonomousContainerDatabaseDisplayName: string;
    peerAutonomousExadataInfrastructureId: string;
    peerAutonomousVmClusterId: string;
    peerDbUniqueName: string;
    protectionMode: string;
    /**
     * The role of the dataguard enabled Autonomous Container Database.
     */
    role: string;
    rotateKeyTrigger: boolean;
    /**
     * A filter to return only resources that match the given service level agreement type exactly.
     */
    serviceLevelAgreementType: string;
    /**
     * The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     */
    standbyMaintenanceBufferInDays: number;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the Autonomous Container Database was created.
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigBackupDestinationDetails;
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
    /**
     * The OCID of the Autonomous Container Database.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetails {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailsMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetailsMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
    /**
     * The OCID of the Autonomous Container Database.
     */
    id: string;
    /**
     * Proxy URL to connect to object store.
     */
    internetProxy: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    vpcPassword: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    vpcUser: string;
}

export interface GetDatabaseAutonomousContainerDatabasesFilter {
    /**
     * Name of the month of the year.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerPatchesAutonomousPatch {
    /**
     * The text describing this patch package.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    id: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * Database patching model preference. See [My Oracle Support note 2285040.1](https://support.oracle.com/rs?type=doc&id=2285040.1) for information on the Release Update (RU) and Release Update Revision (RUR) patching models.
     */
    patchModel: string;
    /**
     * First month of the quarter in which the patch was released.
     */
    quarter: string;
    /**
     * The current state of the patch as a result of lastAction.
     */
    state: string;
    /**
     * The date and time that the patch was released.
     */
    timeReleased: string;
    /**
     * The type of patch. BUNDLE is one example.
     */
    type: string;
    /**
     * The version of this patch package.
     */
    version: string;
    /**
     * Year in which the patch was released.
     */
    year: string;
}

export interface GetDatabaseAutonomousContainerPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseApexDetails {
    /**
     * The Oracle APEX Application Development version.
     */
    apexVersion: string;
    /**
     * The Oracle REST Data Services (ORDS) version.
     */
    ordsVersion: string;
}

export interface GetDatabaseAutonomousDatabaseBackupConfig {
    /**
     * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
     */
    manualBackupBucketName: string;
    /**
     * The manual backup destination type.
     */
    manualBackupType: string;
}

export interface GetDatabaseAutonomousDatabaseBackupsAutonomousDatabaseBackup {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousDatabaseId: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The size of the database in terabytes at the time the backup was taken.
     */
    databaseSizeInTbs: number;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     */
    id: string;
    /**
     * Indicates whether the backup is user-initiated or automatic.
     */
    isAutomatic: boolean;
    /**
     * Indicates whether the backup can be used to restore the associated Autonomous Database.
     */
    isRestorable: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    keyStoreId: string;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the backup completed.
     */
    timeEnded: string;
    /**
     * The date and time the backup started.
     */
    timeStarted: string;
    /**
     * The type of backup.
     */
    type: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseAutonomousDatabaseBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseConnectionStrings {
    /**
     * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    dedicated: string;
    /**
     * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
     */
    high: string;
    /**
     * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    low: string;
    /**
     * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
     */
    medium: string;
}

export interface GetDatabaseAutonomousDatabaseConnectionUrls {
    /**
     * Oracle Application Express (APEX) URL.
     */
    apexUrl: string;
    /**
     * The URL of the Graph Studio for the Autonomous Database.
     */
    graphStudioUrl: string;
    /**
     * Oracle Machine Learning user management URL.
     */
    machineLearningUserManagementUrl: string;
    /**
     * Oracle SQL Developer Web URL.
     */
    sqlDevWebUrl: string;
}

export interface GetDatabaseAutonomousDatabaseCustomerContact {
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface GetDatabaseAutonomousDatabaseDataguardAssociationsAutonomousDatabaseDataguardAssociation {
    /**
     * The lag time between updates to the primary database and application of the redo data on the standby database, as computed by the reporting database.  Example: `9 seconds`
     */
    applyLag: string;
    /**
     * The rate at which redo logs are synced between the associated databases.  Example: `180 Mb per second`
     */
    applyRate: string;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousDatabaseId: string;
    /**
     * The OCID of the Autonomous Dataguard created for Autonomous Container Database where given Autonomous Database resides in.
     */
    id: string;
    /**
     * Additional information about the current lifecycleState, if available.
     */
    lifecycleDetails: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Database.
     */
    peerAutonomousDatabaseId: string;
    /**
     * The current state of Autonomous Data Guard.
     */
    peerAutonomousDatabaseLifeCycleState: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    peerRole: string;
    /**
     * The protection mode of this Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
     */
    protectionMode: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    role: string;
    /**
     * The current state of Autonomous Data Guard.
     */
    state: string;
    /**
     * The date and time the Data Guard association was created.
     */
    timeCreated: string;
    /**
     * The date and time when the last role change action happened.
     */
    timeLastRoleChanged: string;
    /**
     * The date and time of the last update to the apply lag, apply rate, and transport lag values.
     */
    timeLastSynced: string;
    /**
     * The approximate number of seconds of redo data not yet available on the standby Autonomous Container Database, as computed by the reporting database.  Example: `7 seconds`
     */
    transportLag: string;
}

export interface GetDatabaseAutonomousDatabaseDataguardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseKeyHistoryEntry {
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * The date and time the kms key activated.
     */
    timeActivated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseAutonomousDatabaseStandbyDb {
    /**
     * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     */
    lagTimeInSeconds: number;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current state of the Autonomous Database.
     */
    state: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabase {
    adminPassword: string;
    /**
     * Information about Oracle APEX Application Development.
     */
    apexDetails: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseApexDetails;
    arePrimaryWhitelistedIpsUsed: boolean;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousContainerDatabaseId: string;
    autonomousDatabaseBackupId: string;
    autonomousDatabaseId: string;
    /**
     * The maintenance schedule type of the Autonomous Database on shared Exadata infrastructure. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
     */
    autonomousMaintenanceScheduleType: string;
    /**
     * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     */
    availableUpgradeVersions: string[];
    /**
     * Autonomous Database configuration details for storing [manual backups](https://docs.cloud.oracle.com/iaas/Content/Database/Tasks/adbbackingup.htm) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
     */
    backupConfig: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseBackupConfig;
    cloneType: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
     */
    connectionStrings: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseConnectionStrings;
    /**
     * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).  Example: `{"sqlDevWebUrl": "https://<hostname>/ords...", "apexUrl", "https://<hostname>/ords..."}`
     */
    connectionUrls: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseConnectionUrls;
    /**
     * The number of OCPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     */
    cpuCoreCount: number;
    /**
     * Customer Contacts.
     */
    customerContacts: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseCustomerContact[];
    /**
     * Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
     */
    dataSafeStatus: string;
    /**
     * The quantity of data in the database, in gigabytes.
     */
    dataStorageSizeInGb: number;
    /**
     * The quantity of data in the database, in terabytes.
     */
    dataStorageSizeInTbs: number;
    /**
     * The database name.
     */
    dbName: string;
    /**
     * A filter to return only autonomous database resources that match the specified dbVersion.
     */
    dbVersion: string;
    /**
     * A filter to return only autonomous database resources that match the specified workload type.
     */
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Indicates the number of seconds of data loss for a Data Guard failover.
     */
    failedDataRecoveryInSeconds: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * A filter to return only resources that match the given Infrastructure Type.
     */
    infrastructureType: string;
    /**
     * Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
     */
    isAccessControlEnabled: boolean;
    /**
     * Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
     */
    isAutoScalingEnabled: boolean;
    /**
     * A filter to return only resources that have Data Guard enabled.
     */
    isDataGuardEnabled: boolean;
    /**
     * True if the database uses [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
     */
    isDedicated: boolean;
    /**
     * Filter on the value of the resource's 'isFreeTier' property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
     */
    isFreeTier: boolean;
    /**
     * Indicates if the Autonomous Database version is a preview version.
     */
    isPreview: boolean;
    isPreviewVersionWithServiceTermsAccepted: boolean;
    /**
     * Filter on the value of the resource's 'isRefreshableClone' property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
     */
    isRefreshableClone: boolean;
    /**
     * Key History Entry.
     */
    keyHistoryEntries: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseKeyHistoryEntry[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    keyStoreId: string;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    /**
     * KMS key lifecycle details.
     */
    kmsKeyLifecycleDetails: string;
    /**
     * The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     */
    nsgIds: string[];
    /**
     * The number of OCPU cores to be made available to the database.
     */
    ocpuCount: number;
    /**
     * The `DATABASE OPEN` mode. You can open the database in `READ_ONLY` or `READ_WRITE` mode.
     */
    openMode: string;
    /**
     * Status of Operations Insights for this Autonomous Database.
     */
    operationsInsightsStatus: string;
    /**
     * The Autonomous Database permission level. Restricted mode allows access only to admin users.
     */
    permissionLevel: string;
    /**
     * The private endpoint for the resource.
     */
    privateEndpoint: string;
    /**
     * The private endpoint Ip address for the resource.
     */
    privateEndpointIp: string;
    /**
     * The private endpoint label for the resource.
     */
    privateEndpointLabel: string;
    /**
     * The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
     */
    refreshableMode: string;
    /**
     * The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
     */
    refreshableStatus: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    role: string;
    rotateKeyTrigger: boolean;
    serviceConsoleUrl: string;
    source: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that was cloned to create the current Autonomous Database.
     */
    sourceId: string;
    /**
     * Autonomous Data Guard standby database details.
     */
    standbyDb: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabaseStandbyDb;
    /**
     * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     */
    standbyWhitelistedIps: string[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
     */
    subnetId: string;
    switchoverTo: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the Autonomous Database was created.
     */
    timeCreated: string;
    /**
     * The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     */
    timeDeletionOfFreeAutonomousDatabase: string;
    /**
     * The date and time when maintenance will begin.
     */
    timeMaintenanceBegin: string;
    /**
     * The date and time when maintenance will end.
     */
    timeMaintenanceEnd: string;
    /**
     * The timestamp of the last failover operation.
     */
    timeOfLastFailover: string;
    /**
     * The date and time when last refresh happened.
     */
    timeOfLastRefresh: string;
    /**
     * The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     */
    timeOfLastRefreshPoint: string;
    /**
     * The timestamp of the last switchover operation for the Autonomous Database.
     */
    timeOfLastSwitchover: string;
    /**
     * The date and time of next refresh.
     */
    timeOfNextRefresh: string;
    /**
     * The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     */
    timeReclamationOfFreeAutonomousDatabase: string;
    timestamp: string;
    /**
     * The amount of storage that has been used, in terabytes.
     */
    usedDataStorageSizeInTbs: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
    /**
     * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     */
    whitelistedIps: string[];
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseApexDetails {
    /**
     * The Oracle APEX Application Development version.
     */
    apexVersion: string;
    /**
     * The Oracle REST Data Services (ORDS) version.
     * *`arePrimaryWhitelistedIpsUsed` - This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
     */
    ordsVersion: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseBackupConfig {
    /**
     * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
     */
    manualBackupBucketName: string;
    /**
     * The manual backup destination type.
     */
    manualBackupType: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseConnectionStrings {
    /**
     * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    dedicated: string;
    /**
     * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
     */
    high: string;
    /**
     * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    low: string;
    /**
     * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
     */
    medium: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseConnectionUrls {
    /**
     * Oracle Application Express (APEX) URL.
     */
    apexUrl: string;
    /**
     * The URL of the Graph Studio for the Autonomous Database.
     */
    graphStudioUrl: string;
    /**
     * Oracle Machine Learning user management URL.
     */
    machineLearningUserManagementUrl: string;
    /**
     * Oracle SQL Developer Web URL.
     */
    sqlDevWebUrl: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseCustomerContact {
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseKeyHistoryEntry {
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * The date and time the kms key activated.
     */
    timeActivated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseAutonomousDatabasesAutonomousDatabaseStandbyDb {
    /**
     * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     */
    lagTimeInSeconds: number;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabase {
    /**
     * Information about Oracle APEX Application Development.
     */
    apexDetails: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseApexDetails;
    /**
     * This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
     */
    arePrimaryWhitelistedIpsUsed: boolean;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousContainerDatabaseId: string;
    /**
     * The maintenance schedule type of the Autonomous Database on shared Exadata infrastructure. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
     */
    autonomousMaintenanceScheduleType: string;
    /**
     * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     */
    availableUpgradeVersions: string[];
    /**
     * Autonomous Database configuration details for storing [manual backups](https://docs.cloud.oracle.com/iaas/Content/Database/Tasks/adbbackingup.htm) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
     */
    backupConfig: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseBackupConfig;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
     */
    connectionStrings: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseConnectionStrings;
    /**
     * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).  Example: `{"sqlDevWebUrl": "https://<hostname>/ords...", "apexUrl", "https://<hostname>/ords..."}`
     */
    connectionUrls: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseConnectionUrls;
    /**
     * The number of OCPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     */
    cpuCoreCount: number;
    /**
     * Customer Contacts.
     */
    customerContacts: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseCustomerContact[];
    /**
     * Status of the Data Safe registration for this Autonomous Database.
     */
    dataSafeStatus: string;
    /**
     * The quantity of data in the database, in gigabytes.
     */
    dataStorageSizeInGb: number;
    /**
     * The quantity of data in the database, in terabytes.
     */
    dataStorageSizeInTbs: number;
    /**
     * The database name.
     */
    dbName: string;
    /**
     * A valid Oracle Database version for Autonomous Database.
     */
    dbVersion: string;
    /**
     * The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     */
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Indicates the number of seconds of data loss for a Data Guard failover.
     */
    failedDataRecoveryInSeconds: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * The infrastructure type this resource belongs to.
     */
    infrastructureType: string;
    /**
     * Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
     */
    isAccessControlEnabled: boolean;
    /**
     * Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
     */
    isAutoScalingEnabled: boolean;
    /**
     * Indicates whether the Autonomous Database has Data Guard enabled.
     */
    isDataGuardEnabled: boolean;
    /**
     * True if the database uses [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
     */
    isDedicated: boolean;
    /**
     * Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     */
    isFreeTier: boolean;
    /**
     * Indicates if the Autonomous Database version is a preview version.
     */
    isPreview: boolean;
    /**
     * Indicates whether the Autonomous Database is a refreshable clone.
     */
    isRefreshableClone: boolean;
    /**
     * Key History Entry.
     */
    keyHistoryEntries: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseKeyHistoryEntry[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    keyStoreId: string;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    /**
     * KMS key lifecycle details.
     */
    kmsKeyLifecycleDetails: string;
    /**
     * The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     */
    nsgIds: string[];
    /**
     * The number of OCPU cores to be made available to the database.
     */
    ocpuCount: number;
    /**
     * The `DATABASE OPEN` mode. You can open the database in `READ_ONLY` or `READ_WRITE` mode.
     */
    openMode: string;
    /**
     * The private endpoint for the resource.
     */
    privateEndpoint: string;
    /**
     * The private endpoint Ip address for the resource.
     */
    privateEndpointIp: string;
    /**
     * The private endpoint label for the resource. Setting this to an empty string, after the private endpoint database gets created, will change the same private endpoint database to the public endpoint database.
     */
    privateEndpointLabel: string;
    /**
     * The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
     */
    refreshableMode: string;
    /**
     * The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
     */
    refreshableStatus: string;
    /**
     * The Data Guard role of the Autonomous Container Database, if Autonomous Data Guard is enabled.
     */
    role: string;
    /**
     * The URL of the Service Console for the Autonomous Database.
     */
    serviceConsoleUrl: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that was cloned to create the current Autonomous Database.
     */
    sourceId: string;
    /**
     * Autonomous Data Guard standby database details.
     */
    standbyDb: outputs.GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseStandbyDb;
    /**
     * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     */
    standbyWhitelistedIps: string[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
     */
    subnetId: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the Autonomous Database was created.
     */
    timeCreated: string;
    /**
     * The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     */
    timeDeletionOfFreeAutonomousDatabase: string;
    /**
     * The date and time when maintenance will begin.
     */
    timeMaintenanceBegin: string;
    /**
     * The date and time when maintenance will end.
     */
    timeMaintenanceEnd: string;
    /**
     * The timestamp of the last failover operation.
     */
    timeOfLastFailover: string;
    /**
     * The date and time when last refresh happened.
     */
    timeOfLastRefresh: string;
    /**
     * The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     */
    timeOfLastRefreshPoint: string;
    /**
     * The timestamp of the last switchover operation for the Autonomous Database.
     */
    timeOfLastSwitchover: string;
    /**
     * The date and time of next refresh.
     */
    timeOfNextRefresh: string;
    /**
     * The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     */
    timeReclamationOfFreeAutonomousDatabase: string;
    /**
     * The amount of storage that has been used, in terabytes.
     */
    usedDataStorageSizeInTbs: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
    /**
     * The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     */
    whitelistedIps: string[];
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseApexDetails {
    /**
     * The Oracle APEX Application Development version.
     */
    apexVersion: string;
    /**
     * The Oracle REST Data Services (ORDS) version.
     */
    ordsVersion: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseBackupConfig {
    /**
     * Name of [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) bucket to use for storing manual backups.
     */
    manualBackupBucketName: string;
    /**
     * The manual backup destination type.
     */
    manualBackupType: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseConnectionStrings {
    /**
     * Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see [Predefined Database Service Names for Autonomous Transaction Processing](https://docs.oracle.com/en/cloud/paas/atp-cloud/atpug/connect-predefined.html#GUID-9747539B-FD46-44F1-8FF8-F5AC650F15BE)
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    dedicated: string;
    /**
     * The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
     */
    high: string;
    /**
     * The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
     */
    low: string;
    /**
     * The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
     */
    medium: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseConnectionUrls {
    /**
     * Oracle Application Express (APEX) URL.
     */
    apexUrl: string;
    /**
     * The URL of the Graph Studio for the Autonomous Database.
     */
    graphStudioUrl: string;
    /**
     * Oracle Machine Learning user management URL.
     */
    machineLearningUserManagementUrl: string;
    /**
     * Oracle SQL Developer Web URL.
     */
    sqlDevWebUrl: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseCustomerContact {
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseKeyHistoryEntry {
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    id: string;
    /**
     * The date and time the kms key activated.
     */
    timeActivated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseAutonomousDatabasesClonesAutonomousDatabaseStandbyDb {
    /**
     * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     */
    lagTimeInSeconds: number;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
}

export interface GetDatabaseAutonomousDatabasesClonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDbPreviewVersionsAutonomousDbPreviewVersion {
    /**
     * The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     */
    dbWorkload: string;
    /**
     * A URL that points to a detailed description of the preview version.
     */
    details: string;
    /**
     * The date and time when the preview version availability begins.
     */
    timePreviewBegin: string;
    /**
     * The date and time when the preview version availability ends.
     */
    timePreviewEnd: string;
    /**
     * A valid Autonomous Database preview version.
     */
    version: string;
}

export interface GetDatabaseAutonomousDbPreviewVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDbVersionsAutonomousDbVersion {
    /**
     * A filter to return only autonomous database resources that match the specified workload type.
     */
    dbWorkload: string;
    /**
     * A URL that points to a detailed description of the Autonomous Database version.
     */
    details: string;
    /**
     * True if the database uses [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
     */
    isDedicated: boolean;
    /**
     * True if this version of the Oracle Database software's default is free.
     */
    isDefaultForFree: boolean;
    /**
     * True if this version of the Oracle Database software's default is paid.
     */
    isDefaultForPaid: boolean;
    /**
     * True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.
     */
    isFreeTierEnabled: boolean;
    /**
     * True if this version of the Oracle Database software has payments enabled.
     */
    isPaidEnabled: boolean;
    /**
     * A valid Oracle Database version for Autonomous Database.
     */
    version: string;
}

export interface GetDatabaseAutonomousDbVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDetails {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructureOcpuByWorkloadType {
    /**
     * The total number of OCPU cores in use for Autonomous Data Warehouse databases in the infrastructure instance.
     */
    adw: number;
    /**
     * The total number of OCPU cores in use for Autonomous Transaction Processing databases in the infrastructure instance.
     */
    atp: number;
}

export interface GetDatabaseAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape {
    /**
     * The maximum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     */
    availableCoreCount: number;
    /**
     * The increment in which core count can be increased or decreased.
     */
    coreCountIncrement: number;
    /**
     * The maximum number of nodes available for the shape.
     */
    maximumNodeCount: number;
    /**
     * The minimum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     */
    minimumCoreCount: number;
    /**
     * The minimum number of nodes available for the shape.
     */
    minimumNodeCount: number;
    /**
     * The name of the shape used for the Autonomous Exadata Infrastructure.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructureShapesFilter {
    /**
     * The name of the shape used for the Autonomous Exadata Infrastructure.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructure {
    /**
     * A filter to return only resources that match the given availability domain exactly.
     */
    availabilityDomain: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    createAsync: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The domain name for the Autonomous Exadata Infrastructure.
     */
    domain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The host name for the Autonomous Exadata Infrastructure node.
     */
    hostname: string;
    /**
     * The OCID of the Autonomous Exadata Infrastructure.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    lastMaintenanceRunId: string;
    /**
     * The Oracle license model that applies to all databases in the Autonomous Exadata Infrastructure. The default is BRING_YOUR_OWN_LICENSE.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state of the Autonomous Exadata Infrastructure.
     */
    lifecycleDetails: string;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindow;
    maintenanceWindowDetails: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetails;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    nextMaintenanceRunId: string;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     */
    nsgIds: string[];
    /**
     * The FQDN of the DNS record for the SCAN IP addresses that are associated with the Autonomous Exadata Infrastructure.
     */
    scanDnsName: string;
    /**
     * The shape of the Autonomous Exadata Infrastructure. The shape determines resources to allocate to the Autonomous Exadata Infrastructure (CPU cores, memory and storage).
     */
    shape: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The OCID of the subnet the Autonomous Exadata Infrastructure is associated with.
     */
    subnetId: string;
    /**
     * The date and time the Autonomous Exadata Infrastructure was created.
     */
    timeCreated: string;
    /**
     * The OCID of the zone the Autonomous Exadata Infrastructure is associated with.
     */
    zoneId: string;
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetails {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructuresAutonomousExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseAutonomousExadataInfrastructuresFilter {
    /**
     * Name of the month of the year.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousVmClustersAutonomousVmCluster {
    /**
     * The numnber of CPU cores available.
     */
    availableCpus: number;
    /**
     * The data storage available in TBs
     */
    availableDataStorageSizeInTbs: number;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled: number;
    /**
     * The total data storage allocated in TBs
     */
    dataStorageSizeInTbs: number;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * If provided, filters the results for the given Exadata Infrastructure.
     */
    exadataInfrastructureId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
     */
    id: string;
    /**
     * If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
     */
    isLocalBackupEnabled: boolean;
    /**
     * The Oracle license model that applies to the Autonomous VM cluster. The default is LICENSE_INCLUDED.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs: number;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time that the Autonomous VM cluster was created.
     */
    timeCreated: string;
    /**
     * The time zone to use for the Autonomous VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     */
    vmClusterNetworkId: string;
}

export interface GetDatabaseAutonomousVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseBackupDestinationAssociatedDatabase {
    /**
     * The display name of the database that is associated with the backup destination.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
}

export interface GetDatabaseBackupDestinationMountTypeDetails {
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     */
    localMountPointPath: string;
    mountType: string;
    /**
     * Specifies the directory on which to mount the file system
     */
    nfsServerExport: string;
    /**
     * Host names or IP addresses for NFS Auto mount.
     */
    nfsServers: string[];
}

export interface GetDatabaseBackupDestinationsBackupDestination {
    /**
     * List of databases associated with the backup destination.
     */
    associatedDatabases: outputs.GetDatabaseBackupDestinationsBackupDestinationAssociatedDatabase[];
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the connection string for connecting to the Recovery Appliance.
     */
    connectionString: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The user-provided name of the backup destination.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text
     */
    lifecycleDetails: string;
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     *
     * @deprecated The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
     */
    localMountPointPath: string;
    mountTypeDetails: outputs.GetDatabaseBackupDestinationsBackupDestinationMountTypeDetails;
    /**
     * NFS Mount type for backup destination.
     */
    nfsMountType: string;
    /**
     * Specifies the directory on which to mount the file system
     */
    nfsServerExport: string;
    /**
     * Host names or IP addresses for NFS Auto mount.
     */
    nfsServers: string[];
    /**
     * The current lifecycle state of the backup destination.
     */
    state: string;
    /**
     * The date and time the backup destination was created.
     */
    timeCreated: string;
    /**
     * A filter to return only resources that match the given type of the Backup Destination.
     */
    type: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     */
    vpcUsers: string[];
}

export interface GetDatabaseBackupDestinationsBackupDestinationAssociatedDatabase {
    /**
     * The display name of the database that is associated with the backup destination.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    id: string;
}

export interface GetDatabaseBackupDestinationsBackupDestinationMountTypeDetails {
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     */
    localMountPointPath: string;
    mountType: string;
    /**
     * Specifies the directory on which to mount the file system
     */
    nfsServerExport: string;
    /**
     * Host names or IP addresses for NFS Auto mount.
     */
    nfsServers: string[];
}

export interface GetDatabaseBackupDestinationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseBackupsBackup {
    /**
     * The name of the availability domain where the database backup is stored.
     */
    availabilityDomain: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The Oracle Database edition of the DB system from which the database backup was taken.
     */
    databaseEdition: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    databaseId: string;
    /**
     * The size of the database in gigabytes at the time the backup was taken.
     */
    databaseSizeInGbs: number;
    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
     */
    id: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * Shape of the backup's source database.
     */
    shape: string;
    /**
     * The current state of the backup.
     */
    state: string;
    /**
     * The date and time the backup was completed.
     */
    timeEnded: string;
    /**
     * The date and time the backup started.
     */
    timeStarted: string;
    /**
     * The type of backup.
     */
    type: string;
    /**
     * Version of the backup's source database
     */
    version: string;
}

export interface GetDatabaseBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudExadataInfrastructureCustomerContact {
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface GetDatabaseCloudExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseCloudExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseCloudExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructure {
    /**
     * The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     */
    availabilityDomain: string;
    /**
     * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     */
    availableStorageSizeInGbs: number;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The number of compute servers for the cloud Exadata infrastructure.
     */
    computeCount: number;
    /**
     * The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     */
    customerContacts: outputs.GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    lastMaintenanceRunId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow: outputs.GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    nextMaintenanceRunId: string;
    /**
     * The model name of the cloud Exadata infrastructure resource.
     */
    shape: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The number of storage servers for the cloud Exadata infrastructure.
     */
    storageCount: number;
    /**
     * The date and time the cloud Exadata infrastructure resource was created.
     */
    timeCreated: string;
    /**
     * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     */
    totalStorageSizeInGbs: number;
}

export interface GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact {
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure.
     */
    email: string;
}

export interface GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseCloudExadataInfrastructuresFilter {
    /**
     * Name of the month of the year.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudVmClusterIormConfigCache {
    /**
     * An array of IORM settings for all the database in the Exadata DB system.
     */
    dbPlans: outputs.GetDatabaseCloudVmClusterIormConfigCacheDbPlan[];
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current value for the IORM objective. The default is `AUTO`.
     */
    objective: string;
    /**
     * The current state of the cloud VM cluster.
     */
    state: string;
}

export interface GetDatabaseCloudVmClusterIormConfigCacheDbPlan {
    /**
     * The database name. For the default `DbPlan`, the `dbName` is `default`.
     */
    dbName: string;
    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     */
    flashCacheLimit: string;
    /**
     * The relative priority of this database.
     */
    share: number;
}

export interface GetDatabaseCloudVmClustersCloudVmCluster {
    /**
     * The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     */
    availabilityDomain: string;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     */
    backupNetworkNsgIds: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the cloud VM cluster.
     */
    backupSubnetId: string;
    /**
     * If provided, filters the results for the specified cloud Exadata infrastructure.
     */
    cloudExadataInfrastructureId: string;
    /**
     * The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     */
    clusterName: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The number of CPU cores enabled on the cloud VM cluster.
     */
    cpuCoreCount: number;
    createAsync: boolean;
    /**
     * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
     */
    dataStoragePercentage: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     */
    diskRedundancy: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The domain name for the cloud VM cluster.
     */
    domain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A valid Oracle Grid Infrastructure (GI) software version.
     */
    giVersion: string;
    /**
     * The hostname for the cloud VM cluster.
     */
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
     */
    id: string;
    iormConfigCache: outputs.GetDatabaseCloudVmClustersCloudVmClusterIormConfigCache;
    /**
     * If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
     */
    isLocalBackupEnabled: boolean;
    /**
     * If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
     */
    isSparseDiskgroupEnabled: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     */
    lastUpdateHistoryEntryId: string;
    /**
     * The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The port number configured for the listener on the cloud VM cluster.
     */
    listenerPort: string;
    /**
     * The number of nodes in the cloud VM cluster.
     */
    nodeCount: number;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     */
    nsgIds: string[];
    /**
     * The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     */
    scanDnsName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     */
    scanDnsRecordId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     */
    scanIpIds: string[];
    /**
     * The model name of the Exadata hardware running the cloud VM cluster.
     */
    shape: string;
    /**
     * The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
     */
    sshPublicKeys: string[];
    /**
     * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The storage allocation for the disk group, in gigabytes (GB).
     */
    storageSizeInGbs: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the cloud VM cluster.
     */
    subnetId: string;
    /**
     * Operating system version of the image.
     */
    systemVersion: string;
    /**
     * The date and time that the cloud VM cluster was created.
     */
    timeCreated: string;
    /**
     * The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     */
    vipIds: string[];
    /**
     * The OCID of the zone the cloud VM cluster is associated with.
     */
    zoneId: string;
}

export interface GetDatabaseCloudVmClustersCloudVmClusterIormConfigCache {
    dbPlans: outputs.GetDatabaseCloudVmClustersCloudVmClusterIormConfigCacheDbPlan[];
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    objective: string;
    /**
     * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     */
    state: string;
}

export interface GetDatabaseCloudVmClustersCloudVmClusterIormConfigCacheDbPlan {
    dbName: string;
    flashCacheLimit: string;
    share: number;
}

export interface GetDatabaseCloudVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDataGuardAssociationsDataGuardAssociation {
    /**
     * The lag time between updates to the primary database and application of the redo data on the standby database, as computed by the reporting database.  Example: `9 seconds`
     */
    applyLag: string;
    /**
     * The rate at which redo logs are synced between the associated databases.  Example: `180 Mb per second`
     */
    applyRate: string;
    availabilityDomain: string;
    backupNetworkNsgIds: string[];
    createAsync: boolean;
    creationType: string;
    databaseAdminPassword: string;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: string;
    databaseSoftwareImageId: string;
    deleteStandbyDbHomeOnDelete: string;
    displayName: string;
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Data Guard association.
     */
    id: string;
    /**
     * Additional information about the current lifecycleState, if available.
     */
    lifecycleDetails: string;
    nsgIds: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer database's Data Guard association.
     */
    peerDataGuardAssociationId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated peer database.
     */
    peerDatabaseId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home containing the associated peer database.
     */
    peerDbHomeId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system containing the associated peer database.
     */
    peerDbSystemId: string;
    /**
     * The role of the peer database in this Data Guard association.
     */
    peerRole: string;
    peerVmClusterId: string;
    /**
     * The protection mode of this Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
     */
    protectionMode: string;
    /**
     * The role of the reporting database in this Data Guard association.
     */
    role: string;
    shape: string;
    /**
     * The current state of the Data Guard association.
     */
    state: string;
    subnetId: string;
    /**
     * The date and time the Data Guard association was created.
     */
    timeCreated: string;
    /**
     * The redo transport type used by this Data Guard association.  For more information, see [Redo Transport Services](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-redo-transport-services.htm#SBYDB00400) in the Oracle Data Guard documentation.
     */
    transportType: string;
}

export interface GetDatabaseDataGuardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the Database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * Host name based CDB Connection String.
     */
    cdbDefault: string;
    /**
     * IP based CDB Connection String.
     */
    cdbIpDefault: string;
}

export interface GetDatabaseDatabaseDatabase {
    adminPassword: string;
    backupId: string;
    backupTdePassword: string;
    /**
     * The character set for the database.
     */
    characterSet: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    /**
     * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.GetDatabaseDatabaseDatabaseDbBackupConfig;
    /**
     * The database name.
     */
    dbName: string;
    /**
     * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
     */
    dbUniqueName: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The national character set for the database.
     */
    ncharacterSet: string;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    tdeWalletPassword: string;
}

export interface GetDatabaseDatabaseDatabaseDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface GetDatabaseDatabaseDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface GetDatabaseDatabaseSoftwareImagesDatabaseSoftwareImage {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * List of one-off patches for Database Homes.
     */
    databaseSoftwareImageIncludedPatches: string[];
    /**
     * List of one-off patches for Database Homes.
     */
    databaseSoftwareImageOneOffPatches: string[];
    /**
     * The database version with which the database software image is to be built.
     */
    databaseVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
     */
    id: string;
    /**
     * A filter to return only resources that match the given image shape family exactly.
     */
    imageShapeFamily: string;
    /**
     * A filter to return only resources that match the given image type exactly.
     */
    imageType: string;
    /**
     * The patches included in the image and the version of the image
     */
    includedPatchesSummary: string;
    /**
     * If provided, filters the results to the set of database versions which are supported for Upgrade.
     */
    isUpgradeSupported: boolean;
    /**
     * Detailed message for the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * output from lsinventory which will get passed as a string
     */
    lsInventory: string;
    /**
     * The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     */
    patchSet: string;
    sourceDbHomeId: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the database software image was created.
     */
    timeCreated: string;
}

export interface GetDatabaseDatabaseSoftwareImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabaseUpgradeHistoryEntriesDatabaseUpgradeHistoryEntry {
    /**
     * The database upgrade action.
     */
    action: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database upgrade history.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * Additional upgrade options supported by DBUA(Database Upgrade Assistant). Example: "-upgradeTimezone false -keepEvents"
     */
    options: string;
    /**
     * The source of the Oracle Database software to be used for the upgrade.
     * * Use `DB_VERSION` to specify a generally-available Oracle Database software version to upgrade the database.
     * * Use `DB_SOFTWARE_IMAGE` to specify a [database software image](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/databasesoftwareimage.htm) to upgrade the database.
     */
    source: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    sourceDbHomeId: string;
    /**
     * A filter to return only upgradeHistoryEntries that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * the database software image used for upgrading database.
     */
    targetDatabaseSoftwareImageId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    targetDbHomeId: string;
    /**
     * A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     */
    targetDbVersion: string;
    /**
     * The date and time when the database upgrade ended.
     */
    timeEnded: string;
    /**
     * The date and time when the database upgrade started.
     */
    timeStarted: string;
}

export interface GetDatabaseDatabaseUpgradeHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabasesDatabase {
    /**
     * The character set for the database.
     */
    characterSet: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The Connection strings used to connect to the Oracle Database.
     */
    connectionStrings: outputs.GetDatabaseDatabasesDatabaseConnectionStrings;
    database: outputs.GetDatabaseDatabasesDatabaseDatabase;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    /**
     * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.GetDatabaseDatabasesDatabaseDbBackupConfig;
    /**
     * A Database Home [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). *Note: Either `dbHomeId` or `systemId` is required to make the LIST API call.
     */
    dbHomeId: string;
    /**
     * A filter to return only resources that match the entire database name given. The match is not case sensitive.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    dbSystemId: string;
    /**
     * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
     */
    dbUniqueName: string;
    dbVersion: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    kmsKeyMigration: boolean;
    kmsKeyRotation: number;
    kmsKeyVersionId: string;
    /**
     * The date and time when the latest database backup was created.
     */
    lastBackupTimestamp: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character set for the database.
     */
    ncharacterSet: string;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    source: string;
    /**
     * Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    sourceDatabasePointInTimeRecoveryTimestamp: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the database was created.
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    vmClusterId: string;
}

export interface GetDatabaseDatabasesDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the Database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * Host name based CDB Connection String.
     */
    cdbDefault: string;
    /**
     * IP based CDB Connection String.
     */
    cdbIpDefault: string;
}

export interface GetDatabaseDatabasesDatabaseDatabase {
    adminPassword: string;
    backupId: string;
    backupTdePassword: string;
    /**
     * The character set for the database.
     */
    characterSet: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    /**
     * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfig: outputs.GetDatabaseDatabasesDatabaseDatabaseDbBackupConfig;
    /**
     * A filter to return only resources that match the entire database name given. The match is not case sensitive.
     */
    dbName: string;
    /**
     * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
     */
    dbUniqueName: string;
    /**
     * The database workload type.
     */
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The national character set for the database.
     */
    ncharacterSet: string;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName: string;
    tdeWalletPassword: string;
}

export interface GetDatabaseDatabasesDatabaseDatabaseDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseDatabasesDatabaseDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseDatabasesDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface GetDatabaseDatabasesDatabaseDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    autoBackupEnabled: boolean;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     */
    autoBackupWindow: string;
    /**
     * Backup destination details.
     */
    backupDestinationDetails: outputs.GetDatabaseDatabasesDatabaseDbBackupConfigBackupDestinationDetail[];
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     */
    recoveryWindowInDays: number;
}

export interface GetDatabaseDatabasesDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    id: string;
    /**
     * Type of the database backup destination.
     */
    type: string;
}

export interface GetDatabaseDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomeDatabase {
    adminPassword: string;
    backupId: string;
    backupTdePassword: string;
    characterSet: string;
    connectionStrings: outputs.GetDatabaseDbHomeDatabaseConnectionString[];
    databaseId: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    dbBackupConfig: outputs.GetDatabaseDbHomeDatabaseDbBackupConfig;
    dbName: string;
    dbUniqueName: string;
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    ncharacterSet: string;
    /**
     * List of one-off patches for Database Homes.
     */
    oneOffPatches: string[];
    pdbName: string;
    /**
     * The current state of the Database Home.
     */
    state: string;
    tdeWalletPassword: string;
    /**
     * The date and time the Database Home was created.
     */
    timeCreated: string;
    timeStampForPointInTimeRecovery: string;
}

export interface GetDatabaseDbHomeDatabaseConnectionString {
    allConnectionStrings: {[key: string]: any};
    cdbDefault: string;
    cdbIpDefault: string;
}

export interface GetDatabaseDbHomeDatabaseDbBackupConfig {
    autoBackupEnabled: boolean;
    autoBackupWindow: string;
    backupDestinationDetails: outputs.GetDatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
    recoveryWindowInDays: number;
}

export interface GetDatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    id: string;
    type: string;
}

export interface GetDatabaseDbHomePatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomePatchHistoryEntriesPatchHistoryEntry {
    /**
     * The action being performed or was completed.
     */
    action: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
     */
    id: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    patchId: string;
    /**
     * The current state of the action.
     */
    state: string;
    /**
     * The date and time when the patch action completed
     */
    timeEnded: string;
    /**
     * The date and time when the patch action started.
     */
    timeStarted: string;
}

export interface GetDatabaseDbHomePatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomePatchesPatch {
    /**
     * Actions that can possibly be performed using this patch.
     */
    availableActions: string[];
    /**
     * The text describing this patch package.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    id: string;
    /**
     * Action that is currently being performed or was completed last.
     */
    lastAction: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The current state of the patch as a result of lastAction.
     */
    state: string;
    /**
     * The date and time that the patch was released.
     */
    timeReleased: string;
    /**
     * The version of this patch package.
     */
    version: string;
}

export interface GetDatabaseDbHomesDbHome {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    database: outputs.GetDatabaseDbHomesDbHomeDatabase;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    dbHomeId: string;
    /**
     * The location of the Oracle Database Home.
     */
    dbHomeLocation: string;
    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     */
    dbSystemId: string;
    /**
     * A filter to return only DB Homes that match the specified dbVersion.
     */
    dbVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    id: string;
    isDesupportedVersion: boolean;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    kmsKeyVersionId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
     */
    lastPatchHistoryEntryId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    source: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the Database Home was created.
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    vmClusterId: string;
}

export interface GetDatabaseDbHomesDbHomeDatabase {
    adminPassword: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
     */
    backupId: string;
    backupTdePassword: string;
    characterSet: string;
    connectionStrings: outputs.GetDatabaseDbHomesDbHomeDatabaseConnectionString[];
    databaseId: string;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId: string;
    dbBackupConfig: outputs.GetDatabaseDbHomesDbHomeDatabaseDbBackupConfig;
    dbName: string;
    dbUniqueName: string;
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    ncharacterSet: string;
    /**
     * List of one-off patches for Database Homes.
     */
    oneOffPatches: string[];
    pdbName: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    tdeWalletPassword: string;
    /**
     * The date and time the Database Home was created.
     */
    timeCreated: string;
    timeStampForPointInTimeRecovery: string;
}

export interface GetDatabaseDbHomesDbHomeDatabaseConnectionString {
    allConnectionStrings: {[key: string]: any};
    cdbDefault: string;
    cdbIpDefault: string;
}

export interface GetDatabaseDbHomesDbHomeDatabaseDbBackupConfig {
    autoBackupEnabled: boolean;
    autoBackupWindow: string;
    backupDestinationDetails: outputs.GetDatabaseDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
    recoveryWindowInDays: number;
}

export interface GetDatabaseDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    id: string;
    type: string;
}

export interface GetDatabaseDbHomesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbNodeConsoleConnectionsConsoleConnection {
    /**
     * The OCID of the compartment to contain the console connection.
     */
    compartmentId: string;
    /**
     * The SSH connection string for the console connection.
     */
    connectionString: string;
    /**
     * The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbNodeId: string;
    /**
     * The SSH public key fingerprint for the console connection.
     */
    fingerprint: string;
    /**
     * The OCID of the console connection.
     */
    id: string;
    publicKey: string;
    /**
     * The current state of the console connection.
     */
    state: string;
}

export interface GetDatabaseDbNodeConsoleConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbNodesDbNode {
    /**
     * Additional information about the planned maintenance.
     */
    additionalDetails: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node.
     */
    backupIpId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     */
    backupVnic2id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     */
    backupVnicId: string;
    dbNodeId: string;
    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     */
    dbSystemId: string;
    /**
     * The name of the Fault Domain the instance is contained in.
     */
    faultDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node.
     */
    hostIpId: string;
    /**
     * The host name for the database node.
     */
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database node.
     */
    id: string;
    /**
     * The type of database node maintenance.
     */
    maintenanceType: string;
    /**
     * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     */
    softwareStorageSizeInGb: number;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time that the database node was created.
     */
    timeCreated: string;
    /**
     * End date and time of maintenance window.
     */
    timeMaintenanceWindowEnd: string;
    /**
     * Start date and time of maintenance window.
     */
    timeMaintenanceWindowStart: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     */
    vnic2id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     */
    vnicId: string;
}

export interface GetDatabaseDbNodesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemPatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemPatchHistoryEntriesPatchHistoryEntry {
    /**
     * The action being performed or was completed.
     */
    action: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
     */
    id: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    patchId: string;
    /**
     * The current state of the action.
     */
    state: string;
    /**
     * The date and time when the patch action completed
     */
    timeEnded: string;
    /**
     * The date and time when the patch action started.
     */
    timeStarted: string;
}

export interface GetDatabaseDbSystemPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemPatchesPatch {
    /**
     * Actions that can possibly be performed using this patch.
     */
    availableActions: string[];
    /**
     * The text describing this patch package.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    id: string;
    /**
     * Action that is currently being performed or was completed last.
     */
    lastAction: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The current state of the patch as a result of lastAction.
     */
    state: string;
    /**
     * The date and time that the patch was released.
     */
    timeReleased: string;
    /**
     * The version of this patch package.
     */
    version: string;
}

export interface GetDatabaseDbSystemShapesDbSystemShape {
    /**
     * The maximum number of CPU cores that can be enabled on the DB system for this shape.
     */
    availableCoreCount: number;
    /**
     * The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.
     */
    availableCoreCountPerNode: number;
    /**
     * The maximum DATA storage that can be enabled for this shape.
     */
    availableDataStorageInTbs: number;
    /**
     * The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
     */
    availableDataStoragePerServerInTbs: number;
    /**
     * The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
     */
    availableDbNodePerNodeInGbs: number;
    /**
     * The maximum Db Node storage that can be enabled for this shape.
     */
    availableDbNodeStorageInGbs: number;
    /**
     * The maximum memory that can be enabled for this shape.
     */
    availableMemoryInGbs: number;
    /**
     * The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
     */
    availableMemoryPerNodeInGbs: number;
    /**
     * The discrete number by which the CPU core count for this shape can be increased or decreased.
     */
    coreCountIncrement: number;
    /**
     * The maximum number of Exadata storage servers available for the Exadata infrastructure.
     */
    maxStorageCount: number;
    /**
     * The maximum number of database nodes available for this shape.
     */
    maximumNodeCount: number;
    /**
     * The minimum number of CPU cores that can be enabled per node for this shape.
     */
    minCoreCountPerNode: number;
    /**
     * The minimum data storage that need be allocated for this shape.
     */
    minDataStorageInTbs: number;
    /**
     * The minimum Db Node storage that need be allocated per node for this shape.
     */
    minDbNodeStoragePerNodeInGbs: number;
    /**
     * The minimum memory that need be allocated per node for this shape.
     */
    minMemoryPerNodeInGbs: number;
    /**
     * The minimum number of Exadata storage servers available for the Exadata infrastructure.
     */
    minStorageCount: number;
    /**
     * The minimum number of CPU cores that can be enabled on the DB system for this shape.
     */
    minimumCoreCount: number;
    /**
     * The minimum number of database nodes available for this shape.
     */
    minimumNodeCount: number;
    /**
     * The name of the shape used for the DB system.
     */
    name: string;
    /**
     * Deprecated. Use `name` instead of `shape`.
     *
     * @deprecated The 'shape' field has been deprecated. Please use 'name' instead.
     */
    shape: string;
    /**
     * The family of the shape used for the DB system.
     */
    shapeFamily: string;
}

export interface GetDatabaseDbSystemShapesFilter {
    /**
     * The name of the shape used for the DB system.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemsDbSystem {
    /**
     * A filter to return only resources that match the given availability domain exactly.
     */
    availabilityDomain: string;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     */
    backupNetworkNsgIds: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
     */
    backupSubnetId: string;
    /**
     * The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     */
    clusterName: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The number of CPU cores enabled on the DB system.
     */
    cpuCoreCount: number;
    /**
     * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
     */
    dataStoragePercentage: number;
    /**
     * The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
     */
    dataStorageSizeInGb: number;
    /**
     * The Oracle Database edition that applies to all the databases on the DB system.
     */
    databaseEdition: string;
    dbHome: outputs.GetDatabaseDbSystemsDbSystemDbHome;
    /**
     * The DB system options.
     */
    dbSystemOptions: outputs.GetDatabaseDbSystemsDbSystemDbSystemOptions;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     */
    diskRedundancy: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The domain name for the DB system.
     */
    domain: string;
    /**
     * List of the Fault Domains in which this DB system is provisioned.
     */
    faultDomains: string[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the DB system.
     */
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    id: string;
    iormConfigCache: outputs.GetDatabaseDbSystemsDbSystemIormConfigCache;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId: string;
    kmsKeyVersionId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    lastMaintenanceRunId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     */
    lastPatchHistoryEntryId: string;
    /**
     * The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The port number configured for the listener on the DB system.
     */
    listenerPort: number;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindow;
    maintenanceWindowDetails: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindowDetails;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    nextMaintenanceRunId: string;
    /**
     * The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
     */
    nodeCount: number;
    /**
     * A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     */
    nsgIds: string[];
    /**
     * The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    pointInTimeDataDiskCloneTimestamp: string;
    privateIp: string;
    /**
     * The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
     */
    recoStorageSizeInGb: number;
    /**
     * The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
     */
    scanDnsName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
     */
    scanDnsRecordId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     */
    scanIpIds: string[];
    /**
     * The shape of the DB system. The shape determines resources to allocate to the DB system.
     * * For virtual machine shapes, the number of CPU cores and memory
     * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
     */
    shape: string;
    source: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    sourceDbSystemId: string;
    /**
     * True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
     */
    sparseDiskgroup: boolean;
    /**
     * The public key portion of one or more key pairs used for SSH access to the DB system.
     */
    sshPublicKeys: string[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
     */
    subnetId: string;
    /**
     * The date and time the DB system was created.
     */
    timeCreated: string;
    /**
     * The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: string;
    /**
     * The Oracle Database version of the DB system.
     */
    version: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     */
    vipIds: string[];
    /**
     * The OCID of the zone the DB system is associated with.
     */
    zoneId: string;
}

export interface GetDatabaseDbSystemsDbSystemDbHome {
    createAsync: boolean;
    database: outputs.GetDatabaseDbSystemsDbSystemDbHomeDatabase;
    databaseSoftwareImageId: string;
    dbHomeLocation: string;
    dbVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     */
    lastPatchHistoryEntryId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the DB system was created.
     */
    timeCreated: string;
}

export interface GetDatabaseDbSystemsDbSystemDbHomeDatabase {
    adminPassword: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
     */
    backupId: string;
    backupTdePassword: string;
    characterSet: string;
    connectionStrings: outputs.GetDatabaseDbSystemsDbSystemDbHomeDatabaseConnectionString[];
    databaseId: string;
    databaseSoftwareImageId: string;
    dbBackupConfig: outputs.GetDatabaseDbSystemsDbSystemDbHomeDatabaseDbBackupConfig;
    dbDomain: string;
    dbName: string;
    dbUniqueName: string;
    dbWorkload: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    ncharacterSet: string;
    pdbName: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    tdeWalletPassword: string;
    /**
     * The date and time the DB system was created.
     */
    timeCreated: string;
    timeStampForPointInTimeRecovery: string;
}

export interface GetDatabaseDbSystemsDbSystemDbHomeDatabaseConnectionString {
    allConnectionStrings: {[key: string]: any};
    cdbDefault: string;
    cdbIpDefault: string;
}

export interface GetDatabaseDbSystemsDbSystemDbHomeDatabaseDbBackupConfig {
    autoBackupEnabled: boolean;
    autoBackupWindow: string;
    backupDestinationDetails: outputs.GetDatabaseDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail[];
    recoveryWindowInDays: number;
}

export interface GetDatabaseDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    id: string;
    type: string;
}

export interface GetDatabaseDbSystemsDbSystemDbSystemOptions {
    /**
     * The storage option used in DB system. ASM - Automatic storage management LVM - Logical Volume management
     */
    storageManagement: string;
}

export interface GetDatabaseDbSystemsDbSystemIormConfigCache {
    dbPlans: outputs.GetDatabaseDbSystemsDbSystemIormConfigCacheDbPlan[];
    dbSystemId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    objective: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
}

export interface GetDatabaseDbSystemsDbSystemIormConfigCacheDbPlan {
    dbName: string;
    flashCacheLimit: string;
    share: number;
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindowDetails {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindowDetailsDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseDbSystemsDbSystemMaintenanceWindowDetailsMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindowDetailsDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindowDetailsMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseDbSystemsDbSystemMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseDbSystemsFilter {
    /**
     * Name of the month of the year.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbVersionsDbVersion {
    /**
     * True if this version of the Oracle Database software is the latest version for a release.
     */
    isLatestForMajorVersion: boolean;
    /**
     * True if this version of the Oracle Database software is the preview version.
     */
    isPreviewDbVersion: boolean;
    /**
     * If provided, filters the results to the set of database versions which are supported for Upgrade.
     */
    isUpgradeSupported: boolean;
    /**
     * True if this version of the Oracle Database software supports pluggable databases.
     */
    supportsPdb: boolean;
    /**
     * A valid Oracle Database version.
     */
    version: string;
}

export interface GetDatabaseDbVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadataInfrastructureContact {
    /**
     * The email for the Exadata Infrastructure contact.
     */
    email: string;
    /**
     * If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
     */
    isContactMosValidated: boolean;
    /**
     * If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
     */
    isPrimary: boolean;
    /**
     * Name of the month of the year.
     */
    name: string;
    /**
     * The phone number for the Exadata Infrastructure contact.
     */
    phoneNumber: string;
}

export interface GetDatabaseExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseExadataInfrastructuresExadataInfrastructure {
    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    activatedStorageCount: number;
    activationFile: string;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     */
    additionalStorageCount: number;
    /**
     * The CIDR block for the Exadata administration network.
     */
    adminNetworkCidr: string;
    /**
     * The IP address for the first control plane server.
     */
    cloudControlPlaneServer1: string;
    /**
     * The IP address for the second control plane server.
     */
    cloudControlPlaneServer2: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    computeCount: number;
    /**
     * The list of contacts for the Exadata infrastructure.
     */
    contacts: outputs.GetDatabaseExadataInfrastructuresExadataInfrastructureContact[];
    /**
     * The corporate network proxy for access to the control plane network.
     */
    corporateProxy: string;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled: number;
    createAsync: boolean;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    csiNumber: string;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    dataStorageSizeInTbs: number;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dnsServers: string[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The gateway for the control plane network.
     */
    gateway: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     */
    id: string;
    /**
     * The CIDR block for the Exadata InfiniBand interconnect.
     */
    infiniBandNetworkCidr: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    maintenanceSloStatus: string;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow: outputs.GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindow;
    /**
     * The total number of CPU cores available.
     */
    maxCpuCount: number;
    /**
     * The total available DATA disk group size.
     */
    maxDataStorageInTbs: number;
    /**
     * The total local node storage available in GBs.
     */
    maxDbNodeStorageInGbs: number;
    /**
     * The total memory available in GBs.
     */
    maxMemoryInGbs: number;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs: number;
    /**
     * The netmask for the control plane network.
     */
    netmask: string;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntpServers: string[];
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The number of Exadata storage servers for the Exadata infrastructure.
     */
    storageCount: number;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    timeCreated: string;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: string;
}

export interface GetDatabaseExadataInfrastructuresExadataInfrastructureContact {
    /**
     * The email for the Exadata Infrastructure contact.
     */
    email: string;
    /**
     * If `true`, this Exadata Infrastructure contact is a valid My Oracle Support (MOS) contact. If `false`, this Exadata Infrastructure contact is not a valid MOS contact.
     */
    isContactMosValidated: boolean;
    /**
     * If `true`, this Exadata Infrastructure contact is a primary contact. If `false`, this Exadata Infrastructure is a secondary contact.
     */
    isPrimary: boolean;
    /**
     * Name of the month of the year.
     */
    name: string;
    /**
     * The phone number for the Exadata Infrastructure contact.
     */
    phoneNumber: string;
}

export interface GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindow {
    /**
     * Days during the week when maintenance should be performed.
     */
    daysOfWeeks: outputs.GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindowDaysOfWeek[];
    /**
     * The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
     * * 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC
     */
    hoursOfDays: number[];
    /**
     * Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4.
     */
    leadTimeInWeeks: number;
    /**
     * Months during the year when maintenance should be performed.
     */
    months: outputs.GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindowMonth[];
    /**
     * The maintenance window scheduling preference.
     */
    preference: string;
    /**
     * Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
     */
    weeksOfMonths: number[];
}

export interface GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindowDaysOfWeek {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseExadataInfrastructuresExadataInfrastructureMaintenanceWindowMonth {
    /**
     * Name of the month of the year.
     */
    name: string;
}

export interface GetDatabaseExadataInfrastructuresFilter {
    /**
     * Name of the month of the year.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadataIormConfigDbPlan {
    /**
     * The database name. For the default `DbPlan`, the `dbName` is `default`.
     */
    dbName: string;
    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     */
    flashCacheLimit: string;
    /**
     * The relative priority of this database.
     */
    share: number;
}

export interface GetDatabaseExternalContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalContainerDatabasesExternalContainerDatabase {
    /**
     * The character set of the external database.
     */
    characterSet: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The Oracle Database configuration
     */
    databaseConfiguration: string;
    /**
     * The Oracle Database edition.
     */
    databaseEdition: string;
    /**
     * The configuration of the Database Management service.
     */
    databaseManagementConfig: outputs.GetDatabaseExternalContainerDatabasesExternalContainerDatabaseDatabaseManagementConfig;
    /**
     * The Oracle Database version.
     */
    databaseVersion: string;
    /**
     * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
     */
    dbId: string;
    /**
     * The database packs licensed for the external Oracle Database.
     */
    dbPacks: string;
    /**
     * The `DB_UNIQUE_NAME` of the external database.
     */
    dbUniqueName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character of the external database.
     */
    ncharacterSet: string;
    /**
     * A filter to return only resources that match the specified lifecycle state.
     */
    state: string;
    /**
     * The date and time the database was created.
     */
    timeCreated: string;
    /**
     * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
     */
    timeZone: string;
}

export interface GetDatabaseExternalContainerDatabasesExternalContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalContainerDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalDatabaseConnectorConnectionCredentials {
    /**
     * The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
     */
    credentialName: string;
    /**
     * The type of credential used to connect to the database.
     */
    credentialType: string;
    /**
     * The password that will be used to connect to the database.
     */
    password: string;
    /**
     * The role of the user that will be connecting to the database.
     */
    role: string;
    /**
     * The username that will be used to connect to the database.
     */
    username: string;
}

export interface GetDatabaseExternalDatabaseConnectorConnectionString {
    /**
     * The host name of the database.
     */
    hostname: string;
    /**
     * The port used to connect to the database.
     */
    port: number;
    /**
     * The protocol used to connect to the database.
     */
    protocol: string;
    /**
     * The name of the service alias used to connect to the database.
     */
    service: string;
}

export interface GetDatabaseExternalDatabaseConnectorsExternalDatabaseConnector {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     */
    connectionCredentials: outputs.GetDatabaseExternalDatabaseConnectorsExternalDatabaseConnectorConnectionCredentials;
    /**
     * The status of connectivity to the external database.
     */
    connectionStatus: string;
    /**
     * The Oracle Database connection string.
     */
    connectionString: outputs.GetDatabaseExternalDatabaseConnectorsExternalDatabaseConnectorConnectionString;
    /**
     * The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    connectorAgentId: string;
    /**
     * The type of connector used by the external database resource.
     */
    connectorType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database whose connectors will be listed.
     */
    externalDatabaseId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the specified lifecycle state.
     */
    state: string;
    /**
     * The date and time the `connectionStatus` of this external connector was last updated.
     */
    timeConnectionStatusLastUpdated: string;
    /**
     * The date and time the external connector was created.
     */
    timeCreated: string;
}

export interface GetDatabaseExternalDatabaseConnectorsExternalDatabaseConnectorConnectionCredentials {
    /**
     * The name of the credential information that used to connect to the database. The name should be in "x.y" format, where the length of "x" has a maximum of 64 characters, and length of "y" has a maximum of 199 characters. The name strings can contain letters, numbers and the underscore character only. Other characters are not valid, except for the "." character that separates the "x" and "y" portions of the name. *IMPORTANT* - The name must be unique within the Oracle Cloud Infrastructure region the credential is being created in. If you specify a name that duplicates the name of another credential within the same Oracle Cloud Infrastructure region, you may overwrite or corrupt the credential that is already using the name.
     */
    credentialName: string;
    /**
     * The type of credential used to connect to the database.
     */
    credentialType: string;
    /**
     * The password that will be used to connect to the database.
     */
    password: string;
    /**
     * The role of the user that will be connecting to the database.
     */
    role: string;
    /**
     * The username that will be used to connect to the database.
     */
    username: string;
}

export interface GetDatabaseExternalDatabaseConnectorsExternalDatabaseConnectorConnectionString {
    /**
     * The host name of the database.
     */
    hostname: string;
    /**
     * The port used to connect to the database.
     */
    port: number;
    /**
     * The protocol used to connect to the database.
     */
    protocol: string;
    /**
     * The name of the service alias used to connect to the database.
     */
    service: string;
}

export interface GetDatabaseExternalDatabaseConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalNonContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalNonContainerDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface GetDatabaseExternalNonContainerDatabasesExternalNonContainerDatabase {
    /**
     * The character set of the external database.
     */
    characterSet: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The Oracle Database configuration
     */
    databaseConfiguration: string;
    /**
     * The Oracle Database edition.
     */
    databaseEdition: string;
    /**
     * The configuration of the Database Management service.
     */
    databaseManagementConfig: outputs.GetDatabaseExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfig;
    /**
     * The Oracle Database version.
     */
    databaseVersion: string;
    /**
     * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
     */
    dbId: string;
    /**
     * The database packs licensed for the external Oracle Database.
     */
    dbPacks: string;
    /**
     * The `DB_UNIQUE_NAME` of the external database.
     */
    dbUniqueName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character of the external database.
     */
    ncharacterSet: string;
    /**
     * The configuration of Operations Insights for the external database
     */
    operationsInsightsConfig: outputs.GetDatabaseExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfig;
    /**
     * A filter to return only resources that match the specified lifecycle state.
     */
    state: string;
    /**
     * The date and time the database was created.
     */
    timeCreated: string;
    /**
     * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
     */
    timeZone: string;
}

export interface GetDatabaseExternalNonContainerDatabasesExternalNonContainerDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalNonContainerDatabasesExternalNonContainerDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface GetDatabaseExternalNonContainerDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalPluggableDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalPluggableDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface GetDatabaseExternalPluggableDatabasesExternalPluggableDatabase {
    /**
     * The character set of the external database.
     */
    characterSet: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The Oracle Database configuration
     */
    databaseConfiguration: string;
    /**
     * The Oracle Database edition.
     */
    databaseEdition: string;
    /**
     * The configuration of the Database Management service.
     */
    databaseManagementConfig: outputs.GetDatabaseExternalPluggableDatabasesExternalPluggableDatabaseDatabaseManagementConfig;
    /**
     * The Oracle Database version.
     */
    databaseVersion: string;
    /**
     * The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
     */
    dbId: string;
    /**
     * The database packs licensed for the external Oracle Database.
     */
    dbPacks: string;
    /**
     * The `DB_UNIQUE_NAME` of the external database.
     */
    dbUniqueName: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    externalContainerDatabaseId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure external database resource.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The national character of the external database.
     */
    ncharacterSet: string;
    /**
     * The configuration of Operations Insights for the external database
     */
    operationsInsightsConfig: outputs.GetDatabaseExternalPluggableDatabasesExternalPluggableDatabaseOperationsInsightsConfig;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
     */
    sourceId: string;
    /**
     * A filter to return only resources that match the specified lifecycle state.
     */
    state: string;
    /**
     * The date and time the database was created.
     */
    timeCreated: string;
    /**
     * The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
     */
    timeZone: string;
}

export interface GetDatabaseExternalPluggableDatabasesExternalPluggableDatabaseDatabaseManagementConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    databaseManagementConnectionId: string;
    /**
     * The status of the Database Management service.
     */
    databaseManagementStatus: string;
    /**
     * The Oracle license model that applies to the external database.
     */
    licenseModel: string;
}

export interface GetDatabaseExternalPluggableDatabasesExternalPluggableDatabaseOperationsInsightsConfig {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     */
    operationsInsightsConnectorId: string;
    /**
     * The status of Operations Insights
     */
    operationsInsightsStatus: string;
}

export interface GetDatabaseExternalPluggableDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseFlexComponentsFilter {
    /**
     * A filter to return only resources that match the entire name given. The match is not case sensitive.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseFlexComponentsFlexComponentCollection {
    items: outputs.GetDatabaseFlexComponentsFlexComponentCollectionItem[];
}

export interface GetDatabaseFlexComponentsFlexComponentCollectionItem {
    /**
     * The maximum number of CPU cores that can ben enabled on the DB Server for this Flex Component.
     */
    availableCoreCount: number;
    /**
     * The maximum  storage that can be enabled on the Storage Server for this Flex Component.
     */
    availableDbStorageInGbs: number;
    /**
     * The minimum number of CPU cores that can be enabled on the DB Server for this Flex Component.
     */
    minimumCoreCount: number;
    /**
     * A filter to return only resources that match the entire name given. The match is not case sensitive.
     */
    name: string;
}

export interface GetDatabaseGiVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseGiVersionsGiVersion {
    /**
     * A valid Oracle Grid Infrastructure (GI) software version.
     */
    version: string;
}

export interface GetDatabaseKeyStoreAssociatedDatabase {
    /**
     * The name of the database that is associated with the key store.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    id: string;
}

export interface GetDatabaseKeyStoreTypeDetails {
    /**
     * The administrator username to connect to Oracle Key Vault
     */
    adminUsername: string;
    /**
     * The list of Oracle Key Vault connection IP addresses.
     */
    connectionIps: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    secretId: string;
    /**
     * The type of key store.
     */
    type: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseKeyStoresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseKeyStoresKeyStore {
    /**
     * List of databases associated with the key store.
     */
    associatedDatabases: outputs.GetDatabaseKeyStoresKeyStoreAssociatedDatabase[];
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name for the key store. The name does not need to be unique.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The current state of the key store.
     */
    state: string;
    /**
     * The date and time that the key store was created.
     */
    timeCreated: string;
    /**
     * Key store type details.
     */
    typeDetails: outputs.GetDatabaseKeyStoresKeyStoreTypeDetails;
}

export interface GetDatabaseKeyStoresKeyStoreAssociatedDatabase {
    /**
     * The name of the database that is associated with the key store.
     */
    dbName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    id: string;
}

export interface GetDatabaseKeyStoresKeyStoreTypeDetails {
    /**
     * The administrator username to connect to Oracle Key Vault
     */
    adminUsername: string;
    /**
     * The list of Oracle Key Vault connection IP addresses.
     */
    connectionIps: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    secretId: string;
    /**
     * The type of key store.
     */
    type: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    vaultId: string;
}

export interface GetDatabaseMaintenanceRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMaintenanceRunsMaintenanceRun {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Description of the maintenance run.
     */
    description: string;
    /**
     * The user-friendly name for the maintenance run.
     */
    displayName: string;
    /**
     * The OCID of the maintenance run.
     */
    id: string;
    isEnabled: boolean;
    isPatchNowEnabled: boolean;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    maintenanceRunId: string;
    /**
     * Maintenance sub-type.
     */
    maintenanceSubtype: string;
    /**
     * The maintenance type.
     */
    maintenanceType: string;
    /**
     * Contain the patch failure count.
     */
    patchFailureCount: number;
    /**
     * The unique identifier of the patch. The identifier string includes the patch type, the Oracle Database version, and the patch creation date (using the format YYMMDD). For example, the identifier `ru_patch_19.9.0.0_201030` is used for an RU patch for Oracle Database 19.9.0.0 that was released October 30, 2020.
     */
    patchId: string;
    /**
     * Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
     */
    patchingMode: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance run for the Autonomous Data Guard association's peer container database.
     */
    peerMaintenanceRunId: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The target resource ID.
     */
    targetResourceId: string;
    /**
     * The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
     */
    targetResourceType: string;
    /**
     * The date and time the maintenance run was completed.
     */
    timeEnded: string;
    /**
     * The date and time the maintenance run is scheduled to occur.
     */
    timeScheduled: string;
    /**
     * The date and time the maintenance run starts.
     */
    timeStarted: string;
}

export interface GetDatabaseManagementManagedDatabaseGroupManagedDatabase {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
     */
    compartmentId: string;
    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
     */
    databaseSubType: string;
    /**
     * The type of Oracle Database installation.
     */
    databaseType: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    id: string;
    /**
     * The name of the Managed Database Group.
     */
    name: string;
    /**
     * The date and time the Managed Database was added to the group.
     */
    timeAdded: string;
}

export interface GetDatabaseManagementManagedDatabaseGroupsFilter {
    /**
     * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseGroupsManagedDatabaseGroupCollection {
    items: outputs.GetDatabaseManagementManagedDatabaseGroupsManagedDatabaseGroupCollectionItem[];
}

export interface GetDatabaseManagementManagedDatabaseGroupsManagedDatabaseGroupCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The information specified by the user about the Managed Database Group.
     */
    description: string;
    /**
     * The identifier of the resource. Only one of the parameters, id or name should be provided.
     */
    id: string;
    /**
     * A list of Managed Databases in the Managed Database Group.
     */
    managedDatabases: outputs.GetDatabaseManagementManagedDatabaseGroupsManagedDatabaseGroupCollectionItemManagedDatabase[];
    /**
     * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
     */
    name: string;
    /**
     * The lifecycle state of a resource.
     */
    state: string;
    /**
     * The date and time the Managed Database Group was created.
     */
    timeCreated: string;
    /**
     * The date and time the Managed Database Group was last updated.
     */
    timeUpdated: string;
}

export interface GetDatabaseManagementManagedDatabaseGroupsManagedDatabaseGroupCollectionItemManagedDatabase {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
     */
    databaseSubType: string;
    /**
     * The type of Oracle Database installation.
     */
    databaseType: string;
    /**
     * The identifier of the resource. Only one of the parameters, id or name should be provided.
     */
    id: string;
    /**
     * A filter to return only resources that match the entire name. Only one of the parameters, id or name should be provided
     */
    name: string;
    /**
     * The date and time the Managed Database was added to the group.
     */
    timeAdded: string;
}

export interface GetDatabaseManagementManagedDatabaseManagedDatabaseGroup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database Group.
     */
    id: string;
    /**
     * The name of the Managed Database.
     */
    name: string;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParameterItem {
    /**
     * A list of allowed values for this parameter.
     */
    allowedValues: outputs.GetDatabaseManagementManagedDatabasesDatabaseParameterItemAllowedValue[];
    /**
     * The parameter category.
     */
    category: string;
    /**
     * Applicable in case of Oracle Real Application Clusters (Oracle RAC) databases. A `UNIQUE` parameter is one which is unique to each Oracle Real Application Clusters (Oracle RAC) instance. For example, the parameter `INSTANCE_NUMBER` must have different values in each instance. An `IDENTICAL` parameter must have the same value for every instance. For example, the parameter `DB_BLOCK_SIZE` must have the same value in all instances.
     */
    constraint: string;
    /**
     * The ID of the database container to which the data pertains. Possible values include:
     * * `0`: This value is used for data that pertain to the entire CDB. This value is also used for data in non-CDBs.
     * * `1`: This value is used for data that pertain to only the root container.
     * * `n`: Where n is the applicable container ID for the data.
     */
    containerId: number;
    /**
     * The description of the parameter.
     */
    description: string;
    /**
     * The parameter value in a user-friendly format. For example, if the `value` property shows the value 262144 for a big integer parameter, then the `displayValue` property will show the value 256K.
     */
    displayValue: string;
    /**
     * Indicates whether Oracle adjusted the input value to a more suitable value.
     */
    isAdjusted: boolean;
    /**
     * Indicates whether the parameter is a basic parameter (`TRUE`) or not (`FALSE`).
     */
    isBasic: boolean;
    /**
     * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
     */
    isDefault: boolean;
    /**
     * Indicates whether the parameter has been deprecated (`TRUE`) or not (`FALSE`).
     */
    isDeprecated: boolean;
    /**
     * For parameters that can be changed with `ALTER SYSTEM`, indicates whether the value of the parameter can be different for every instance (`TRUE`) or whether the parameter must have the same value for all Real Application Clusters instances (`FALSE`). For other parameters, this is always `FALSE`.
     */
    isInstanceModifiable: boolean;
    /**
     * Indicates how the parameter was modified. If an `ALTER SYSTEM` was performed, the value will be `MODIFIED`.
     */
    isModified: string;
    /**
     * Indicates whether the parameter can be modified on a per-PDB basis (`TRUE`) or not (`FALSE`). In a non-CDB, the value of this property is `null`.
     */
    isPdbModifiable: boolean;
    /**
     * Indicates whether the parameter can be changed with `ALTER SESSION` (`TRUE`) or not (`FALSE`)
     */
    isSessionModifiable: boolean;
    /**
     * Indicates whether the parameter was specified in the server parameter file (`TRUE`) or not (`FALSE`). Applicable only when the parameter source is `SPFILE`.
     */
    isSpecified: boolean;
    /**
     * Indicates whether the parameter can be changed with `ALTER SYSTEM` and when the change takes effect:
     * * IMMEDIATE: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect immediately.
     * * DEFERRED: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect in subsequent sessions.
     * * FALSE: Parameter cannot be changed with `ALTER SYSTEM` unless a server parameter file was used to start the instance. The change takes effect in subsequent instances.
     */
    isSystemModifiable: string;
    /**
     * A filter to return all parameters that have the text given in their names.
     */
    name: string;
    /**
     * The parameter number.
     */
    number: number;
    /**
     * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
     */
    ordinal: number;
    /**
     * The database instance SID for which the parameter is defined.
     */
    sid: string;
    /**
     * The parameter type.
     */
    type: string;
    /**
     * The comments associated with the most recent update.
     */
    updateComment: string;
    /**
     * The parameter value.
     */
    value: string;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParameterItemAllowedValue {
    /**
     * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
     */
    isDefault: boolean;
    /**
     * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
     */
    ordinal: number;
    /**
     * The parameter value.
     */
    value: string;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollection {
    /**
     * The name of the Managed Database.
     */
    databaseName: string;
    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
     */
    databaseSubType: string;
    /**
     * The type of Oracle Database installation.
     */
    databaseType: string;
    /**
     * The Oracle Database version.
     */
    databaseVersion: string;
    /**
     * An array of DatabaseParameterSummary objects.
     */
    items: outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionItem[];
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionItem {
    /**
     * A list of allowed values for this parameter.
     */
    allowedValues: outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionItemAllowedValue[];
    /**
     * The parameter category.
     */
    category: string;
    /**
     * Applicable in case of Oracle Real Application Clusters (Oracle RAC) databases. A `UNIQUE` parameter is one which is unique to each Oracle Real Application Clusters (Oracle RAC) instance. For example, the parameter `INSTANCE_NUMBER` must have different values in each instance. An `IDENTICAL` parameter must have the same value for every instance. For example, the parameter `DB_BLOCK_SIZE` must have the same value in all instances.
     */
    constraint: string;
    /**
     * The ID of the database container to which the data pertains. Possible values include:
     * * `0`: This value is used for data that pertain to the entire CDB. This value is also used for data in non-CDBs.
     * * `1`: This value is used for data that pertain to only the root container.
     * * `n`: Where n is the applicable container ID for the data.
     */
    containerId: number;
    /**
     * The description of the parameter.
     */
    description: string;
    /**
     * The parameter value in a user-friendly format. For example, if the `value` property shows the value 262144 for a big integer parameter, then the `displayValue` property will show the value 256K.
     */
    displayValue: string;
    /**
     * Indicates whether Oracle adjusted the input value to a more suitable value.
     */
    isAdjusted: boolean;
    /**
     * Indicates whether the parameter is a basic parameter (`TRUE`) or not (`FALSE`).
     */
    isBasic: boolean;
    /**
     * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
     */
    isDefault: boolean;
    /**
     * Indicates whether the parameter has been deprecated (`TRUE`) or not (`FALSE`).
     */
    isDeprecated: boolean;
    /**
     * For parameters that can be changed with `ALTER SYSTEM`, indicates whether the value of the parameter can be different for every instance (`TRUE`) or whether the parameter must have the same value for all Real Application Clusters instances (`FALSE`). For other parameters, this is always `FALSE`.
     */
    isInstanceModifiable: boolean;
    /**
     * Indicates how the parameter was modified. If an `ALTER SYSTEM` was performed, the value will be `MODIFIED`.
     */
    isModified: string;
    /**
     * Indicates whether the parameter can be modified on a per-PDB basis (`TRUE`) or not (`FALSE`). In a non-CDB, the value of this property is `null`.
     */
    isPdbModifiable: boolean;
    /**
     * Indicates whether the parameter can be changed with `ALTER SESSION` (`TRUE`) or not (`FALSE`)
     */
    isSessionModifiable: boolean;
    /**
     * Indicates whether the parameter was specified in the server parameter file (`TRUE`) or not (`FALSE`). Applicable only when the parameter source is `SPFILE`.
     */
    isSpecified: boolean;
    /**
     * Indicates whether the parameter can be changed with `ALTER SYSTEM` and when the change takes effect:
     * * IMMEDIATE: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect immediately.
     * * DEFERRED: Parameter can be changed with `ALTER SYSTEM` regardless of the type of parameter file used to start the instance. The change takes effect in subsequent sessions.
     * * FALSE: Parameter cannot be changed with `ALTER SYSTEM` unless a server parameter file was used to start the instance. The change takes effect in subsequent instances.
     */
    isSystemModifiable: string;
    /**
     * A filter to return all parameters that have the text given in their names.
     */
    name: string;
    /**
     * The parameter number.
     */
    number: number;
    /**
     * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
     */
    ordinal: number;
    /**
     * The database instance SID for which the parameter is defined.
     */
    sid: string;
    /**
     * The parameter type.
     */
    type: string;
    /**
     * The comments associated with the most recent update.
     */
    updateComment: string;
    /**
     * The parameter value.
     */
    value: string;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionItemAllowedValue {
    /**
     * Indicates whether the parameter is set to the default value (`TRUE`) or the parameter value was specified in the parameter file (`FALSE`).
     */
    isDefault: boolean;
    /**
     * The position (ordinal number) of the parameter value. Useful only for parameters whose values are lists of strings.
     */
    ordinal: number;
    /**
     * The parameter value.
     */
    value: string;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersFilter {
    /**
     * A filter to return all parameters that have the text given in their names.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesFilter {
    /**
     * A filter to return only resources that match the entire name.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesManagedDatabaseCollection {
    items: outputs.GetDatabaseManagementManagedDatabasesManagedDatabaseCollectionItem[];
}

export interface GetDatabaseManagementManagedDatabasesManagedDatabaseCollectionItem {
    /**
     * The additional details specific to a type of database defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
     */
    additionalDetails: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
     */
    databaseStatus: string;
    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, or a Non-container Database.
     */
    databaseSubType: string;
    /**
     * The type of Oracle Database installation.
     */
    databaseType: string;
    /**
     * The identifier of the resource.
     */
    id: string;
    /**
     * Indicates whether the Oracle Database is part of a cluster.
     */
    isCluster: boolean;
    /**
     * A list of Managed Database Groups that the Managed Database belongs to.
     */
    managedDatabaseGroups: outputs.GetDatabaseManagementManagedDatabasesManagedDatabaseCollectionItemManagedDatabaseGroup[];
    /**
     * A filter to return only resources that match the entire name.
     */
    name: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
     */
    parentContainerId: string;
    /**
     * The date and time the Managed Database was created.
     */
    timeCreated: string;
}

export interface GetDatabaseManagementManagedDatabasesManagedDatabaseCollectionItemManagedDatabaseGroup {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The identifier of the resource.
     */
    id: string;
    /**
     * A filter to return only resources that match the entire name.
     */
    name: string;
}

export interface GetDatabaseMigrationAgentImagesAgentImageCollection {
    /**
     * Items in collection.
     */
    items: outputs.GetDatabaseMigrationAgentImagesAgentImageCollectionItem[];
}

export interface GetDatabaseMigrationAgentImagesAgentImageCollectionItem {
    /**
     * URL to download Agent Image of the ODMS Agent.
     */
    downloadUrl: string;
    /**
     * ODMS Agent Image version.
     */
    version: string;
}

export interface GetDatabaseMigrationAgentImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationAgentsAgentCollection {
    items: outputs.GetDatabaseMigrationAgentsAgentCollectionItem[];
}

export interface GetDatabaseMigrationAgentsAgentCollectionItem {
    agentId: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * ODMS Agent public key.
     */
    publicKey: string;
    /**
     * The current state of the Database Migration Deployment.
     */
    state: string;
    /**
     * The OCID of the Stream
     */
    streamId: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the Agent was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time of the last Agent details update. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
    /**
     * ODMS Agent version
     */
    version: string;
}

export interface GetDatabaseMigrationAgentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationConnectionAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationConnectionConnectDescriptor {
    /**
     * Connect string.
     */
    connectString: string;
    /**
     * Database service name.
     */
    databaseServiceName: string;
    /**
     * Name of the host the sshkey is valid for.
     */
    host: string;
    /**
     * Port of the connect descriptor.
     */
    port: number;
}

export interface GetDatabaseMigrationConnectionPrivateEndpoint {
    /**
     * OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.
     */
    subnetId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to.
     */
    vcnId: string;
}

export interface GetDatabaseMigrationConnectionSshDetails {
    /**
     * Name of the host the sshkey is valid for.
     */
    host: string;
    sshkey: string;
    /**
     * Sudo location
     */
    sudoLocation: string;
    /**
     * SSH user
     */
    user: string;
}

export interface GetDatabaseMigrationConnectionVaultDetails {
    /**
     * OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * OCID of the vault encryption key
     */
    keyId: string;
    /**
     * OCID of the vault
     */
    vaultId: string;
}

export interface GetDatabaseMigrationConnectionsConnectionCollection {
    items: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItem[];
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItem {
    /**
     * Database Admin Credentials details.
     */
    adminCredentials: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItemAdminCredentials;
    /**
     * This name is the distinguished name used while creating the certificate on target database.
     */
    certificateTdn: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Connect Descriptor details.
     */
    connectDescriptor: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItemConnectDescriptor;
    /**
     * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
     */
    credentialsSecretId: string;
    /**
     * The OCID of the cloud database.
     */
    databaseId: string;
    /**
     * Database connection type.
     */
    databaseType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Oracle Cloud Infrastructure Private Endpoint configuration details.
     */
    privateEndpoint: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItemPrivateEndpoint;
    /**
     * Details of the ssh key that will be used.
     */
    sshDetails: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItemSshDetails;
    /**
     * The current state of the Database Migration Deployment.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the Connection resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time of the last Connection resource details update. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
    tlsKeystore: string;
    tlsWallet: string;
    /**
     * Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     */
    vaultDetails: outputs.GetDatabaseMigrationConnectionsConnectionCollectionItemVaultDetails;
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItemAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItemConnectDescriptor {
    /**
     * Connect string.
     */
    connectString: string;
    /**
     * Database service name.
     */
    databaseServiceName: string;
    /**
     * Name of the host the sshkey is valid for.
     */
    host: string;
    /**
     * Port of the connect descriptor.
     */
    port: number;
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItemPrivateEndpoint {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a previously created Private Endpoint.
     */
    id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer's subnet where the private endpoint VNIC will reside.
     */
    subnetId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN where the Private Endpoint will be bound to.
     */
    vcnId: string;
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItemSshDetails {
    /**
     * Name of the host the sshkey is valid for.
     */
    host: string;
    sshkey: string;
    /**
     * Sudo location
     */
    sudoLocation: string;
    /**
     * SSH user
     */
    user: string;
}

export interface GetDatabaseMigrationConnectionsConnectionCollectionItemVaultDetails {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * OCID of the vault encryption key
     */
    keyId: string;
    /**
     * OCID of the vault
     */
    vaultId: string;
}

export interface GetDatabaseMigrationConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationJobProgress {
    /**
     * Current phase of the job.
     */
    currentPhase: string;
    /**
     * Current status of the job.
     */
    currentStatus: string;
    /**
     * List of phase status for the job.
     */
    phases: outputs.GetDatabaseMigrationJobProgressPhase[];
}

export interface GetDatabaseMigrationJobProgressPhase {
    /**
     * Duration of the phase in milliseconds
     */
    durationInMs: number;
    /**
     * Phase name
     */
    name: string;
    /**
     * Percent progress of job phase.
     */
    progress: number;
    /**
     * Phase status
     */
    status: string;
}

export interface GetDatabaseMigrationJobUnsupportedObject {
    /**
     * Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * Owner of the object (regular expression is allowed)
     */
    owner: string;
    /**
     * Type of unsupported object
     */
    type: string;
}

export interface GetDatabaseMigrationJobsFilter {
    /**
     * Phase name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationJobsJobCollection {
    items: outputs.GetDatabaseMigrationJobsJobCollectionItem[];
}

export interface GetDatabaseMigrationJobsJobCollectionItem {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Migration Job.
     */
    id: string;
    jobId: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * The ID of the migration in which to list resources.
     */
    migrationId: string;
    /**
     * Percent progress of job phase.
     */
    progress: outputs.GetDatabaseMigrationJobsJobCollectionItemProgress;
    /**
     * The lifecycle state of the Migration Job.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the DB Migration Job was created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the DB Migration Job was last updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
    /**
     * Type of unsupported object
     */
    type: string;
    /**
     * Database objects not supported.
     */
    unsupportedObjects: outputs.GetDatabaseMigrationJobsJobCollectionItemUnsupportedObject[];
}

export interface GetDatabaseMigrationJobsJobCollectionItemProgress {
    /**
     * Current phase of the job.
     */
    currentPhase: string;
    /**
     * Current status of the job.
     */
    currentStatus: string;
    /**
     * List of phase status for the job.
     */
    phases: outputs.GetDatabaseMigrationJobsJobCollectionItemProgressPhase[];
}

export interface GetDatabaseMigrationJobsJobCollectionItemProgressPhase {
    /**
     * Duration of the phase in milliseconds
     */
    durationInMs: number;
    /**
     * Phase name
     */
    name: string;
    /**
     * Percent progress of job phase.
     */
    progress: number;
    /**
     * Phase status
     */
    status: string;
}

export interface GetDatabaseMigrationJobsJobCollectionItemUnsupportedObject {
    /**
     * Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * Owner of the object (regular expression is allowed)
     */
    owner: string;
    /**
     * Type of unsupported object
     */
    type: string;
}

export interface GetDatabaseMigrationMigrationDataTransferMediumDetails {
    /**
     * Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
     */
    databaseLinkDetails: outputs.GetDatabaseMigrationMigrationDataTransferMediumDetailsDatabaseLinkDetails;
    /**
     * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Datapump dump files for the migration.
     */
    objectStorageDetails: outputs.GetDatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageDetails;
}

export interface GetDatabaseMigrationMigrationDataTransferMediumDetailsDatabaseLinkDetails {
    /**
     * Name of directory object in database
     */
    name: string;
}

export interface GetDatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageDetails {
    /**
     * Bucket name.
     */
    bucket: string;
    /**
     * Namespace name of the object store bucket.
     */
    namespace: string;
}

export interface GetDatabaseMigrationMigrationDatapumpSettings {
    /**
     * Optional parameters for Datapump Export and Import. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-62324358-2F26-4A94-B69F-1075D53FA96D__BABDECJE
     */
    dataPumpParameters: outputs.GetDatabaseMigrationMigrationDatapumpSettingsDataPumpParameters;
    /**
     * Directory object details, used to define either import or export directory objects in Data Pump Settings.
     */
    exportDirectoryObject: outputs.GetDatabaseMigrationMigrationDatapumpSettingsExportDirectoryObject;
    /**
     * Directory object details, used to define either import or export directory objects in Data Pump Settings.
     */
    importDirectoryObject: outputs.GetDatabaseMigrationMigrationDatapumpSettingsImportDirectoryObject;
    /**
     * DataPump job mode. Refer to docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-92C2CB46-8BC9-414D-B62E-79CD788C1E62__BABBDEHD
     */
    jobMode: string;
    /**
     * Defines remapping to be applied to objects as they are processed. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-0FC32790-91E6-4781-87A3-229DE024CB3D.
     */
    metadataRemaps: outputs.GetDatabaseMigrationMigrationDatapumpSettingsMetadataRemap[];
}

export interface GetDatabaseMigrationMigrationDatapumpSettingsDataPumpParameters {
    /**
     * Estimate size of dumps that will be generated.
     */
    estimate: string;
    /**
     * Exclude paratemers for export and import.
     */
    excludeParameters: string[];
    /**
     * Maximum number of worker processes that can be used for a Datapump Export job.
     */
    exportParallelismDegree: number;
    /**
     * Maximum number of worker processes that can be used for a Datapump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     */
    importParallelismDegree: number;
    /**
     * False to force datapump worker process to run on one instance.
     */
    isCluster: boolean;
    /**
     * IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     */
    tableExistsAction: string;
}

export interface GetDatabaseMigrationMigrationDatapumpSettingsExportDirectoryObject {
    /**
     * Name of directory object in database
     */
    name: string;
    /**
     * Absolute path of directory on database server
     */
    path: string;
}

export interface GetDatabaseMigrationMigrationDatapumpSettingsImportDirectoryObject {
    /**
     * Name of directory object in database
     */
    name: string;
    /**
     * Absolute path of directory on database server
     */
    path: string;
}

export interface GetDatabaseMigrationMigrationDatapumpSettingsMetadataRemap {
    /**
     * Specifies the new value that oldValue should be translated into.
     */
    newValue: string;
    /**
     * Specifies the value which needs to be reset.
     */
    oldValue: string;
    /**
     * Migration type.
     */
    type: string;
}

export interface GetDatabaseMigrationMigrationExcludeObject {
    /**
     * Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * Owner of the object (regular expression is allowed)
     */
    owner: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetails {
    /**
     * Details about Oracle GoldenGate Microservices.
     */
    hub: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsHub;
    /**
     * Optional settings for Oracle GoldenGate processes
     */
    settings: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsSettings;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsHub {
    /**
     * OCID of Golden Gate compute instance.
     */
    computeId: string;
    /**
     * Database Admin Credentials details.
     */
    restAdminCredentials: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsHubRestAdminCredentials;
    /**
     * Database Admin Credentials details.
     */
    sourceContainerDbAdminCredentials: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials;
    /**
     * Database Admin Credentials details.
     */
    sourceDbAdminCredentials: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsHubSourceDbAdminCredentials;
    /**
     * Name of Microservices deployment to operate on source DB
     */
    sourceMicroservicesDeploymentName: string;
    /**
     * Database Admin Credentials details.
     */
    targetDbAdminCredentials: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsHubTargetDbAdminCredentials;
    /**
     * Name of Microservices deployment to operate on target DB
     */
    targetMicroservicesDeploymentName: string;
    /**
     * Oracle GoldenGate hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
     */
    url: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsHubRestAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsHubSourceContainerDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsHubSourceDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsHubTargetDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsSettings {
    /**
     * ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     */
    acceptableLag: number;
    /**
     * Parameters for Extract processes.
     */
    extract: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsSettingsExtract;
    /**
     * Parameters for Replicat processes.
     */
    replicat: outputs.GetDatabaseMigrationMigrationGoldenGateDetailsSettingsReplicat;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsSettingsExtract {
    /**
     * Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
     */
    longTransDuration: number;
    /**
     * Extract performance.
     */
    performanceProfile: string;
}

export interface GetDatabaseMigrationMigrationGoldenGateDetailsSettingsReplicat {
    /**
     * Number of threads used to read trail files (valid for Parallel Replicat)
     */
    mapParallelism: number;
    /**
     * Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    maxApplyParallelism: number;
    /**
     * Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    minApplyParallelism: number;
}

export interface GetDatabaseMigrationMigrationVaultDetails {
    /**
     * OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: string;
    /**
     * OCID of the vault encryption key
     */
    keyId: string;
    /**
     * OCID of the vault
     */
    vaultId: string;
}

export interface GetDatabaseMigrationMigrationsFilter {
    /**
     * Name of directory object in database
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationMigrationsMigrationCollection {
    items: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItem[];
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItem {
    /**
     * The OCID of the registered On-Prem ODMS Agent. Required for Offline Migrations.
     */
    agentId: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store Golden Gate admin user credentials.
     */
    credentialsSecretId: string;
    /**
     * Data Transfer Medium details for the Migration.
     */
    dataTransferMediumDetails: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetails;
    /**
     * Optional settings for Datapump Export and Import jobs
     */
    datapumpSettings: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettings;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Database objects to exclude from migration.
     */
    excludeObjects: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemExcludeObject[];
    /**
     * OCID of the current ODMS Job in execution for the Migration, if any.
     */
    executingJobId: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Details about Oracle GoldenGate Microservices.
     */
    goldenGateDetails: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetails;
    /**
     * The OCID of the resource
     */
    id: string;
    /**
     * The lifecycle detailed status of the Migration.
     */
    lifecycleDetails: string;
    /**
     * The OCID of the Source Container Database Connection.
     */
    sourceContainerDatabaseConnectionId: string;
    /**
     * The OCID of the Source Database Connection.
     */
    sourceDatabaseConnectionId: string;
    /**
     * The current state of the Database Migration Deployment.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The OCID of the Target Database Connection.
     */
    targetDatabaseConnectionId: string;
    /**
     * The time the Migration was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time of last Migration. An RFC3339 formatted datetime string.
     */
    timeLastMigration: string;
    /**
     * The time of the last Migration details update. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
    /**
     * Migration type.
     */
    type: string;
    /**
     * Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     */
    vaultDetails: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemVaultDetails;
    /**
     * Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
     */
    waitAfter: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetails {
    /**
     * Optional details for creating a network database link from Oracle Cloud Infrastructure database to on-premise database.
     */
    databaseLinkDetails: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetailsDatabaseLinkDetails;
    /**
     * In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Datapump dump files for the migration.
     */
    objectStorageDetails: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetailsObjectStorageDetails;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetailsDatabaseLinkDetails {
    /**
     * Name of directory object in database
     */
    name: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDataTransferMediumDetailsObjectStorageDetails {
    /**
     * Bucket name.
     */
    bucket: string;
    /**
     * Namespace name of the object store bucket.
     */
    namespace: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettings {
    /**
     * Optional parameters for Datapump Export and Import. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-62324358-2F26-4A94-B69F-1075D53FA96D__BABDECJE
     */
    dataPumpParameters: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsDataPumpParameters;
    /**
     * Directory object details, used to define either import or export directory objects in Data Pump Settings.
     */
    exportDirectoryObject: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsExportDirectoryObject;
    /**
     * Directory object details, used to define either import or export directory objects in Data Pump Settings.
     */
    importDirectoryObject: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsImportDirectoryObject;
    /**
     * DataPump job mode. Refer to docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-92C2CB46-8BC9-414D-B62E-79CD788C1E62__BABBDEHD
     */
    jobMode: string;
    /**
     * Defines remapping to be applied to objects as they are processed. Refer to https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/ODMS_DATAPUMP.html#GUID-0FC32790-91E6-4781-87A3-229DE024CB3D.
     */
    metadataRemaps: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsMetadataRemap[];
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsDataPumpParameters {
    /**
     * Estimate size of dumps that will be generated.
     */
    estimate: string;
    /**
     * Exclude paratemers for export and import.
     */
    excludeParameters: string[];
    /**
     * Maximum number of worker processes that can be used for a Datapump Export job.
     */
    exportParallelismDegree: number;
    /**
     * Maximum number of worker processes that can be used for a Datapump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     */
    importParallelismDegree: number;
    /**
     * False to force datapump worker process to run on one instance.
     */
    isCluster: boolean;
    /**
     * IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     */
    tableExistsAction: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsExportDirectoryObject {
    /**
     * Name of directory object in database
     */
    name: string;
    /**
     * Absolute path of directory on database server
     */
    path: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsImportDirectoryObject {
    /**
     * Name of directory object in database
     */
    name: string;
    /**
     * Absolute path of directory on database server
     */
    path: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemDatapumpSettingsMetadataRemap {
    /**
     * Specifies the new value that oldValue should be translated into.
     */
    newValue: string;
    /**
     * Specifies the value which needs to be reset.
     */
    oldValue: string;
    /**
     * Migration type.
     */
    type: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemExcludeObject {
    /**
     * Name of the object (regular expression is allowed)
     */
    object: string;
    /**
     * Owner of the object (regular expression is allowed)
     */
    owner: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetails {
    /**
     * Details about Oracle GoldenGate Microservices.
     */
    hub: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHub;
    /**
     * Optional settings for Oracle GoldenGate processes
     */
    settings: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettings;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHub {
    /**
     * OCID of Golden Gate compute instance.
     */
    computeId: string;
    /**
     * Database Admin Credentials details.
     */
    restAdminCredentials: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubRestAdminCredentials;
    /**
     * Database Admin Credentials details.
     */
    sourceContainerDbAdminCredentials: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubSourceContainerDbAdminCredentials;
    /**
     * Database Admin Credentials details.
     */
    sourceDbAdminCredentials: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubSourceDbAdminCredentials;
    /**
     * Name of Microservices deployment to operate on source DB
     */
    sourceMicroservicesDeploymentName: string;
    /**
     * Database Admin Credentials details.
     */
    targetDbAdminCredentials: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubTargetDbAdminCredentials;
    /**
     * Name of Microservices deployment to operate on target DB
     */
    targetMicroservicesDeploymentName: string;
    /**
     * Oracle GoldenGate hub's REST endpoint. Refer to https://docs.oracle.com/en/middleware/goldengate/core/19.1/securing/network.html#GUID-A709DA55-111D-455E-8942-C9BDD1E38CAA
     */
    url: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubRestAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubSourceContainerDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubSourceDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsHubTargetDbAdminCredentials {
    password: string;
    /**
     * Admin username
     */
    username: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettings {
    /**
     * ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     */
    acceptableLag: number;
    /**
     * Parameters for Extract processes.
     */
    extract: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettingsExtract;
    /**
     * Parameters for Replicat processes.
     */
    replicat: outputs.GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettingsReplicat;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettingsExtract {
    /**
     * Length of time (in seconds) that a transaction can be open before Extract generates a warning message that the transaction is long-running. If not specified, Extract will not generate a warning on long-running transactions.
     */
    longTransDuration: number;
    /**
     * Extract performance.
     */
    performanceProfile: string;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemGoldenGateDetailsSettingsReplicat {
    /**
     * Number of threads used to read trail files (valid for Parallel Replicat)
     */
    mapParallelism: number;
    /**
     * Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    maxApplyParallelism: number;
    /**
     * Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     */
    minApplyParallelism: number;
}

export interface GetDatabaseMigrationMigrationsMigrationCollectionItemVaultDetails {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * OCID of the vault encryption key
     */
    keyId: string;
    /**
     * OCID of the vault
     */
    vaultId: string;
}

export interface GetDatabasePluggableDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the pluggable database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * A host name-based PDB connection string.
     */
    pdbDefault: string;
    /**
     * An IP-based PDB connection string.
     */
    pdbIpDefault: string;
}

export interface GetDatabasePluggableDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabasePluggableDatabasesPluggableDatabase {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     */
    connectionStrings: outputs.GetDatabasePluggableDatabasesPluggableDatabaseConnectionStrings;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     */
    containerDatabaseId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pluggable database.
     */
    id: string;
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     */
    isRestricted: boolean;
    /**
     * Detailed message for the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     */
    openMode: string;
    pdbAdminPassword: string;
    /**
     * A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
     */
    pdbName: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    tdeWalletPassword: string;
    /**
     * The date and time the pluggable database was created.
     */
    timeCreated: string;
}

export interface GetDatabasePluggableDatabasesPluggableDatabaseConnectionStrings {
    /**
     * All connection strings to use to connect to the pluggable database.
     */
    allConnectionStrings: {[key: string]: any};
    /**
     * A host name-based PDB connection string.
     */
    pdbDefault: string;
    /**
     * An IP-based PDB connection string.
     */
    pdbIpDefault: string;
}

export interface GetDatabaseVmClusterNetworkScan {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The list of SCAN IP addresses. Three addresses should be provided.
     */
    ips: string[];
    /**
     * The SCAN TCPIP port. Default is 1521.
     */
    port: number;
}

export interface GetDatabaseVmClusterNetworkVmNetwork {
    /**
     * The network domain name.
     */
    domainName: string;
    /**
     * The network gateway.
     */
    gateway: string;
    /**
     * The network netmask.
     */
    netmask: string;
    /**
     * The network type.
     */
    networkType: string;
    /**
     * The list of node details.
     */
    nodes: outputs.GetDatabaseVmClusterNetworkVmNetworkNode[];
    /**
     * The network VLAN ID.
     */
    vlanId: string;
}

export interface GetDatabaseVmClusterNetworkVmNetworkNode {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The node IP address.
     */
    ip: string;
    /**
     * The node virtual IP (VIP) address.
     */
    vip: string;
    /**
     * The node virtual IP (VIP) host name.
     */
    vipHostname: string;
}

export interface GetDatabaseVmClusterNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterNetworksVmClusterNetwork {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dns: string[];
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     */
    id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntps: string[];
    /**
     * The SCAN details.
     */
    scans: outputs.GetDatabaseVmClusterNetworksVmClusterNetworkScan[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time when the VM cluster network was created.
     */
    timeCreated: string;
    validateVmClusterNetwork: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated VM Cluster.
     */
    vmClusterId: string;
    /**
     * Details of the client and backup networks.
     */
    vmNetworks: outputs.GetDatabaseVmClusterNetworksVmClusterNetworkVmNetwork[];
}

export interface GetDatabaseVmClusterNetworksVmClusterNetworkScan {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The list of SCAN IP addresses. Three addresses should be provided.
     */
    ips: string[];
    /**
     * The SCAN TCPIP port. Default is 1521.
     */
    port: number;
}

export interface GetDatabaseVmClusterNetworksVmClusterNetworkVmNetwork {
    /**
     * The network domain name.
     */
    domainName: string;
    /**
     * The network gateway.
     */
    gateway: string;
    /**
     * The network netmask.
     */
    netmask: string;
    /**
     * The network type.
     */
    networkType: string;
    /**
     * The list of node details.
     */
    nodes: outputs.GetDatabaseVmClusterNetworksVmClusterNetworkVmNetworkNode[];
    /**
     * The network VLAN ID.
     */
    vlanId: string;
}

export interface GetDatabaseVmClusterNetworksVmClusterNetworkVmNetworkNode {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The node IP address.
     */
    ip: string;
    /**
     * The node virtual IP (VIP) address.
     */
    vip: string;
    /**
     * The node virtual IP (VIP) host name.
     */
    vipHostname: string;
}

export interface GetDatabaseVmClusterPatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterPatchHistoryEntriesPatchHistoryEntry {
    /**
     * The action being performed or was completed.
     */
    action: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch history entry.
     */
    id: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    patchId: string;
    /**
     * The current state of the action.
     */
    state: string;
    /**
     * The date and time when the patch action completed
     */
    timeEnded: string;
    /**
     * The date and time when the patch action started.
     */
    timeStarted: string;
}

export interface GetDatabaseVmClusterPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterPatchesPatch {
    /**
     * Actions that can possibly be performed using this patch.
     */
    availableActions: string[];
    /**
     * The text describing this patch package.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the patch.
     */
    id: string;
    /**
     * Action that is currently being performed or was completed last.
     */
    lastAction: string;
    /**
     * A descriptive text associated with the lifecycleState. Typically can contain additional displayable text.
     */
    lifecycleDetails: string;
    /**
     * The current state of the patch as a result of lastAction.
     */
    state: string;
    /**
     * The date and time that the patch was released.
     */
    timeReleased: string;
    /**
     * The version of this patch package.
     */
    version: string;
}

export interface GetDatabaseVmClusterRecommendedNetworkNetwork {
    /**
     * The cidr for the network.
     */
    cidr: string;
    /**
     * The network domain name.
     */
    domain: string;
    /**
     * The network gateway.
     */
    gateway: string;
    /**
     * The network netmask.
     */
    netmask: string;
    /**
     * The network type.
     */
    networkType: string;
    /**
     * The network domain name.
     */
    prefix: string;
    /**
     * The network VLAN ID.
     */
    vlanId: string;
}

export interface GetDatabaseVmClusterRecommendedNetworkScan {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The list of SCAN IP addresses. Three addresses should be provided.
     */
    ips: string[];
    /**
     * The SCAN TCPIP port. Default is 1521.
     */
    port: number;
}

export interface GetDatabaseVmClusterRecommendedNetworkVmNetwork {
    /**
     * The network domain name.
     */
    domainName: string;
    /**
     * The network gateway.
     */
    gateway: string;
    /**
     * The network netmask.
     */
    netmask: string;
    /**
     * The network type.
     */
    networkType: string;
    /**
     * The list of node details.
     */
    nodes: outputs.GetDatabaseVmClusterRecommendedNetworkVmNetworkNode[];
    /**
     * The network VLAN ID.
     */
    vlanId: string;
}

export interface GetDatabaseVmClusterRecommendedNetworkVmNetworkNode {
    /**
     * The node host name.
     */
    hostname: string;
    /**
     * The node IP address.
     */
    ip: string;
    /**
     * The node virtual IP (VIP) address.
     */
    vip: string;
    /**
     * The node virtual IP (VIP) host name.
     */
    vipHostname: string;
}

export interface GetDatabaseVmClusterUpdateHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterUpdateHistoryEntriesVmClusterUpdateHistoryEntry {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update history entry.
     */
    id: string;
    /**
     * Descriptive text providing additional details about the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time when the maintenance update action completed.
     */
    timeCompleted: string;
    /**
     * The date and time when the maintenance update action started.
     */
    timeStarted: string;
    /**
     * The update action performed using this maintenance update.
     */
    updateAction: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update.
     */
    updateId: string;
    /**
     * A filter to return only resources that match the given update type exactly.
     */
    updateType: string;
}

export interface GetDatabaseVmClusterUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterUpdatesVmClusterUpdate {
    /**
     * The possible actions that can be performed using this maintenance update.
     */
    availableActions: string[];
    /**
     * Details of the maintenance update package.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance update.
     */
    id: string;
    /**
     * The update action performed most recently using this maintenance update.
     */
    lastAction: string;
    /**
     * Descriptive text providing additional details about the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * The date and time the maintenance update was released.
     */
    timeReleased: string;
    /**
     * A filter to return only resources that match the given update type exactly.
     */
    updateType: string;
    /**
     * The version of the maintenance update package.
     */
    version: string;
}

export interface GetDatabaseVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClustersVmCluster {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    cpuCoreCount: number;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled: number;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    dataStorageSizeInTbs: number;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * If provided, filters the results for the given Exadata Infrastructure.
     */
    exadataInfrastructureId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The Oracle Grid Infrastructure software version for the VM cluster.
     */
    giVersion: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    id: string;
    /**
     * If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
     */
    isLocalBackupEnabled: boolean;
    /**
     * If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
     */
    isSparseDiskgroupEnabled: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     */
    lastPatchHistoryEntryId: string;
    /**
     * The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
     */
    licenseModel: string;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs: number;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape: string;
    /**
     * The public key portion of one or more key pairs used for SSH access to the VM cluster.
     */
    sshPublicKeys: string[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state: string;
    /**
     * Operating system version of the image.
     */
    systemVersion: string;
    /**
     * The date and time that the VM cluster was created.
     */
    timeCreated: string;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     */
    vmClusterNetworkId: string;
}

export interface GetDatacatalogCatalogPrivateEndpointsCatalogPrivateEndpoint {
    /**
     * The list of catalogs using the private reverse connection endpoint
     */
    attachedCatalogs: string[];
    /**
     * The OCID of the compartment where you want to list resources.
     */
    compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * List of DNS zones to be used by the data assets to be harvested. Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
     */
    dnsZones: string[];
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * Subnet Identifier
     */
    subnetId: string;
    /**
     * The time the private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetDatacatalogCatalogPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogCatalogTypesFilter {
    /**
     * Immutable resource name.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogCatalogTypesTypeCollection {
    count: number;
    items: outputs.GetDatacatalogCatalogTypesTypeCollectionItem[];
}

export interface GetDatacatalogCatalogTypesTypeCollectionItem {
    /**
     * Unique catalog identifier.
     */
    catalogId: string;
    /**
     * Detailed description of the type.
     */
    description: string;
    /**
     * Unique type key that is immutable.
     */
    key: string;
    /**
     * Immutable resource name.
     */
    name: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * Indicates the category of this type . For example, data assets or connections.
     */
    typeCategory: string;
    /**
     * URI to the type instance in the API.
     */
    uri: string;
}

export interface GetDatacatalogCatalogsCatalog {
    /**
     * The list of private reverse connection endpoints attached to the catalog
     */
    attachedCatalogPrivateEndpoints: string[];
    /**
     * The OCID of the compartment where you want to list resources.
     */
    compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation.
     */
    id: string;
    /**
     * An message describing the current state in more detail.  For example, it can be used to provide actionable information for a resource in 'Failed' state.
     */
    lifecycleDetails: string;
    /**
     * The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
     */
    numberOfObjects: number;
    /**
     * The REST front endpoint URL to the data catalog instance.
     */
    serviceApiUrl: string;
    /**
     * The console front endpoint URL to the data catalog instance.
     */
    serviceConsoleUrl: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetDatacatalogCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogConnectionsConnectionCollection {
    count: number;
    items: outputs.GetDatacatalogConnectionsConnectionCollectionItem[];
}

export interface GetDatacatalogConnectionsConnectionCollectionItem {
    /**
     * Unique catalog identifier.
     */
    catalogId: string;
    /**
     * OCID of the user who created the resource.
     */
    createdById: string;
    /**
     * Unique data asset key.
     */
    dataAssetKey: string;
    /**
     * A description of the connection.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    encProperties?: {[key: string]: any};
    /**
     * Unique external identifier of this resource in the external source system.
     */
    externalKey: string;
    /**
     * Indicates whether this connection is the default connection.
     */
    isDefault: boolean;
    /**
     * Unique connection key that is immutable.
     */
    key: string;
    /**
     * A map of maps that contains the properties which are specific to the connection type. Each connection type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most connections have required properties within the "default" category. Example: `{"properties": { "default": { "username": "user1"}}}`
     */
    properties: {[key: string]: any};
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated: string;
    /**
     * Time that the resource's status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeStatusUpdated: string;
    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated: string;
    /**
     * The key of the object type. Type key's can be found via the '/types' endpoint.
     */
    typeKey: string;
    /**
     * OCID of the user who updated the resource.
     */
    updatedById: string;
    /**
     * URI to the connection instance in the API.
     */
    uri: string;
}

export interface GetDatacatalogConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogDataAssetsDataAssetCollection {
    count: number;
    items: outputs.GetDatacatalogDataAssetsDataAssetCollectionItem[];
}

export interface GetDatacatalogDataAssetsDataAssetCollectionItem {
    /**
     * Unique catalog identifier.
     */
    catalogId: string;
    /**
     * OCID of the user who created the resource.
     */
    createdById: string;
    /**
     * Detailed description of the data asset.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Unique external identifier of this resource in the external source system.
     */
    externalKey: string;
    /**
     * Unique data asset key that is immutable.
     */
    key: string;
    /**
     * A map of maps that contains the properties which are specific to the asset type. Each data asset type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most data assets have required properties within the "default" category. Example: `{"properties": { "default": { "host": "host1", "port": "1521", "database": "orcl"}}}`
     */
    properties: {[key: string]: any};
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated: string;
    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated: string;
    /**
     * The key of the object type.
     */
    typeKey: string;
    /**
     * OCID of the user who updated the resource.
     */
    updatedById: string;
    /**
     * URI to the data asset instance in the API.
     */
    uri: string;
}

export interface GetDatacatalogDataAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogMetastoresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogMetastoresMetastore {
    /**
     * The OCID of the compartment where you want to list resources.
     */
    compartmentId: string;
    /**
     * Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
     */
    defaultExternalTableLocation: string;
    /**
     * Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
     */
    defaultManagedTableLocation: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The metastore's OCID.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state: string;
    /**
     * Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated: string;
    /**
     * Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetDataflowApplicationParameter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface GetDataflowApplicationsApplication {
    /**
     * An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    archiveUri: string;
    /**
     * The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
     */
    arguments: string[];
    /**
     * The class for the application.
     */
    className: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     */
    configuration: {[key: string]: any};
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly description.
     */
    description: string;
    /**
     * The query parameter for the Spark application name.
     */
    displayName: string;
    /**
     * The VM shape for the driver. Sets the driver cores and memory.
     */
    driverShape: string;
    /**
     * The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     */
    execute: string;
    /**
     * The VM shape for the executors. Sets the executor cores and memory.
     */
    executorShape: string;
    /**
     * An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    fileUri: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The application ID.
     */
    id: string;
    /**
     * The Spark language.
     */
    language: string;
    /**
     * An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    logsBucketUri: string;
    /**
     * The OCID of Oracle Cloud Infrastructure Hive Metastore.
     */
    metastoreId: string;
    /**
     * The number of executor VMs requested.
     */
    numExecutors: number;
    /**
     * The OCID of the user who created the resource.
     */
    ownerPrincipalId: string;
    /**
     * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     */
    ownerUserName: string;
    /**
     * An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
     */
    parameters: outputs.GetDataflowApplicationsApplicationParameter[];
    /**
     * The OCID of a private endpoint.
     */
    privateEndpointId: string;
    /**
     * The Spark version utilized to run the application.
     */
    sparkVersion: string;
    /**
     * The current state of this application.
     */
    state: string;
    /**
     * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeUpdated: string;
    /**
     * An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    warehouseBucketUri: string;
}

export interface GetDataflowApplicationsApplicationParameter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface GetDataflowApplicationsFilter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowInvokeRunParameter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface GetDataflowInvokeRunsFilter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowInvokeRunsRun {
    /**
     * The ID of the application.
     */
    applicationId: string;
    /**
     * An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    archiveUri: string;
    /**
     * The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
     */
    arguments: string[];
    asynchronous: boolean;
    /**
     * The class for the application.
     */
    className: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     */
    configuration: {[key: string]: any};
    /**
     * The data read by the run in bytes.
     */
    dataReadInBytes: string;
    /**
     * The data written by the run in bytes.
     */
    dataWrittenInBytes: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The query parameter for the Spark application name.
     */
    displayName: string;
    /**
     * The VM shape for the driver. Sets the driver cores and memory.
     */
    driverShape: string;
    /**
     * The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     */
    execute: string;
    /**
     * The VM shape for the executors. Sets the executor cores and memory.
     */
    executorShape: string;
    /**
     * An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    fileUri: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The ID of a run.
     */
    id: string;
    /**
     * The Spark language.
     */
    language: string;
    /**
     * The detailed messages about the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    logsBucketUri: string;
    /**
     * The OCID of Oracle Cloud Infrastructure Hive Metastore.
     */
    metastoreId: string;
    /**
     * The number of executor VMs requested.
     */
    numExecutors: number;
    /**
     * Unique Oracle assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.
     */
    opcRequestId: string;
    /**
     * The OCID of the user who created the resource.
     */
    ownerPrincipalId: string;
    /**
     * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     */
    ownerUserName: string;
    /**
     * An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
     */
    parameters: outputs.GetDataflowInvokeRunsRunParameter[];
    /**
     * An array of DNS zone names. Example: `[ "app.examplecorp.com", "app.examplecorp2.com" ]`
     */
    privateEndpointDnsZones: string[];
    /**
     * The OCID of a private endpoint.
     */
    privateEndpointId: string;
    /**
     * The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
     */
    privateEndpointMaxHostCount: number;
    /**
     * An array of network security group OCIDs.
     */
    privateEndpointNsgIds: string[];
    /**
     * The OCID of a subnet.
     */
    privateEndpointSubnetId: string;
    /**
     * The duration of the run in milliseconds.
     */
    runDurationInMilliseconds: string;
    /**
     * The Spark version utilized to run the application.
     */
    sparkVersion: string;
    /**
     * The LifecycleState of the run.
     */
    state: string;
    /**
     * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeUpdated: string;
    /**
     * The total number of oCPU requested by the run.
     */
    totalOcpu: number;
    /**
     * An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     */
    warehouseBucketUri: string;
}

export interface GetDataflowInvokeRunsRunParameter {
    /**
     * The name of the parameter.  It must be a string of one or more word characters (a-z, A-Z, 0-9, _). Examples: "iterations", "inputFile"
     */
    name: string;
    /**
     * The value of the parameter. It must be a string of 0 or more characters of any kind. Examples: "" (empty string), "10", "mydata.xml", "${x}"
     */
    value: string;
}

export interface GetDataflowPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowPrivateEndpointsPrivateEndpointCollection {
    items: outputs.GetDataflowPrivateEndpointsPrivateEndpointCollectionItem[];
}

export interface GetDataflowPrivateEndpointsPrivateEndpointCollectionItem {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly description. Avoid entering confidential information.
     */
    description: string;
    /**
     * The query parameter for the Spark application name. Note: At a time only one optional filter can be used with `compartmentId` to get the list of Private Endpoint resources.
     */
    displayName: string;
    /**
     * An array of DNS zone names. Example: `[ "app.examplecorp.com", "app.examplecorp2.com" ]`
     */
    dnsZones: string[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of a private endpoint.
     */
    id: string;
    /**
     * The detailed messages about the lifecycle state.
     */
    lifecycleDetails: string;
    /**
     * The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
     */
    maxHostCount: number;
    /**
     * An array of network security group OCIDs.
     */
    nsgIds: string[];
    /**
     * The OCID of the user who created the resource.
     */
    ownerPrincipalId: string;
    /**
     * The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     */
    ownerUserName: string;
    /**
     * The LifecycleState of the private endpoint.
     */
    state: string;
    /**
     * The OCID of a subnet.
     */
    subnetId: string;
    /**
     * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetDataflowRunLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowRunLogsRunLog {
    name: string;
    /**
     * The unique ID for the run
     */
    runId: string;
    sizeInBytes: string;
    source: string;
    timeCreated: string;
    type: string;
}

export interface GetDataintegrationWorkspacesFilter {
    /**
     * Used to filter by the name of the object.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspacesWorkspace {
    /**
     * The OCID of the compartment containing the resources you want to list.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user defined description for the workspace.
     */
    description: string;
    /**
     * A user-friendly display name for the workspace. Does not have to be unique, and can be modified. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The IP of the custom DNS.
     */
    dnsServerIp: string;
    /**
     * The DNS zone of the custom DNS to use to resolve names.
     */
    dnsServerZone: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A system-generated and immutable identifier assigned to the workspace upon creation.
     */
    id: string;
    isForceOperation: boolean;
    /**
     * Specifies whether the private network connection is enabled or disabled.
     */
    isPrivateNetworkEnabled: boolean;
    quiesceTimeout: number;
    /**
     * The lifecycle state of a resource. When specified, the operation only returns resources that match the given lifecycle state. When not specified, all lifecycle states are processed as a match.
     */
    state: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
     */
    stateMessage: string;
    /**
     * The OCID of the subnet for customer connected databases.
     */
    subnetId: string;
    /**
     * The date and time the workspace was created, in the timestamp format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the workspace was updated, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeUpdated: string;
    /**
     * The OCID of the VCN the subnet is in.
     */
    vcnId: string;
}

export interface GetDatascienceModelCustomMetadataList {
    /**
     * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * A short description of the model.
     */
    description: string;
    /**
     * key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * Value of model metadata
     */
    value: string;
}

export interface GetDatascienceModelDefinedMetadataList {
    /**
     * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * A short description of the model.
     */
    description: string;
    /**
     * key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * Value of model metadata
     */
    value: string;
}

export interface GetDatascienceModelDeploymentCategoryLogDetails {
    /**
     * The log details.
     */
    access: outputs.GetDatascienceModelDeploymentCategoryLogDetailsAccess;
    /**
     * The log details.
     */
    predict: outputs.GetDatascienceModelDeploymentCategoryLogDetailsPredict;
}

export interface GetDatascienceModelDeploymentCategoryLogDetailsAccess {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface GetDatascienceModelDeploymentCategoryLogDetailsPredict {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface GetDatascienceModelDeploymentModelDeploymentConfigurationDetails {
    /**
     * The type of the model deployment.
     */
    deploymentType: string;
    /**
     * The model configuration details.
     */
    modelConfigurationDetails: outputs.GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails;
}

export interface GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails {
    /**
     * The network bandwidth for the model.
     */
    bandwidthMbps: number;
    /**
     * The model deployment instance configuration
     */
    instanceConfiguration: outputs.GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration;
    /**
     * The OCID of the model you want to deploy.
     */
    modelId: string;
    /**
     * The scaling policy to apply to each model of the deployment.
     */
    scalingPolicy: outputs.GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy;
}

export interface GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration {
    /**
     * The shape used to launch the model deployment instances.
     */
    instanceShapeName: string;
}

export interface GetDatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy {
    /**
     * The number of instances for the model deployment.
     */
    instanceCount: number;
    /**
     * The type of scaling policy.
     */
    policyType: string;
}

export interface GetDatascienceModelDeploymentShapesFilter {
    /**
     * The name of the model deployment shape.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelDeploymentShapesModelDeploymentShape {
    /**
     * The number of cores associated with this model deployment shape.
     */
    coreCount: number;
    /**
     * The amount of memory in GBs associated with this model deployment shape.
     */
    memoryInGbs: number;
    /**
     * The name of the model deployment shape.
     */
    name: string;
}

export interface GetDatascienceModelDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelDeploymentsModelDeployment {
    /**
     * The log details for each category.
     */
    categoryLogDetails: outputs.GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetails;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A short description of the model deployment.
     */
    description: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id: string;
    /**
     * Details about the state of the model deployment.
     */
    lifecycleDetails: string;
    /**
     * The model deployment configuration details.
     */
    modelDeploymentConfigurationDetails: outputs.GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetails;
    /**
     * The URL to interact with the model deployment.
     */
    modelDeploymentUrl: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the resource was created, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
     */
    timeCreated: string;
}

export interface GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetails {
    /**
     * The log details.
     */
    access: outputs.GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetailsAccess;
    /**
     * The log details.
     */
    predict: outputs.GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetailsPredict;
}

export interface GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetailsAccess {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface GetDatascienceModelDeploymentsModelDeploymentCategoryLogDetailsPredict {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log group to work with.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a log to work with.
     */
    logId: string;
}

export interface GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetails {
    /**
     * The type of the model deployment.
     */
    deploymentType: string;
    /**
     * The model configuration details.
     */
    modelConfigurationDetails: outputs.GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails;
}

export interface GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails {
    /**
     * The network bandwidth for the model.
     */
    bandwidthMbps: number;
    /**
     * The model deployment instance configuration
     */
    instanceConfiguration: outputs.GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration;
    /**
     * The OCID of the model you want to deploy.
     */
    modelId: string;
    /**
     * The scaling policy to apply to each model of the deployment.
     */
    scalingPolicy: outputs.GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy;
}

export interface GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration {
    /**
     * The shape used to launch the model deployment instances.
     */
    instanceShapeName: string;
}

export interface GetDatascienceModelDeploymentsModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy {
    /**
     * The number of instances for the model deployment.
     */
    instanceCount: number;
    /**
     * The type of scaling policy.
     */
    policyType: string;
}

export interface GetDatascienceModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelsModel {
    artifactContentDisposition: string;
    artifactContentLength: string;
    artifactContentMd5: string;
    artifactLastModified: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy: string;
    /**
     * An array of custom metadata details for the model.
     */
    customMetadataLists: outputs.GetDatascienceModelsModelCustomMetadataList[];
    /**
     * An array of defined metadata details for the model.
     */
    definedMetadataLists: outputs.GetDatascienceModelsModelDefinedMetadataList[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A short description of the model.
     */
    description: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName: string;
    emptyModel: boolean;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id: string;
    /**
     * Input schema file content in String format
     */
    inputSchema: string;
    modelArtifact: string;
    /**
     * Output schema file content in String format
     */
    outputSchema: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
     */
    timeCreated: string;
}

export interface GetDatascienceModelsModelCustomMetadataList {
    /**
     * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * A short description of the model.
     */
    description: string;
    /**
     * key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * Value of model metadata
     */
    value: string;
}

export interface GetDatascienceModelsModelDefinedMetadataList {
    /**
     * Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values "Performance,Training Profile,Training and Validation Datasets,Training Environment,other".
     */
    category: string;
    /**
     * A short description of the model.
     */
    description: string;
    /**
     * key of the model Metadata. This can be custom key(user defined) as well as Oracle Cloud Infrastructure defined. Example of Oracle defined keys - useCaseType, libraryName, libraryVersion, estimatorClass, hyperParameters. Example of user defined keys - BaseModel
     */
    key: string;
    /**
     * Value of model metadata
     */
    value: string;
}

export interface GetDatascienceNotebookSessionNotebookSessionConfigurationDetails {
    /**
     * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
     */
    blockStorageSizeInGbs: number;
    /**
     * Details for the notebook session shape configuration.
     */
    notebookSessionShapeConfigDetails: outputs.GetDatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails;
    /**
     * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
     */
    shape: string;
    /**
     * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
     */
    subnetId: string;
}

export interface GetDatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
    /**
     * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
     */
    memoryInGbs: number;
    /**
     * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
     */
    ocpus: number;
}

export interface GetDatascienceNotebookSessionShapesFilter {
    /**
     * The name of the notebook session shape.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceNotebookSessionShapesNotebookSessionShape {
    /**
     * The number of cores associated with this notebook session shape.
     */
    coreCount: number;
    /**
     * The amount of memory in GBs associated with this notebook session shape.
     */
    memoryInGbs: number;
    /**
     * The name of the notebook session shape.
     */
    name: string;
    /**
     * The family that the compute shape belongs to.
     */
    shapeSeries: string;
}

export interface GetDatascienceNotebookSessionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceNotebookSessionsNotebookSession {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id: string;
    /**
     * Details about the state of the notebook session.
     */
    lifecycleDetails: string;
    /**
     * Details for the notebook session configuration.
     */
    notebookSessionConfigurationDetails: outputs.GetDatascienceNotebookSessionsNotebookSessionNotebookSessionConfigurationDetails;
    /**
     * The URL to interact with the notebook session.
     */
    notebookSessionUrl: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
     */
    timeCreated: string;
}

export interface GetDatascienceNotebookSessionsNotebookSessionNotebookSessionConfigurationDetails {
    /**
     * A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
     */
    blockStorageSizeInGbs: number;
    /**
     * Details for the notebook session shape configuration.
     */
    notebookSessionShapeConfigDetails: outputs.GetDatascienceNotebookSessionsNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails;
    /**
     * The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
     */
    shape: string;
    /**
     * A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
     */
    subnetId: string;
}

export interface GetDatascienceNotebookSessionsNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
    /**
     * A notebook session instance of type VM.Standard.E3.Flex allows memory to be specified. This specifies the size of the memory in GBs.
     */
    memoryInGbs: number;
    /**
     * A notebook session instance of type VM.Standard.E3.Flex allows the ocpu count to be specified.
     */
    ocpus: number;
}

export interface GetDatascienceProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceProjectsProject {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A short description of the project.
     */
    description: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
     */
    timeCreated: string;
}

export interface GetDevopsDeployArtifactDeployArtifactSource {
    /**
     * base64 Encoded String
     */
    base64encodedContent: string;
    /**
     * Specifies the artifact path in the repository.
     */
    deployArtifactPath: string;
    /**
     * Specifies types of artifact sources.
     */
    deployArtifactSourceType: string;
    /**
     * Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
     */
    deployArtifactVersion: string;
    /**
     * Specifies image digest for the version of the image.
     */
    imageDigest: string;
    /**
     * Specifies OCIR Image Path - optionally include tag.
     */
    imageUri: string;
    /**
     * The OCID of a repository
     */
    repositoryId: string;
}

export interface GetDevopsDeployArtifactsDeployArtifactCollection {
    items: outputs.GetDevopsDeployArtifactsDeployArtifactCollectionItem[];
}

export interface GetDevopsDeployArtifactsDeployArtifactCollectionItem {
    /**
     * Mode for artifact parameter substitution.
     */
    argumentSubstitutionMode: string;
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Specifies source of an artifact.
     */
    deployArtifactSource: outputs.GetDevopsDeployArtifactsDeployArtifactCollectionItemDeployArtifactSource;
    /**
     * Type of the deployment artifact.
     */
    deployArtifactType: string;
    /**
     * Optional description about the artifact to be deployed.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * unique project identifier
     */
    projectId: string;
    /**
     * A filter to return only DeployArtifacts that matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetDevopsDeployArtifactsDeployArtifactCollectionItemDeployArtifactSource {
    /**
     * base64 Encoded String
     */
    base64encodedContent: string;
    /**
     * Specifies the artifact path in the repository.
     */
    deployArtifactPath: string;
    /**
     * Specifies types of artifact sources.
     */
    deployArtifactSourceType: string;
    /**
     * Users can set this as a placeholder value that refers to a pipeline parameter, for example, ${appVersion}.
     */
    deployArtifactVersion: string;
    /**
     * Specifies image digest for the version of the image.
     */
    imageDigest: string;
    /**
     * Specifies OCIR Image Path - optionally include tag.
     */
    imageUri: string;
    /**
     * The OCID of a repository
     */
    repositoryId: string;
}

export interface GetDevopsDeployArtifactsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployEnvironmentComputeInstanceGroupSelectors {
    /**
     * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
     */
    items: outputs.GetDevopsDeployEnvironmentComputeInstanceGroupSelectorsItem[];
}

export interface GetDevopsDeployEnvironmentComputeInstanceGroupSelectorsItem {
    /**
     * Compute instance OCID identifiers that are members of this group.
     */
    computeInstanceIds: string[];
    /**
     * Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
     */
    query: string;
    /**
     * Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
     */
    region: string;
    /**
     * Defines the type of the instance selector for the group.
     */
    selectorType: string;
}

export interface GetDevopsDeployEnvironmentsDeployEnvironmentCollection {
    /**
     * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
     */
    items: outputs.GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItem[];
}

export interface GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItem {
    /**
     * The OCID of the Kubernetes cluster.
     */
    clusterId: string;
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A collection of selectors. The combination of instances matching the selectors are included in the instance group.
     */
    computeInstanceGroupSelectors: outputs.GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectors;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Deployment environment type.
     */
    deployEnvironmentType: string;
    /**
     * Optional description about the deployment environment.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Function.
     */
    functionId: string;
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * unique project identifier
     */
    projectId: string;
    /**
     * A filter to return only DeployEnvironments that matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the deployment environment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the deployment environment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectors {
    /**
     * A list of selectors for the instance group. UNION operator is used for combining the instances selected by each selector.
     */
    items: outputs.GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectorsItem[];
}

export interface GetDevopsDeployEnvironmentsDeployEnvironmentCollectionItemComputeInstanceGroupSelectorsItem {
    /**
     * Compute instance OCID identifiers that are members of this group.
     */
    computeInstanceIds: string[];
    /**
     * Query expression confirming to the Oracle Cloud Infrastructure Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
     */
    query: string;
    /**
     * Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
     */
    region: string;
    /**
     * Defines the type of the instance selector for the group.
     */
    selectorType: string;
}

export interface GetDevopsDeployEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployPipelineDeployPipelineArtifacts {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelineDeployPipelineArtifactsItem[];
}

export interface GetDevopsDeployPipelineDeployPipelineArtifactsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeployPipelineDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelineDeployPipelineEnvironments {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelineDeployPipelineEnvironmentsItem[];
}

export interface GetDevopsDeployPipelineDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeployPipelineDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelineDeployPipelineParameters {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelineDeployPipelineParametersItem[];
}

export interface GetDevopsDeployPipelineDeployPipelineParametersItem {
    /**
     * Default value of the parameter.
     */
    defaultValue: string;
    /**
     * Optional description about the deployment pipeline.
     */
    description: string;
    /**
     * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
     */
    name: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollection {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItem {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * List of all artifacts used in the pipeline.
     */
    deployPipelineArtifacts: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifacts;
    /**
     * List of all environments used in the pipeline.
     */
    deployPipelineEnvironments: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironments;
    /**
     * Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
     */
    deployPipelineParameters: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameters;
    /**
     * Optional description about the deployment pipeline.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * unique project identifier
     */
    projectId: string;
    /**
     * A filter to return only DeployPipelines that matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifacts {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironments {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * The OCID of a stage
     */
    deployStageId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameters {
    /**
     * List of parameters defined for a deployment pipeline.
     */
    items: outputs.GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineParametersItem[];
}

export interface GetDevopsDeployPipelinesDeployPipelineCollectionItemDeployPipelineParametersItem {
    /**
     * Default value of the parameter.
     */
    defaultValue: string;
    /**
     * Optional description about the deployment pipeline.
     */
    description: string;
    /**
     * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
     */
    name: string;
}

export interface GetDevopsDeployPipelinesFilter {
    /**
     * Name of the parameter (case-sensitive). Parameter name must be ^[a-zA-Z][a-zA-Z_0-9]*$.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployStageApprovalPolicy {
    /**
     * Approval policy type.
     */
    approvalPolicyType: string;
    /**
     * A minimum number of approvals required for stage to proceed.
     */
    numberOfApprovalsRequired: number;
}

export interface GetDevopsDeployStageBlueBackendIps {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface GetDevopsDeployStageDeployStagePredecessorCollection {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: outputs.GetDevopsDeployStageDeployStagePredecessorCollectionItem[];
}

export interface GetDevopsDeployStageDeployStagePredecessorCollectionItem {
    /**
     * Unique identifier that is immutable on creation.
     */
    id: string;
}

export interface GetDevopsDeployStageFailurePolicy {
    /**
     * The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     */
    failureCount: number;
    /**
     * The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     */
    failurePercentage: number;
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface GetDevopsDeployStageGreenBackendIps {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface GetDevopsDeployStageLoadBalancerConfig {
    /**
     * Listen port for the backend server.
     */
    backendPort: number;
    /**
     * Name of the load balancer listener.
     */
    listenerName: string;
    /**
     * The OCID of the load balancer.
     */
    loadBalancerId: string;
    /**
     * The current state of the deployment stage.
     */
    state: string;
}

export interface GetDevopsDeployStageRollbackPolicy {
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface GetDevopsDeployStageRolloutPolicy {
    /**
     * The number that will be used to determine how many instances will be deployed concurrently.
     */
    batchCount: number;
    /**
     * The duration of delay between batch rollout. The default delay is 1 minute.
     */
    batchDelayInSeconds: number;
    /**
     * The percentage that will be used to determine how many instances will be deployed concurrently.
     */
    batchPercentage: number;
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
    /**
     * Indicates the criteria to stop.
     */
    rampLimitPercent: number;
}

export interface GetDevopsDeployStageWaitCriteria {
    /**
     * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
     */
    waitDuration: string;
    /**
     * Wait criteria type.
     */
    waitType: string;
}

export interface GetDevopsDeployStagesDeployStageCollection {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: outputs.GetDevopsDeployStagesDeployStageCollectionItem[];
}

export interface GetDevopsDeployStagesDeployStageCollectionItem {
    /**
     * Specifies the approval policy.
     */
    approvalPolicy: outputs.GetDevopsDeployStagesDeployStageCollectionItemApprovalPolicy;
    /**
     * Collection of backend environment IP addresses.
     */
    blueBackendIps: outputs.GetDevopsDeployStagesDeployStageCollectionItemBlueBackendIps;
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A compute instance group environment OCID for rolling deployment.
     */
    computeInstanceGroupDeployEnvironmentId: string;
    /**
     * User provided key and value pair configuration, which is assigned through constants or parameter.
     */
    config: {[key: string]: any};
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Optional binary artifact OCID user may provide to this stage.
     */
    deployArtifactId: string;
    /**
     * Additional file artifact OCIDs.
     */
    deployArtifactIds: string[];
    /**
     * The ID of the parent pipeline.
     */
    deployPipelineId: string;
    /**
     * Collection containing the predecessors of a stage.
     */
    deployStagePredecessorCollection: outputs.GetDevopsDeployStagesDeployStageCollectionItemDeployStagePredecessorCollection;
    /**
     * Deployment stage type.
     */
    deployStageType: string;
    /**
     * The OCID of the artifact that contains the deployment specification.
     */
    deploymentSpecDeployArtifactId: string;
    /**
     * Optional description about the deployment stage.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * A Docker image artifact OCID.
     */
    dockerImageDeployArtifactId: string;
    /**
     * Specifies a failure policy for a compute instance group rolling deployment stage.
     */
    failurePolicy: outputs.GetDevopsDeployStagesDeployStageCollectionItemFailurePolicy;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Function environment OCID.
     */
    functionDeployEnvironmentId: string;
    /**
     * Timeout for execution of the Function. Value in seconds.
     */
    functionTimeoutInSeconds: number;
    /**
     * Collection of backend environment IP addresses.
     */
    greenBackendIps: outputs.GetDevopsDeployStagesDeployStageCollectionItemGreenBackendIps;
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A boolean flag specifies whether this stage executes asynchronously.
     */
    isAsync: boolean;
    /**
     * A boolean flag specifies whether the invoked function must be validated.
     */
    isValidationEnabled: boolean;
    /**
     * List of Kubernetes manifest artifact OCIDs, the manifests should not include any job resource.
     */
    kubernetesManifestDeployArtifactIds: string[];
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Specifies config for load balancer traffic shift stages.
     */
    loadBalancerConfig: outputs.GetDevopsDeployStagesDeployStageCollectionItemLoadBalancerConfig;
    /**
     * Maximum usable memory for the Function (in MB).
     */
    maxMemoryInMbs: string;
    /**
     * Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    namespace: string;
    /**
     * Kubernetes cluster environment OCID for deployment.
     */
    okeClusterDeployEnvironmentId: string;
    /**
     * The OCID of a project.
     */
    projectId: string;
    /**
     * Specifies the rollback policy. This is initiated on the failure of certain stage types.
     */
    rollbackPolicy: outputs.GetDevopsDeployStagesDeployStageCollectionItemRollbackPolicy;
    /**
     * Description of rollout policy for load balancer traffic shift stage.
     */
    rolloutPolicy: outputs.GetDevopsDeployStagesDeployStageCollectionItemRolloutPolicy;
    /**
     * A filter to return only deployment stages that matches the given lifecycle state.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
    /**
     * Specifies the target or destination backend set.
     */
    trafficShiftTarget: string;
    /**
     * Specifies wait criteria for the Wait stage.
     */
    waitCriteria: outputs.GetDevopsDeployStagesDeployStageCollectionItemWaitCriteria;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemApprovalPolicy {
    /**
     * Approval policy type.
     */
    approvalPolicyType: string;
    /**
     * A minimum number of approvals required for stage to proceed.
     */
    numberOfApprovalsRequired: number;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemBlueBackendIps {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface GetDevopsDeployStagesDeployStageCollectionItemDeployStagePredecessorCollection {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: outputs.GetDevopsDeployStagesDeployStageCollectionItemDeployStagePredecessorCollectionItem[];
}

export interface GetDevopsDeployStagesDeployStageCollectionItemDeployStagePredecessorCollectionItem {
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemFailurePolicy {
    /**
     * The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     */
    failureCount: number;
    /**
     * The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     */
    failurePercentage: number;
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemGreenBackendIps {
    /**
     * The IP address of the backend server. A server could be a compute instance or a load balancer.
     */
    items: string[];
}

export interface GetDevopsDeployStagesDeployStageCollectionItemLoadBalancerConfig {
    /**
     * Listen port for the backend server.
     */
    backendPort: number;
    /**
     * Name of the load balancer listener.
     */
    listenerName: string;
    /**
     * The OCID of the load balancer.
     */
    loadBalancerId: string;
    /**
     * A filter to return only deployment stages that matches the given lifecycle state.
     */
    state: string;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemRollbackPolicy {
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemRolloutPolicy {
    /**
     * The number that will be used to determine how many instances will be deployed concurrently.
     */
    batchCount: number;
    /**
     * The duration of delay between batch rollout. The default delay is 1 minute.
     */
    batchDelayInSeconds: number;
    /**
     * The percentage that will be used to determine how many instances will be deployed concurrently.
     */
    batchPercentage: number;
    /**
     * The type of policy used for rolling out a deployment stage.
     */
    policyType: string;
    /**
     * Indicates the criteria to stop.
     */
    rampLimitPercent: number;
}

export interface GetDevopsDeployStagesDeployStageCollectionItemWaitCriteria {
    /**
     * The absolute wait duration. An ISO 8601 formatted duration string. Minimum waitDuration should be 5 seconds. Maximum waitDuration can be up to 2 days.
     */
    waitDuration: string;
    /**
     * Wait criteria type.
     */
    waitType: string;
}

export interface GetDevopsDeployStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeploymentDeployArtifactOverrideArguments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeployArtifactOverrideArgumentsItem[];
}

export interface GetDevopsDeploymentDeployArtifactOverrideArgumentsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * Name of the step.
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface GetDevopsDeploymentDeployPipelineArtifacts {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeployPipelineArtifactsItem[];
}

export interface GetDevopsDeploymentDeployPipelineArtifactsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeploymentDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * The OCID of the stage.
     */
    deployStageId: string;
    /**
     * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeploymentDeployPipelineEnvironments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeployPipelineEnvironmentsItem[];
}

export interface GetDevopsDeploymentDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeploymentDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * The OCID of the stage.
     */
    deployStageId: string;
    /**
     * Deployment identifier which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName: string;
}

export interface GetDevopsDeploymentDeploymentArguments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentDeploymentArgumentsItem[];
}

export interface GetDevopsDeploymentDeploymentArgumentsItem {
    /**
     * Name of the step.
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface GetDevopsDeploymentDeploymentExecutionProgress {
    /**
     * Map of stage OCIDs to deploy stage execution progress model.
     */
    deployStageExecutionProgress: {[key: string]: any};
    /**
     * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeFinished: string;
    /**
     * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeStarted: string;
}

export interface GetDevopsDeploymentsDeploymentCollection {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItem {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     */
    deployArtifactOverrideArguments: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployArtifactOverrideArguments;
    /**
     * List of all artifacts used in the pipeline.
     */
    deployPipelineArtifacts: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifacts;
    /**
     * List of all environments used in the pipeline.
     */
    deployPipelineEnvironments: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironments;
    /**
     * The ID of the parent pipeline.
     */
    deployPipelineId: string;
    /**
     * The OCID of the stage.
     */
    deployStageId: string;
    /**
     * Specifies list of arguments passed along with the deployment.
     */
    deploymentArguments: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeploymentArguments;
    /**
     * The execution progress details of a deployment.
     */
    deploymentExecutionProgress: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeploymentExecutionProgress;
    /**
     * Specifies type of Deployment
     */
    deploymentType: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     */
    previousDeploymentId: string;
    /**
     * unique project identifier
     */
    projectId: string;
    /**
     * A filter to return only Deployments that matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployArtifactOverrideArguments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgumentsItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgumentsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * Name of the step.
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifacts {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItem {
    /**
     * The OCID of an artifact
     */
    deployArtifactId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItemDeployPipelineStages;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItemDeployPipelineStages {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineArtifactsItemDeployPipelineStagesItem {
    /**
     * The OCID of the stage.
     */
    deployStageId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItem {
    /**
     * The OCID of an Environment
     */
    deployEnvironmentId: string;
    /**
     * List of stages.
     */
    deployPipelineStages: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStages;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStages {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStagesItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeployPipelineEnvironmentsItemDeployPipelineStagesItem {
    /**
     * The OCID of the stage.
     */
    deployStageId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeploymentArguments {
    /**
     * A list of stage predecessors for a stage.
     */
    items: outputs.GetDevopsDeploymentsDeploymentCollectionItemDeploymentArgumentsItem[];
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeploymentArgumentsItem {
    /**
     * Name of the step.
     */
    name: string;
    /**
     * value of the argument.
     */
    value: string;
}

export interface GetDevopsDeploymentsDeploymentCollectionItemDeploymentExecutionProgress {
    /**
     * Map of stage OCIDs to deploy stage execution progress model.
     */
    deployStageExecutionProgress: {[key: string]: any};
    /**
     * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeFinished: string;
    /**
     * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeStarted: string;
}

export interface GetDevopsDeploymentsFilter {
    /**
     * Name of the step.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsProjectNotificationConfig {
    /**
     * The topic ID for notifications.
     */
    topicId: string;
}

export interface GetDevopsProjectsFilter {
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsProjectsProjectCollection {
    items: outputs.GetDevopsProjectsProjectCollectionItem[];
}

export interface GetDevopsProjectsProjectCollectionItem {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Project description.
     */
    description: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name: string;
    /**
     * Namespace associated with the project.
     */
    namespace: string;
    /**
     * Notification configuration for the project.
     */
    notificationConfig: outputs.GetDevopsProjectsProjectCollectionItemNotificationConfig;
    /**
     * A filter to return only Projects that matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetDevopsProjectsProjectCollectionItemNotificationConfig {
    /**
     * The topic ID for notifications.
     */
    topicId: string;
}

export interface GetDnsRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsRecordsRecord {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId?: string;
    /**
     * Search by domain. Will match any record whose domain (case-insensitive) equals the provided value.
     *
     * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
     */
    domain: string;
    /**
     * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
     */
    isProtected: boolean;
    /**
     * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
     */
    rdata?: string;
    /**
     * A unique identifier for the record within its zone.
     */
    recordHash: string;
    /**
     * The latest version of the record's zone in which its RRSet differs from the preceding version.
     */
    rrsetVersion: string;
    /**
     * Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
     *
     * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
     */
    rtype: string;
    /**
     * The Time To Live for the record, in seconds.
     */
    ttl?: number;
    /**
     * The name or OCID of the target zone.
     *
     * @deprecated The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
     */
    zoneNameOrId: string;
}

export interface GetDnsResolverAttachedView {
    /**
     * The OCID of the view.
     */
    viewId: string;
}

export interface GetDnsResolverEndpoint {
    /**
     * The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
     */
    compartmentId: string;
    /**
     * The type of resolver endpoint. VNIC is currently the only supported type.
     */
    endpointType: string;
    /**
     * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
     */
    forwardingAddress: string;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
     */
    isForwarding: boolean;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for listening.
     */
    isListening: boolean;
    /**
     * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
     */
    listeningAddress: string;
    /**
     * The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
     */
    name: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The current state of the resource.
     */
    state: string;
    /**
     * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
     */
    subnetId: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface GetDnsResolverEndpointsFilter {
    /**
     * The name of a resource.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsResolverEndpointsResolverEndpoint {
    /**
     * The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
     */
    compartmentId: string;
    /**
     * The type of resolver endpoint. VNIC is currently the only supported type.
     */
    endpointType: string;
    /**
     * An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
     */
    forwardingAddress: string;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
     */
    isForwarding: boolean;
    /**
     * A Boolean flag indicating whether or not the resolver endpoint is for listening.
     */
    isListening: boolean;
    /**
     * An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
     */
    listeningAddress: string;
    /**
     * The name of a resource.
     */
    name: string;
    /**
     * An array of network security group OCIDs for the resolver endpoint. These must be part of the VCN that the resolver endpoint is a part of.
     */
    nsgIds?: string[];
    /**
     * The OCID of the target resolver.
     */
    resolverId: string;
    /**
     * Value must be `PRIVATE` when listing private name resolver endpoints.
     */
    scope: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
     */
    subnetId: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface GetDnsResolverRule {
    /**
     * The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
     */
    action: string;
    /**
     * A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
     */
    clientAddressConditions: string[];
    /**
     * IP addresses to which queries should be forwarded. Currently limited to a single address.
     */
    destinationAddresses: string[];
    /**
     * A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
     */
    qnameCoverConditions: string[];
    /**
     * Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
     */
    sourceEndpointName: string;
}

export interface GetDnsResolversFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsResolversResolver {
    /**
     * The OCID of the attached VCN.
     */
    attachedVcnId: string;
    attachedViews: outputs.GetDnsResolversResolverAttachedView[];
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * The OCID of the default view.
     */
    defaultViewId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The displayName of a resource.
     */
    displayName: string;
    endpoints: outputs.GetDnsResolversResolverEndpoint[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of a resource.
     */
    id: string;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    isProtected: boolean;
    resolverId: string;
    rules: outputs.GetDnsResolversResolverRule[];
    /**
     * Value must be `PRIVATE` when listing private name resolvers.
     */
    scope: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface GetDnsResolversResolverAttachedView {
    viewId: string;
}

export interface GetDnsResolversResolverEndpoint {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    endpointType: string;
    forwardingAddress: string;
    isForwarding: boolean;
    isListening: boolean;
    listeningAddress: string;
    name: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    subnetId: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface GetDnsResolversResolverRule {
    action: string;
    clientAddressConditions: string[];
    destinationAddresses: string[];
    qnameCoverConditions: string[];
    sourceEndpointName: string;
}

export interface GetDnsRrsetItem {
    /**
     * The target fully-qualified domain name (FQDN) within the target zone.
     */
    domain: string;
    /**
     * A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
     */
    isProtected: boolean;
    /**
     * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
     */
    rdata: string;
    /**
     * A unique identifier for the record within its zone.
     */
    recordHash: string;
    /**
     * The latest version of the record's zone in which its RRSet differs from the preceding version.
     */
    rrsetVersion: string;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype: string;
    /**
     * The Time To Live for the record, in seconds.
     */
    ttl: number;
}

export interface GetDnsSteeringPoliciesFilter {
    /**
     * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsSteeringPoliciesSteeringPolicy {
    /**
     * The set of all answers that can potentially issue from the steering policy.
     */
    answers: outputs.GetDnsSteeringPoliciesSteeringPolicyAnswer[];
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The displayName of a resource.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags: {[key: string]: any};
    /**
     * Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
     */
    healthCheckMonitorId: string;
    /**
     * The OCID of a resource.
     */
    id: string;
    /**
     * The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
     */
    rules: outputs.GetDnsSteeringPoliciesSteeringPolicyRule[];
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * Search by steering template type. Will match any resource whose template type matches the provided value.
     */
    template: string;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
    /**
     * The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
     */
    ttl: number;
}

export interface GetDnsSteeringPoliciesSteeringPolicyAnswer {
    /**
     * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
     */
    isDisabled: boolean;
    /**
     * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     */
    name: string;
    /**
     * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
     */
    pool: string;
    /**
     * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rdata: string;
    /**
     * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rtype: string;
}

export interface GetDnsSteeringPoliciesSteeringPolicyRule {
    /**
     * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
     */
    cases: outputs.GetDnsSteeringPoliciesSteeringPolicyRuleCase[];
    /**
     * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
     */
    defaultAnswerDatas: outputs.GetDnsSteeringPoliciesSteeringPolicyRuleDefaultAnswerData[];
    /**
     * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
     */
    defaultCount: number;
    /**
     * A user-defined description of the rule's purpose or behavior.
     */
    description: string;
    /**
     * The type of a rule determines its sorting/filtering behavior.
     */
    ruleType: string;
}

export interface GetDnsSteeringPoliciesSteeringPolicyRuleCase {
    /**
     * An array of `SteeringPolicyPriorityAnswerData` objects.
     */
    answerDatas: outputs.GetDnsSteeringPoliciesSteeringPolicyRuleCaseAnswerData[];
    /**
     * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
     */
    caseCondition: string;
    /**
     * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
     */
    count: number;
}

export interface GetDnsSteeringPoliciesSteeringPolicyRuleCaseAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface GetDnsSteeringPoliciesSteeringPolicyRuleDefaultAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface GetDnsSteeringPolicyAnswer {
    /**
     * Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
     */
    isDisabled: boolean;
    /**
     * A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     */
    name: string;
    /**
     * The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
     */
    pool: string;
    /**
     * The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rdata: string;
    /**
     * The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     */
    rtype: string;
}

export interface GetDnsSteeringPolicyAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsSteeringPolicyAttachmentsSteeringPolicyAttachment {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * The displayName of a resource.
     */
    displayName: string;
    /**
     * The attached domain within the attached zone.
     */
    domainName: string;
    /**
     * The OCID of a resource.
     */
    id: string;
    /**
     * The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     */
    rtypes: string[];
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
     */
    steeringPolicyId: string;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
    /**
     * Search by zone OCID. Will match any resource whose zone ID matches the provided value.
     */
    zoneId: string;
}

export interface GetDnsSteeringPolicyRule {
    /**
     * An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
     */
    cases: outputs.GetDnsSteeringPolicyRuleCase[];
    /**
     * Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
     */
    defaultAnswerDatas: outputs.GetDnsSteeringPolicyRuleDefaultAnswerData[];
    /**
     * Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
     */
    defaultCount: number;
    /**
     * A user-defined description of the rule's purpose or behavior.
     */
    description: string;
    /**
     * The type of a rule determines its sorting/filtering behavior.
     */
    ruleType: string;
}

export interface GetDnsSteeringPolicyRuleCase {
    /**
     * An array of `SteeringPolicyPriorityAnswerData` objects.
     */
    answerDatas: outputs.GetDnsSteeringPolicyRuleCaseAnswerData[];
    /**
     * An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.subnet in ('192.0.2.0/24')` to define a case that matches queries from that office.
     */
    caseCondition: string;
    /**
     * The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
     */
    count: number;
}

export interface GetDnsSteeringPolicyRuleCaseAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface GetDnsSteeringPolicyRuleDefaultAnswerData {
    /**
     * An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
     */
    answerCondition: string;
    /**
     * Keeps the answer only if the value is `true`.
     */
    shouldKeep: boolean;
    /**
     * The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
     */
    value: number;
}

export interface GetDnsTsigKeysFilter {
    /**
     * The name of a resource.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsTsigKeysTsigKey {
    /**
     * TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
     */
    algorithm: string;
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of a resource.
     */
    id: string;
    /**
     * The name of a resource.
     */
    name: string;
    /**
     * A base64 string encoding the binary shared secret.
     */
    secret: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
     */
    timeUpdated: string;
}

export interface GetDnsViewsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsViewsView {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * The displayName of a resource.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of a resource.
     */
    id: string;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    isProtected: boolean;
    /**
     * Value must be `PRIVATE` when listing private views.
     */
    scope: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeUpdated: string;
}

export interface GetDnsZonesFilter {
    /**
     * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsZonesZone {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags: {[key: string]: any};
    /**
     * External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     */
    externalMasters: outputs.GetDnsZonesZoneExternalMaster[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the zone.
     */
    id: string;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    isProtected: boolean;
    /**
     * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     */
    name: string;
    /**
     * The authoritative nameservers for the zone.
     */
    nameservers: outputs.GetDnsZonesZoneNameserver[];
    /**
     * Specifies to operate only on resources that have a matching DNS scope. This value will be null 
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     */
    scope: string;
    /**
     * The canonical absolute URL of the resource.
     */
    self: string;
    /**
     * The current serial of the zone. As seen in the zone's SOA record.
     */
    serial: number;
    /**
     * The state of a resource.
     */
    state: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
     */
    version: string;
    /**
     * The OCID of the view the resource is associated with.
     */
    viewId: string;
    /**
     * Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     */
    zoneType: string;
}

export interface GetDnsZonesZoneExternalMaster {
    /**
     * The server's IP address (IPv4 or IPv6).
     */
    address: string;
    /**
     * The server's port. Port value must be a value of 53, otherwise omit the port value.
     */
    port: number;
    /**
     * Search for zones that are associated with a TSIG key.
     */
    tsigKeyId: string;
}

export interface GetDnsZonesZoneNameserver {
    /**
     * The hostname of the nameserver.
     */
    hostname: string;
}

export interface GetEmailDkimsDkimCollection {
    items: outputs.GetEmailDkimsDkimCollectionItem[];
}

export interface GetEmailDkimsDkimCollectionItem {
    /**
     * The DNS CNAME record value to provision to the DKIM DNS subdomain, when using the CNAME method for DKIM setup (preferred).
     */
    cnameRecordValue: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this DKIM.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the DKIM. Avoid entering confidential information.
     */
    description: string;
    /**
     * The name of the DNS subdomain that must be provisioned to enable email recipients to verify DKIM signatures. It is usually created with a CNAME record set to the cnameRecordValue
     */
    dnsSubdomainName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the email domain to which this DKIM belongs.
     */
    emailDomainId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to only return resources that match the given id exactly.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource.
     */
    lifecycleDetails: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the DKIM was created. Times are expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
     */
    timeCreated: string;
    /**
     * The time of the last change to the DKIM configuration, due to a state change or an update operation. Times are expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".
     */
    timeUpdated: string;
    /**
     * The DNS TXT record value to provision to the DKIM DNS subdomain in place of using a CNAME record. This is used in cases where a CNAME can not be used, such as when the cnameRecordValue would exceed the maximum length for a DNS entry. This can also be used by customers who have an existing procedure to directly provision TXT records for DKIM. Be aware that many DNS APIs will require you to break this string into segments of less than 255 characters.
     */
    txtRecordValue: string;
}

export interface GetEmailDkimsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailEmailDomainsEmailDomainCollection {
    items: outputs.GetEmailEmailDomainsEmailDomainCollectionItem[];
}

export interface GetEmailEmailDomainsEmailDomainCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
     */
    activeDkimId: string;
    /**
     * The OCID for the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of a email domain.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to only return resources that match the given id exactly.
     */
    id: string;
    /**
     * Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
     */
    isSpf: boolean;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
     */
    timeCreated: string;
}

export interface GetEmailEmailDomainsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailSendersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailSendersSender {
    /**
     * The OCID for the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The email address of the approved sender.
     */
    emailAddress: string;
    /**
     * The email domain used to assert responsibility for emails sent from this sender.
     */
    emailDomainId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique OCID of the sender.
     */
    id: string;
    /**
     * Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
     */
    isSpf: boolean;
    /**
     * The current state of a sender.
     */
    state: string;
    /**
     * The date and time the approved sender was added in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
}

export interface GetEmailSuppressionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailSuppressionsSuppression {
    /**
     * The OCID for the compartment.
     */
    compartmentId: string;
    /**
     * The email address of the suppression.
     */
    emailAddress: string;
    /**
     * The specific error message returned by a system that resulted in the suppression. This message is usually an SMTP error code with additional descriptive text. Not provided for all types of suppressions.
     */
    errorDetail: string;
    /**
     * DNS name of the source of the error that caused the suppression. Will be set to either the remote-mta or reporting-mta field from a delivery status notification (RFC 3464) when available. Not provided for all types of suppressions, and not always known.
     */
    errorSource: string;
    /**
     * The unique OCID of the suppression.
     */
    id: string;
    /**
     * The value of the Message-ID header from the email that triggered a suppression. This value is as defined in RFC 5322 section 3.6.4, excluding angle-brackets. Not provided for all types of suppressions.
     */
    messageId: string;
    /**
     * The reason that the email address was suppressed. For more information on the types of bounces, see [Suppression List](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
     */
    reason: string;
    /**
     * The date and time a recipient's email address was added to the suppression list, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated: string;
    /**
     * The last date and time the suppression prevented submission in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     */
    timeLastSuppressed: string;
}

export interface GetEventsRuleActions {
    /**
     * A list of one or more Action objects.
     */
    actions: outputs.GetEventsRuleActionsAction[];
}

export interface GetEventsRuleActionsAction {
    /**
     * The action to perform if the condition in the rule matches an event.
     * * **ONS:** Send to an Oracle Notification Service topic.
     * * **OSS:** Send to a stream from Oracle Streaming Service.
     * * **FAAS:** Send to an Oracle Functions Service endpoint.
     */
    actionType: string;
    /**
     * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
     */
    functionId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     */
    id: string;
    /**
     * Whether or not this rule is currently enabled.  Example: `true`
     */
    isEnabled: boolean;
    /**
     * A message generated by the Events service about the current state of this rule.
     */
    lifecycleMessage: string;
    /**
     * The current state of the rule.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
     */
    streamId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
     */
    topicId: string;
}

export interface GetEventsRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEventsRulesRule {
    /**
     * A list of one or more Action objects.
     */
    actions: outputs.GetEventsRulesRuleActions;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    compartmentId: string;
    /**
     * A filter that specifies the event that will trigger actions associated with this rule. A few  important things to remember about filters:
     * * Fields not mentioned in the condition are ignored. You can create a valid filter that matches all events with two curly brackets: `{}`
     */
    condition: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
     */
    description: string;
    /**
     * A filter to return only rules with descriptions that match the displayName string in this parameter.  Example: `"This rule sends a notification upon completion of DbaaS backup."`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     */
    id: string;
    /**
     * Whether or not this rule is currently enabled.  Example: `true`
     */
    isEnabled: boolean;
    /**
     * A message generated by the Events service about the current state of this rule.
     */
    lifecycleMessage: string;
    /**
     * A filter to return only rules that match the lifecycle state in this parameter.  Example: `Creating`
     */
    state: string;
    /**
     * The time this rule was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     */
    timeCreated: string;
}

export interface GetEventsRulesRuleActions {
    /**
     * A list of one or more Action objects.
     */
    actions: outputs.GetEventsRulesRuleActionsAction[];
}

export interface GetEventsRulesRuleActionsAction {
    /**
     * The action to perform if the condition in the rule matches an event.
     * * **ONS:** Send to an Oracle Notification Service topic.
     * * **OSS:** Send to a stream from Oracle Streaming Service.
     * * **FAAS:** Send to an Oracle Functions Service endpoint.
     */
    actionType: string;
    /**
     * A string that describes the details of the rule. It does not have to be unique, and you can change it. Avoid entering confidential information.
     */
    description: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Function hosted by Oracle Functions Service.
     */
    functionId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     */
    id: string;
    /**
     * Whether or not this rule is currently enabled.  Example: `true`
     */
    isEnabled: boolean;
    /**
     * A message generated by the Events service about the current state of this rule.
     */
    lifecycleMessage: string;
    /**
     * A filter to return only rules that match the lifecycle state in this parameter.  Example: `Creating`
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream to which messages are delivered.
     */
    streamId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic to which messages are delivered.
     */
    topicId: string;
}

export interface GetFileStorageExportSetsExportSet {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     */
    displayName: string;
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id: string;
    /**
     * Controls the maximum `tbytes`, `fbytes`, and `abytes`, values reported by `NFS FSSTAT` calls through any associated mount targets. This is an advanced feature. For most applications, use the default value. The `tbytes` value reported by `FSSTAT` will be `maxFsStatBytes`. The value of `fbytes` and `abytes` will be `maxFsStatBytes` minus the metered size of the file system. If the metered size is larger than `maxFsStatBytes`, then `fbytes` and `abytes` will both be '0'.
     */
    maxFsStatBytes: string;
    /**
     * Controls the maximum `tfiles`, `ffiles`, and `afiles` values reported by `NFS FSSTAT` calls through any associated mount targets. This is an advanced feature. For most applications, use the default value. The `tfiles` value reported by `FSSTAT` will be `maxFsStatFiles`. The value of `ffiles` and `afiles` will be `maxFsStatFiles` minus the metered size of the file system. If the metered size is larger than `maxFsStatFiles`, then `ffiles` and `afiles` will both be '0'.
     */
    maxFsStatFiles: string;
    mountTargetId: string;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the export set was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual cloud network (VCN) the export set is in.
     */
    vcnId: string;
}

export interface GetFileStorageExportSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageExportsExport {
    /**
     * Policies that apply to NFS requests made through this export. `exportOptions` contains a sequential list of `ClientOptions`. Each `ClientOptions` item defines the export options that are applied to a specified set of clients.
     */
    exportOptions: outputs.GetFileStorageExportsExportExportOption[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     */
    exportSetId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId: string;
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id: string;
    /**
     * Path used to access the associated file system.
     */
    path: string;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetFileStorageExportsExportExportOption {
    /**
     * Type of access to grant clients using the file system through this export. If unspecified defaults to `READ_ONLY`.
     */
    access: string;
    /**
     * GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to `65534`.
     */
    anonymousGid: string;
    /**
     * UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to `65534`.
     */
    anonymousUid: string;
    /**
     * Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If `ALL`, all users and groups are remapped; if `ROOT`, only the root user and group (UID/GID 0) are remapped; if `NONE`, no remapping is done. If unspecified, defaults to `ROOT`.
     */
    identitySquash: string;
    /**
     * If `true`, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to `true`.
     */
    requirePrivilegedSourcePort: boolean;
    /**
     * Clients these options should apply to. Must be a either single IPv4 address or single IPv4 CIDR block.
     */
    source: string;
}

export interface GetFileStorageExportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageFileSystemsFileSystem {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id: string;
    /**
     * Specifies whether the file system has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    isCloneParent: boolean;
    /**
     * Specifies whether the data has finished copying from the source to the clone. Hydration can take up to several hours to complete depending on the size of the source. The source and clone remain available during hydration, but there may be some performance impact. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm#hydration).
     */
    isHydrated: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
     */
    kmsKeyId: string;
    /**
     * Additional information about the current 'lifecycleState'.
     */
    lifecycleDetails: string;
    /**
     * The number of bytes consumed by the file system, including any snapshots. This number reflects the metered size of the file system and is updated asynchronously with respect to updates to the file system. For more information, see [File System Usage and Metering](https://docs.cloud.oracle.com/iaas/Content/File/Concepts/FSutilization.htm).
     */
    meteredBytes: string;
    /**
     * Source information for the file system.
     */
    sourceDetails: outputs.GetFileStorageFileSystemsFileSystemSourceDetails;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    sourceSnapshotId: string;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetFileStorageFileSystemsFileSystemSourceDetails {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    parentFileSystemId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    sourceSnapshotId: string;
}

export interface GetFileStorageFileSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageMountTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageMountTargetsMountTarget {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     */
    exportSetId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    hostnameLabel: string;
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id: string;
    ipAddress: string;
    /**
     * Additional information about the current 'lifecycleState'.
     */
    lifecycleDetails: string;
    /**
     * A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this mount target. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the mount target from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
     */
    nsgIds: string[];
    /**
     * The OCIDs of the private IP addresses associated with this mount target.
     */
    privateIpIds: string[];
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the mount target is in.
     */
    subnetId: string;
    /**
     * The date and time the mount target was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetFileStorageSnapshotsFilter {
    /**
     * Name of the snapshot. This value is immutable.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageSnapshotsSnapshot {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id: string;
    /**
     * Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    isCloneSource: boolean;
    /**
     * Additional information about the current 'lifecycleState'.
     */
    lifecycleDetails: string;
    /**
     * Name of the snapshot. This value is immutable.
     */
    name: string;
    /**
     * An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent's `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     */
    provenanceId: string;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state: string;
    /**
     * The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetFunctionsApplicationTraceConfig {
    /**
     * The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
     */
    domainId: string;
    /**
     * Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface GetFunctionsApplicationsApplication {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
     */
    compartmentId: string;
    /**
     * Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
     */
    config: {[key: string]: any};
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only applications with display names that match the display name string. Matching is exact.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only applications with the specified OCID.
     */
    id: string;
    /**
     * A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
     */
    subnetIds: string[];
    /**
     * A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
     */
    syslogUrl: string;
    /**
     * The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     */
    timeCreated: string;
    /**
     * The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
     */
    timeUpdated: string;
    /**
     * Define the tracing configuration for an application.
     */
    traceConfig: outputs.GetFunctionsApplicationsApplicationTraceConfig;
}

export interface GetFunctionsApplicationsApplicationTraceConfig {
    /**
     * The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
     */
    domainId: string;
    /**
     * Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface GetFunctionsApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsFunctionTraceConfig {
    /**
     * Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface GetFunctionsFunctionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsFunctionsFunction {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
     */
    applicationId: string;
    /**
     * The OCID of the compartment that contains the function.
     */
    compartmentId: string;
    /**
     * Function configuration. Overrides application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
     */
    config: {[key: string]: any};
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only functions with display names that match the display name string. Matching is exact.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only functions with the specified OCID.
     */
    id: string;
    /**
     * The qualified name of the Docker image to use in the function, including the image tag. The image should be in the Oracle Cloud Infrastructure Registry that is in the same region as the function itself. Example: `phx.ocir.io/ten/functions/function:0.0.1`
     */
    image: string;
    /**
     * The image digest for the version of the image that will be pulled when invoking this function. If no value is specified, the digest currently associated with the image in the Oracle Cloud Infrastructure Registry will be used. Example: `sha256:ca0eeb6fb05351dfc8759c20733c91def84cb8007aa89a5bf606bc8b315b9fc7`
     */
    imageDigest: string;
    /**
     * The base https invoke URL to set on a client in order to invoke a function. This URL will never change over the lifetime of the function and can be cached.
     */
    invokeEndpoint: string;
    /**
     * Maximum usable memory for the function (MiB).
     */
    memoryInMbs: string;
    /**
     * A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
     */
    state: string;
    /**
     * The time the function was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     */
    timeCreated: string;
    /**
     * The time the function was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     */
    timeUpdated: string;
    /**
     * Timeout for executions of the function. Value in seconds.
     */
    timeoutInSeconds: number;
    /**
     * Define the tracing configuration for a function.
     */
    traceConfig: outputs.GetFunctionsFunctionsFunctionTraceConfig;
}

export interface GetFunctionsFunctionsFunctionTraceConfig {
    /**
     * Define if tracing is enabled for the resource.
     */
    isEnabled: boolean;
}

export interface GetGoldenGateDatabaseRegistrationsDatabaseRegistrationCollection {
    items: outputs.GetGoldenGateDatabaseRegistrationsDatabaseRegistrationCollectionItem[];
}

export interface GetGoldenGateDatabaseRegistrationsDatabaseRegistrationCollectionItem {
    /**
     * Credential store alias.
     */
    aliasName: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Connect descriptor or Easy Connect Naming method that Oracle GoldenGate uses to connect to a database.
     */
    connectionString: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId: string;
    /**
     * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Metadata about this specific object.
     */
    description: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName: string;
    /**
     * A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn: string;
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the databaseRegistration being referenced.
     */
    id: string;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    ipAddress: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    keyId: string;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    password: string;
    /**
     * A Private Endpoint IP Address created in the customer's subnet.  A customer database can expect network traffic initiated by GGS from this IP address and send network traffic to this IP address, typically in response to requests from GGS (OGG).  The customer may utilize this IP address in Security Lists or Network Security Groups (NSG) as needed.
     */
    rcePrivateIp: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the the GGS Secret will be created. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Compartment in which to create a Secret.
     */
    secretCompartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer GGS Secret being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Secret
     */
    secretId: string;
    /**
     * A filter to return only the resources that match the 'lifecycleState' given.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId: string;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated: string;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated: string;
    /**
     * The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    username: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    vaultId: string;
    wallet: string;
}

export interface GetGoldenGateDatabaseRegistrationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentBackupsDeploymentBackupCollection {
    items: outputs.GetGoldenGateDeploymentBackupsDeploymentBackupCollectionItem[];
}

export interface GetGoldenGateDeploymentBackupsDeploymentBackupCollectionItem {
    /**
     * Possible Deployment backup types.
     */
    backupType: string;
    /**
     * Name of the bucket where the object is to be uploaded in the object storage
     */
    bucket: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The ID of the deployment in which to list resources.
     */
    deploymentId: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName: string;
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     */
    id: string;
    /**
     * True if this object is automatically created
     */
    isAutomatic: boolean;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    /**
     * Name of namespace that serves as a container for all of your buckets
     */
    namespace: string;
    /**
     * Name of the object to be uploaded to object storage
     */
    object: string;
    /**
     * Version of OGG
     */
    oggVersion: string;
    /**
     * A filter to return only the resources that match the 'lifecycleState' given.
     */
    state: string;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated: string;
    /**
     * The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeOfBackup: string;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated: string;
}

export interface GetGoldenGateDeploymentBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentOggData {
    adminPassword: string;
    /**
     * The GoldenGate deployment console username.
     */
    adminUsername: string;
    /**
     * A PEM-encoded SSL certificate.
     */
    certificate: string;
    /**
     * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     */
    deploymentName: string;
    key: string;
}

export interface GetGoldenGateDeploymentsDeploymentCollection {
    items: outputs.GetGoldenGateDeploymentsDeploymentCollectionItem[];
}

export interface GetGoldenGateDeploymentsDeploymentCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * The Minimum number of OCPUs to be made available for this Deployment.
     */
    cpuCoreCount: number;
    /**
     * Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     */
    deploymentBackupId: string;
    /**
     * The deployment type.
     */
    deploymentType: string;
    /**
     * The URL of a resource.
     */
    deploymentUrl: string;
    /**
     * Metadata about this specific object.
     */
    description: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName: string;
    /**
     * A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn: string;
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     */
    id: string;
    /**
     * Indicates if auto scaling is enabled for the Deployment's CPU core count.
     */
    isAutoScalingEnabled: boolean;
    /**
     * True if all of the aggregate resources are working correctly.
     */
    isHealthy: boolean;
    /**
     * Indicates if the resource is the the latest available version.
     */
    isLatestVersion: boolean;
    /**
     * True if this object is publicly available.
     */
    isPublic: boolean;
    /**
     * The Oracle license model that applies to a Deployment.
     */
    licenseModel: string;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails: string;
    /**
     * An array of [Network Security Group](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/networksecuritygroups.htm) OCIDs used to define network access for a deployment.
     */
    nsgIds: string[];
    /**
     * Deployment Data for an OggDeployment
     */
    oggData: outputs.GetGoldenGateDeploymentsDeploymentCollectionItemOggData;
    /**
     * The private IP address in the customer's VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     */
    privateIpAddress: string;
    /**
     * The public IP address representing the access point for the Deployment.
     */
    publicIpAddress: string;
    /**
     * A filter to return only the resources that match the 'lifecycleState' given.
     */
    state: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId: string;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated: string;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated: string;
}

export interface GetGoldenGateDeploymentsDeploymentCollectionItemOggData {
    adminPassword: string;
    /**
     * The GoldenGate deployment console username.
     */
    adminUsername: string;
    /**
     * A PEM-encoded SSL certificate.
     */
    certificate: string;
    /**
     * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     */
    deploymentName: string;
    key: string;
}

export interface GetGoldenGateDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksHttpMonitorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksHttpMonitorsHttpMonitor {
    /**
     * Filters results by compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Filters results that exactly match the `displayName` field.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A dictionary of HTTP request headers.
     */
    headers: {[key: string]: any};
    /**
     * Filters results that match the `homeRegion`.
     */
    homeRegion: string;
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * The monitor interval in seconds. Valid values: 10, 30, and 60.
     */
    intervalInSeconds: number;
    /**
     * Enables or disables the monitor. Set to 'true' to launch monitoring.
     */
    isEnabled: boolean;
    /**
     * The supported HTTP methods available for probes.
     */
    method: string;
    /**
     * The optional URL path to probe, including query parameters.
     */
    path: string;
    /**
     * The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
     */
    port: number;
    /**
     * The supported protocols available for HTTP probes.
     */
    protocol: string;
    /**
     * A URL for fetching the probe results.
     */
    resultsUrl: string;
    /**
     * A list of targets (hostnames or IP addresses) of the probe.
     */
    targets: string[];
    /**
     * The RFC 3339-formatted creation date and time of the probe.
     */
    timeCreated: string;
    /**
     * The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
     */
    timeoutInSeconds: number;
    /**
     * A list of names of vantage points from which to execute the probe.
     */
    vantagePointNames: string[];
}

export interface GetHealthChecksHttpProbeResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksHttpProbeResultsHttpProbeResult {
    /**
     * The time immediately after the vantage point finishes establishing the connection to the server to retrieve the resource.
     */
    connectEnd: number;
    /**
     * The time immediately before the vantage point starts establishing the connection to the server to retrieve the resource.
     */
    connectStart: number;
    /**
     * TCP connection results.  All durations are in milliseconds.
     */
    connection: outputs.GetHealthChecksHttpProbeResultsHttpProbeResultConnection;
    /**
     * The DNS resolution results.
     */
    dns: outputs.GetHealthChecksHttpProbeResultsHttpProbeResultDns;
    /**
     * The time immediately before the vantage point finishes the domain name lookup for the resource.
     */
    domainLookupEnd: number;
    /**
     * The time immediately before the vantage point starts the domain name lookup for the resource.
     */
    domainLookupStart: number;
    /**
     * The total duration from start of request until response is fully consumed or the connection is closed.
     */
    duration: number;
    /**
     * The size, in octets, of the payload body prior to removing any applied content-codings.
     */
    encodedBodySize: number;
    /**
     * The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
     * * NONE - No error
     * * DNS - DNS errors
     * * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
     * * NETWORK - Network-related errors, for example a "network unreachable" error.
     * * SYSTEM - Internal system errors.
     */
    errorCategory: string;
    /**
     * The error information indicating why a probe execution failed.
     */
    errorMessage: string;
    /**
     * The time immediately before the vantage point starts to fetch the resource.
     */
    fetchStart: number;
    /**
     * True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
     */
    isHealthy: boolean;
    /**
     * True if the probe did not complete before the configured `timeoutInSeconds` value.
     */
    isTimedOut: boolean;
    /**
     * A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
     */
    key: string;
    /**
     * The OCID of a monitor or on-demand probe.
     */
    probeConfigurationId: string;
    /**
     * The supported protocols available for HTTP probes.
     */
    protocol: string;
    /**
     * The time immediately before the vantage point starts requesting the resource from the server.
     */
    requestStart: number;
    /**
     * The time immediately after the vantage point receives the last byte of the response or immediately before the transport connection is closed, whichever comes first.
     */
    responseEnd: number;
    /**
     * The time immediately after the vantage point's HTTP parser receives the first byte of the response.
     */
    responseStart: number;
    /**
     * The time immediately before the vantage point starts the handshake process to secure the current connection.
     */
    secureConnectionStart: number;
    /**
     * The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
     */
    startTime: number;
    /**
     * The HTTP response status code.
     */
    statusCode: number;
    /**
     * Filters results that match the `target`.
     */
    target: string;
    /**
     * The name of the vantage point that executed the probe.
     */
    vantagePointName: string;
}

export interface GetHealthChecksHttpProbeResultsHttpProbeResultConnection {
    /**
     * The connection IP address.
     */
    address: string;
    /**
     * Total connect duration, calculated using `connectEnd` minus `connectStart`.
     */
    connectDuration: number;
    /**
     * The port.
     */
    port: number;
    /**
     * The duration to secure the connection.  This value will be zero for insecure connections.  Calculated using `connectEnd` minus `secureConnectionStart`.
     */
    secureConnectDuration: number;
}

export interface GetHealthChecksHttpProbeResultsHttpProbeResultDns {
    /**
     * The addresses returned by DNS resolution.
     */
    addresses: string[];
    /**
     * Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
     */
    domainLookupDuration: number;
}

export interface GetHealthChecksPingMonitorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksPingMonitorsPingMonitor {
    /**
     * Filters results by compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Filters results that exactly match the `displayName` field.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Filters results that match the `homeRegion`.
     */
    homeRegion: string;
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * The monitor interval in seconds. Valid values: 10, 30, and 60.
     */
    intervalInSeconds: number;
    /**
     * Enables or disables the monitor. Set to 'true' to launch monitoring.
     */
    isEnabled: boolean;
    /**
     * The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
     */
    port: number;
    /**
     * The protocols for ping probes.
     */
    protocol: string;
    /**
     * A URL for fetching the probe results.
     */
    resultsUrl: string;
    /**
     * A list of targets (hostnames or IP addresses) of the probe.
     */
    targets: string[];
    /**
     * The RFC 3339-formatted creation date and time of the probe.
     */
    timeCreated: string;
    /**
     * The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
     */
    timeoutInSeconds: number;
    /**
     * A list of names of vantage points from which to execute the probe.
     */
    vantagePointNames: string[];
}

export interface GetHealthChecksPingProbeResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksPingProbeResultsPingProbeResult {
    /**
     * The network connection results.
     */
    connection: outputs.GetHealthChecksPingProbeResultsPingProbeResultConnection;
    /**
     * The DNS resolution results.
     */
    dns: outputs.GetHealthChecksPingProbeResultsPingProbeResultDns;
    /**
     * The time immediately before the vantage point finishes the domain name lookup for the resource.
     */
    domainLookupEnd: number;
    /**
     * The time immediately before the vantage point starts the domain name lookup for the resource.
     */
    domainLookupStart: number;
    /**
     * The category of error if an error occurs executing the probe. The `errorMessage` field provides a message with the error details.
     * * NONE - No error
     * * DNS - DNS errors
     * * TRANSPORT - Transport-related errors, for example a "TLS certificate expired" error.
     * * NETWORK - Network-related errors, for example a "network unreachable" error.
     * * SYSTEM - Internal system errors.
     */
    errorCategory: string;
    /**
     * The error information indicating why a probe execution failed.
     */
    errorMessage: string;
    /**
     * The ICMP code of the response message.  This field is not used when the protocol is set to TCP.  For more information on ICMP codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
     */
    icmpCode: number;
    /**
     * True if the probe result is determined to be healthy based on probe type-specific criteria.  For HTTP probes, a probe result is considered healthy if the HTTP response code is greater than or equal to 200 and less than 300.
     */
    isHealthy: boolean;
    /**
     * True if the probe did not complete before the configured `timeoutInSeconds` value.
     */
    isTimedOut: boolean;
    /**
     * A value identifying this specific probe result. The key is only unique within the results of its probe configuration. The key may be reused after 90 days.
     */
    key: string;
    /**
     * The latency of the probe execution, in milliseconds.
     */
    latencyInMs: number;
    /**
     * The OCID of a monitor or on-demand probe.
     */
    probeConfigurationId: string;
    /**
     * The protocols for ping probes.
     */
    protocol: string;
    /**
     * The date and time the probe was executed, expressed in milliseconds since the POSIX epoch. This field is defined by the PerformanceResourceTiming interface of the W3C Resource Timing specification. For more information, see [Resource Timing](https://w3c.github.io/resource-timing/#sec-resource-timing).
     */
    startTime: number;
    /**
     * Filters results that match the `target`.
     */
    target: string;
    /**
     * The name of the vantage point that executed the probe.
     */
    vantagePointName: string;
}

export interface GetHealthChecksPingProbeResultsPingProbeResultConnection {
    /**
     * The connection IP address.
     */
    address: string;
    /**
     * The port.
     */
    port: number;
}

export interface GetHealthChecksPingProbeResultsPingProbeResultDns {
    /**
     * The addresses returned by DNS resolution.
     */
    addresses: string[];
    /**
     * Total DNS resolution duration, in milliseconds. Calculated using `domainLookupEnd` minus `domainLookupStart`.
     */
    domainLookupDuration: number;
}

export interface GetHealthChecksVantagePointsFilter {
    /**
     * Filters results that exactly match the `name` field.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksVantagePointsHealthChecksVantagePoint {
    /**
     * Filters results that exactly match the `displayName` field.
     */
    displayName: string;
    /**
     * Geographic information about a vantage point.
     */
    geo: outputs.GetHealthChecksVantagePointsHealthChecksVantagePointGeo;
    /**
     * Filters results that exactly match the `name` field.
     */
    name: string;
    /**
     * The organization on whose infrastructure this vantage point resides. Provider names are not unique, as Oracle Cloud Infrastructure maintains many vantage points in each major provider.
     */
    providerName: string;
    /**
     * An array of objects that describe how traffic to this vantage point is routed, including which prefixes and ASNs connect it to the internet.
     */
    routings: outputs.GetHealthChecksVantagePointsHealthChecksVantagePointRouting[];
}

export interface GetHealthChecksVantagePointsHealthChecksVantagePointGeo {
    /**
     * The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
     */
    adminDivCode: string;
    /**
     * Common English-language name for the city.
     */
    cityName: string;
    /**
     * The ISO 3166-1 alpha-2 country code. For a list of codes, see [Country Codes](https://www.iso.org/obp/ui/#search).
     */
    countryCode: string;
    /**
     * The common English-language name for the country.
     */
    countryName: string;
    /**
     * An opaque identifier for the geographic location of the vantage point.
     */
    geoKey: string;
    /**
     * Degrees north of the Equator.
     */
    latitude: number;
    /**
     * Degrees east of the prime meridian.
     */
    longitude: number;
}

export interface GetHealthChecksVantagePointsHealthChecksVantagePointRouting {
    /**
     * The registry label for `asn`, usually the name of the organization that owns the ASN. May be omitted or null.
     */
    asLabel: string;
    /**
     * The Autonomous System Number (ASN) identifying the organization responsible for routing packets to `prefix`.
     */
    asn: number;
    /**
     * An IP prefix (CIDR syntax) that is less specific than `address`, through which `address` is routed.
     */
    prefix: string;
    /**
     * An integer between 0 and 100 used to select between multiple origin ASNs when routing to `prefix`. Most prefixes have exactly one origin ASN, in which case `weight` will be 100.
     */
    weight: number;
}

export interface GetIdentityApiKeysApiKey {
    /**
     * The key's fingerprint (e.g., 12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef).
     */
    fingerprint: string;
    /**
     * An Oracle-assigned identifier for the key, in this format: TENANCY_OCID/USER_OCID/KEY_FINGERPRINT.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveStatus: string;
    /**
     * The key's value.
     */
    keyValue: string;
    /**
     * The API key's current state.
     */
    state: string;
    /**
     * Date and time the `ApiKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The OCID of the user.
     */
    userId: string;
}

export interface GetIdentityApiKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityAuthTokensFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityAuthTokensToken {
    /**
     * The description you assign to the auth token. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * The OCID of the auth token.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * The token's current state.
     */
    state: string;
    /**
     * Date and time the `AuthToken` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Date and time when this auth token will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeExpires: string;
    /**
     * The auth token. The value is available only in the response for `CreateAuthToken`, and not for `ListAuthTokens` or `UpdateAuthToken`.
     */
    token: string;
    /**
     * The OCID of the user.
     */
    userId: string;
}

export interface GetIdentityAuthenticationPolicyNetworkPolicy {
    /**
     * Network Source ids
     */
    networkSourceIds: string[];
}

export interface GetIdentityAuthenticationPolicyPasswordPolicy {
    /**
     * At least one lower case character required.
     */
    isLowercaseCharactersRequired: boolean;
    /**
     * At least one numeric character required.
     */
    isNumericCharactersRequired: boolean;
    /**
     * At least one special character required.
     */
    isSpecialCharactersRequired: boolean;
    /**
     * At least one uppercase character required.
     */
    isUppercaseCharactersRequired: boolean;
    /**
     * User name is allowed to be part of the password.
     */
    isUsernameContainmentAllowed: boolean;
    /**
     * Minimum password length required.
     */
    minimumPasswordLength: number;
}

export interface GetIdentityAvailabilityDomainsAvailabilityDomain {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * The OCID of the Availability Domain.
     */
    id: string;
    /**
     * The name of the Availability Domain.
     */
    name: string;
}

export interface GetIdentityAvailabilityDomainsFilter {
    /**
     * The name of the Availability Domain.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityCompartmentsCompartment {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the compartment. Does not have to be unique, and it's changeable.
     */
    description: string;
    enableDelete: boolean;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the compartment.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * Indicates whether or not the compartment is accessible for the user making the request. Returns true when the user has INSPECT permissions directly on a resource in the compartment or indirectly (permissions can be on a resource in a subcompartment).
     */
    isAccessible: boolean;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the compartment was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityCompartmentsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityCostTrackingTagsFilter {
    /**
     * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     */
    name: string;
    regex?: boolean;
    /**
     * The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface GetIdentityCostTrackingTagsTag {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the tag.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the tag definition.
     */
    id: string;
    /**
     * Indicates whether the tag is enabled for cost tracking.
     */
    isCostTracking: boolean;
    /**
     * Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
     */
    isRetired: boolean;
    /**
     * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     */
    name: string;
    /**
     * The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
     */
    state: string;
    /**
     * The OCID of the namespace that contains the tag definition.
     */
    tagNamespaceId: string;
    /**
     * The name of the tag namespace that contains the tag definition.
     */
    tagNamespaceName: string;
    /**
     * Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
     */
    validator: outputs.GetIdentityCostTrackingTagsTagValidator;
}

export interface GetIdentityCostTrackingTagsTagValidator {
    /**
     * Specifies the type of validation: a static value (no validation) or a list.
     */
    validatorType: string;
    /**
     * The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface GetIdentityCustomerSecretKeysCustomerSecretKey {
    /**
     * The display name you assign to the secret key. Does not have to be unique, and it's changeable.
     */
    displayName: string;
    /**
     * The access key portion of the key pair.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    key: string;
    /**
     * The secret key's current state.
     */
    state: string;
    /**
     * Date and time the `CustomerSecretKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeExpires: string;
    /**
     * The OCID of the user.
     */
    userId: string;
}

export interface GetIdentityCustomerSecretKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityDynamicGroupsDynamicGroup {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the group. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the group.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * A rule string that defines which instance certificates will be matched. For syntax, see [Managing Dynamic Groups](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingdynamicgroups.htm).
     */
    matchingRule: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityDynamicGroupsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityFaultDomainsFaultDomain {
    /**
     * The name of the availibilityDomain.
     */
    availabilityDomain: string;
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * The OCID of the Fault Domain.
     */
    id: string;
    /**
     * The name of the Fault Domain.
     */
    name: string;
}

export interface GetIdentityFaultDomainsFilter {
    /**
     * The name of the Fault Domain.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityGroupsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityGroupsGroup {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the group. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the group.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityIdentityProviderGroupsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdentityProviderGroupsIdentityProviderGroup {
    /**
     * Display name of the group
     */
    displayName: string;
    /**
     * Identifier of the group in the identity provider
     */
    externalIdentifier: string;
    /**
     * The OCID of the `IdentityProviderGroup`.
     */
    id: string;
    /**
     * The OCID of the identity provider.
     */
    identityProviderId: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * Date and time the `IdentityProviderGroup` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Date and time the `IdentityProviderGroup` was last modified, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeModified: string;
}

export interface GetIdentityIdentityProvidersFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdentityProvidersIdentityProvider {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
     */
    freeformAttributes: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the `IdentityProvider`.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * The XML that contains the information required for federating Identity with SAML2 Identity Provider.
     */
    metadata: string;
    /**
     * The URL for retrieving the identity provider's metadata, which contains information required for federating.
     */
    metadataUrl: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).
     */
    productType: string;
    /**
     * The protocol used for federation.
     */
    protocol: string;
    /**
     * The URL to redirect federated users to for authentication with the identity provider.
     */
    redirectUrl: string;
    /**
     * The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
     */
    signingCertificate: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityIdpGroupMappingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdpGroupMappingsIdpGroupMapping {
    /**
     * The OCID of the tenancy containing the `IdentityProvider`.
     */
    compartmentId: string;
    /**
     * The OCID of the IAM Service group that is mapped to the IdP group.
     */
    groupId: string;
    /**
     * The OCID of the `IdpGroupMapping`.
     */
    id: string;
    /**
     * The OCID of the identity provider.
     */
    identityProviderId: string;
    /**
     * The name of the IdP group that is mapped to the IAM Service group.
     */
    idpGroupName: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * The mapping's current state.
     */
    state: string;
    /**
     * Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityNetworkSourceVirtualSourceList {
    ipRanges: string[];
    vcnId: string;
}

export interface GetIdentityNetworkSourcesFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityNetworkSourcesNetworkSource {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the network source. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the network source.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * A list of allowed public IP addresses and CIDR ranges.
     */
    publicSourceLists: string[];
    /**
     * A list of services allowed to make on-behalf-of requests. These requests can have different source IPs than those specified in the network source. Currently, only `all` and `none` are supported. The default is `all`.
     */
    services: string[];
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the group was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * A list of allowed VCN OCID and IP range pairs. Example:`"vcnId": "ocid1.vcn.oc1.iad.aaaaaaaaexampleuniqueID", "ipRanges": [ "129.213.39.0/24" ]`
     */
    virtualSourceLists: outputs.GetIdentityNetworkSourcesNetworkSourceVirtualSourceList[];
}

export interface GetIdentityNetworkSourcesNetworkSourceVirtualSourceList {
    ipRanges: string[];
    vcnId: string;
}

export interface GetIdentityPoliciesFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityPoliciesPolicy {
    /**
     * @deprecated The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    ETag: string;
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the policy. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the policy.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * @deprecated The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    lastUpdateETag: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * @deprecated The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    policyHash: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * An array of one or more policy statements written in the policy language.
     */
    statements: string[];
    /**
     * Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
     */
    versionDate: string;
}

export interface GetIdentityRegionSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityRegionSubscriptionsRegionSubscription {
    /**
     * Indicates if the region is the home region or not.
     */
    isHomeRegion: boolean;
    /**
     * The region's key. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported 3-letter region codes.  Example: `PHX`
     */
    regionKey: string;
    /**
     * The region's name. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    regionName: string;
    state: string;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: string;
}

export interface GetIdentityRegionsFilter {
    /**
     * The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityRegionsRegion {
    /**
     * The key of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported 3-letter region codes.  Example: `PHX`
     */
    key: string;
    /**
     * The name of the region. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    name: string;
}

export interface GetIdentitySmtpCredentialsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentitySmtpCredentialsSmtpCredential {
    /**
     * The description you assign to the SMTP credential. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * The OCID of the SMTP credential.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    password: string;
    /**
     * The credential's current state.
     */
    state: string;
    /**
     * Date and time the `SmtpCredential` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Date and time when this credential will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeExpires: string;
    /**
     * The OCID of the user.
     */
    userId: string;
    /**
     * The SMTP user name.
     */
    username: string;
}

export interface GetIdentitySwiftPasswordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentitySwiftPasswordsPassword {
    /**
     * The description you assign to the Swift password. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    expiresOn: string;
    /**
     * The OCID of the Swift password.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * The Swift password. The value is available only in the response for `CreateSwiftPassword`, and not for `ListSwiftPasswords` or `UpdateSwiftPassword`.
     */
    password: string;
    /**
     * The password's current state.
     */
    state: string;
    /**
     * Date and time the `SwiftPassword` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The OCID of the user.
     */
    userId: string;
}

export interface GetIdentityTagDefaultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagDefaultsTagDefault {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * A filter to only return resources that match the specified OCID exactly.
     */
    id: string;
    /**
     * If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
     * * If the `isRequired` flag is set to "true", the value is set during resource creation.
     * * If the `isRequired` flag is set to "false", the value you enter is set during resource creation.
     */
    isRequired: boolean;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The OCID of the tag definition.
     */
    tagDefinitionId: string;
    /**
     * The name used in the tag definition. This field is informational in the context of the tag default.
     */
    tagDefinitionName: string;
    /**
     * The OCID of the tag namespace that contains the tag definition.
     */
    tagNamespaceId: string;
    /**
     * Date and time the `TagDefault` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The default value for the tag definition. This will be applied to all new resources created in the compartment.
     */
    value: string;
}

export interface GetIdentityTagNamespacesFilter {
    /**
     * The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagNamespacesTagNamespace {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the tag namespace.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the tag namespace.
     */
    id: string;
    /**
     * Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
     */
    isRetired: boolean;
    /**
     * The name of the tag namespace. It must be unique across all tag namespaces in the tenancy and cannot be changed.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityTagValidator {
    /**
     * Specifies the type of validation: a static value (no validation) or a list.
     */
    validatorType: string;
    /**
     * The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface GetIdentityTagsFilter {
    /**
     * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     */
    name: string;
    regex?: boolean;
    /**
     * The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface GetIdentityTagsTag {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the tag.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the tag definition.
     */
    id: string;
    /**
     * Indicates whether the tag is enabled for cost tracking.
     */
    isCostTracking: boolean;
    /**
     * Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
     */
    isRetired: boolean;
    /**
     * The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * The OCID of the tag namespace.
     */
    tagNamespaceId: string;
    /**
     * Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
     */
    validator: outputs.GetIdentityTagsTagValidator;
}

export interface GetIdentityTagsTagValidator {
    /**
     * Specifies the type of validation: a static value (no validation) or a list.
     */
    validatorType: string;
    /**
     * The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface GetIdentityUserCapabilities {
    /**
     * Indicates if the user can use API keys.
     */
    canUseApiKeys: boolean;
    /**
     * Indicates if the user can use SWIFT passwords / auth tokens.
     */
    canUseAuthTokens: boolean;
    /**
     * Indicates if the user can log in to the console.
     */
    canUseConsolePassword: boolean;
    /**
     * Indicates if the user can use SigV4 symmetric keys.
     */
    canUseCustomerSecretKeys: boolean;
    /**
     * Indicates if the user can use OAuth2 credentials and tokens.
     */
    canUseOauth2clientCredentials: boolean;
    /**
     * Indicates if the user can use SMTP passwords.
     */
    canUseSmtpCredentials: boolean;
}

export interface GetIdentityUserGroupMembershipsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityUserGroupMembershipsMembership {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * The OCID of the group.
     */
    groupId: string;
    /**
     * The OCID of the membership.
     */
    id: string;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState: string;
    /**
     * The membership's current state.
     */
    state: string;
    /**
     * Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The OCID of the user.
     */
    userId: string;
}

export interface GetIdentityUsersFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityUsersUser {
    /**
     * Properties indicating how the user is allowed to authenticate.
     */
    capabilities: outputs.GetIdentityUsersUserCapabilities;
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the user. Does not have to be unique, and it's changeable.
     */
    description: string;
    /**
     * The email address you assign to the user. The email address must be unique across all users in the tenancy.
     */
    email: string;
    /**
     * Whether the email address has been validated.
     */
    emailVerified: boolean;
    /**
     * The id of a user in the identity provider.
     */
    externalIdentifier: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the user.
     */
    id: string;
    /**
     * The id of the identity provider.
     */
    identityProviderId: string;
    /**
     * Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
     * * bit 0: SUSPENDED (reserved for future use)
     * * bit 1: DISABLED (reserved for future use)
     * * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
     */
    inactiveState: string;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    lastSuccessfulLoginTime: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    previousSuccessfulLoginTime: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state: string;
    /**
     * Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetIdentityUsersUserCapabilities {
    /**
     * Indicates if the user can use API keys.
     */
    canUseApiKeys: boolean;
    /**
     * Indicates if the user can use SWIFT passwords / auth tokens.
     */
    canUseAuthTokens: boolean;
    /**
     * Indicates if the user can log in to the console.
     */
    canUseConsolePassword: boolean;
    /**
     * Indicates if the user can use SigV4 symmetric keys.
     */
    canUseCustomerSecretKeys: boolean;
    /**
     * Indicates if the user can use OAuth2 credentials and tokens.
     */
    canUseOauth2clientCredentials: boolean;
    /**
     * Indicates if the user can use SMTP passwords.
     */
    canUseSmtpCredentials: boolean;
}

export interface GetIntegrationIntegrationInstanceAlternateCustomEndpoint {
    /**
     * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface GetIntegrationIntegrationInstanceCustomEndpoint {
    /**
     * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface GetIntegrationIntegrationInstanceNetworkEndpointDetails {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedHttpIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    allowlistedHttpVcns: outputs.GetIntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn[];
    /**
     * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
     */
    isIntegrationVcnAllowlisted: boolean;
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
}

export interface GetIntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedIps: string[];
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
}

export interface GetIntegrationIntegrationInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIntegrationIntegrationInstancesIntegrationInstance {
    /**
     * A list of alternate custom endpoints used for the integration instance URL.
     */
    alternateCustomEndpoints: outputs.GetIntegrationIntegrationInstancesIntegrationInstanceAlternateCustomEndpoint[];
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * The entitlement used for billing purposes.
     */
    consumptionModel: string;
    /**
     * Details for a custom endpoint for the integration instance.
     */
    customEndpoint: outputs.GetIntegrationIntegrationInstancesIntegrationInstanceCustomEndpoint;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
    idcsAt: string;
    /**
     * The Integration Instance URL.
     */
    instanceUrl: string;
    /**
     * Standard or Enterprise type
     */
    integrationInstanceType: string;
    /**
     * Bring your own license.
     */
    isByol: boolean;
    /**
     * The file server is enabled or not.
     */
    isFileServerEnabled: boolean;
    /**
     * Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled: boolean;
    /**
     * The number of configured message packs (if any)
     */
    messagePacks: number;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails: outputs.GetIntegrationIntegrationInstancesIntegrationInstanceNetworkEndpointDetails;
    /**
     * Life cycle state to query on.
     */
    state: string;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage: string;
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetIntegrationIntegrationInstancesIntegrationInstanceAlternateCustomEndpoint {
    /**
     * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface GetIntegrationIntegrationInstancesIntegrationInstanceCustomEndpoint {
    /**
     * Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface GetIntegrationIntegrationInstancesIntegrationInstanceNetworkEndpointDetails {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedHttpIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    allowlistedHttpVcns: outputs.GetIntegrationIntegrationInstancesIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn[];
    /**
     * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
     */
    isIntegrationVcnAllowlisted: boolean;
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
}

export interface GetIntegrationIntegrationInstancesIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedIps: string[];
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
}

export interface GetJmsFleetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetsFleetCollection {
    items: outputs.GetJmsFleetsFleetCollectionItem[];
}

export interface GetJmsFleetsFleetCollectionItem {
    /**
     * The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
     */
    approximateApplicationCount: number;
    /**
     * The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
     */
    approximateInstallationCount: number;
    /**
     * The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
     */
    approximateJreCount: number;
    /**
     * The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
     */
    approximateManagedInstanceCount: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
     */
    definedTags: {[key: string]: any};
    /**
     * The Fleet's description.
     */
    description: string;
    /**
     * The display name.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
     */
    freeformTags: {[key: string]: any};
    /**
     * The ID of the Fleet.
     */
    id: string;
    /**
     * The state of the lifecycle.
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The creation date and time of the Fleet (formatted according to RFC3339).
     */
    timeCreated: string;
}

export interface GetKmsKeyKeyShape {
    /**
     * The algorithm used by a key's key versions to encrypt or decrypt.
     */
    algorithm: string;
    /**
     * Supported curve IDs for ECDSA keys.
     */
    curveId: string;
    /**
     * The length of the key in bytes, expressed as an integer. Supported values include the following:
     * * AES: 16, 24, or 32
     * * RSA: 256, 384, or 512
     * * ECDSA: 32, 48, or 66
     */
    length: number;
}

export interface GetKmsKeyReplicaDetails {
    /**
     * ReplicationId associated with a key operation
     */
    replicationId: string;
}

export interface GetKmsKeyRestoreFromFile {
    /**
     * content length of key's backup binary file
     */
    contentLength: string;
    /**
     * content md5 hashed value of key's backup file
     */
    contentMd5: string;
    /**
     * Key backup file content
     */
    restoreKeyFromFileDetails: string;
}

export interface GetKmsKeyRestoreFromObjectStore {
    /**
     * Name of the bucket where key was backed up
     */
    bucket: string;
    /**
     * Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
     */
    destination: string;
    /**
     * Namespace of the bucket where key was backed up
     */
    namespace: string;
    /**
     * Object containing the backup
     */
    object: string;
    /**
     * Pre-authenticated-request-uri of the backup
     */
    uri: string;
}

export interface GetKmsKeyVersionReplicaDetails {
    /**
     * ReplicationId associated with a key version operation
     */
    replicationId: string;
}

export interface GetKmsKeyVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsKeyVersionsKeyVersion {
    /**
     * The OCID of the compartment that contains this key version.
     */
    compartmentId: string;
    /**
     * The OCID of the key version.
     */
    id: string;
    /**
     * A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
     */
    isPrimary: boolean;
    /**
     * The OCID of the key.
     */
    keyId: string;
    /**
     * The OCID of the key version.
     */
    keyVersionId: string;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint: string;
    /**
     * The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
     */
    publicKey: string;
    /**
     * KeyVersion replica details
     */
    replicaDetails: outputs.GetKmsKeyVersionsKeyVersionReplicaDetails;
    restoredFromKeyId: string;
    /**
     * The OCID of the key version from which this key version was restored.
     */
    restoredFromKeyVersionId: string;
    /**
     * The key version's current lifecycle state.  Example: `ENABLED`
     */
    state: string;
    /**
     * The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
     */
    timeCreated: string;
    /**
     * An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion: string;
    /**
     * The OCID of the vault that contains this key version.
     */
    vaultId: string;
}

export interface GetKmsKeyVersionsKeyVersionReplicaDetails {
    /**
     * ReplicationId associated with a key version operation
     */
    replicationId: string;
}

export interface GetKmsKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsKeysKey {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     */
    currentKeyVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    desiredState: string;
    /**
     * A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the key.
     */
    id: string;
    /**
     * A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
     */
    isPrimary: boolean;
    /**
     * The cryptographic properties of a key.
     */
    keyShape: outputs.GetKmsKeysKeyKeyShape;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint: string;
    /**
     * A key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A  protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are  performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's  RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of  `SOFTWARE` are performed on the server.
     */
    protectionMode: string;
    /**
     * Key replica details
     */
    replicaDetails: outputs.GetKmsKeysKeyReplicaDetails;
    restoreFromFile: outputs.GetKmsKeysKeyRestoreFromFile;
    restoreFromObjectStore: outputs.GetKmsKeysKeyRestoreFromObjectStore;
    restoreTrigger: boolean;
    restoredFromKeyId: string;
    /**
     * The key's current lifecycle state.  Example: `ENABLED`
     */
    state: string;
    /**
     * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion: string;
    /**
     * The OCID of the vault that contains this key.
     */
    vaultId: string;
}

export interface GetKmsKeysKeyKeyShape {
    /**
     * The algorithm used by a key's key versions to encrypt or decrypt data. Currently, support includes AES, RSA, and ECDSA algorithms.
     */
    algorithm: string;
    /**
     * The curve ID of the keys. (This pertains only to ECDSA keys.)
     */
    curveId: string;
    /**
     * The length of the key in bytes, expressed as an integer. Supported values include 16, 24, or 32.
     */
    length: number;
}

export interface GetKmsKeysKeyReplicaDetails {
    /**
     * ReplicationId associated with a key operation
     */
    replicationId: string;
}

export interface GetKmsKeysKeyRestoreFromFile {
    contentLength: string;
    contentMd5: string;
    restoreKeyFromFileDetails: string;
}

export interface GetKmsKeysKeyRestoreFromObjectStore {
    bucket: string;
    destination: string;
    namespace: string;
    object: string;
    uri: string;
}

export interface GetKmsReplicationStatusReplicaDetail {
    /**
     * The replica region
     */
    region: string;
    /**
     * Replication status associated with a replicationId
     */
    status: string;
}

export interface GetKmsVaultReplicaDetails {
    /**
     * ReplicationId associated with a vault operation
     */
    replicationId: string;
}

export interface GetKmsVaultReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsVaultReplicasVaultReplica {
    /**
     * The vault replica's crypto endpoint
     */
    cryptoEndpoint: string;
    /**
     * The vault replica's management endpoint
     */
    managementEndpoint: string;
    /**
     * Region to which vault is replicated to
     */
    region: string;
    /**
     * The vault replica's status
     */
    status: string;
}

export interface GetKmsVaultRestoreFromFile {
    /**
     * content length of vault's backup binary file
     */
    contentLength: string;
    /**
     * content md5 hashed value of vault's backup file
     */
    contentMd5: string;
    /**
     * Vault backup file content
     */
    restoreVaultFromFileDetails: string;
}

export interface GetKmsVaultRestoreFromObjectStore {
    /**
     * Name of the bucket where vault was backed up
     */
    bucket: string;
    /**
     * Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
     */
    destination: string;
    /**
     * Namespace of the bucket where vault was backed up
     */
    namespace: string;
    /**
     * Object containing the backup
     */
    object: string;
    /**
     * Pre-authenticated-request-uri of the backup
     */
    uri: string;
}

export interface GetKmsVaultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsVaultsVault {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
     */
    cryptoEndpoint: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the vault.
     */
    id: string;
    /**
     * A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
     */
    isPrimary: boolean;
    /**
     * The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
     */
    managementEndpoint: string;
    /**
     * Vault replica details
     */
    replicaDetails: outputs.GetKmsVaultsVaultReplicaDetails;
    restoreFromFile: outputs.GetKmsVaultsVaultRestoreFromFile;
    restoreFromObjectStore: outputs.GetKmsVaultsVaultRestoreFromObjectStore;
    restoreTrigger: boolean;
    /**
     * The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
     */
    restoredFromVaultId: string;
    /**
     * The vault's current lifecycle state.  Example: `DELETED`
     */
    state: string;
    /**
     * The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     */
    timeOfDeletion: string;
    /**
     * The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
     */
    vaultType: string;
}

export interface GetKmsVaultsVaultReplicaDetails {
    /**
     * ReplicationId associated with a vault operation
     */
    replicationId: string;
}

export interface GetKmsVaultsVaultRestoreFromFile {
    contentLength: string;
    contentMd5: string;
    restoreVaultFromFileDetails: string;
}

export interface GetKmsVaultsVaultRestoreFromObjectStore {
    bucket: string;
    destination: string;
    namespace: string;
    object: string;
    uri: string;
}

export interface GetLimitsLimitDefinitionsFilter {
    /**
     * Optional field, filter for a specific resource limit.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsLimitDefinitionsLimitDefinition {
    /**
     * If true, quota policies can be created on top of this resource limit.
     */
    areQuotasSupported: boolean;
    /**
     * The limit description.
     */
    description: string;
    /**
     * Indicates if the limit has been deprecated.
     */
    isDeprecated: boolean;
    /**
     * The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     */
    isDynamic: boolean;
    /**
     * Indicates if the customer can request a limit increase for this resource.
     */
    isEligibleForLimitIncrease: boolean;
    /**
     * Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     */
    isResourceAvailabilitySupported: boolean;
    /**
     * Optional field, filter for a specific resource limit.
     */
    name: string;
    /**
     * Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     */
    scopeType: string;
    /**
     * The target service name.
     */
    serviceName: string;
}

export interface GetLimitsLimitValuesFilter {
    /**
     * Optional field, can be used to see a specific resource limit value.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsLimitValuesLimitValue {
    /**
     * Filter entries by availability domain. This implies that only AD-specific values are returned.
     */
    availabilityDomain: string;
    /**
     * Optional field, can be used to see a specific resource limit value.
     */
    name: string;
    /**
     * Filter entries by scope type.
     */
    scopeType: string;
    /**
     * The resource limit value.
     */
    value: string;
}

export interface GetLimitsQuotasFilter {
    /**
     * name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsQuotasQuota {
    /**
     * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description you assign to the quota.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the quota.
     */
    id: string;
    /**
     * name
     */
    name: string;
    /**
     * Filters returned quotas based on the given state.
     */
    state: string;
    /**
     * An array of one or more quota statements written in the declarative quota statement language.
     */
    statements: string[];
    /**
     * Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetLimitsServicesFilter {
    /**
     * The service name. Use this when calling other APIs.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsServicesService {
    /**
     * The friendly service name.
     */
    description: string;
    /**
     * The service name. Use this when calling other APIs.
     */
    name: string;
}

export interface GetLoadBalancerBackendHealthHealthCheckResult {
    /**
     * The result of the most recent health check.
     */
    healthCheckStatus: string;
    /**
     * The IP address of the health check status report provider. This identifier helps you differentiate same-subnet load balancers that report health check status.  Example: `10.0.0.7`
     */
    sourceIpAddress: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet hosting the load balancer that reported this health check status.
     */
    subnetId: string;
    /**
     * The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2017-06-02T18:28:11+00:00`
     */
    timestamp: string;
}

export interface GetLoadBalancerBackendSetsBackendset {
    backends: outputs.GetLoadBalancerBackendSetsBackendsetBackend[];
    /**
     * The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
     */
    healthChecker: outputs.GetLoadBalancerBackendSetsBackendsetHealthChecker;
    id: string;
    /**
     * The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
     */
    lbCookieSessionPersistenceConfiguration: outputs.GetLoadBalancerBackendSetsBackendsetLbCookieSessionPersistenceConfiguration;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend sets to retrieve.
     */
    loadBalancerId: string;
    /**
     * A friendly name for the backend set. It must be unique and it cannot be changed.
     */
    name: string;
    /**
     * The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
     */
    policy: string;
    /**
     * The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
     */
    sessionPersistenceConfiguration: outputs.GetLoadBalancerBackendSetsBackendsetSessionPersistenceConfiguration;
    /**
     * A listener's SSL handling configuration.
     */
    sslConfiguration: outputs.GetLoadBalancerBackendSetsBackendsetSslConfiguration;
    state: string;
}

export interface GetLoadBalancerBackendSetsBackendsetBackend {
    /**
     * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     */
    backup: boolean;
    /**
     * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    drain: boolean;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * A friendly name for the backend set. It must be unique and it cannot be changed.
     */
    name: string;
    /**
     * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    offline: boolean;
    /**
     * The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
     */
    port: number;
    /**
     * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface GetLoadBalancerBackendSetsBackendsetHealthChecker {
    /**
     * The interval between health checks, in milliseconds. The default is 30000 (30 seconds).  Example: `30000`
     */
    intervalMs: number;
    /**
     * The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
     */
    port: number;
    /**
     * The protocol the health check must use; either HTTP or TCP.  Example: `HTTP`
     */
    protocol: string;
    /**
     * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
     */
    responseBodyRegex: string;
    /**
     * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. Defaults to 3.  Example: `3`
     */
    retries: number;
    /**
     * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, you can use common HTTP status codes such as "200".  Example: `200`
     */
    returnCode: number;
    /**
     * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. Defaults to 3000 (3 seconds).  Example: `3000`
     */
    timeoutInMillis: number;
    /**
     * The path against which to run the health check.  Example: `/healthcheck`
     */
    urlPath: string;
}

export interface GetLoadBalancerBackendSetsBackendsetLbCookieSessionPersistenceConfiguration {
    /**
     * The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
     */
    cookieName: string;
    /**
     * Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     */
    disableFallback: boolean;
    /**
     * The domain in which the cookie is valid. The `Set-cookie` header inserted by the load balancer contains a domain attribute with the specified value.
     */
    domain: string;
    /**
     * Whether the `Set-cookie` header should contain the `HttpOnly` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `HttpOnly` attribute, which limits the scope of the cookie to HTTP requests. This attribute directs the client or browser to omit the cookie when providing access to cookies through non-HTTP APIs. For example, it restricts the cookie from JavaScript channels.  Example: `true`
     */
    isHttpOnly: boolean;
    /**
     * Whether the `Set-cookie` header should contain the `Secure` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `Secure` attribute, which directs the client or browser to send the cookie only using a secure protocol.
     */
    isSecure: boolean;
    /**
     * The amount of time the cookie remains valid. The `Set-cookie` header inserted by the load balancer contains a `Max-Age` attribute with the specified value.
     */
    maxAgeInSeconds: number;
    /**
     * The path in which the cookie is valid. The `Set-cookie header` inserted by the load balancer contains a `Path` attribute with the specified value.
     */
    path: string;
}

export interface GetLoadBalancerBackendSetsBackendsetSessionPersistenceConfiguration {
    /**
     * The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
     */
    cookieName: string;
    /**
     * Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     */
    disableFallback: boolean;
}

export interface GetLoadBalancerBackendSetsBackendsetSslConfiguration {
    /**
     * A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
     */
    certificateName: string;
    /**
     * The name of the cipher suite to use for HTTPS or SSL connections.
     */
    cipherSuiteName: string;
    /**
     * A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
     */
    protocols: string[];
    /**
     * When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
     */
    serverOrderPreference: string;
    /**
     * The maximum depth for peer certificate chain verification.  Example: `3`
     */
    verifyDepth: number;
    /**
     * Whether the load balancer listener should verify peer certificates.  Example: `true`
     */
    verifyPeerCertificate: boolean;
}

export interface GetLoadBalancerBackendSetsFilter {
    /**
     * A friendly name for the backend set. It must be unique and it cannot be changed.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerBackendsBackend {
    /**
     * The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
     */
    backendsetName: string;
    /**
     * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     */
    backup?: boolean;
    /**
     * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    drain: boolean;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
     */
    loadBalancerId: string;
    /**
     * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
     */
    name: string;
    /**
     * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    offline: boolean;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port: number;
    state: string;
    /**
     * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface GetLoadBalancerBackendsFilter {
    /**
     * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerCertificatesCertificate {
    /**
     * The Certificate Authority certificate, or any interim certificate, that you received from your SSL certificate provider.
     */
    caCertificate: string;
    /**
     * A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
     */
    certificateName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the certificate bundles to be listed.
     */
    loadBalancerId: string;
    passphrase?: string;
    privateKey: string;
    /**
     * The public certificate, in PEM format, that you received from your SSL certificate provider.
     */
    publicCertificate: string;
    state: string;
}

export interface GetLoadBalancerCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerHostnamesFilter {
    /**
     * A friendly name for the hostname resource. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleHostname001`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerHostnamesHostname {
    /**
     * A virtual hostname. For more information about virtual hostname string construction, see [Managing Request Routing](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/managingrequest.htm#routing).  Example: `app.example.com`
     */
    hostname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the hostnames to retrieve.
     */
    loadBalancerId: string;
    /**
     * A friendly name for the hostname resource. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleHostname001`
     */
    name: string;
    state: string;
}

export interface GetLoadBalancerListenerRulesFilter {
    /**
     * The name of the rule set that the rule belongs to.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerListenerRulesListenerRule {
    /**
     * The name of the rule set that the rule belongs to.
     */
    name: string;
    /**
     * A rule object that applies to the listener.
     */
    rule: outputs.GetLoadBalancerListenerRulesListenerRuleRule;
    state: string;
}

export interface GetLoadBalancerListenerRulesListenerRuleRule {
    /**
     * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
     */
    action: string;
    /**
     * The list of HTTP methods allowed for this listener.
     */
    allowedMethods: string[];
    /**
     * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
     */
    areInvalidCharactersAllowed: boolean;
    conditions: outputs.GetLoadBalancerListenerRulesListenerRuleRuleCondition[];
    /**
     * A brief description of the access control rule. Avoid entering confidential information.
     */
    description: string;
    /**
     * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
     */
    httpLargeHeaderSizeInKb: number;
    /**
     * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    prefix: string;
    /**
     * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
     */
    redirectUri: outputs.GetLoadBalancerListenerRulesListenerRuleRuleRedirectUri;
    /**
     * The HTTP status code to return when the incoming request is redirected.
     */
    responseCode: number;
    /**
     * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
     */
    statusCode: number;
    /**
     * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    suffix: string;
    /**
     * A header value that conforms to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    value: string;
}

export interface GetLoadBalancerListenerRulesListenerRuleRuleCondition {
    /**
     * The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     */
    attributeName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the originating VCN that an incoming packet must match.
     */
    attributeValue: string;
    /**
     * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     */
    operator: string;
}

export interface GetLoadBalancerListenerRulesListenerRuleRuleRedirectUri {
    /**
     * The valid domain name (hostname) or IP address to use in the redirect URI.
     */
    host: string;
    /**
     * The HTTP URI path to use in the redirect URI.
     */
    path: string;
    /**
     * The communication port to use in the redirect URI.
     */
    port: number;
    /**
     * The HTTP protocol to use in the redirect URI.
     */
    protocol: string;
    /**
     * The query string to use in the redirect URI.
     */
    query: string;
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesFilter {
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesRoutingPolicy {
    /**
     * The version of the language in which `condition` of `rules` are composed.
     */
    conditionLanguageVersion: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the routing policies.
     */
    loadBalancerId: string;
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
    /**
     * The ordered list of routing rules.
     */
    rules: outputs.GetLoadBalancerLoadBalancerRoutingPoliciesRoutingPolicyRule[];
    state: string;
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesRoutingPolicyRule {
    /**
     * A list of actions to be applied when conditions of the routing rule are met.
     */
    actions: outputs.GetLoadBalancerLoadBalancerRoutingPoliciesRoutingPolicyRuleAction[];
    /**
     * A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
     */
    condition: string;
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesRoutingPolicyRuleAction {
    /**
     * Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
     */
    backendSetName: string;
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface GetLoadBalancerLoadBalancerRoutingPolicyRule {
    /**
     * A list of actions to be applied when conditions of the routing rule are met.
     */
    actions: outputs.GetLoadBalancerLoadBalancerRoutingPolicyRuleAction[];
    /**
     * A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
     */
    condition: string;
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface GetLoadBalancerLoadBalancerRoutingPolicyRuleAction {
    /**
     * Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
     */
    backendSetName: string;
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface GetLoadBalancerLoadBalancersFilter {
    /**
     * A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerLoadBalancersLoadBalancer {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancers to list.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleLoadBalancer`
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Ocid of the pre-created public IP. That should be attahed to this load balancer.
     */
    id: string;
    /**
     * An array of IP addresses.
     */
    ipAddressDetails: outputs.GetLoadBalancerLoadBalancersLoadBalancerIpAddressDetail[];
    /**
     * An array of IP addresses. Deprecated: use ipAddressDetails instead.
     *
     * @deprecated The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
     */
    ipAddresses: string[];
    ipMode: string;
    /**
     * Whether the load balancer has a VCN-local (private) IP address.
     */
    isPrivate: boolean;
    /**
     * An array of NSG [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the load balancer.
     */
    networkSecurityGroupIds: string[];
    reservedIps: outputs.GetLoadBalancerLoadBalancersLoadBalancerReservedIp[];
    /**
     * A template that determines the total pre-provisioned bandwidth (ingress plus egress). To get a list of available shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerShape/ListShapes) operation.  Example: `100Mbps`
     */
    shape: string;
    /**
     * The configuration details to update load balancer to a different shape.
     */
    shapeDetails: outputs.GetLoadBalancerLoadBalancersLoadBalancerShapeDetails;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `SUCCEEDED`
     */
    state: string;
    /**
     * An array of subnet [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    subnetIds: string[];
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the load balancer was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetLoadBalancerLoadBalancersLoadBalancerIpAddressDetail {
    /**
     * An IP address.  Example: `192.168.0.3`
     */
    ipAddress: string;
    /**
     * Whether the IP address is public or private.
     */
    isPublic: boolean;
    /**
     * Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
     */
    reservedIp: outputs.GetLoadBalancerLoadBalancersLoadBalancerIpAddressDetailReservedIp;
}

export interface GetLoadBalancerLoadBalancersLoadBalancerIpAddressDetailReservedIp {
    /**
     * Ocid of the pre-created public IP. That should be attahed to this load balancer.
     */
    id: string;
}

export interface GetLoadBalancerLoadBalancersLoadBalancerReservedIp {
    /**
     * Ocid of the pre-created public IP. That should be attahed to this load balancer.
     */
    id: string;
}

export interface GetLoadBalancerLoadBalancersLoadBalancerShapeDetails {
    /**
     * Bandwidth in Mbps that determines the maximum bandwidth (ingress plus egress) that the load balancer can achieve. This bandwidth cannot be always guaranteed. For a guaranteed bandwidth use the minimumBandwidthInMbps parameter.
     */
    maximumBandwidthInMbps: number;
    /**
     * Bandwidth in Mbps that determines the total pre-provisioned bandwidth (ingress plus egress). The values must be between 0 and the maximumBandwidthInMbps in multiples of 10. The current allowed maximum value is defined in [Service Limits](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/servicelimits.htm).  Example: `150`
     */
    minimumBandwidthInMbps: number;
}

export interface GetLoadBalancerPathRouteSetsFilter {
    /**
     * The unique name for this set of path route rules. Avoid entering confidential information.  Example: `examplePathRouteSet`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerPathRouteSetsPathRouteSet {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the path route sets to retrieve.
     */
    loadBalancerId: string;
    /**
     * The unique name for this set of path route rules. Avoid entering confidential information.  Example: `examplePathRouteSet`
     */
    name: string;
    /**
     * The set of path route rules.
     */
    pathRoutes: outputs.GetLoadBalancerPathRouteSetsPathRouteSetPathRoute[];
    state: string;
}

export interface GetLoadBalancerPathRouteSetsPathRouteSetPathRoute {
    /**
     * The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
     */
    backendSetName: string;
    /**
     * The path string to match against the incoming URI path.
     * *  Path strings are case-insensitive.
     * *  Asterisk (*) wildcards are not supported.
     * *  Regular expressions are not supported.
     */
    path: string;
    /**
     * The type of matching to apply to incoming URIs.
     */
    pathMatchType: outputs.GetLoadBalancerPathRouteSetsPathRouteSetPathRoutePathMatchType;
}

export interface GetLoadBalancerPathRouteSetsPathRouteSetPathRoutePathMatchType {
    /**
     * Specifies how the load balancing service compares a [PathRoute](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/requests/PathRoute) object's `path` string against the incoming URI.
     * *  **EXACT_MATCH** - Looks for a `path` string that exactly matches the incoming URI path.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - Looks for the `path` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - Looks for a `path` string that matches the beginning portion of the incoming URI path.
     * *  **SUFFIX_MATCH** - Looks for a `path` string that matches the ending portion of the incoming URI path.
     */
    matchType: string;
}

export interface GetLoadBalancerPoliciesFilter {
    /**
     * The name of a load balancing policy.  Example: 'LEAST_CONNECTIONS'
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerPoliciesPolicy {
    /**
     * The name of a load balancing policy.  Example: 'LEAST_CONNECTIONS'
     */
    name: string;
}

export interface GetLoadBalancerProtocolsFilter {
    /**
     * The name of a protocol.  Example: 'HTTP'
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerProtocolsProtocol {
    /**
     * The name of a protocol.  Example: 'HTTP'
     */
    name: string;
}

export interface GetLoadBalancerRuleSetItem {
    /**
     * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
     */
    action: string;
    /**
     * The list of HTTP methods allowed for this listener.
     */
    allowedMethods: string[];
    /**
     * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
     */
    areInvalidCharactersAllowed: boolean;
    conditions: outputs.GetLoadBalancerRuleSetItemCondition[];
    /**
     * A brief description of the access control rule. Avoid entering confidential information.
     */
    description: string;
    /**
     * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
     */
    httpLargeHeaderSizeInKb: number;
    /**
     * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    prefix: string;
    /**
     * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
     */
    redirectUri: outputs.GetLoadBalancerRuleSetItemRedirectUri;
    /**
     * The HTTP status code to return when the incoming request is redirected.
     */
    responseCode: number;
    /**
     * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
     */
    statusCode: number;
    /**
     * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    suffix: string;
    /**
     * A header value that conforms to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    value: string;
}

export interface GetLoadBalancerRuleSetItemCondition {
    /**
     * (Required) (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     */
    attributeName: string;
    /**
     * (Required) (Updatable) Depends on `attributeName`:
     * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
     */
    attributeValue: string;
    /**
     * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     */
    operator: string;
}

export interface GetLoadBalancerRuleSetItemRedirectUri {
    /**
     * The valid domain name (hostname) or IP address to use in the redirect URI.
     */
    host: string;
    /**
     * The HTTP URI path to use in the redirect URI.
     */
    path: string;
    /**
     * The communication port to use in the redirect URI.
     */
    port: number;
    /**
     * The HTTP protocol to use in the redirect URI.
     */
    protocol: string;
    /**
     * The query string to use in the redirect URI.
     */
    query: string;
}

export interface GetLoadBalancerRuleSetsFilter {
    /**
     * The name for this set of rules. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleRuleSet`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerRuleSetsRuleSet {
    id: string;
    /**
     * An array of rules that compose the rule set.
     */
    items: outputs.GetLoadBalancerRuleSetsRuleSetItem[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the specified load balancer.
     */
    loadBalancerId: string;
    /**
     * The name for this set of rules. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: `exampleRuleSet`
     */
    name: string;
    state: string;
}

export interface GetLoadBalancerRuleSetsRuleSetItem {
    /**
     * The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
     */
    action: string;
    /**
     * The list of HTTP methods allowed for this listener.
     */
    allowedMethods: string[];
    /**
     * Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header 
     * * `conditions` -
     */
    areInvalidCharactersAllowed: boolean;
    conditions: outputs.GetLoadBalancerRuleSetsRuleSetItemCondition[];
    /**
     * A brief description of the access control rule. Avoid entering confidential information.
     */
    description: string;
    /**
     * A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
     */
    httpLargeHeaderSizeInKb: number;
    /**
     * A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    prefix: string;
    /**
     * An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
     */
    redirectUri: outputs.GetLoadBalancerRuleSetsRuleSetItemRedirectUri;
    /**
     * The HTTP status code to return when the incoming request is redirected.
     */
    responseCode: number;
    /**
     * The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
     */
    statusCode: number;
    /**
     * A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    suffix: string;
    /**
     * A header value that conforms to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    value: string;
}

export interface GetLoadBalancerRuleSetsRuleSetItemCondition {
    /**
     * (Required) (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     */
    attributeName: string;
    /**
     * (Required) (Updatable) Depends on `attributeName`:
     * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
     */
    attributeValue: string;
    /**
     * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     */
    operator: string;
}

export interface GetLoadBalancerRuleSetsRuleSetItemRedirectUri {
    /**
     * The valid domain name (hostname) or IP address to use in the redirect URI.
     */
    host: string;
    /**
     * The HTTP URI path to use in the redirect URI.
     */
    path: string;
    /**
     * The communication port to use in the redirect URI.
     */
    port: number;
    /**
     * The HTTP protocol to use in the redirect URI.
     */
    protocol: string;
    /**
     * The query string to use in the redirect URI.
     */
    query: string;
}

export interface GetLoadBalancerShapesFilter {
    /**
     * The name of the shape.  Example: `100Mbps`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerShapesShape {
    /**
     * The name of the shape.  Example: `100Mbps`
     */
    name: string;
}

export interface GetLoadBalancerSslCipherSuitesFilter {
    /**
     * A friendly name for the SSL cipher suite. It must be unique and it cannot be changed.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerSslCipherSuitesSslCipherSuite {
    /**
     * A list of SSL ciphers the load balancer must support for HTTPS or SSL connections.
     */
    ciphers: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated load balancer.
     */
    loadBalancerId: string;
    /**
     * A friendly name for the SSL cipher suite. It must be unique and it cannot be changed.
     */
    name: string;
    state: string;
}

export interface GetLoadBalancersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancersLoadBalancer {
    compartmentId: string;
    definedTags: {[key: string]: any};
    displayName: string;
    freeformTags: {[key: string]: any};
    id: string;
    ipAddressDetails: outputs.GetLoadBalancersLoadBalancerIpAddressDetail[];
    /**
     * @deprecated The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
     */
    ipAddresses: string[];
    ipMode: string;
    isPrivate: boolean;
    networkSecurityGroupIds: string[];
    reservedIps: outputs.GetLoadBalancersLoadBalancerReservedIp[];
    shape: string;
    shapeDetails: outputs.GetLoadBalancersLoadBalancerShapeDetails;
    state: string;
    subnetIds: string[];
    systemTags: {[key: string]: any};
    timeCreated: string;
}

export interface GetLoadBalancersLoadBalancerIpAddressDetail {
    ipAddress: string;
    isPublic: boolean;
    reservedIp: outputs.GetLoadBalancersLoadBalancerIpAddressDetailReservedIp;
}

export interface GetLoadBalancersLoadBalancerIpAddressDetailReservedIp {
    id: string;
}

export interface GetLoadBalancersLoadBalancerReservedIp {
    id: string;
}

export interface GetLoadBalancersLoadBalancerShapeDetails {
    maximumBandwidthInMbps: number;
    minimumBandwidthInMbps: number;
}

export interface GetLogAnalyticsLogAnalyticsEntitiesFilter {
    /**
     * A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsEntitiesLogAnalyticsEntityCollection {
    items: outputs.GetLogAnalyticsLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem[];
}

export interface GetLogAnalyticsLogAnalyticsEntitiesLogAnalyticsEntityCollectionItem {
    /**
     * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     */
    areLogsCollected: boolean;
    /**
     * A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
     */
    cloudResourceId: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Internal name for the log analytics entity type.
     */
    entityTypeInternalName: string;
    /**
     * A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
     */
    entityTypeName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only log analytics entities whose hostname matches the entire hostname given.
     */
    hostname: string;
    /**
     * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     */
    id: string;
    /**
     * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     */
    lifecycleDetails: string;
    /**
     * Management agent (management-agents resource kind) compartment OCID
     */
    managementAgentCompartmentId: string;
    /**
     * Management agent (management-agents resource kind) display name
     */
    managementAgentDisplayName: string;
    /**
     * The OCID of the Management Agent.
     */
    managementAgentId: string;
    /**
     * A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
     */
    name: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * The name/value pairs for parameter values to be used in file patterns specified in log sources.
     */
    properties: {[key: string]: any};
    /**
     * A filter to return only log analytics entities whose sourceId matches the sourceId given.
     */
    sourceId: string;
    /**
     * A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
    /**
     * The timezone region of the log analytics entity.
     */
    timezoneRegion: string;
}

export interface GetLogAnalyticsLogAnalyticsLogGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollection {
    items: outputs.GetLogAnalyticsLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem[];
}

export interface GetLogAnalyticsLogAnalyticsLogGroupsLogAnalyticsLogGroupSummaryCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description for this resource.
     */
    description: string;
    /**
     * A filter to return only log analytics log groups whose displayName matches the entire display name given. The match is case-insensitive.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     */
    id: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRuleOverride {
    matchType: string;
    matchValue: string;
    propertyName: string;
    propertyValue: string;
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesFilter {
    /**
     * A filter to return rules only matching with this name.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollection {
    items: outputs.GetLogAnalyticsLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem[];
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItem {
    /**
     * An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    charEncoding: string;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    collectionType: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    description: string;
    /**
     * Logging Analytics entity OCID to associate the processed logs with.
     */
    entityId: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     */
    id: string;
    /**
     * A detailed status of the life cycle state.
     */
    lifecycleDetails: string;
    /**
     * Logging Analytics Log group OCID to associate the processed logs with.
     */
    logGroupId: string;
    /**
     * Name of the Logging Analytics Source to use for the processing.
     */
    logSourceName: string;
    /**
     * A filter to return rules only matching with this name.
     */
    name: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * Name of the Object Storage bucket.
     */
    osBucketName: string;
    /**
     * Object Storage namespace.
     */
    osNamespace: string;
    /**
     * Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are "contains".
     */
    overrides: outputs.GetLogAnalyticsLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride[];
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    pollSince: string;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     */
    pollTill: string;
    /**
     * Lifecycle state filter.
     */
    state: string;
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesLogAnalyticsObjectCollectionRuleCollectionItemOverride {
    matchType: string;
    matchValue: string;
    propertyName: string;
    propertyValue: string;
}

export interface GetLogAnalyticsNamespacesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespacesNamespaceCollection {
    items: outputs.GetLogAnalyticsNamespacesNamespaceCollectionItem[];
}

export interface GetLogAnalyticsNamespacesNamespaceCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * This indicates if the tenancy is onboarded to Logging Analytics
     */
    isOnboarded: boolean;
    /**
     * This is the namespace name of a tenancy
     */
    namespace: string;
}

export interface GetLoggingLogConfiguration {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    compartmentId: string;
    /**
     * The source the log object comes from.
     */
    source: outputs.GetLoggingLogConfigurationSource;
}

export interface GetLoggingLogConfigurationSource {
    /**
     * Log object category.
     */
    category: string;
    /**
     * The unique identifier of the resource emitting the log.
     */
    resource: string;
    /**
     * Service generating log.
     */
    service: string;
    /**
     * The log source.
     * * **OCISERVICE:** Oracle Service.
     */
    sourceType: string;
}

export interface GetLoggingLogGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogGroupsLogGroup {
    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description for this resource.
     */
    description: string;
    /**
     * Resource name
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * The log group object state.
     */
    state: string;
    /**
     * Time the resource was created.
     */
    timeCreated: string;
    /**
     * Time the resource was last modified.
     */
    timeLastModified: string;
}

export interface GetLoggingLogSavedSearchesFilter {
    /**
     * Resource name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogSavedSearchesLogSavedSearchSummaryCollection {
    items: outputs.GetLoggingLogSavedSearchesLogSavedSearchSummaryCollectionItem[];
}

export interface GetLoggingLogSavedSearchesLogSavedSearchSummaryCollectionItem {
    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description for this resource.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * Resource name
     */
    name: string;
    /**
     * The search query that is saved.
     */
    query: string;
    /**
     * The state of the LogSavedSearch
     */
    state: string;
    /**
     * Time the resource was created.
     */
    timeCreated: string;
    /**
     * Time the resource was last modified.
     */
    timeLastModified: string;
}

export interface GetLoggingLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogsLog {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    compartmentId: string;
    /**
     * Log object configuration.
     */
    configuration: outputs.GetLoggingLogsLogConfiguration;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Resource name
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * Whether or not this resource is currently enabled.
     */
    isEnabled: boolean;
    /**
     * OCID of a log group to work with.
     */
    logGroupId: string;
    /**
     * The logType that the log object is for, whether custom or service.
     */
    logType: string;
    /**
     * Log retention duration in 30-day increments (30, 60, 90 and so on).
     */
    retentionDuration: number;
    /**
     * Lifecycle state of the log object
     */
    state: string;
    /**
     * The OCID of the tenancy.
     */
    tenancyId: string;
    /**
     * Time the resource was created.
     */
    timeCreated: string;
    /**
     * Time the resource was last modified.
     */
    timeLastModified: string;
}

export interface GetLoggingLogsLogConfiguration {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    compartmentId: string;
    /**
     * The source the log object comes from.
     */
    source: outputs.GetLoggingLogsLogConfigurationSource;
}

export interface GetLoggingLogsLogConfigurationSource {
    /**
     * Log object category.
     */
    category: string;
    /**
     * The unique identifier of the resource emitting the log.
     */
    resource: string;
    /**
     * Service generating log.
     */
    service: string;
    /**
     * The log source.
     * * **OCISERVICE:** Oracle Service.
     */
    sourceType: string;
}

export interface GetLoggingUnifiedAgentConfigurationGroupAssociation {
    /**
     * list of group/dynamic group ids associated with this configuration.
     */
    groupLists: string[];
}

export interface GetLoggingUnifiedAgentConfigurationServiceConfiguration {
    /**
     * Type of Unified Agent service configuration.
     */
    configurationType: string;
    /**
     * Logging destination object.
     */
    destination: outputs.GetLoggingUnifiedAgentConfigurationServiceConfigurationDestination;
    sources: outputs.GetLoggingUnifiedAgentConfigurationServiceConfigurationSource[];
}

export interface GetLoggingUnifiedAgentConfigurationServiceConfigurationDestination {
    /**
     * The OCID of the resource.
     */
    logObjectId: string;
}

export interface GetLoggingUnifiedAgentConfigurationServiceConfigurationSource {
    channels: string[];
    /**
     * The name key to tag this grok pattern.
     */
    name: string;
    /**
     * source parser object.
     */
    parser: outputs.GetLoggingUnifiedAgentConfigurationServiceConfigurationSourceParser;
    paths: string[];
    /**
     * Unified schema logging source type.
     */
    sourceType: string;
}

export interface GetLoggingUnifiedAgentConfigurationServiceConfigurationSourceParser {
    delimiter: string;
    expression: string;
    /**
     * Specify the time field for the event time. If the event doesn't have this field, the current time is used.
     */
    fieldTimeKey: string;
    formatFirstline: string;
    formats: string[];
    grokFailureKey: string;
    grokNameKey: string;
    /**
     * If true, use Fluent::EventTime.now(current time) as a timestamp when timeKey is specified.
     */
    isEstimateCurrentEvent: boolean;
    /**
     * If true, keep time field in the record.
     */
    isKeepTimeKey: boolean;
    /**
     * If true, an empty string field is replaced with nil.
     */
    isNullEmptyString: boolean;
    isSupportColonlessIdent: boolean;
    isWithPriority: boolean;
    keys: string[];
    messageFormat: string;
    messageKey: string;
    multiLineStartRegexp: string;
    /**
     * Specify the null value pattern.
     */
    nullValuePattern: string;
    /**
     * Type of fluent parser.
     */
    parserType: string;
    patterns: outputs.GetLoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern[];
    rfc5424timeFormat: string;
    syslogParserType: string;
    timeFormat: string;
    timeType: string;
    /**
     * Specify the timeout for parse processing. This is mainly for detecting an incorrect regexp pattern.
     */
    timeoutInMilliseconds: number;
    /**
     * Specify types for converting a field into another type.
     */
    types: {[key: string]: any};
}

export interface GetLoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
    /**
     * Process value using the specified format. This is available only when timeType is a string.
     */
    fieldTimeFormat: string;
    /**
     * Specify the time field for the event time. If the event doesn't have this field, the current time is used.
     */
    fieldTimeKey: string;
    /**
     * Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     */
    fieldTimeZone: string;
    /**
     * The name key to tag this grok pattern.
     */
    name: string;
    /**
     * The grok pattern.
     */
    pattern: string;
}

export interface GetLoggingUnifiedAgentConfigurationsFilter {
    /**
     * The name key to tag this grok pattern.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingUnifiedAgentConfigurationsUnifiedAgentConfigurationCollection {
    items: outputs.GetLoggingUnifiedAgentConfigurationsUnifiedAgentConfigurationCollectionItem[];
}

export interface GetLoggingUnifiedAgentConfigurationsUnifiedAgentConfigurationCollectionItem {
    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     */
    compartmentId: string;
    /**
     * State of unified agent service configuration.
     */
    configurationState: string;
    /**
     * Type of Unified Agent service configuration.
     */
    configurationType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description for this resource.
     */
    description: string;
    /**
     * Resource name
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource.
     */
    id: string;
    /**
     * Whether or not this resource is currently enabled.
     */
    isEnabled: boolean;
    /**
     * Lifecycle state of the log object
     */
    state: string;
    /**
     * Time the resource was created.
     */
    timeCreated: string;
    /**
     * Time the resource was last modified.
     */
    timeLastModified: string;
}

export interface GetManagementAgentManagementAgentAvailableHistoriesAvailabilityHistory {
    /**
     * The availability status of managementAgent
     */
    availabilityStatus: string;
    /**
     * Unique Management Agent identifier
     */
    managementAgentId: string;
    /**
     * The time till which the Management Agent was known to be in the availability status. An RFC3339 formatted datetime string
     */
    timeAvailabilityStatusEnded: string;
    /**
     * The time at which the Management Agent moved to the availability status. An RFC3339 formatted datetime string
     */
    timeAvailabilityStatusStarted: string;
}

export interface GetManagementAgentManagementAgentAvailableHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentImagesFilter {
    /**
     * A filter to return only resources that match the entire platform name given.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentImagesManagementAgentImage {
    /**
     * Agent image content SHA256 Hash
     */
    checksum: string;
    /**
     * Agent image resource id
     */
    id: string;
    /**
     * Object storage URL for download
     */
    objectUrl: string;
    /**
     * Agent image platform display name
     */
    platformName: string;
    /**
     * Agent image platform type
     */
    platformType: string;
    /**
     * Agent image size in bytes
     */
    size: number;
    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     */
    state: string;
    /**
     * Agent image version
     */
    version: string;
}

export interface GetManagementAgentManagementAgentInstallKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentInstallKeysManagementAgentInstallKey {
    /**
     * Total number of install for this keys
     */
    allowedKeyInstallCount: number;
    /**
     * The ID of the compartment from which the Management Agents to be listed.
     */
    compartmentId: string;
    /**
     * Principal id of user who created the Agent Install key
     */
    createdByPrincipalId: string;
    /**
     * Total number of install for this keys
     */
    currentKeyInstallCount: number;
    /**
     * The display name for which the Key needs to be listed.
     */
    displayName: string;
    /**
     * Agent install Key identifier
     */
    id: string;
    /**
     * Management Agent Install Key
     */
    key: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     */
    state: string;
    /**
     * The time when Management Agent install Key was created. An RFC3339 formatted date time string
     */
    timeCreated: string;
    /**
     * date after which key would expire after creation
     */
    timeExpires: string;
    /**
     * The time when Management Agent install Key was updated. An RFC3339 formatted date time string
     */
    timeUpdated: string;
}

export interface GetManagementAgentManagementAgentPluginList {
    /**
     * Management Agent Plugin Identifier, can be renamed
     */
    pluginDisplayName: string;
    /**
     * Plugin Id
     */
    pluginId: string;
    /**
     * Management Agent Plugin Name
     */
    pluginName: string;
    /**
     * Plugin Version
     */
    pluginVersion: string;
}

export interface GetManagementAgentManagementAgentPluginsFilter {
    /**
     * Management Agent Plugin Name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentPluginsManagementAgentPlugin {
    /**
     * Management Agent Plugin description
     */
    description: string;
    /**
     * Filter to return only Management Agent Plugins having the particular display name.
     */
    displayName: string;
    /**
     * Management Agent Plugin Id
     */
    id: string;
    /**
     * A flag to indicate whether a given plugin can be deployed from Agent Console UI or not.
     */
    isConsoleDeployable: boolean;
    /**
     * Management Agent Plugin Name
     */
    name: string;
    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     */
    state: string;
    /**
     * Supported Platform Types
     */
    supportedPlatformTypes: string[];
    /**
     * Management Agent Plugin Version
     */
    version: number;
}

export interface GetManagementAgentManagementAgentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentsManagementAgent {
    /**
     * The current availability status of managementAgent
     */
    availabilityStatus: string;
    /**
     * The ID of the compartment from which the Management Agents to be listed.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    deployPluginsIds: string[];
    /**
     * Filter to return only Management Agents having the particular display name.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Management Agent host machine name
     */
    host: string;
    /**
     * agent identifier
     */
    id: string;
    /**
     * agent install key identifier
     */
    installKeyId: string;
    /**
     * Path where Management Agent is installed
     */
    installPath: string;
    /**
     * true if the agent can be upgraded automatically; false if it must be upgraded manually. true is currently unsupported.
     */
    isAgentAutoUpgradable: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    managedAgentId: string;
    /**
     * Platform Name
     */
    platformName: string;
    /**
     * Filter to return only Management Agents having the particular platform type.
     */
    platformType: string;
    /**
     * Platform Version
     */
    platformVersion: string;
    /**
     * list of managementAgentPlugins associated with the agent
     */
    pluginLists: outputs.GetManagementAgentManagementAgentsManagementAgentPluginList[];
    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     */
    state: string;
    /**
     * The time the Management Agent was created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
     */
    timeLastHeartbeat: string;
    /**
     * The time the Management Agent was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
    /**
     * Filter to return only Management Agents having the particular agent version.
     */
    version: string;
}

export interface GetManagementAgentManagementAgentsManagementAgentPluginList {
    /**
     * Management Agent Plugin Identifier, can be renamed
     */
    pluginDisplayName: string;
    /**
     * Plugin Id
     */
    pluginId: string;
    /**
     * Filter to return only Management Agents having the particular Plugin installed.
     */
    pluginName: string;
    /**
     * Plugin Version
     */
    pluginVersion: string;
}

export interface GetMarketplaceAcceptedAgreementsAcceptedAgreement {
    /**
     * The unique identifier for the terms of use agreement itself.
     */
    agreementId: string;
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    /**
     * The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The display name of the resource.
     */
    displayName: string;
    /**
     * The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique identifier for the acceptance of the agreement within a specific compartment.
     */
    id: string;
    /**
     * The unique identifier for the listing.
     */
    listingId: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion: string;
    signature: string;
    /**
     * The time the agreement was accepted.
     */
    timeAccepted: string;
}

export interface GetMarketplaceAcceptedAgreementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceCategoriesCategory {
    /**
     * Name of the product category.
     */
    name: string;
}

export interface GetMarketplaceCategoriesFilter {
    /**
     * Name of the product category.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingBanner {
    /**
     * The content URL of the screenshot.
     */
    contentUrl: string;
    /**
     * The file extension of the screenshot.
     */
    fileExtension: string;
    /**
     * The MIME type of the screenshot.
     */
    mimeType: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingDocumentationLink {
    /**
     * The category that the document belongs to.
     */
    documentCategory: string;
    /**
     * Text that describes the resource.
     */
    name: string;
    /**
     * The URL of the resource.
     */
    url: string;
}

export interface GetMarketplaceListingIcon {
    /**
     * The content URL of the screenshot.
     */
    contentUrl: string;
    /**
     * The file extension of the screenshot.
     */
    fileExtension: string;
    /**
     * The MIME type of the screenshot.
     */
    mimeType: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingLanguage {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingLink {
    /**
     * The anchor tag.
     */
    href: string;
    /**
     * Reference links to the previous page, next page, and other pages.
     */
    rel: string;
}

export interface GetMarketplaceListingPackageAgreementsAgreement {
    /**
     * Who authored the agreement.
     */
    author: string;
    /**
     * The content URL of the agreement.
     */
    contentUrl: string;
    /**
     * The unique identifier for the agreement.
     */
    id: string;
    /**
     * Textual prompt to read and accept the agreement.
     */
    prompt: string;
}

export interface GetMarketplaceListingPackageAgreementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingPackageOperatingSystem {
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackagePricing {
    /**
     * The currency of the pricing model.
     */
    currency: string;
    /**
     * The type of pricing for a PAYGO model, eg PER_OCPU_LINEAR, PER_OCPU_MIN_BILLING, PER_INSTANCE.  Null if type is not PAYGO.
     */
    payGoStrategy: string;
    /**
     * The pricing rate.
     */
    rate: number;
    /**
     * The type of the pricing model.
     */
    type: string;
}

export interface GetMarketplaceListingPackageRegion {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Countries in the region.
     */
    countries: outputs.GetMarketplaceListingPackageRegionCountry[];
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackageRegionCountry {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackageVariable {
    /**
     * The data type of the variable.
     */
    dataType: string;
    /**
     * The variable's default value.
     */
    defaultValue: string;
    /**
     * A description of the variable.
     */
    description: string;
    /**
     * A brief textual description that helps to explain the variable.
     */
    hintMessage: string;
    /**
     * Whether the variable is mandatory.
     */
    isMandatory: boolean;
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackagesFilter {
    /**
     * The name of the variable.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingPackagesListingPackage {
    /**
     * The unique identifier for the listing.
     */
    listingId: string;
    /**
     * OS used by the listing.
     */
    operatingSystem: outputs.GetMarketplaceListingPackagesListingPackageOperatingSystem;
    /**
     * A filter to return only packages that match the given package type exactly.
     */
    packageType: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion: string;
    /**
     * The regions where the listing is available.
     */
    regions: outputs.GetMarketplaceListingPackagesListingPackageRegion[];
    /**
     * The unique identifier for the package resource.
     */
    resourceId: string;
    /**
     * The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetMarketplaceListingPackagesListingPackageOperatingSystem {
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackagesListingPackageRegion {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Countries in the region.
     */
    countries: outputs.GetMarketplaceListingPackagesListingPackageRegionCountry[];
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPackagesListingPackageRegionCountry {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplaceListingPublisher {
    /**
     * The email address of the publisher.
     */
    contactEmail: string;
    /**
     * The phone number of the publisher.
     */
    contactPhone: string;
    /**
     * A description of the screenshot.
     */
    description: string;
    /**
     * The address of the publisher's headquarters.
     */
    hqAddress: string;
    /**
     * Unique identifier for the publisher.
     */
    id: string;
    /**
     * Reference links.
     */
    links: outputs.GetMarketplaceListingPublisherLink[];
    /**
     * The model for upload data for images and icons.
     */
    logo: outputs.GetMarketplaceListingPublisherLogo;
    /**
     * Text that describes the resource.
     */
    name: string;
    /**
     * The publisher's website.
     */
    websiteUrl: string;
    /**
     * The year the publisher's company or organization was founded.
     */
    yearFounded: string;
}

export interface GetMarketplaceListingPublisherLink {
    /**
     * The anchor tag.
     */
    href: string;
    /**
     * Reference links to the previous page, next page, and other pages.
     */
    rel: string;
}

export interface GetMarketplaceListingPublisherLogo {
    /**
     * The content URL of the screenshot.
     */
    contentUrl: string;
    /**
     * The file extension of the screenshot.
     */
    fileExtension: string;
    /**
     * The MIME type of the screenshot.
     */
    mimeType: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingRegion {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Countries in the region.
     */
    countries: outputs.GetMarketplaceListingRegionCountry[];
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingRegionCountry {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingScreenshot {
    /**
     * The content URL of the screenshot.
     */
    contentUrl: string;
    /**
     * A description of the screenshot.
     */
    description: string;
    /**
     * The file extension of the screenshot.
     */
    fileExtension: string;
    /**
     * The MIME type of the screenshot.
     */
    mimeType: string;
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingSupportContact {
    /**
     * The email of the contact.
     */
    email: string;
    /**
     * Text that describes the resource.
     */
    name: string;
    /**
     * The phone number of the contact.
     */
    phone: string;
    /**
     * The email subject line to use when contacting support.
     */
    subject: string;
}

export interface GetMarketplaceListingSupportLink {
    /**
     * Text that describes the resource.
     */
    name: string;
    /**
     * The URL of the resource.
     */
    url: string;
}

export interface GetMarketplaceListingSupportedOperatingSystem {
    /**
     * Text that describes the resource.
     */
    name: string;
}

export interface GetMarketplaceListingTaxesFilter {
    /**
     * Name of the tax code.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingTaxesTax {
    /**
     * Unique code for the tax.
     */
    code: string;
    /**
     * Country, which imposes the tax.
     */
    country: string;
    /**
     * Name of the tax code.
     */
    name: string;
    /**
     * The URL with more details about this tax.
     */
    url: string;
}

export interface GetMarketplaceListingVideo {
    /**
     * Text that describes the resource.
     */
    name: string;
    /**
     * The URL of the resource.
     */
    url: string;
}

export interface GetMarketplaceListingsFilter {
    /**
     * The name of the listing.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingsListing {
    /**
     * Product categories that the listing belongs to.
     */
    categories: string[];
    /**
     * The model for upload data for images and icons.
     */
    icon: outputs.GetMarketplaceListingsListingIcon;
    /**
     * Unique identifier for the publisher.
     */
    id: string;
    /**
     * Indicates whether to show only featured listings. If this is set to `false` or is omitted, then all listings will be returned.
     */
    isFeatured: boolean;
    /**
     * In which catalog the listing should exist.
     */
    listingType: string;
    /**
     * The name of the listing.
     */
    name: string;
    /**
     * A filter to return only packages that match the given package type exactly.
     */
    packageType: string;
    pricingTypes: string[];
    /**
     * Summary details about the publisher of the listing.
     */
    publishers: outputs.GetMarketplaceListingsListingPublisher[];
    /**
     * The regions where the listing is eligible to be deployed.
     */
    regions: outputs.GetMarketplaceListingsListingRegion[];
    /**
     * A short description of the listing.
     */
    shortDescription: string;
    /**
     * List of operating systems supported.
     */
    supportedOperatingSystems: outputs.GetMarketplaceListingsListingSupportedOperatingSystem[];
}

export interface GetMarketplaceListingsListingIcon {
    /**
     * The content URL of the screenshot.
     */
    contentUrl: string;
    /**
     * The file extension of the screenshot.
     */
    fileExtension: string;
    /**
     * The MIME type of the screenshot.
     */
    mimeType: string;
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplaceListingsListingPublisher {
    /**
     * A description of the screenshot.
     */
    description: string;
    /**
     * Unique identifier for the publisher.
     */
    id: string;
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplaceListingsListingRegion {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * Countries in the region.
     */
    countries: outputs.GetMarketplaceListingsListingRegionCountry[];
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplaceListingsListingRegionCountry {
    /**
     * A code assigned to the item.
     */
    code: string;
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplaceListingsListingSupportedOperatingSystem {
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplacePublicationIcon {
    /**
     * The content URL of the upload data.
     */
    contentUrl: string;
    /**
     * The file extension of the upload data.
     */
    fileExtension: string;
    /**
     * The MIME type of the upload data.
     */
    mimeType: string;
    /**
     * name of the operating system
     */
    name: string;
}

export interface GetMarketplacePublicationPackageDetails {
    eulas: outputs.GetMarketplacePublicationPackageDetailsEula[];
    imageId: string;
    operatingSystem: outputs.GetMarketplacePublicationPackageDetailsOperatingSystem;
    /**
     * The listing's package type.
     */
    packageType: string;
    packageVersion: string;
}

export interface GetMarketplacePublicationPackageDetailsEula {
    eulaType: string;
    licenseText: string;
}

export interface GetMarketplacePublicationPackageDetailsOperatingSystem {
    /**
     * name of the operating system
     */
    name: string;
}

export interface GetMarketplacePublicationPackageOperatingSystem {
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplacePublicationPackageVariable {
    /**
     * The data type of the variable.
     */
    dataType: string;
    /**
     * The variable's default value.
     */
    defaultValue: string;
    /**
     * A description of the variable.
     */
    description: string;
    /**
     * A brief textual description that helps to explain the variable.
     */
    hintMessage: string;
    /**
     * Whether the variable is mandatory.
     */
    isMandatory: boolean;
    /**
     * The name of the variable.
     */
    name: string;
}

export interface GetMarketplacePublicationPackagesFilter {
    /**
     * The name of the variable.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublicationPackagesPublicationPackage {
    /**
     * The ID of the listing that the specified package belongs to.
     */
    listingId: string;
    /**
     * A filter to return only packages that match the given package type exactly.
     */
    packageType: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion: string;
    /**
     * The unique identifier for the package resource.
     */
    resourceId: string;
    /**
     * The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetMarketplacePublicationSupportContact {
    /**
     * The email of the contact.
     */
    email: string;
    /**
     * name of the operating system
     */
    name: string;
    /**
     * The phone number of the contact.
     */
    phone: string;
    /**
     * The email subject line to use when contacting support.
     */
    subject: string;
}

export interface GetMarketplacePublicationSupportedOperatingSystem {
    /**
     * name of the operating system
     */
    name: string;
}

export interface GetMarketplacePublicationsFilter {
    /**
     * The name of the listing.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublicationsPublication {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    /**
     * The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The model for upload data for images and icons.
     */
    icon: outputs.GetMarketplacePublicationsPublicationIcon;
    /**
     * The unique identifier for the listing in Marketplace.
     */
    id: string;
    isAgreementAcknowledged: boolean;
    /**
     * The type of the listing
     */
    listingType: string;
    /**
     * A long description of the listing.
     */
    longDescription: string;
    /**
     * The name of the listing.
     */
    name: string;
    packageDetails: outputs.GetMarketplacePublicationsPublicationPackageDetails;
    /**
     * The listing's package type.
     */
    packageType: string;
    /**
     * A short description of the listing.
     */
    shortDescription: string;
    /**
     * The state of the listing in its lifecycle
     */
    state: string;
    /**
     * Contact information to use to get support from the publisher for the listing.
     */
    supportContacts: outputs.GetMarketplacePublicationsPublicationSupportContact[];
    /**
     * List of operating systems supprted.
     */
    supportedOperatingSystems: outputs.GetMarketplacePublicationsPublicationSupportedOperatingSystem[];
    /**
     * The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
}

export interface GetMarketplacePublicationsPublicationIcon {
    /**
     * The content URL of the upload data.
     */
    contentUrl: string;
    /**
     * The file extension of the upload data.
     */
    fileExtension: string;
    /**
     * The MIME type of the upload data.
     */
    mimeType: string;
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplacePublicationsPublicationPackageDetails {
    eulas: outputs.GetMarketplacePublicationsPublicationPackageDetailsEula[];
    imageId: string;
    operatingSystem: outputs.GetMarketplacePublicationsPublicationPackageDetailsOperatingSystem;
    /**
     * The listing's package type.
     */
    packageType: string;
    packageVersion: string;
}

export interface GetMarketplacePublicationsPublicationPackageDetailsEula {
    eulaType: string;
    licenseText: string;
}

export interface GetMarketplacePublicationsPublicationPackageDetailsOperatingSystem {
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplacePublicationsPublicationSupportContact {
    /**
     * The email of the contact.
     */
    email: string;
    /**
     * The name of the listing.
     */
    name: string;
    /**
     * The phone number of the contact.
     */
    phone: string;
    /**
     * The email subject line to use when contacting support.
     */
    subject: string;
}

export interface GetMarketplacePublicationsPublicationSupportedOperatingSystem {
    /**
     * The name of the listing.
     */
    name: string;
}

export interface GetMarketplacePublishersFilter {
    /**
     * The name of the publisher.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublishersPublisher {
    /**
     * A description of the publisher.
     */
    description: string;
    /**
     * Unique identifier for the publisher.
     */
    id: string;
    /**
     * The name of the publisher.
     */
    name: string;
}

export interface GetMeteringComputationConfigurationItem {
    /**
     * The configuration key.
     */
    key: string;
    /**
     * The configuration value.
     */
    values: string[];
}

export interface GetMeteringComputationCustomTableSavedCustomTable {
    /**
     * The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    columnGroupBies: string[];
    /**
     * The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * The name of the custom table.
     */
    displayName: string;
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.GetMeteringComputationCustomTableSavedCustomTableGroupByTag[];
    /**
     * The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    rowGroupBies: string[];
    /**
     * The version of the custom table.
     */
    version: number;
}

export interface GetMeteringComputationCustomTableSavedCustomTableGroupByTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface GetMeteringComputationCustomTablesCustomTableCollection {
    items: outputs.GetMeteringComputationCustomTablesCustomTableCollectionItem[];
}

export interface GetMeteringComputationCustomTablesCustomTableCollectionItem {
    /**
     * The compartment ID in which to list resources.
     */
    compartmentId: string;
    /**
     * The custom table OCID.
     */
    id: string;
    /**
     * The custom table for Cost Analysis UI rendering.
     */
    savedCustomTable: outputs.GetMeteringComputationCustomTablesCustomTableCollectionItemSavedCustomTable;
    /**
     * The saved report ID in which to list resources.
     */
    savedReportId: string;
}

export interface GetMeteringComputationCustomTablesCustomTableCollectionItemSavedCustomTable {
    /**
     * The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    columnGroupBies: string[];
    /**
     * The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * The name of the custom table.
     */
    displayName: string;
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.GetMeteringComputationCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag[];
    /**
     * The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    rowGroupBies: string[];
    /**
     * The version of the custom table.
     */
    version: number;
}

export interface GetMeteringComputationCustomTablesCustomTableCollectionItemSavedCustomTableGroupByTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface GetMeteringComputationCustomTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationQueriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationQueriesQueryCollection {
    items: outputs.GetMeteringComputationQueriesQueryCollectionItem[];
}

export interface GetMeteringComputationQueriesQueryCollectionItem {
    /**
     * The compartment ID in which to list resources.
     */
    compartmentId: string;
    /**
     * The query OCID.
     */
    id: string;
    /**
     * The common fields for queries.
     */
    queryDefinition: outputs.GetMeteringComputationQueriesQueryCollectionItemQueryDefinition;
}

export interface GetMeteringComputationQueriesQueryCollectionItemQueryDefinition {
    /**
     * The common fields for Cost Analysis UI rendering.
     */
    costAnalysisUi: outputs.GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi;
    /**
     * The query display name. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The request of the generated Cost Analysis report.
     */
    reportQuery: outputs.GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQuery;
    /**
     * The saved query version.
     */
    version: number;
}

export interface GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi {
    /**
     * The graph type.
     */
    graph: string;
    /**
     * A cumulative graph.
     */
    isCumulativeGraph: boolean;
}

export interface GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQuery {
    /**
     * The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
     */
    dateRangeName: string;
    filter: string;
    /**
     * Forecast configuration of usage/cost.
     */
    forecast: outputs.GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQueryForecast;
    /**
     * The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
     */
    granularity: string;
    /**
     * Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    groupBies: string[];
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag[];
    /**
     * Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
     */
    isAggregateByTime: boolean;
    /**
     * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
     */
    queryType: string;
    /**
     * Tenant ID.
     */
    tenantId: string;
    /**
     * The usage end time.
     */
    timeUsageEnded: string;
    /**
     * The usage start time.
     */
    timeUsageStarted: string;
}

export interface GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQueryForecast {
    /**
     * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     */
    forecastType: string;
    /**
     * The forecast end time.
     */
    timeForecastEnded: string;
    /**
     * The forecast start time. Defaults to UTC-1 if not specified.
     */
    timeForecastStarted: string;
}

export interface GetMeteringComputationQueriesQueryCollectionItemQueryDefinitionReportQueryGroupByTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface GetMeteringComputationQueryQueryDefinition {
    /**
     * The common fields for Cost Analysis UI rendering.
     */
    costAnalysisUi: outputs.GetMeteringComputationQueryQueryDefinitionCostAnalysisUi;
    /**
     * The query display name. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * The request of the generated Cost Analysis report.
     */
    reportQuery: outputs.GetMeteringComputationQueryQueryDefinitionReportQuery;
    /**
     * The saved query version.
     */
    version: number;
}

export interface GetMeteringComputationQueryQueryDefinitionCostAnalysisUi {
    /**
     * The graph type.
     */
    graph: string;
    /**
     * A cumulative graph.
     */
    isCumulativeGraph: boolean;
}

export interface GetMeteringComputationQueryQueryDefinitionReportQuery {
    /**
     * The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
     */
    dateRangeName: string;
    filter: string;
    /**
     * Forecast configuration of usage/cost.
     */
    forecast: outputs.GetMeteringComputationQueryQueryDefinitionReportQueryForecast;
    /**
     * The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
     */
    granularity: string;
    /**
     * Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    groupBies: string[];
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.GetMeteringComputationQueryQueryDefinitionReportQueryGroupByTag[];
    /**
     * Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
     */
    isAggregateByTime: boolean;
    /**
     * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
     */
    queryType: string;
    /**
     * Tenant ID.
     */
    tenantId: string;
    /**
     * The usage end time.
     */
    timeUsageEnded: string;
    /**
     * The usage start time.
     */
    timeUsageStarted: string;
}

export interface GetMeteringComputationQueryQueryDefinitionReportQueryForecast {
    /**
     * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     */
    forecastType: string;
    /**
     * The forecast end time.
     */
    timeForecastEnded: string;
    /**
     * The forecast start time. Defaults to UTC-1 if not specified.
     */
    timeForecastStarted: string;
}

export interface GetMeteringComputationQueryQueryDefinitionReportQueryGroupByTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface GetMonitoringAlarmHistoryCollectionEntry {
    /**
     * Description for this alarm history entry. Avoid entering confidential information.
     */
    summary: string;
    /**
     * Timestamp for this alarm history entry. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timestamp: string;
    /**
     * Timestamp for the transition of the alarm state. For example, the time when the alarm transitioned from OK to Firing. Available for state transition entries only. Note: A three-minute lag for this value accounts for any late-arriving metrics.  Example: `2019-02-01T0:59:00.789Z`
     */
    timestampTriggered: string;
}

export interface GetMonitoringAlarmStatusesAlarmStatus {
    /**
     * A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
     */
    id: string;
    /**
     * The configured severity of the alarm.  Example: `CRITICAL`
     */
    severity: string;
    /**
     * The status of this alarm.  Example: `FIRING`
     */
    status: string;
    /**
     * The configuration details for suppressing an alarm.
     */
    suppression: outputs.GetMonitoringAlarmStatusesAlarmStatusSuppression;
    /**
     * Timestamp for the transition of the alarm state. For example, the time when the alarm transitioned from OK to Firing.  Example: `2019-02-01T01:02:29.600Z`
     */
    timestampTriggered: string;
}

export interface GetMonitoringAlarmStatusesAlarmStatusSuppression {
    /**
     * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description: string;
    /**
     * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timeSuppressFrom: string;
    /**
     * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
     */
    timeSuppressUntil: string;
}

export interface GetMonitoringAlarmStatusesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringAlarmSuppression {
    /**
     * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description: string;
    /**
     * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timeSuppressFrom: string;
    /**
     * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
     */
    timeSuppressUntil: string;
}

export interface GetMonitoringAlarmsAlarm {
    /**
     * The human-readable content of the notification delivered. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
     */
    body: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
     */
    compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A list of destinations to which the notifications for this alarm will be delivered.  Each destination is represented by an [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) related to the supported destination service. For example, a destination using the Notifications service is represented by a topic OCID.  Supported destination services: Notifications Service. Limit: One destination per supported destination service.
     */
    destinations: string[];
    /**
     * A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
     */
    id: string;
    /**
     * Whether the alarm is enabled.  Example: `true`
     */
    isEnabled: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
     */
    metricCompartmentId: string;
    /**
     * When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
     */
    metricCompartmentIdInSubtree: boolean;
    /**
     * The source service or application emitting the metric that is evaluated by the alarm.  Example: `ociComputeagent`
     */
    namespace: string;
    /**
     * The period of time that the condition defined in the alarm must persist before the alarm state  changes from "OK" to "FIRING". For example, a value of 5 minutes means that the  alarm must persist in breaching the condition for five minutes before the alarm updates its  state to "FIRING".
     */
    pendingDuration: string;
    /**
     * The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of  the Monitoring service interprets results for each returned time series as Boolean values,  where zero represents false and a non-zero value represents true. A true value means that the trigger  rule condition has been met. The query must specify a metric, statistic, interval, and trigger  rule (threshold or absence). Supported values for interval: `1m`-`60m` (also `1h`). You can optionally  specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`.  For details about Monitoring Query Language (MQL), see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm).  For available dimensions, review the metric definition for the supported service.  See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
     */
    query: string;
    /**
     * The frequency at which notifications are re-submitted, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
     */
    repeatNotificationDuration: string;
    /**
     * The time between calculated aggregation windows for the alarm. Supported value: `1m`
     */
    resolution: string;
    /**
     * Resource group specified as a filter for metric data retrieved by the alarm. A resource group is a custom string that can be used as a filter. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     */
    resourceGroup: string;
    /**
     * The perceived type of response required when the alarm is in the "FIRING" state.  Example: `CRITICAL`
     */
    severity: string;
    /**
     * A filter to return only alarms that match the given lifecycle state exactly. When not specified, only alarms in the ACTIVE lifecycle state are listed.
     */
    state: string;
    /**
     * The configuration details for suppressing an alarm.
     */
    suppression: outputs.GetMonitoringAlarmsAlarmSuppression;
    /**
     * The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
     */
    timeUpdated: string;
}

export interface GetMonitoringAlarmsAlarmSuppression {
    /**
     * Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description: string;
    /**
     * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timeSuppressFrom: string;
    /**
     * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
     */
    timeSuppressUntil: string;
}

export interface GetMonitoringAlarmsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringMetricDataFilter {
    /**
     * The name of the metric.  Example: `CpuUtilization`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringMetricDataMetricData {
    /**
     * The list of timestamp-value pairs returned for the specified request. Metric values are rolled up to the start time specified in the request.  For important limits information related to data points, see MetricData Reference at the top of this page.
     */
    aggregatedDatapoints: outputs.GetMonitoringMetricDataMetricDataAggregatedDatapoint[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
     */
    compartmentId: string;
    /**
     * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
     */
    compartmentIdInSubtree: boolean;
    /**
     * Qualifiers provided in the definition of the returned metric. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
     */
    dimensions: {[key: string]: any};
    /**
     * The end of the time range to use when searching for metric data points. Format is defined by RFC3339. The response excludes metric data points for the endTime. Default value: the timestamp representing when the call was sent.  Example: `2019-02-01T02:02:29.600Z`
     */
    endTime: string;
    /**
     * The references provided in a metric definition to indicate extra information about the metric.  Example: `"unit": "bytes"`
     */
    metadata: {[key: string]: any};
    /**
     * The name of the metric.  Example: `CpuUtilization`
     */
    name: string;
    /**
     * The source service or application to use when searching for metric data points to aggregate.  Example: `ociComputeagent`
     */
    namespace: string;
    /**
     * The Monitoring Query Language (MQL) expression to use when searching for metric data points to aggregate. The query must specify a metric, statistic, and interval. Supported values for  interval: `1m`-`60m` (also `1h`). You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`.
     */
    query: string;
    /**
     * The time between calculated aggregation windows. Use with the query interval to vary the frequency at which aggregated data points are returned. For example, use a query interval of 5 minutes with a resolution of 1 minute to retrieve five-minute aggregations at a one-minute frequency. The resolution must be equal or less than the interval in the query. The default resolution is 1m (one minute). Supported values: `1m`-`60m` (also `1h`).  Example: `5m`
     */
    resolution: string;
    /**
     * Resource group that you want to use as a filter. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     */
    resourceGroup: string;
    /**
     * The beginning of the time range to use when searching for metric data points. Format is defined by RFC3339. The response includes metric data points for the startTime. Default value: the timestamp 3 hours before the call was sent.  Example: `2019-02-01T01:02:29.600Z`
     */
    startTime: string;
}

export interface GetMonitoringMetricDataMetricDataAggregatedDatapoint {
    /**
     * The date and time associated with the value of this data point. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timestamp: string;
    /**
     * Numeric value of the metric.  Example: `10.4`
     */
    value: number;
}

export interface GetMonitoringMetricsFilter {
    /**
     * The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringMetricsMetric {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
     */
    compartmentId: string;
    /**
     * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
     */
    compartmentIdInSubtree: boolean;
    /**
     * Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: { "resourceId": "<var>&lt;instance_OCID&gt;</var>" }
     */
    dimensionFilters: {[key: string]: any};
    /**
     * Qualifiers provided in a metric definition. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: `"resourceId": "ocid1.instance.region1.phx.exampleuniqueID"`
     */
    dimensions: {[key: string]: any};
    /**
     * Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup.
     */
    groupBies: string[];
    /**
     * The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
     */
    name: string;
    /**
     * The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
     */
    namespace: string;
    /**
     * Resource group that you want to use as a filter. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     */
    resourceGroup: string;
}

export interface GetMysqlAnalyticsClusterClusterNode {
    /**
     * The ID of the node within MySQL Analytics Cluster.
     */
    nodeId: string;
    /**
     * The current state of the Analytics Cluster.
     */
    state: string;
    /**
     * The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
}

export interface GetMysqlChannelSource {
    /**
     * The network address of the MySQL instance.
     */
    hostname: string;
    password: string;
    /**
     * The port the source MySQL instance listens on.
     */
    port: number;
    /**
     * The specific source identifier.
     */
    sourceType: string;
    /**
     * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.GetMysqlChannelSourceSslCaCertificate;
    /**
     * The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface GetMysqlChannelSourceSslCaCertificate {
    /**
     * The type of CA certificate.
     */
    certificateType: string;
    /**
     * The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface GetMysqlChannelTarget {
    /**
     * The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The OCID of the source DB System.
     */
    dbSystemId: string;
    /**
     * The specific target identifier.
     */
    targetType: string;
}

export interface GetMysqlChannelsChannel {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * User provided description of the Channel.
     */
    description: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Channel.
     */
    id: string;
    /**
     * If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
     */
    isEnabled: boolean;
    /**
     * A message describing the state of the Channel.
     */
    lifecycleDetails: string;
    /**
     * Parameters detailing how to provision the source for the given Channel.
     */
    source: outputs.GetMysqlChannelsChannelSource;
    /**
     * The LifecycleState of the Channel.
     */
    state: string;
    /**
     * Details about the Channel target.
     */
    target: outputs.GetMysqlChannelsChannelTarget;
    /**
     * The date and time the Channel was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The time the Channel was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
}

export interface GetMysqlChannelsChannelSource {
    /**
     * The network address of the MySQL instance.
     */
    hostname: string;
    password: string;
    /**
     * The port the source MySQL instance listens on.
     */
    port: number;
    /**
     * The specific source identifier.
     */
    sourceType: string;
    /**
     * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.GetMysqlChannelsChannelSourceSslCaCertificate;
    /**
     * The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface GetMysqlChannelsChannelSourceSslCaCertificate {
    /**
     * The type of CA certificate.
     */
    certificateType: string;
    /**
     * The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface GetMysqlChannelsChannelTarget {
    /**
     * The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
    /**
     * The specific target identifier.
     */
    targetType: string;
}

export interface GetMysqlChannelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlHeatWaveClusterClusterNode {
    /**
     * The ID of the node within MySQL HeatWave cluster.
     */
    nodeId: string;
    /**
     * The current state of the HeatWave cluster.
     */
    state: string;
    /**
     * The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlBackupDbSystemSnapshot {
    /**
     * The username for the administrative user.
     */
    adminUsername: string;
    /**
     * The Availability Domain where the primary DB System should be located.
     */
    availabilityDomain: string;
    /**
     * The Backup policy for the DB System.
     */
    backupPolicy: outputs.GetMysqlMysqlBackupDbSystemSnapshotBackupPolicy;
    /**
     * The OCID of the compartment the DB System belongs in.
     */
    compartmentId: string;
    /**
     * The OCID of the Configuration to be used for Instances in this DB System.
     */
    configurationId: string;
    /**
     * Initial size of the data volume in GiBs that will be created and attached.
     */
    dataStorageSizeInGb: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-supplied description for the backup.
     */
    description: string;
    /**
     * A user-supplied display name for the backup.
     */
    displayName: string;
    /**
     * The network endpoints available for this DB System.
     */
    endpoints: outputs.GetMysqlMysqlBackupDbSystemSnapshotEndpoint[];
    /**
     * The name of the Fault Domain the DB System is located in.
     */
    faultDomain: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel: string;
    /**
     * OCID of the backup itself
     */
    id: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * If the policy is to enable high availability of the instance, by maintaining secondary/failover capacity as necessary.
     */
    isHighlyAvailable: boolean;
    /**
     * The Maintenance Policy for the DB System.
     */
    maintenance: outputs.GetMysqlMysqlBackupDbSystemSnapshotMaintenance;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    mysqlVersion: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The shape of the DB System instance used for backup.
     */
    shapeName: string;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId: string;
}

export interface GetMysqlMysqlBackupDbSystemSnapshotBackupPolicy {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * If automated backups are enabled or disabled.
     */
    isEnabled: boolean;
    /**
     * Number of days to retain this backup.
     */
    retentionInDays: number;
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlBackupDbSystemSnapshotEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface GetMysqlMysqlBackupDbSystemSnapshotMaintenance {
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlBackupsBackup {
    /**
     * The size of the backup in base-2 (IEC) gibibytes. (GiB).
     */
    backupSizeInGbs: number;
    /**
     * The type of backup.
     */
    backupType: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Backup creationType
     */
    creationType: string;
    /**
     * Initial size of the data volume in GiBs that will be created and attached.
     */
    dataStorageSizeInGb: number;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
    /**
     * Snapshot of the DbSystem details at the time of the backup
     */
    dbSystemSnapshot: outputs.GetMysqlMysqlBackupsBackupDbSystemSnapshot;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-supplied description for the backup.
     */
    description: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * OCID of the backup itself
     */
    id: string;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails: string;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    mysqlVersion: string;
    /**
     * Number of days to retain this backup.
     */
    retentionInDays: number;
    /**
     * The shape of the DB System instance used for backup.
     */
    shapeName: string;
    /**
     * Backup Lifecycle State
     */
    state: string;
    /**
     * The time the backup record was created.
     */
    timeCreated: string;
    /**
     * The time at which the backup was updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlBackupsBackupDbSystemSnapshot {
    /**
     * The username for the administrative user.
     */
    adminUsername: string;
    /**
     * The Availability Domain where the primary DB System should be located.
     */
    availabilityDomain: string;
    /**
     * The Backup policy for the DB System.
     */
    backupPolicy: outputs.GetMysqlMysqlBackupsBackupDbSystemSnapshotBackupPolicy;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The OCID of the Configuration to be used for Instances in this DB System.
     */
    configurationId: string;
    /**
     * Initial size of the data volume in GiBs that will be created and attached.
     */
    dataStorageSizeInGb: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A user-supplied description for the backup.
     */
    description: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * The network endpoints available for this DB System.
     */
    endpoints: outputs.GetMysqlMysqlBackupsBackupDbSystemSnapshotEndpoint[];
    /**
     * The name of the Fault Domain the DB System is located in.
     */
    faultDomain: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel: string;
    /**
     * OCID of the backup itself
     */
    id: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * If the policy is to enable high availability of the instance, by maintaining secondary/failover capacity as necessary.
     */
    isHighlyAvailable: boolean;
    /**
     * The Maintenance Policy for the DB System.
     */
    maintenance: outputs.GetMysqlMysqlBackupsBackupDbSystemSnapshotMaintenance;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    mysqlVersion: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The shape of the DB System instance used for backup.
     */
    shapeName: string;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId: string;
}

export interface GetMysqlMysqlBackupsBackupDbSystemSnapshotBackupPolicy {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * If automated backups are enabled or disabled.
     */
    isEnabled: boolean;
    /**
     * Number of days to retain this backup.
     */
    retentionInDays: number;
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlBackupsBackupDbSystemSnapshotEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface GetMysqlMysqlBackupsBackupDbSystemSnapshotMaintenance {
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlConfigurationVariable {
    /**
     * ("autocommit")
     */
    autocommit: boolean;
    /**
     * ("binlogExpireLogsSeconds") DEPRECATED -- variable should not be settable and will be ignored
     */
    binlogExpireLogsSeconds: number;
    /**
     * ("completionType")
     */
    completionType: string;
    /**
     * ("connectTimeout")
     */
    connectTimeout: number;
    /**
     * ("cteMaxRecursionDepth")
     */
    cteMaxRecursionDepth: number;
    /**
     * ("defaultAuthenticationPlugin")
     */
    defaultAuthenticationPlugin: string;
    /**
     * ("foreignKeyChecks")
     */
    foreignKeyChecks: boolean;
    /**
     * ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
     */
    generatedRandomPasswordLength: number;
    /**
     * * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
     * * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
     * * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     * * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     * * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     */
    groupReplicationConsistency: string;
    /**
     * ("informationSchemaStatsExpiry")
     */
    informationSchemaStatsExpiry: number;
    /**
     * ("innodbBufferPoolInstances")
     */
    innodbBufferPoolInstances: number;
    /**
     * ("innodbBufferPoolSize")
     */
    innodbBufferPoolSize: string;
    /**
     * ("innodbFtEnableStopword")
     */
    innodbFtEnableStopword: boolean;
    /**
     * ("innodbFtMaxTokenSize")
     */
    innodbFtMaxTokenSize: number;
    /**
     * ("innodbFtMinTokenSize")
     */
    innodbFtMinTokenSize: number;
    /**
     * ("innodbFtNumWordOptimize")
     */
    innodbFtNumWordOptimize: number;
    /**
     * ("innodbFtResultCacheLimit")
     */
    innodbFtResultCacheLimit: number;
    /**
     * ("innodbFtServerStopwordTable")
     */
    innodbFtServerStopwordTable: string;
    /**
     * ("innodbLockWaitTimeout")
     */
    innodbLockWaitTimeout: number;
    /**
     * ("innodbMaxPurgeLag")
     */
    innodbMaxPurgeLag: number;
    /**
     * ("innodbMaxPurgeLagDelay")
     */
    innodbMaxPurgeLagDelay: number;
    /**
     * ("localInfile")
     */
    localInfile: boolean;
    /**
     * ("mandatoryRoles")
     */
    mandatoryRoles: string;
    /**
     * ("maxConnections")
     */
    maxConnections: number;
    /**
     * ("maxExecutionTime")
     */
    maxExecutionTime: number;
    /**
     * ("maxPreparedStmtCount")
     */
    maxPreparedStmtCount: number;
    /**
     * ("mysqlFirewallMode")
     */
    mysqlFirewallMode: boolean;
    /**
     * DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
     */
    mysqlZstdDefaultCompressionLevel: number;
    /**
     * ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxConnectTimeout: number;
    /**
     * Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
     */
    mysqlxDeflateDefaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
     */
    mysqlxDeflateMaxClientCompressionLevel: number;
    /**
     * ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxDocumentIdUniquePrefix: number;
    /**
     * ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxEnableHelloNotice: boolean;
    /**
     * ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxIdleWorkerThreadTimeout: number;
    /**
     * ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxInteractiveTimeout: number;
    /**
     * Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
     */
    mysqlxLz4defaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
     */
    mysqlxLz4maxClientCompressionLevel: number;
    /**
     * ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxMaxAllowedPacket: number;
    /**
     * ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxMinWorkerThreads: number;
    /**
     * ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxReadTimeout: number;
    /**
     * ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxWaitTimeout: number;
    /**
     * ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxWriteTimeout: number;
    /**
     * Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
     */
    mysqlxZstdDefaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
     */
    mysqlxZstdMaxClientCompressionLevel: number;
    /**
     * ("parserMaxMemSize")
     */
    parserMaxMemSize: number;
    /**
     * ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
     */
    queryAllocBlockSize: number;
    /**
     * ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
     */
    queryPreallocSize: number;
    /**
     * ("sqlMode")
     */
    sqlMode: string;
    /**
     * ("sqlRequirePrimaryKey")
     */
    sqlRequirePrimaryKey: boolean;
    /**
     * ("sqlWarnings")
     */
    sqlWarnings: boolean;
    /**
     * ("transactionIsolation")
     */
    transactionIsolation: string;
}

export interface GetMysqlMysqlConfigurationsConfiguration {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * User-provided data about the Configuration.
     */
    description: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the Configuration.
     */
    id: string;
    /**
     * The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
     */
    parentConfigurationId: string;
    /**
     * The requested Shape name.
     */
    shapeName: string;
    /**
     * Configuration Lifecycle State
     */
    state: string;
    /**
     * The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
    /**
     * The requested Configuration types.
     */
    type: string;
    /**
     * User controllable service variables.
     */
    variables: outputs.GetMysqlMysqlConfigurationsConfigurationVariables;
}

export interface GetMysqlMysqlConfigurationsConfigurationVariables {
    /**
     * ("autocommit")
     */
    autocommit: boolean;
    /**
     * ("binlogExpireLogsSeconds") DEPRECATED -- variable should not be settable and will be ignored
     */
    binlogExpireLogsSeconds: number;
    /**
     * ("completionType")
     */
    completionType: string;
    /**
     * ("connectTimeout")
     */
    connectTimeout: number;
    /**
     * ("cteMaxRecursionDepth")
     */
    cteMaxRecursionDepth: number;
    /**
     * ("defaultAuthenticationPlugin")
     */
    defaultAuthenticationPlugin: string;
    /**
     * ("foreignKeyChecks")
     */
    foreignKeyChecks: boolean;
    /**
     * ("generatedRandomPasswordLength") DEPRECATED -- variable should not be settable and will be ignored
     */
    generatedRandomPasswordLength: number;
    /**
     * * EVENTUAL: Both RO and RW transactions do not wait for preceding transactions to be applied before executing. A RW transaction does not wait for other members to apply a transaction. This means that a transaction could be externalized on one member before the others. This also means that in the event of a primary failover, the new primary can accept new RO and RW transactions before the previous primary transactions are all applied. RO transactions could result in outdated values, RW transactions could result in a rollback due to conflicts.
     * * BEFORE_ON_PRIMARY_FAILOVER: New RO or RW transactions with a newly elected primary that is applying backlog from the old primary are held (not applied) until any backlog has been applied. This ensures that when a primary failover happens, intentionally or not, clients always see the latest value on the primary. This guarantees consistency, but means that clients must be able to handle the delay in the event that a backlog is being applied. Usually this delay should be minimal, but does depend on the size of the backlog.
     * * BEFORE: A RW transaction waits for all preceding transactions to complete before being applied. A RO transaction waits for all preceding transactions to complete before being executed. This ensures that this transaction reads the latest value by only affecting the latency of the transaction. This reduces the overhead of synchronization on every RW transaction, by ensuring synchronization is used only on RO transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     * * AFTER: A RW transaction waits until its changes have been applied to all of the other members. This value has no effect on RO transactions. This mode ensures that when a transaction is committed on the local member, any subsequent transaction reads the written value or a more recent value on any group member. Use this mode with a group that is used for predominantly RO operations to ensure that applied RW transactions are applied everywhere once they commit. This could be used by your application to ensure that subsequent reads fetch the latest data which includes the latest writes. This reduces the overhead of synchronization on every RO transaction, by ensuring synchronization is used only on RW transactions. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     * * BEFORE_AND_AFTER: A RW transaction waits for 1) all preceding transactions to complete before being applied and 2) until its changes have been applied on other members. A RO transaction waits for all preceding transactions to complete before execution takes place. This consistency level also includes the consistency guarantees provided by BEFORE_ON_PRIMARY_FAILOVER.
     */
    groupReplicationConsistency: string;
    /**
     * ("informationSchemaStatsExpiry")
     */
    informationSchemaStatsExpiry: number;
    /**
     * ("innodbBufferPoolInstances")
     */
    innodbBufferPoolInstances: number;
    /**
     * ("innodbBufferPoolSize")
     */
    innodbBufferPoolSize: string;
    /**
     * ("innodbFtEnableStopword")
     */
    innodbFtEnableStopword: boolean;
    /**
     * ("innodbFtMaxTokenSize")
     */
    innodbFtMaxTokenSize: number;
    /**
     * ("innodbFtMinTokenSize")
     */
    innodbFtMinTokenSize: number;
    /**
     * ("innodbFtNumWordOptimize")
     */
    innodbFtNumWordOptimize: number;
    /**
     * ("innodbFtResultCacheLimit")
     */
    innodbFtResultCacheLimit: number;
    /**
     * ("innodbFtServerStopwordTable")
     */
    innodbFtServerStopwordTable: string;
    /**
     * ("innodbLockWaitTimeout")
     */
    innodbLockWaitTimeout: number;
    /**
     * ("innodbMaxPurgeLag")
     */
    innodbMaxPurgeLag: number;
    /**
     * ("innodbMaxPurgeLagDelay")
     */
    innodbMaxPurgeLagDelay: number;
    /**
     * ("localInfile")
     */
    localInfile: boolean;
    /**
     * ("mandatoryRoles")
     */
    mandatoryRoles: string;
    /**
     * ("maxConnections")
     */
    maxConnections: number;
    /**
     * ("maxExecutionTime")
     */
    maxExecutionTime: number;
    /**
     * ("maxPreparedStmtCount")
     */
    maxPreparedStmtCount: number;
    /**
     * ("mysqlFirewallMode")
     */
    mysqlFirewallMode: boolean;
    /**
     * DEPRECATED -- typo of mysqlx_zstd_default_compression_level. variable will be ignored.
     */
    mysqlZstdDefaultCompressionLevel: number;
    /**
     * ("mysqlxConnectTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxConnectTimeout: number;
    /**
     * Set the default compression level for the deflate algorithm. ("mysqlxDeflateDefaultCompressionLevel")
     */
    mysqlxDeflateDefaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the deflate algorithm. ("mysqlxDeflateMaxClientCompressionLevel")
     */
    mysqlxDeflateMaxClientCompressionLevel: number;
    /**
     * ("mysqlxDocumentIdUniquePrefix") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxDocumentIdUniquePrefix: number;
    /**
     * ("mysqlxEnableHelloNotice") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxEnableHelloNotice: boolean;
    /**
     * ("mysqlxIdleWorkerThreadTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxIdleWorkerThreadTimeout: number;
    /**
     * ("mysqlxInteractiveTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxInteractiveTimeout: number;
    /**
     * Set the default compression level for the lz4 algorithm. ("mysqlxLz4DefaultCompressionLevel")
     */
    mysqlxLz4defaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the lz4 algorithm. ("mysqlxLz4MaxClientCompressionLevel")
     */
    mysqlxLz4maxClientCompressionLevel: number;
    /**
     * ("mysqlxMaxAllowedPacket") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxMaxAllowedPacket: number;
    /**
     * ("mysqlxMinWorkerThreads") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxMinWorkerThreads: number;
    /**
     * ("mysqlxReadTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxReadTimeout: number;
    /**
     * ("mysqlxWaitTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxWaitTimeout: number;
    /**
     * ("mysqlxWriteTimeout") DEPRECATED -- variable should not be settable and will be ignored
     */
    mysqlxWriteTimeout: number;
    /**
     * Set the default compression level for the zstd algorithm. ("mysqlxZstdDefaultCompressionLevel")
     */
    mysqlxZstdDefaultCompressionLevel: number;
    /**
     * Limit the upper bound of accepted compression levels for the zstd algorithm. ("mysqlxZstdMaxClientCompressionLevel")
     */
    mysqlxZstdMaxClientCompressionLevel: number;
    /**
     * ("parserMaxMemSize")
     */
    parserMaxMemSize: number;
    /**
     * ("queryAllocBlockSize") DEPRECATED -- variable should not be settable and will be ignored
     */
    queryAllocBlockSize: number;
    /**
     * ("queryPreallocSize") DEPRECATED -- variable should not be settable and will be ignored
     */
    queryPreallocSize: number;
    /**
     * ("sqlMode")
     */
    sqlMode: string;
    /**
     * ("sqlRequirePrimaryKey")
     */
    sqlRequirePrimaryKey: boolean;
    /**
     * ("sqlWarnings")
     */
    sqlWarnings: boolean;
    /**
     * ("transactionIsolation")
     */
    transactionIsolation: string;
}

export interface GetMysqlMysqlConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlDbSystemAnalyticsCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * The current state of the DB System.
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemBackupPolicy {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Whether the Channel has been enabled by the user.
     */
    isEnabled: boolean;
    /**
     * The number of days automated backups are retained.
     */
    retentionInDays: number;
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlDbSystemChannel {
    /**
     * The OCID of the compartment the DB System belongs in.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name for the DB System. It does not have to be unique.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the DB System.
     */
    id: string;
    /**
     * Whether the Channel has been enabled by the user.
     */
    isEnabled: boolean;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails: string;
    /**
     * Parameters detailing how to provision the initial data of the DB System.
     */
    source: outputs.GetMysqlMysqlDbSystemChannelSource;
    /**
     * The current state of the DB System.
     */
    state: string;
    /**
     * Details about the Channel target.
     */
    target: outputs.GetMysqlMysqlDbSystemChannelTarget;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemChannelSource {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The specific source identifier.
     */
    sourceType: string;
    /**
     * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.GetMysqlMysqlDbSystemChannelSourceSslCaCertificate;
    /**
     * The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface GetMysqlMysqlDbSystemChannelSourceSslCaCertificate {
    /**
     * The type of CA certificate.
     */
    certificateType: string;
    /**
     * The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface GetMysqlMysqlDbSystemChannelTarget {
    /**
     * The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
    /**
     * The specific target identifier.
     */
    targetType: string;
}

export interface GetMysqlMysqlDbSystemCurrentPlacement {
    /**
     * The availability domain in which the DB System is placed.
     */
    availabilityDomain: string;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     */
    faultDomain: string;
}

export interface GetMysqlMysqlDbSystemEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface GetMysqlMysqlDbSystemHeatWaveCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * The current state of the DB System.
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemMaintenance {
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlDbSystemSource {
    /**
     * The OCID of the backup to be used as the source for the new DB System.
     */
    backupId: string;
    /**
     * The specific source identifier.
     */
    sourceType: string;
}

export interface GetMysqlMysqlDbSystemsDbSystem {
    adminPassword: string;
    adminUsername: string;
    /**
     * DEPRECATED -- please use HeatWave API instead. A summary of an Analytics Cluster.
     */
    analyticsCluster: outputs.GetMysqlMysqlDbSystemsDbSystemAnalyticsCluster;
    /**
     * The availability domain in which the DB System is placed.
     */
    availabilityDomain: string;
    /**
     * The Backup policy for the DB System.
     */
    backupPolicy: outputs.GetMysqlMysqlDbSystemsDbSystemBackupPolicy;
    /**
     * A list with a summary of all the Channels attached to the DB System.
     */
    channels: outputs.GetMysqlMysqlDbSystemsDbSystemChannel[];
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The requested Configuration instance.
     */
    configurationId: string;
    /**
     * The availability domain and fault domain a DB System is placed in.
     */
    currentPlacement: outputs.GetMysqlMysqlDbSystemsDbSystemCurrentPlacement;
    /**
     * Initial size of the data volume in GiBs that will be created and attached.
     */
    dataStorageSizeInGb: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * User-provided data about the DB System.
     */
    description: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * The network endpoints available for this DB System.
     */
    endpoints: outputs.GetMysqlMysqlDbSystemsDbSystemEndpoint[];
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     */
    faultDomain: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A summary of a HeatWave cluster.
     */
    heatWaveCluster: outputs.GetMysqlMysqlDbSystemsDbSystemHeatWaveCluster;
    /**
     * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel: string;
    /**
     * The OCID of the DB System.
     */
    id: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * DEPRECATED -- please use HeatWave API instead. If true, return only DB Systems with an Analytics Cluster attached, if false return only DB Systems with no Analytics Cluster attached. If not present, return all DB Systems.
     */
    isAnalyticsClusterAttached: boolean;
    /**
     * If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
     */
    isHeatWaveClusterAttached: boolean;
    /**
     * If the policy is to enable high availability of the instance, by maintaining secondary/failover capacity as necessary.
     */
    isHighlyAvailable: boolean;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails: string;
    /**
     * The Maintenance Policy for the DB System.
     */
    maintenance: outputs.GetMysqlMysqlDbSystemsDbSystemMaintenance;
    /**
     * Name of the MySQL Version in use for the DB System.
     *
     * @deprecated The 'mysql_version' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    mysqlVersion: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    shutdownType: string;
    /**
     * Parameters detailing how to provision the initial data of the DB System.
     */
    source: outputs.GetMysqlMysqlDbSystemsDbSystemSource;
    /**
     * DbSystem Lifecycle State
     */
    state: string;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemAnalyticsCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * DbSystem Lifecycle State
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemBackupPolicy {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Whether the Channel has been enabled by the user.
     */
    isEnabled: boolean;
    /**
     * The number of days automated backups are retained.
     */
    retentionInDays: number;
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemChannel {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the DB System.
     */
    id: string;
    /**
     * Whether the Channel has been enabled by the user.
     */
    isEnabled: boolean;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails: string;
    /**
     * Parameters detailing how to provision the initial data of the DB System.
     */
    source: outputs.GetMysqlMysqlDbSystemsDbSystemChannelSource;
    /**
     * DbSystem Lifecycle State
     */
    state: string;
    /**
     * Details about the Channel target.
     */
    target: outputs.GetMysqlMysqlDbSystemsDbSystemChannelTarget;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemChannelSource {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The specific source identifier.
     */
    sourceType: string;
    /**
     * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.GetMysqlMysqlDbSystemsDbSystemChannelSourceSslCaCertificate;
    /**
     * The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemChannelSourceSslCaCertificate {
    /**
     * The type of CA certificate.
     */
    certificateType: string;
    /**
     * The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemChannelTarget {
    /**
     * The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
    /**
     * The specific target identifier.
     */
    targetType: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemCurrentPlacement {
    /**
     * The availability domain in which the DB System is placed.
     */
    availabilityDomain: string;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     */
    faultDomain: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemHeatWaveCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * DbSystem Lifecycle State
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemMaintenance {
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface GetMysqlMysqlDbSystemsDbSystemSource {
    /**
     * The OCID of the backup to be used as the source for the new DB System.
     */
    backupId: string;
    /**
     * The specific source identifier.
     */
    sourceType: string;
}

export interface GetMysqlMysqlDbSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlVersionsVersion {
    /**
     * A descriptive summary of a group of versions.
     */
    versionFamily: string;
    /**
     * The list of supported MySQL Versions.
     */
    versions: outputs.GetMysqlMysqlVersionsVersionVersion[];
}

export interface GetMysqlMysqlVersionsVersionVersion {
    /**
     * A link to a page describing the version.
     */
    description: string;
    /**
     * The specific version identifier
     */
    version: string;
}

export interface GetMysqlShapesFilter {
    /**
     * Name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlShapesShape {
    /**
     * The number of CPU Cores the Instance provides. These are "OCPU"s.
     */
    cpuCoreCount: number;
    /**
     * Return shapes that are supported by the service feature.
     */
    isSupportedFors: string[];
    /**
     * The amount of RAM the Instance provides. This is an IEC base-2 number.
     */
    memorySizeInGbs: number;
    /**
     * Name
     */
    name: string;
}

export interface GetNetworkLoadBalancerBackendHealthHealthCheckResult {
    /**
     * The result of the most recent health check.
     */
    healthCheckStatus: string;
    /**
     * The date and time the data was retrieved, in the format defined by RFC3339.  Example: `2020-05-01T18:28:11+00:00`
     */
    timestamp: string;
}

export interface GetNetworkLoadBalancerBackendSetBackend {
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup: boolean;
    /**
     * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
     */
    isDrain: boolean;
    /**
     * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline: boolean;
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    name: string;
    /**
     * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId: string;
    /**
     * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface GetNetworkLoadBalancerBackendSetHealthChecker {
    /**
     * The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
     */
    intervalInMillis: number;
    /**
     * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
     */
    protocol: string;
    /**
     * Base64 encoded pattern to be sent as UDP or TCP health check probe.
     */
    requestData: string;
    /**
     * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
     */
    responseBodyRegex: string;
    /**
     * Base64 encoded pattern to be validated as UDP or TCP health check probe response.
     */
    responseData: string;
    /**
     * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
     */
    retries: number;
    /**
     * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
     */
    returnCode: number;
    /**
     * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
     */
    timeoutInMillis: number;
    /**
     * The path against which to run the health check.  Example: `/healthcheck`
     */
    urlPath: string;
}

export interface GetNetworkLoadBalancerBackendSetsBackendSetCollection {
    items: outputs.GetNetworkLoadBalancerBackendSetsBackendSetCollectionItem[];
}

export interface GetNetworkLoadBalancerBackendSetsBackendSetCollectionItem {
    /**
     * Array of backends.
     */
    backends: outputs.GetNetworkLoadBalancerBackendSetsBackendSetCollectionItemBackend[];
    /**
     * The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
     */
    healthChecker: outputs.GetNetworkLoadBalancerBackendSetsBackendSetCollectionItemHealthChecker;
    id: string;
    /**
     * If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
     */
    isPreserveSource: boolean;
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    name: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: string;
    /**
     * The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
     */
    policy: string;
}

export interface GetNetworkLoadBalancerBackendSetsBackendSetCollectionItemBackend {
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup: boolean;
    /**
     * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
     */
    isDrain: boolean;
    /**
     * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline: boolean;
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    name: string;
    /**
     * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId: string;
    /**
     * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface GetNetworkLoadBalancerBackendSetsBackendSetCollectionItemHealthChecker {
    /**
     * The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
     */
    intervalInMillis: number;
    /**
     * The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
     */
    protocol: string;
    /**
     * Base64 encoded pattern to be sent as UDP or TCP health check probe.
     */
    requestData: string;
    /**
     * A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
     */
    responseBodyRegex: string;
    /**
     * Base64 encoded pattern to be validated as UDP or TCP health check probe response.
     */
    responseData: string;
    /**
     * The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
     */
    retries: number;
    /**
     * The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
     */
    returnCode: number;
    /**
     * The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
     */
    timeoutInMillis: number;
    /**
     * The path against which to run the health check.  Example: `/healthcheck`
     */
    urlPath: string;
}

export interface GetNetworkLoadBalancerBackendSetsFilter {
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerBackendsBackendCollection {
    items: outputs.GetNetworkLoadBalancerBackendsBackendCollectionItem[];
}

export interface GetNetworkLoadBalancerBackendsBackendCollectionItem {
    /**
     * The name of the backend set associated with the backend servers.  Example: `exampleBackendSet`
     */
    backendSetName: string;
    id: string;
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup: boolean;
    /**
     * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
     */
    isDrain: boolean;
    /**
     * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline: boolean;
    /**
     * A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
     */
    name: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: string;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port: number;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId: string;
    /**
     * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface GetNetworkLoadBalancerBackendsFilter {
    /**
     * A read-only field showing the IP address/IP OCID and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`, or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:443` or `10.0.0.3:0`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerListenersFilter {
    /**
     * A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerListenersListenerCollection {
    items: outputs.GetNetworkLoadBalancerListenersListenerCollectionItem[];
}

export interface GetNetworkLoadBalancerListenersListenerCollectionItem {
    /**
     * The name of the associated backend set.  Example: `exampleBackendSet`
     */
    defaultBackendSetName: string;
    id: string;
    /**
     * A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
     */
    name: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: string;
    /**
     * The communication port for the listener.  Example: `80`
     */
    port: number;
    /**
     * The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
     */
    protocol: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancerIpAddress {
    /**
     * An IP address.  Example: `192.168.0.3`
     */
    ipAddress: string;
    /**
     * Whether the IP address is public or private.
     */
    isPublic: boolean;
    /**
     * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
     */
    reservedIp: outputs.GetNetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancerReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollection {
    items: outputs.GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItem[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancers to list.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
    /**
     * An array of IP addresses.
     */
    ipAddresses: outputs.GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress[];
    /**
     * When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC. Packets are sent to the backend set without any changes to the source and destination IP.
     */
    isPreserveSourceDestination: boolean;
    /**
     * Whether the network load balancer has a virtual cloud network-local (private) IP address.
     */
    isPrivate: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
     */
    networkSecurityGroupIds: string[];
    reservedIps: outputs.GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp[];
    /**
     * A filter to return only resources that match the given lifecycle state.
     */
    state: string;
    /**
     * The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)."
     */
    subnetId: string;
    /**
     * Key-value pair representing system tags' keys and values scoped to a namespace. Example: `{"bar-key": "value"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The date and time the network load balancer was created, in the format defined by RFC3339.  Example: `2020-05-01T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The time the network load balancer was updated. An RFC3339 formatted date-time string.  Example: `2020-05-01T22:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddress {
    /**
     * An IP address.  Example: `192.168.0.3`
     */
    ipAddress: string;
    /**
     * Whether the IP address is public or private.
     */
    isPublic: boolean;
    /**
     * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
     */
    reservedIp: outputs.GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemIpAddressReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersNetworkLoadBalancerCollectionItemReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersPoliciesNetworkLoadBalancersPolicyCollection {
    /**
     * Array of NetworkLoadBalancersPolicySummary objects.
     */
    items: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersProtocolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersProtocolsNetworkLoadBalancersProtocolCollection {
    /**
     * Array of NetworkLoadBalancersProtocolSummary objects.
     */
    items: string[];
}

export interface GetNosqlIndexKey {
    /**
     * The name of a column to be included as an index key.
     */
    columnName: string;
    /**
     * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     */
    jsonFieldType: string;
    /**
     * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     */
    jsonPath: string;
}

export interface GetNosqlIndexesFilter {
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNosqlIndexesIndexCollection {
    /**
     * The ID of a table's compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
     */
    compartmentId: string;
    id: string;
    isIfNotExists: boolean;
    /**
     * A set of keys for a secondary index.
     */
    keys: outputs.GetNosqlIndexesIndexCollectionKey[];
    /**
     * A message describing the current state in more detail.
     */
    lifecycleDetails: string;
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name: string;
    /**
     * Filter list by the lifecycle state of the item.
     */
    state: string;
    /**
     * the OCID of the table to which this index belongs.
     */
    tableId: string;
    /**
     * The name of the table to which this index belongs.
     */
    tableName: string;
    /**
     * A table name within the compartment, or a table OCID.
     */
    tableNameOrId: string;
}

export interface GetNosqlIndexesIndexCollectionKey {
    /**
     * The name of a column to be included as an index key.
     */
    columnName: string;
    /**
     * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     */
    jsonFieldType: string;
    /**
     * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     */
    jsonPath: string;
}

export interface GetNosqlTableSchema {
    /**
     * The columns of a table.
     */
    columns: outputs.GetNosqlTableSchemaColumn[];
    /**
     * A list of column names that make up a key.
     */
    primaryKeys: string[];
    /**
     * A list of column names that make up a key.
     */
    shardKeys: string[];
    /**
     * The default Time-to-Live for the table, in days.
     */
    ttl: number;
}

export interface GetNosqlTableSchemaColumn {
    /**
     * The column default value.
     */
    defaultValue: string;
    /**
     * The column nullable flag.
     */
    isNullable: boolean;
    /**
     * The column name.
     */
    name: string;
    /**
     * The column type.
     */
    type: string;
}

export interface GetNosqlTableTableLimits {
    /**
     * Maximum sustained read throughput limit for the table.
     */
    maxReadUnits: number;
    /**
     * Maximum size of storage used by the table.
     */
    maxStorageInGbs: number;
    /**
     * Maximum sustained write throughput limit for the table.
     */
    maxWriteUnits: number;
}

export interface GetNosqlTablesFilter {
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNosqlTablesTableCollection {
    /**
     * The ID of a table's compartment.
     */
    compartmentId: string;
    /**
     * A DDL statement representing the schema.
     */
    ddlStatement: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags: {[key: string]: any};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable.
     */
    id: string;
    /**
     * True if this table can be reclaimed after an idle period.
     */
    isAutoReclaimable: boolean;
    /**
     * A message describing the current state in more detail.
     */
    lifecycleDetails: string;
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name: string;
    /**
     * The table schema information as a JSON object.
     */
    schema: outputs.GetNosqlTablesTableCollectionSchema;
    /**
     * Filter list by the lifecycle state of the item.
     */
    state: string;
    /**
     * Read-only system tag. These predefined keys are scoped to namespaces.  At present the only supported namespace is `"orcl-cloud"`; and the only key in that namespace is `"free-tier-retained"`. Example: `{"orcl-cloud"": {"free-tier-retained": "true"}}`
     */
    systemTags: {[key: string]: any};
    /**
     * Throughput and storage limits configuration of a table.
     */
    tableLimits: outputs.GetNosqlTablesTableCollectionTableLimits;
    /**
     * The time the the table was created. An RFC3339 formatted datetime string.
     */
    timeCreated: string;
    /**
     * If lifecycleState is INACTIVE, indicates when this table will be automatically removed. An RFC3339 formatted datetime string.
     */
    timeOfExpiration: string;
    /**
     * The time the the table's metadata was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated: string;
}

export interface GetNosqlTablesTableCollectionSchema {
    /**
     * The columns of a table.
     */
    columns: outputs.GetNosqlTablesTableCollectionSchemaColumn[];
    /**
     * A list of column names that make up a key.
     */
    primaryKeys: string[];
    /**
     * A list of column names that make up a key.
     */
    shardKeys: string[];
    /**
     * The default Time-to-Live for the table, in days.
     */
    ttl: number;
}

export interface GetNosqlTablesTableCollectionSchemaColumn {
    /**
     * The column default value.
     */
    defaultValue: string;
    /**
     * The column nullable flag.
     */
    isNullable: boolean;
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name: string;
    /**
     * The column type.
     */
    type: string;
}

export interface GetNosqlTablesTableCollectionTableLimits {
    /**
     * Maximum sustained read throughput limit for the table.
     */
    maxReadUnits: number;
    /**
     * Maximum size of storage used by the table.
     */
    maxStorageInGbs: number;
    /**
     * Maximum sustained write throughput limit for the table.
     */
    maxWriteUnits: number;
}

export interface GetObjectstorageBucketRetentionRule {
    /**
     * User specified name for the retention rule.
     */
    displayName: string;
    duration: outputs.GetObjectstorageBucketRetentionRuleDuration;
    /**
     * Unique identifier for the retention rule.
     */
    retentionRuleId: string;
    /**
     * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    /**
     * The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeModified: string;
    /**
     * The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule becomes locked. and can only be deleted by deleting the bucket.
     */
    timeRuleLocked: string;
}

export interface GetObjectstorageBucketRetentionRuleDuration {
    /**
     * The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified timestamp.
     */
    timeAmount: string;
    /**
     * The unit that should be used to interpret timeAmount.
     */
    timeUnit: string;
}

export interface GetObjectstorageBucketSummariesBucketSummary {
    /**
     * The type of public access enabled on this bucket. A bucket is set to `NoPublicAccess` by default, which only allows an authenticated caller to access the bucket and its contents. When `ObjectRead` is enabled on the bucket, public access is allowed for the `GetObject`, `HeadObject`, and `ListObjects` operations. When `ObjectReadWithoutList` is enabled on the bucket, public access is allowed for the `GetObject` and `HeadObject` operations.
     */
    accessType: string;
    /**
     * The approximate number of objects in the bucket. Count statistics are reported periodically. You will see a lag between what is displayed and the actual object count.
     */
    approximateCount: string;
    /**
     * The approximate total size in bytes of all objects in the bucket. Size statistics are reported periodically. You will see a lag between what is displayed and the actual size of the bucket.
     */
    approximateSize: string;
    /**
     * The auto tiering status on the bucket. A bucket is created with auto tiering `Disabled` by default. For auto tiering `InfrequentAccess`, objects are transitioned automatically between the 'Standard' and 'InfrequentAccess' tiers based on the access pattern of the objects.
     */
    autoTiering: string;
    bucketId: string;
    /**
     * The ID of the compartment in which to list buckets.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the bucket.
     */
    createdBy: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The entity tag (ETag) for the bucket.
     */
    etag: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    id: string;
    /**
     * Whether or not this bucket is read only. By default, `isReadOnly` is set to `false`. This will be set to 'true' when this bucket is configured as a destination in a replication policy.
     */
    isReadOnly: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
     */
    kmsKeyId: string;
    /**
     * Arbitrary string keys and values for user-defined metadata.
     */
    metadata: {[key: string]: any};
    /**
     * The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
     */
    name: string;
    /**
     * The Object Storage namespace used for the request.
     */
    namespace: string;
    /**
     * Whether or not events are emitted for object state changes in this bucket. By default, `objectEventsEnabled` is set to `false`. Set `objectEventsEnabled` to `true` to emit events for object state changes. For more information about events, see [Overview of Events](https://docs.cloud.oracle.com/iaas/Content/Events/Concepts/eventsoverview.htm).
     */
    objectEventsEnabled: boolean;
    /**
     * The entity tag (ETag) for the live object lifecycle policy on the bucket.
     */
    objectLifecyclePolicyEtag: string;
    /**
     * Whether or not this bucket is a replication source. By default, `replicationEnabled` is set to `false`. This will be set to 'true' when you create a replication policy for the bucket.
     */
    replicationEnabled: boolean;
    retentionRules: outputs.GetObjectstorageBucketSummariesBucketSummaryRetentionRule[];
    /**
     * The storage tier type assigned to the bucket. A bucket is set to `Standard` tier by default, which means objects uploaded or copied to the bucket will be in the standard storage tier. When the `Archive` tier type is set explicitly for a bucket, objects uploaded or copied to the bucket will be stored in archive storage. The `storageTier` property is immutable after bucket is created.
     */
    storageTier: string;
    /**
     * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    /**
     * The versioning status on the bucket. A bucket is created with versioning `Disabled` by default. For versioning `Enabled`, objects are protected from overwrites and deletes, by maintaining their version history. When versioning is `Suspended`, the previous versions will still remain but new versions will no longer be created when overwitten or deleted.
     */
    versioning: string;
}

export interface GetObjectstorageBucketSummariesBucketSummaryRetentionRule {
    displayName: string;
    duration: outputs.GetObjectstorageBucketSummariesBucketSummaryRetentionRuleDuration;
    retentionRuleId: string;
    /**
     * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    timeModified: string;
    timeRuleLocked: string;
}

export interface GetObjectstorageBucketSummariesBucketSummaryRetentionRuleDuration {
    timeAmount: string;
    timeUnit: string;
}

export interface GetObjectstorageBucketSummariesFilter {
    /**
     * The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageObjectLifecyclePolicyRule {
    /**
     * The action of the object lifecycle policy rule. Rules using the action 'ARCHIVE' move objects from Standard and InfrequentAccess storage tiers into the [Archive storage tier](https://docs.cloud.oracle.com/iaas/Content/Archive/Concepts/archivestorageoverview.htm). Rules using the action 'INFREQUENT_ACCESS' move objects from Standard storage tier into the Infrequent Access Storage tier. Objects that are already in InfrequentAccess tier or in Archive tier are left untouched. Rules using the action 'DELETE' permanently delete objects from buckets. Rules using 'ABORT' abort the uncommitted multipart-uploads and permanently delete their parts from buckets.
     */
    action: string;
    /**
     * A Boolean that determines whether this rule is currently enabled.
     */
    isEnabled: boolean;
    /**
     * The name of the lifecycle rule to be applied.
     */
    name: string;
    /**
     * A filter that compares object names to a set of prefixes or patterns to determine if a rule applies to a given object. The filter can contain include glob patterns, exclude glob patterns and inclusion prefixes. The inclusion prefixes property is kept for backward compatibility. It is recommended to use inclusion patterns instead of prefixes. Exclusions take precedence over inclusions.
     */
    objectNameFilter: outputs.GetObjectstorageObjectLifecyclePolicyRuleObjectNameFilter;
    /**
     * The target of the object lifecycle policy rule. The values of target can be either "objects", "multipart-uploads" or "previous-object-versions". This field when declared as "objects" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for objects. This field when declared as "previous-object-versions" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for previous versions of existing objects. This field when declared as "multipart-uploads" is used to specify the ABORT (only) rule for uncommitted multipart-uploads.
     */
    target: string;
    /**
     * Specifies the age of objects to apply the rule to. The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified time.
     */
    timeAmount: string;
    /**
     * The unit that should be used to interpret timeAmount.  Days are defined as starting and ending at midnight UTC. Years are defined as 365.2425 days long and likewise round up to the next midnight UTC.
     */
    timeUnit: string;
}

export interface GetObjectstorageObjectLifecyclePolicyRuleObjectNameFilter {
    /**
     * An array of glob patterns to match the object names to exclude. An empty array is ignored. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
     */
    exclusionPatterns: string[];
    /**
     * An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
     */
    inclusionPatterns: string[];
    /**
     * An array of object name prefixes that the rule will apply to. An empty array means to include all objects.
     */
    inclusionPrefixes: string[];
}

export interface GetObjectstorageObjectVersionsFilter {
    /**
     * The name of the object. Avoid entering confidential information. Example: test/object1.log
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageObjectVersionsItem {
    /**
     * Archival state of an object. This field is set only for objects in Archive tier.
     */
    archivalState: string;
    /**
     * The current entity tag (ETag) for the object.
     */
    etag: string;
    /**
     * This flag will indicate if the version is deleted or not.
     */
    isDeleteMarker: boolean;
    /**
     * Base64-encoded MD5 hash of the object data.
     */
    md5: string;
    /**
     * The name of the object. Avoid entering confidential information. Example: test/object1.log
     */
    name: string;
    /**
     * Size of the object in bytes.
     */
    size: string;
    /**
     * The storage tier that the object is stored in.
     */
    storageTier: string;
    /**
     * The date and time the object was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    /**
     * The date and time the object was modified, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616#section-14.29).
     */
    timeModified: string;
    /**
     * VersionId of the object.
     */
    versionId: string;
}

export interface GetObjectstorageObjectsFilter {
    /**
     * The name of the object.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageObjectsObject {
    archivalState: string;
    /**
     * The current entity tag (ETag) for the object.
     */
    etag: string;
    /**
     * Base64-encoded MD5 hash of the object data.
     */
    md5: string;
    /**
     * The name of the object.
     */
    name: string;
    /**
     * Size of the object in bytes.
     */
    size: string;
    /**
     * The storage tier that the object is stored in.
     * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
     */
    storageTier: string;
    /**
     * The date and time the object was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    /**
     * The date and time the object was modified, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616#section-14.29).
     */
    timeModified: string;
}

export interface GetObjectstoragePreauthrequestsFilter {
    /**
     * The user-provided name of the pre-authenticated request.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstoragePreauthrequestsPreauthenticatedRequest {
    /**
     * The operation that can be performed on this resource.
     */
    accessType: string;
    /**
     * The URI to embed in the URL when using the pre-authenticated request.
     */
    accessUri: string;
    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     */
    bucket: string;
    /**
     * Specifies whether a list operation is allowed on a PAR with accessType "AnyObjectRead" or "AnyObjectReadWrite". Deny: Prevents the user from performing a list operation. ListObjects: Authorizes the user to perform a list operation.
     */
    bucketListingAction: string;
    /**
     * The unique identifier to use when directly addressing the pre-authenticated request.
     */
    id: string;
    /**
     * The user-provided name of the pre-authenticated request.
     */
    name: string;
    /**
     * The Object Storage namespace used for the request.
     */
    namespace: string;
    /**
     * Deprecated. Instead use `objectName`.The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     *
     * @deprecated The 'object' field has been deprecated. Please use 'object_name' instead.
     */
    object: string;
    /**
     * The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     */
    objectName: string;
    parId: string;
    /**
     * The date when the pre-authenticated request was created as per specification [RFC 3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * The expiration date for the pre-authenticated request as per [RFC 3339](https://tools.ietf.org/html/rfc3339). After this date the pre-authenticated request will no longer be valid.
     */
    timeExpires: string;
}

export interface GetObjectstorageReplicationPoliciesFilter {
    /**
     * The name of the policy.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageReplicationPoliciesReplicationPolicy {
    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     */
    bucket: string;
    /**
     * @deprecated The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported.
     */
    deleteObjectInDestinationBucket: string;
    /**
     * The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
     */
    destinationBucketName: string;
    /**
     * The destination region to replicate to, for example "us-ashburn-1".
     */
    destinationRegionName: string;
    /**
     * The id of the replication policy.
     */
    id: string;
    /**
     * The name of the policy.
     */
    name: string;
    /**
     * The Object Storage namespace used for the request.
     */
    namespace: string;
    /**
     * The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
     */
    status: string;
    /**
     * A human-readable description of the status.
     */
    statusMessage: string;
    /**
     * The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated: string;
    /**
     * Changes made to the source bucket before this time has been replicated.
     */
    timeLastSync: string;
}

export interface GetObjectstorageReplicationSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageReplicationSourcesReplicationSource {
    /**
     * The name of the policy.
     */
    policyName: string;
    /**
     * The source bucket replicating data from.
     */
    sourceBucketName: string;
    /**
     * The source region replicating data from, for example "us-ashburn-1".
     */
    sourceRegionName: string;
}

export interface GetOceOceInstancesFilter {
    /**
     * OceInstance Name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOceOceInstancesOceInstance {
    /**
     * Admin Email for Notification
     */
    adminEmail: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * OceInstance description, can be updated
     */
    description: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique GUID identifier that is immutable on creation
     */
    guid: string;
    /**
     * Unique identifier that is immutable on creation
     */
    id: string;
    idcsAccessToken: string;
    /**
     * IDCS Tenancy Identifier
     */
    idcsTenancy: string;
    /**
     * Flag indicating whether the instance access is private or public
     */
    instanceAccessType: string;
    /**
     * Flag indicating whether the instance license is new cloud or bring your own license
     */
    instanceLicenseType: string;
    /**
     * Instance type based on its usage
     */
    instanceUsageType: string;
    /**
     * OceInstance Name
     */
    name: string;
    /**
     * Object Storage Namespace of tenancy
     */
    objectStorageNamespace: string;
    /**
     * SERVICE data. Example: `{"service": {"IDCS": "value"}}`
     */
    service: {[key: string]: any};
    /**
     * Filter results on lifecycleState.
     */
    state: string;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The ID of the tenancy in which to list resources.
     */
    tenancyId: string;
    /**
     * Tenancy Name
     */
    tenancyName: string;
    /**
     * The time the the OceInstance was created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the OceInstance was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
    /**
     * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     */
    upgradeSchedule: string;
    /**
     * Web Application Firewall(WAF) primary domain
     */
    wafPrimaryDomain: string;
}

export interface GetOcvpEsxiHostsEsxiHostCollection {
    /**
     * Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
     */
    billingContractEndDate: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
     */
    computeInstanceId: string;
    /**
     * Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     */
    currentSku: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
     */
    id: string;
    /**
     * Billing option to switch to once existing billing cycle ends. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     */
    nextSku: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     */
    sddcId: string;
    /**
     * The lifecycle state of the resource.
     */
    state: string;
    /**
     * The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeUpdated: string;
}

export interface GetOcvpEsxiHostsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSddcHcxOnPremLicense {
    /**
     * HCX on-premise license key value
     */
    activationKey: string;
    /**
     * status of HCX on-premise license
     */
    status: string;
    /**
     * Name of the system that consumed the HCX on-premise license
     */
    systemName: string;
}

export interface GetOcvpSddcsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSddcsSddcCollection {
    /**
     * The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     */
    actualEsxiHostsCount: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
     */
    computeAvailabilityDomain: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName: string;
    /**
     * The number of ESXi hosts in the SDDC.
     */
    esxiHostsCount: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    hcxAction: string;
    /**
     * The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     */
    hcxFqdn: string;
    /**
     * The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
     */
    hcxInitialPassword: string;
    /**
     * The activation key to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution. Your implementation might need more than one activation key. To obtain additional keys, contact Oracle Support.
     */
    hcxOnPremKey: string;
    /**
     * The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     */
    hcxOnPremLicenses: outputs.GetOcvpSddcsSddcCollectionHcxOnPremLicense[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
     */
    hcxPrivateIpId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
     */
    hcxVlanId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     */
    id: string;
    /**
     * Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     */
    initialSku: string;
    /**
     * A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
     */
    instanceDisplayNamePrefix: string;
    /**
     * Indicates whether HCX is enabled for this SDDC.
     */
    isHcxEnabled: boolean;
    /**
     * Indicates whether HCX Enterprise is enabled for this SDDC.
     */
    isHcxEnterpriseEnabled: boolean;
    /**
     * Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     */
    isHcxPendingDowngrade: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
     */
    nsxEdgeUplink1vlanId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
     */
    nsxEdgeUplink2vlanId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
     */
    nsxEdgeUplinkIpId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
     */
    nsxEdgeVtepVlanId: string;
    /**
     * The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     */
    nsxManagerFqdn: string;
    /**
     * The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
     */
    nsxManagerInitialPassword: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
     */
    nsxManagerPrivateIpId: string;
    /**
     * The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     */
    nsxManagerUsername: string;
    /**
     * The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
     */
    nsxOverlaySegmentName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
     */
    nsxVtepVlanId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
     */
    provisioningSubnetId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
     */
    provisioningVlanId: string;
    refreshHcxLicenseStatus: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
     */
    replicationVlanId: string;
    reservingHcxOnPremiseLicenseKeys: string[];
    /**
     * One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
     */
    sshAuthorizedKeys: string;
    /**
     * The lifecycle state of the resource.
     */
    state: string;
    /**
     * The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeHcxBillingCycleEnd: string;
    /**
     * The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeHcxLicenseStatusUpdated: string;
    /**
     * The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeUpdated: string;
    /**
     * The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     */
    vcenterFqdn: string;
    /**
     * The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
     */
    vcenterInitialPassword: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
     */
    vcenterPrivateIpId: string;
    /**
     * The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
     */
    vcenterUsername: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
     */
    vmotionVlanId: string;
    /**
     * In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     */
    vmwareSoftwareVersion: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
     */
    vsanVlanId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
     */
    vsphereVlanId: string;
    /**
     * The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
     */
    workloadNetworkCidr: string;
}

export interface GetOcvpSddcsSddcCollectionHcxOnPremLicense {
    /**
     * HCX on-premise license key value
     */
    activationKey: string;
    /**
     * status of HCX on-premise license
     */
    status: string;
    /**
     * Name of the system that consumed the HCX on-premise license
     */
    systemName: string;
}

export interface GetOcvpSupportedSkusFilter {
    /**
     * name of SKU
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedSkusItem {
    /**
     * name of SKU
     */
    name: string;
}

export interface GetOcvpSupportedVmwareSoftwareVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedVmwareSoftwareVersionsItem {
    /**
     * A description of the software in the bundle.
     */
    description: string;
    /**
     * A short, unique string that identifies the version of bundled software.
     */
    version: string;
}

export interface GetOdaOdaInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOdaOdaInstancesOdaInstance {
    /**
     * List the Digital Assistant instances that belong to this compartment.
     */
    compartmentId: string;
    /**
     * URL for the connector's endpoint.
     */
    connectorUrl: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description of the Digital Assistant instance.
     */
    description: string;
    /**
     * List only the information for the Digital Assistant instance with this user-friendly name. These names don't have to be unique and may change.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique immutable identifier that was assigned when the instance was created.
     */
    id: string;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    lifecycleSubState: string;
    /**
     * Shape or size of the instance.
     */
    shapeName: string;
    /**
     * List only the Digital Assistant instances that are in this lifecycle state.
     */
    state: string;
    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
     */
    stateMessage: string;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeCreated: string;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeUpdated: string;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    webAppUrl: string;
}

export interface GetOnsNotificationTopicsFilter {
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnsNotificationTopicsNotificationTopic {
    /**
     * The endpoint for managing subscriptions or publishing messages to the topic.
     */
    apiEndpoint: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the topic.
     */
    description: string;
    /**
     * For optimistic concurrency control. See `if-match`.
     */
    etag: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to only return resources that match the given id exactly.
     */
    id: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name: string;
    /**
     * A unique short topic Id. This is used only for SMS subscriptions.
     */
    shortTopicId: string;
    /**
     * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
     */
    state: string;
    /**
     * The time the topic was created.
     */
    timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     */
    topicId: string;
}

export interface GetOnsSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnsSubscriptionsSubscription {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The time when this suscription was created.
     */
    createdTime: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    deliveryPolicy: outputs.GetOnsSubscriptionsSubscriptionDeliveryPolicy;
    /**
     * A locator that corresponds to the subscription protocol.  For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. Avoid entering confidential information.
     */
    endpoint: string;
    /**
     * For optimistic concurrency control. See `if-match`.
     */
    etag: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
     */
    id: string;
    /**
     * The protocol used for the subscription.
     */
    protocol: string;
    /**
     * The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
     */
    state: string;
    /**
     * Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
     */
    topicId: string;
}

export interface GetOnsSubscriptionsSubscriptionDeliveryPolicy {
    backoffRetryPolicy: outputs.GetOnsSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy;
}

export interface GetOnsSubscriptionsSubscriptionDeliveryPolicyBackoffRetryPolicy {
    /**
     * The maximum retry duration in milliseconds.
     */
    maxRetryDuration: number;
    /**
     * The type of delivery policy. Default value: EXPONENTIAL.
     */
    policyType: string;
}

export interface GetOpsiDatabaseInsightsDatabaseInsightsCollection {
    items: outputs.GetOpsiDatabaseInsightsDatabaseInsightsCollectionItem[];
}

export interface GetOpsiDatabaseInsightsDatabaseInsightsCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    databaseDisplayName: string;
    /**
     * Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
     */
    databaseId: string;
    databaseName: string;
    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     */
    databaseType: string;
    /**
     * The version of the database.
     */
    databaseVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Unique Enterprise Manager bridge identifier
     */
    enterpriseManagerBridgeId: string;
    /**
     * Enterprise Manager Entity Display Name
     */
    enterpriseManagerEntityDisplayName: string;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    enterpriseManagerEntityIdentifier: string;
    /**
     * Enterprise Manager Entity Name
     */
    enterpriseManagerEntityName: string;
    /**
     * Enterprise Manager Entity Type
     */
    enterpriseManagerEntityType: string;
    /**
     * Enterprise Manager Unqiue Identifier
     */
    enterpriseManagerIdentifier: string;
    /**
     * Source of the database entity.
     */
    entitySource: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Optional database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database insight resource.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Processor count.
     */
    processorCount: number;
    /**
     * Lifecycle states
     */
    state: string;
    /**
     * Resource Status
     */
    status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the the database insight was first enabled. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the database insight was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
}

export interface GetOpsiDatabaseInsightsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiEnterpriseManagerBridgesEnterpriseManagerBridgeCollection {
    items: outputs.GetOpsiEnterpriseManagerBridgesEnterpriseManagerBridgeCollectionItem[];
}

export interface GetOpsiEnterpriseManagerBridgesEnterpriseManagerBridgeCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Description of Enterprise Manager Bridge
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique Enterprise Manager bridge identifier
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    /**
     * Object Storage Bucket Name
     */
    objectStorageBucketName: string;
    /**
     * A message describing status of the object storage bucket of this resource. For example, it can be used to provide actionable information about the permission and content validity of the bucket.
     */
    objectStorageBucketStatusDetails: string;
    /**
     * Object Storage Namespace Name
     */
    objectStorageNamespaceName: string;
    /**
     * Lifecycle states
     */
    state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the the Enterprise Manager bridge was first created. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the Enterprise Manager bridge was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
}

export interface GetOpsiEnterpriseManagerBridgesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiHostInsightsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiHostInsightsHostInsightSummaryCollection {
    items: outputs.GetOpsiHostInsightsHostInsightSummaryCollectionItem[];
}

export interface GetOpsiHostInsightsHostInsightSummaryCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Source of the host entity.
     */
    entitySource: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The user-friendly name for the host. The name does not have to be unique.
     */
    hostDisplayName: string;
    /**
     * The host name. The host name is unique amongst the hosts managed by the same management agent.
     */
    hostName: string;
    /**
     * Filter by one or more host types. Possible value is EXTERNAL-HOST.
     */
    hostType: string;
    /**
     * Optional host insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails: string;
    managementAgentId: string;
    platformName: string;
    platformType: string;
    platformVersion: string;
    /**
     * Processor count.
     */
    processorCount: number;
    /**
     * Lifecycle states
     */
    state: string;
    /**
     * Resource Status
     */
    status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * The time the the host insight was first enabled. An RFC3339 formatted datetime string
     */
    timeCreated: string;
    /**
     * The time the host insight was updated. An RFC3339 formatted datetime string
     */
    timeUpdated: string;
}

export interface GetOptimizerCategoriesCategoryCollection {
    items: outputs.GetOptimizerCategoriesCategoryCollectionItem[];
}

export interface GetOptimizerCategoriesCategoryCollectionItem {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Text describing the category. Avoid entering confidential information.
     */
    description: string;
    /**
     * The estimated cost savings, in dollars, for the category.
     */
    estimatedCostSaving: number;
    /**
     * The unique OCID of the category.
     */
    id: string;
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    /**
     * An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
     */
    recommendationCounts: outputs.GetOptimizerCategoriesCategoryCollectionItemRecommendationCount[];
    /**
     * An array of `ResourceCount` objects grouped by the status of the recommendation.
     */
    resourceCounts: outputs.GetOptimizerCategoriesCategoryCollectionItemResourceCount[];
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * The date and time the category details were created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the category details were last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetOptimizerCategoriesCategoryCollectionItemRecommendationCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * The level of importance assigned to the recommendation.
     */
    importance: string;
}

export interface GetOptimizerCategoriesCategoryCollectionItemResourceCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * The recommendation status of the resource.
     */
    status: string;
}

export interface GetOptimizerCategoriesFilter {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerCategoryRecommendationCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * The level of importance assigned to the recommendation.
     */
    importance: string;
}

export interface GetOptimizerCategoryResourceCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * The recommendation status of the resource.
     */
    status: string;
}

export interface GetOptimizerEnrollmentStatusesEnrollmentStatusCollection {
    items: outputs.GetOptimizerEnrollmentStatusesEnrollmentStatusCollectionItem[];
}

export interface GetOptimizerEnrollmentStatusesEnrollmentStatusCollectionItem {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    enrollmentStatusId: string;
    /**
     * The OCID of the enrollment status.
     */
    id: string;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * A filter that returns results that match the Cloud Advisor enrollment status specified.
     */
    status: string;
    /**
     * The reason for the enrollment status of the tenancy.
     */
    statusReason: string;
    /**
     * The date and time the enrollment status was created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the enrollment status was last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetOptimizerEnrollmentStatusesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerHistoriesFilter {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerHistoriesHistoryCollection {
    /**
     * A collection of history summaries.
     */
    items: outputs.GetOptimizerHistoriesHistoryCollectionItem[];
}

export interface GetOptimizerHistoriesHistoryCollectionItem {
    /**
     * Details about the recommended action.
     */
    actions: outputs.GetOptimizerHistoriesHistoryCollectionItemAction[];
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The name assigned to the compartment.
     */
    compartmentName: string;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    estimatedCostSaving: number;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * The unique OCID associated with the recommendation history.
     */
    id: string;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    metadata: {[key: string]: any};
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId: string;
    /**
     * Optional. A filter that returns results that match the recommendation name specified.
     */
    recommendationName: string;
    /**
     * The unique OCID associated with the resource action.
     */
    resourceActionId: string;
    /**
     * The unique OCID associated with the resource.
     */
    resourceId: string;
    /**
     * Optional. A filter that returns results that match the resource type specified.
     */
    resourceType: string;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status: string;
    /**
     * The date and time the recommendation history was created, in the format defined by RFC3339.
     */
    timeCreated: string;
}

export interface GetOptimizerHistoriesHistoryCollectionItemAction {
    /**
     * Text describing the recommended action.
     */
    description: string;
    /**
     * The status of the resource action.
     */
    type: string;
    /**
     * The URL path to documentation that explains how to perform the action.
     */
    url: string;
}

export interface GetOptimizerProfileLevelsConfiguration {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: outputs.GetOptimizerProfileLevelsConfigurationItem[];
}

export interface GetOptimizerProfileLevelsConfigurationItem {
    /**
     * The pre-defined profile level.
     */
    level: string;
    /**
     * The unique OCID of the recommendation.
     */
    recommendationId: string;
}

export interface GetOptimizerProfileTargetCompartments {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: string[];
}

export interface GetOptimizerProfileTargetTags {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: outputs.GetOptimizerProfileTargetTagsItem[];
}

export interface GetOptimizerProfileTargetTagsItem {
    /**
     * The name of the tag definition.
     */
    tagDefinitionName: string;
    /**
     * The name of the tag namespace.
     */
    tagNamespaceName: string;
    /**
     * The tag value type.
     */
    tagValueType: string;
    /**
     * The list of tag values.
     */
    tagValues: string[];
}

export interface GetOptimizerProfilesFilter {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerProfilesProfileCollection {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: outputs.GetOptimizerProfilesProfileCollectionItem[];
}

export interface GetOptimizerProfilesProfileCollectionItem {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Text describing the profile. Avoid entering confidential information.
     */
    description: string;
    /**
     * Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique OCID of the profile.
     */
    id: string;
    /**
     * A list of configuration levels for each recommendation.
     */
    levelsConfiguration: outputs.GetOptimizerProfilesProfileCollectionItemLevelsConfiguration;
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * Optional. The target compartments supported by a profile override for a recommendation.
     */
    targetCompartments: outputs.GetOptimizerProfilesProfileCollectionItemTargetCompartments;
    /**
     * Optional. The target tags supported by a profile override for a recommendation.
     */
    targetTags: outputs.GetOptimizerProfilesProfileCollectionItemTargetTags;
    /**
     * The date and time the profile was created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time the profile was last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetOptimizerProfilesProfileCollectionItemLevelsConfiguration {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: outputs.GetOptimizerProfilesProfileCollectionItemLevelsConfigurationItem[];
}

export interface GetOptimizerProfilesProfileCollectionItemLevelsConfigurationItem {
    /**
     * The pre-defined profile level.
     */
    level: string;
    /**
     * The unique OCID of the recommendation.
     */
    recommendationId: string;
}

export interface GetOptimizerProfilesProfileCollectionItemTargetCompartments {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: string[];
}

export interface GetOptimizerProfilesProfileCollectionItemTargetTags {
    /**
     * The list of target tags attached to the current profile override.
     */
    items: outputs.GetOptimizerProfilesProfileCollectionItemTargetTagsItem[];
}

export interface GetOptimizerProfilesProfileCollectionItemTargetTagsItem {
    /**
     * The name of the tag definition.
     */
    tagDefinitionName: string;
    /**
     * The name of the tag namespace.
     */
    tagNamespaceName: string;
    /**
     * The tag value type.
     */
    tagValueType: string;
    /**
     * The list of tag values.
     */
    tagValues: string[];
}

export interface GetOptimizerRecommendationResourceCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * The current status of the recommendation.
     */
    status: string;
}

export interface GetOptimizerRecommendationSupportedLevels {
    /**
     * The list of supported levels.
     */
    items: outputs.GetOptimizerRecommendationSupportedLevelsItem[];
}

export interface GetOptimizerRecommendationSupportedLevelsItem {
    /**
     * The name of the profile level.
     */
    name: string;
}

export interface GetOptimizerRecommendationsFilter {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerRecommendationsRecommendationCollection {
    /**
     * The list of supported levels.
     */
    items: outputs.GetOptimizerRecommendationsRecommendationCollectionItem[];
}

export interface GetOptimizerRecommendationsRecommendationCollectionItem {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Text describing the recommendation.
     */
    description: string;
    /**
     * The estimated cost savings, in dollars, for the recommendation.
     */
    estimatedCostSaving: number;
    /**
     * The unique OCID associated with the recommendation.
     */
    id: string;
    /**
     * The level of importance assigned to the recommendation.
     */
    importance: string;
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    recommendationId: string;
    /**
     * An array of `ResourceCount` objects grouped by the status of the resource actions.
     */
    resourceCounts: outputs.GetOptimizerRecommendationsRecommendationCollectionItemResourceCount[];
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status: string;
    /**
     * Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
     */
    supportedLevels: outputs.GetOptimizerRecommendationsRecommendationCollectionItemSupportedLevels;
    /**
     * The date and time the recommendation details were created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time that the recommendation entered its current status. The format is defined by RFC3339.
     */
    timeStatusBegin: string;
    /**
     * The date and time the current status will change. The format is defined by RFC3339.
     */
    timeStatusEnd: string;
    /**
     * The date and time the recommendation details were last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetOptimizerRecommendationsRecommendationCollectionItemResourceCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status: string;
}

export interface GetOptimizerRecommendationsRecommendationCollectionItemSupportedLevels {
    /**
     * The list of supported levels.
     */
    items: outputs.GetOptimizerRecommendationsRecommendationCollectionItemSupportedLevelsItem[];
}

export interface GetOptimizerRecommendationsRecommendationCollectionItemSupportedLevelsItem {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
}

export interface GetOptimizerResourceActionAction {
    /**
     * Text describing the recommended action.
     */
    description: string;
    /**
     * The status of the resource action.
     */
    type: string;
    /**
     * The URL path to documentation that explains how to perform the action.
     */
    url: string;
}

export interface GetOptimizerResourceActionsFilter {
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerResourceActionsResourceActionCollection {
    items: outputs.GetOptimizerResourceActionsResourceActionCollectionItem[];
}

export interface GetOptimizerResourceActionsResourceActionCollectionItem {
    /**
     * Details about the recommended action.
     */
    action: outputs.GetOptimizerResourceActionsResourceActionCollectionItemAction;
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The name associated with the compartment.
     */
    compartmentName: string;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    estimatedCostSaving: number;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata: {[key: string]: any};
    /**
     * The unique OCID associated with the resource action.
     */
    id: string;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    metadata: {[key: string]: any};
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name: string;
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId: string;
    resourceActionId: string;
    /**
     * The unique OCID associated with the resource.
     */
    resourceId: string;
    /**
     * Optional. A filter that returns results that match the resource type specified.
     */
    resourceType: string;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state: string;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status: string;
    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     */
    timeCreated: string;
    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     */
    timeStatusBegin: string;
    /**
     * The date and time the current status will change. The format is defined by RFC3339.
     */
    timeStatusEnd: string;
    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     */
    timeUpdated: string;
}

export interface GetOptimizerResourceActionsResourceActionCollectionItemAction {
    /**
     * Text describing the recommended action.
     */
    description: string;
    /**
     * The status of the resource action.
     */
    type: string;
    /**
     * The URL path to documentation that explains how to perform the action.
     */
    url: string;
}

export interface GetOsmanagementManagedInstanceChildSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface GetOsmanagementManagedInstanceGroupManagedInstance {
    /**
     * User friendly name
     */
    displayName: string;
    /**
     * unique identifier that is immutable on creation
     */
    id: string;
}

export interface GetOsmanagementManagedInstanceGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstanceGroupsManagedInstanceGroup {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Information specified by the user about the managed instance group
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * unique identifier that is immutable on creation
     */
    id: string;
    managedInstanceCount: number;
    /**
     * list of Managed Instances in the group
     */
    managedInstances: outputs.GetOsmanagementManagedInstanceGroupsManagedInstanceGroupManagedInstance[];
    /**
     * The OS family for which to list resources.
     */
    osFamily: string;
    /**
     * The current lifecycle state for the object.
     */
    state: string;
}

export interface GetOsmanagementManagedInstanceGroupsManagedInstanceGroupManagedInstance {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * unique identifier that is immutable on creation
     */
    id: string;
}

export interface GetOsmanagementManagedInstanceManagedInstanceGroup {
    /**
     * User friendly name
     */
    displayName: string;
    /**
     * software source identifier
     */
    id: string;
}

export interface GetOsmanagementManagedInstanceParentSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface GetOsmanagementManagedInstancesFilter {
    /**
     * software source name
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstancesManagedInstance {
    /**
     * Number of bug fix type updates available to be installed
     */
    bugUpdatesAvailable: number;
    /**
     * list of child Software Sources attached to the Managed Instance
     */
    childSoftwareSources: outputs.GetOsmanagementManagedInstancesManagedInstanceChildSoftwareSource[];
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Information specified by the user about the managed instance
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Number of enhancement type updates available to be installed
     */
    enhancementUpdatesAvailable: number;
    /**
     * software source identifier
     */
    id: string;
    /**
     * Indicates whether a reboot is required to complete installation of updates.
     */
    isRebootRequired: boolean;
    /**
     * Time at which the instance last booted
     */
    lastBoot: string;
    /**
     * Time at which the instance last checked in
     */
    lastCheckin: string;
    /**
     * The ids of the managed instance groups of which this instance is a member.
     */
    managedInstanceGroups: outputs.GetOsmanagementManagedInstancesManagedInstanceManagedInstanceGroup[];
    /**
     * The OS family for which to list resources.
     */
    osFamily: string;
    /**
     * Operating System Kernel Version
     */
    osKernelVersion: string;
    /**
     * Operating System Name
     */
    osName: string;
    /**
     * Operating System Version
     */
    osVersion: string;
    /**
     * Number of non-classified updates available to be installed
     */
    otherUpdatesAvailable: number;
    /**
     * the parent (base) Software Source attached to the Managed Instance
     */
    parentSoftwareSource: outputs.GetOsmanagementManagedInstancesManagedInstanceParentSoftwareSource;
    /**
     * Number of scheduled jobs associated with this instance
     */
    scheduledJobCount: number;
    /**
     * Number of security type updates available to be installed
     */
    securityUpdatesAvailable: number;
    /**
     * status of the managed instance.
     */
    status: string;
    /**
     * Number of updates available to be installed
     */
    updatesAvailable: number;
    /**
     * Number of work requests associated with this instance
     */
    workRequestCount: number;
}

export interface GetOsmanagementManagedInstancesManagedInstanceChildSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface GetOsmanagementManagedInstancesManagedInstanceManagedInstanceGroup {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * software source identifier
     */
    id: string;
}

export interface GetOsmanagementManagedInstancesManagedInstanceParentSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface GetOsmanagementSoftwareSourceAssociatedManagedInstance {
    /**
     * User friendly name for the software source
     */
    displayName: string;
    /**
     * OCID for the Software Source
     */
    id: string;
}

export interface GetOsmanagementSoftwareSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementSoftwareSourcesSoftwareSource {
    /**
     * The architecture type supported by the Software Source
     */
    archType: string;
    /**
     * list of the Managed Instances associated with this Software Sources
     */
    associatedManagedInstances: outputs.GetOsmanagementSoftwareSourcesSoftwareSourceAssociatedManagedInstance[];
    /**
     * The yum repository checksum type used by this software source
     */
    checksumType: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Information specified by the user about the software source
     */
    description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Fingerprint of the GPG key for this software source
     */
    gpgKeyFingerprint: string;
    /**
     * ID of the GPG key for this software source
     */
    gpgKeyId: string;
    /**
     * URL of the GPG key for this software source
     */
    gpgKeyUrl: string;
    /**
     * OCID for the Software Source
     */
    id: string;
    /**
     * Email address of the person maintaining this software source
     */
    maintainerEmail: string;
    /**
     * Name of the person maintaining this software source
     */
    maintainerName: string;
    /**
     * Phone number of the person maintaining this software source
     */
    maintainerPhone: string;
    /**
     * Number of packages
     */
    packages: number;
    /**
     * OCID for the parent software source, if there is one
     */
    parentId: string;
    /**
     * Display name the parent software source, if there is one
     */
    parentName: string;
    /**
     * Type of the Software Source
     */
    repoType: string;
    /**
     * The current lifecycle state for the object.
     */
    state: string;
    /**
     * status of the software source.
     */
    status: string;
    /**
     * URL for the repostiory
     */
    url: string;
}

export interface GetOsmanagementSoftwareSourcesSoftwareSourceAssociatedManagedInstance {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName: string;
    /**
     * OCID for the Software Source
     */
    id: string;
}

export interface GetResourcemanagerStackConfigSource {
    configSourceType: string;
    workingDirectory: string;
    zipFileBase64encoded: string;
}

export interface GetResourcemanagerStacksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetResourcemanagerStacksStack {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) on which to filter.
     */
    compartmentId: string;
    configSource: outputs.GetResourcemanagerStacksStackConfigSource;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * General description of the stack.
     */
    description: string;
    /**
     * Display name on which to query.
     */
    displayName: string;
    /**
     * Free-form tags associated with this resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) on which to query for a stack.
     */
    id: string;
    /**
     * A filter that returns only those resources that match the specified lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time at which the stack was created.
     */
    timeCreated: string;
    variables: {[key: string]: any};
}

export interface GetResourcemanagerStacksStackConfigSource {
    configSourceType: string;
    workingDirectory: string;
    zipFileBase64encoded: string;
}

export interface GetSchServiceConnectorSource {
    /**
     * The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     */
    cursor: outputs.GetSchServiceConnectorSourceCursor;
    /**
     * The type descriminator.
     */
    kind: string;
    /**
     * The resources affected by this work request.
     */
    logSources: outputs.GetSchServiceConnectorSourceLogSource[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
}

export interface GetSchServiceConnectorSourceCursor {
    /**
     * The type descriminator.
     */
    kind: string;
}

export interface GetSchServiceConnectorSourceLogSource {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
     */
    logId: string;
}

export interface GetSchServiceConnectorTarget {
    /**
     * The batch rollover size in megabytes.
     */
    batchRolloverSizeInMbs: number;
    /**
     * The batch rollover time in milliseconds.
     */
    batchRolloverTimeInMs: number;
    /**
     * The name of the bucket. Avoid entering confidential information.
     */
    bucket: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId: string;
    /**
     * Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
     */
    enableFormattedMessaging: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * The type descriminator.
     */
    kind: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * The name of the metric.  Example: `CpuUtilization`
     */
    metric: string;
    /**
     * The namespace of the metric.  Example: `ociComputeagent`
     */
    metricNamespace: string;
    /**
     * The namespace.
     */
    namespace: string;
    /**
     * The prefix of the objects. Avoid entering confidential information.
     */
    objectNamePrefix: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     */
    topicId: string;
}

export interface GetSchServiceConnectorTask {
    /**
     * Size limit (kilobytes) for batch sent to invoke the function.
     */
    batchSizeInKbs: number;
    /**
     * Time limit (seconds) for batch sent to invoke the function.
     */
    batchTimeInSec: number;
    /**
     * A filter or mask to limit the source used in the flow defined by the service connector.
     */
    condition: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * The type descriminator.
     */
    kind: string;
}

export interface GetSchServiceConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSchServiceConnectorsServiceConnectorCollection {
    items: outputs.GetSchServiceConnectorsServiceConnectorCollectionItem[];
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItem {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the resource. Avoid entering confidential information.
     */
    description: string;
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
     */
    id: string;
    /**
     * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
     */
    lifecyleDetails: string;
    /**
     * An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    source: outputs.GetSchServiceConnectorsServiceConnectorCollectionItemSource;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state: string;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags: {[key: string]: any};
    /**
     * An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    target: outputs.GetSchServiceConnectorsServiceConnectorCollectionItemTarget;
    /**
     * The list of tasks.
     */
    tasks: outputs.GetSchServiceConnectorsServiceConnectorCollectionItemTask[];
    /**
     * The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeUpdated: string;
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItemSource {
    /**
     * The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     */
    cursor: outputs.GetSchServiceConnectorsServiceConnectorCollectionItemSourceCursor;
    /**
     * The type descriminator.
     */
    kind: string;
    /**
     * The resources affected by this work request.
     */
    logSources: outputs.GetSchServiceConnectorsServiceConnectorCollectionItemSourceLogSource[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItemSourceCursor {
    /**
     * The type descriminator.
     */
    kind: string;
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItemSourceLogSource {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
     */
    logId: string;
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItemTarget {
    /**
     * The batch rollover size in megabytes.
     */
    batchRolloverSizeInMbs: number;
    /**
     * The batch rollover time in milliseconds.
     */
    batchRolloverTimeInMs: number;
    /**
     * The name of the bucket. Avoid entering confidential information.
     */
    bucket: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
     */
    compartmentId: string;
    /**
     * Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
     */
    enableFormattedMessaging: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * The type descriminator.
     */
    kind: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * The name of the metric.  Example: `CpuUtilization`
     */
    metric: string;
    /**
     * The namespace of the metric.  Example: `ociComputeagent`
     */
    metricNamespace: string;
    /**
     * The namespace.
     */
    namespace: string;
    /**
     * The prefix of the objects. Avoid entering confidential information.
     */
    objectNamePrefix: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     */
    topicId: string;
}

export interface GetSchServiceConnectorsServiceConnectorCollectionItemTask {
    /**
     * Size limit (kilobytes) for batch sent to invoke the function.
     */
    batchSizeInKbs: number;
    /**
     * Time limit (seconds) for batch sent to invoke the function.
     */
    batchTimeInSec: number;
    /**
     * A filter or mask to limit the source used in the flow defined by the service connector.
     */
    condition: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * The type descriminator.
     */
    kind: string;
}

export interface GetServiceCatalogPrivateApplicationLogo {
    /**
     * The content URL of the uploaded data.
     */
    contentUrl: string;
    /**
     * The name used to refer to the uploaded data.
     */
    displayName: string;
    /**
     * The MIME type of the uploaded data.
     */
    mimeType: string;
}

export interface GetServiceCatalogPrivateApplicationPackageDetails {
    /**
     * Type of packages within this private application.
     */
    packageType: string;
    version: string;
    zipFileBase64encoded: string;
}

export interface GetServiceCatalogPrivateApplicationPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogPrivateApplicationPackagesPrivateApplicationPackageCollection {
    items: outputs.GetServiceCatalogPrivateApplicationPackagesPrivateApplicationPackageCollectionItem[];
}

export interface GetServiceCatalogPrivateApplicationPackagesPrivateApplicationPackageCollectionItem {
    contentUrl: string;
    /**
     * Exact match name filter.
     */
    displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application package.
     */
    id: string;
    mimeType: string;
    /**
     * Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
     */
    packageType: string;
    /**
     * The unique identifier for the private application.
     */
    privateApplicationId: string;
    /**
     * The date and time the private application package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-27T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The package version.
     */
    version: string;
}

export interface GetServiceCatalogPrivateApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogPrivateApplicationsPrivateApplicationCollection {
    items: outputs.GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItem[];
}

export interface GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItem {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Exact match name filter.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique identifier for the private application in Marketplace.
     */
    id: string;
    /**
     * The model for uploaded binary data, like logos and images.
     */
    logo: outputs.GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItemLogo;
    logoFileBase64encoded: string;
    /**
     * A long description of the private application.
     */
    longDescription: string;
    packageDetails: outputs.GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItemPackageDetails;
    /**
     * Type of packages within this private application.
     */
    packageType: string;
    /**
     * A short description of the private application.
     */
    shortDescription: string;
    /**
     * The lifecycle state of the private application.
     */
    state: string;
    /**
     * The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
     */
    timeUpdated: string;
}

export interface GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItemLogo {
    /**
     * The content URL of the uploaded data.
     */
    contentUrl: string;
    /**
     * Exact match name filter.
     */
    displayName: string;
    /**
     * The MIME type of the uploaded data.
     */
    mimeType: string;
}

export interface GetServiceCatalogPrivateApplicationsPrivateApplicationCollectionItemPackageDetails {
    /**
     * Type of packages within this private application.
     */
    packageType: string;
    version: string;
    zipFileBase64encoded: string;
}

export interface GetServiceCatalogServiceCatalogAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogServiceCatalogAssociationsServiceCatalogAssociationCollection {
    items: outputs.GetServiceCatalogServiceCatalogAssociationsServiceCatalogAssociationCollectionItem[];
}

export interface GetServiceCatalogServiceCatalogAssociationsServiceCatalogAssociationCollectionItem {
    /**
     * The unique identifier of the entity associated with service catalog.
     */
    entityId: string;
    /**
     * The type of the application in the service catalog.
     */
    entityType: string;
    /**
     * Identifier of the association.
     */
    id: string;
    /**
     * The unique identifier for the service catalog.
     */
    serviceCatalogId: string;
    /**
     * Timestamp of when the resource was associated with service catalog.
     */
    timeCreated: string;
}

export interface GetServiceCatalogServiceCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogServiceCatalogsServiceCatalogCollection {
    items: outputs.GetServiceCatalogServiceCatalogsServiceCatalogCollectionItem[];
}

export interface GetServiceCatalogServiceCatalogsServiceCatalogCollectionItem {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Exact match name filter.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The unique identifier for the Service catalog.
     */
    id: string;
    /**
     * The lifecycle state of the service catalog.
     */
    state: string;
    /**
     * The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
     */
    timeUpdated: string;
}

export interface GetStreamingConnectHarnessesConnectHarness {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given ID exactly.
     */
    id: string;
    /**
     * Any additional details about the current state of the connect harness.
     */
    lifecycleStateDetails: string;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    timeCreated: string;
}

export interface GetStreamingConnectHarnessesFilter {
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingStreamPoolCustomEncryptionKey {
    /**
     * Life cycle State of the custom key
     */
    keyState: string;
    /**
     * Custom Encryption Key (Master Key) ocid.
     */
    kmsKeyId: string;
}

export interface GetStreamingStreamPoolKafkaSettings {
    /**
     * Enable auto creation of topic on the server.
     */
    autoCreateTopicsEnable: boolean;
    /**
     * Bootstrap servers.
     */
    bootstrapServers: string;
    /**
     * The number of hours to keep a log file before deleting it (in hours).
     */
    logRetentionHours: number;
    /**
     * The default number of log partitions per topic.
     */
    numPartitions: number;
}

export interface GetStreamingStreamPoolPrivateEndpointSettings {
    /**
     * The optional list of network security groups that are associated with the private endpoint of the stream pool.
     */
    nsgIds: string[];
    /**
     * The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     */
    privateEndpointIp: string;
    /**
     * The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     */
    subnetId: string;
}

export interface GetStreamingStreamPoolsFilter {
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingStreamPoolsStreamPool {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Custom Encryption Key which will be used for encryption by all the streams in the pool.
     */
    customEncryptionKey: outputs.GetStreamingStreamPoolsStreamPoolCustomEncryptionKey;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
     */
    definedTags: {[key: string]: any};
    /**
     * The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     */
    endpointFqdn: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given ID exactly.
     */
    id: string;
    /**
     * True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     */
    isPrivate: boolean;
    /**
     * Settings for the Kafka compatibility layer.
     */
    kafkaSettings: outputs.GetStreamingStreamPoolsStreamPoolKafkaSettings;
    /**
     * Any additional details about the current state of the stream.
     */
    lifecycleStateDetails: string;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    /**
     * Optional settings if the stream pool is private.
     */
    privateEndpointSettings: outputs.GetStreamingStreamPoolsStreamPoolPrivateEndpointSettings;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    timeCreated: string;
}

export interface GetStreamingStreamPoolsStreamPoolCustomEncryptionKey {
    /**
     * Life cycle State of the custom key
     */
    keyState: string;
    /**
     * Custom Encryption Key (Master Key) ocid.
     */
    kmsKeyId: string;
}

export interface GetStreamingStreamPoolsStreamPoolKafkaSettings {
    /**
     * Enable auto creation of topic on the server.
     */
    autoCreateTopicsEnable: boolean;
    /**
     * Bootstrap servers.
     */
    bootstrapServers: string;
    /**
     * The number of hours to keep a log file before deleting it (in hours).
     */
    logRetentionHours: number;
    /**
     * The default number of log partitions per topic.
     */
    numPartitions: number;
}

export interface GetStreamingStreamPoolsStreamPoolPrivateEndpointSettings {
    /**
     * The optional list of network security groups that are associated with the private endpoint of the stream pool.
     */
    nsgIds: string[];
    /**
     * The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     */
    privateEndpointIp: string;
    /**
     * The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     */
    subnetId: string;
}

export interface GetStreamingStreamsFilter {
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingStreamsStream {
    /**
     * The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
     */
    definedTags: {[key: string]: any};
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the given ID exactly.
     */
    id: string;
    /**
     * Any additional details about the current state of the stream.
     */
    lifecycleStateDetails: string;
    /**
     * The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
     */
    messagesEndpoint: string;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name: string;
    /**
     * The number of partitions in the stream.
     */
    partitions: number;
    /**
     * The retention period of the stream, in hours. This property is read-only.
     */
    retentionInHours: number;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
     */
    streamPoolId: string;
    /**
     * The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    timeCreated: string;
}

export interface GetVaultSecretSecretRule {
    /**
     * A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
     */
    isEnforcedOnDeletedSecretVersions: boolean;
    /**
     * A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
     */
    isSecretContentRetrievalBlockedOnExpiry: boolean;
    /**
     * The type of rule, which either controls when the secret contents expire or whether they can be reused.
     */
    ruleType: string;
    /**
     * A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. No enforcement mechanism exists at this time, but audit logs record the expiration on the appropriate date, according to the time interval specified in the rule. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
     */
    secretVersionExpiryInterval: string;
    /**
     * An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfAbsoluteExpiry: string;
}

export interface GetVaultSecretsFilter {
    /**
     * The secret name.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVaultSecretsSecret {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A brief description of the secret. Avoid entering confidential information.
     */
    description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the secret.
     */
    id: string;
    /**
     * The OCID of the master encryption key that is used to encrypt the secret.
     */
    keyId: string;
    /**
     * Additional information about the current lifecycle state of the secret.
     */
    lifecycleDetails: string;
    /**
     * The user-friendly name of the secret. Avoid entering confidential information.
     */
    secretName: string;
    /**
     * A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
     */
    state: string;
    /**
     * A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeCreated: string;
    /**
     * An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfCurrentVersionExpiry: string;
    /**
     * An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion: string;
    /**
     * The OCID of the vault.
     */
    vaultId: string;
}

export interface GetVulnerabilityScanningHostScanRecipeAgentSettings {
    /**
     * Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
     */
    agentConfiguration: outputs.GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration;
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration {
    /**
     * CIS (Center for Internet Security) Benchmark scan settings for a host scan
     */
    cisBenchmarkSettings: outputs.GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings;
    /**
     * Endpoint Protection scan settings for a host scan
     */
    endpointProtectionSettings: outputs.GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings;
    /**
     * Vendor to use for the host scan agent.
     */
    vendor: string;
}

export interface GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipePortSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipeSchedule {
    /**
     * Day of week the scheduled scan occurs (not applicable for DAILY type)
     */
    dayOfWeek: string;
    /**
     * How often the scan occurs
     */
    type: string;
}

export interface GetVulnerabilityScanningHostScanRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollection {
    items: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItem[];
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItem {
    /**
     * Agent scan settings for a host scan
     */
    agentSettings: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettings;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * Unique identifier of the config that is immutable on creation
     */
    id: string;
    /**
     * Port scan settings for a host scan
     */
    portSettings: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemPortSettings;
    /**
     * A scanning schedule
     */
    schedule: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemSchedule;
    /**
     * A filter to return only resources whose lifecycleState matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeCreated: string;
    /**
     * Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeUpdated: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettings {
    /**
     * Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
     */
    agentConfiguration: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfiguration;
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfiguration {
    /**
     * CIS (Center for Internet Security) Benchmark scan settings for a host scan
     */
    cisBenchmarkSettings: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfigurationCisBenchmarkSettings;
    /**
     * Endpoint Protection scan settings for a host scan
     */
    endpointProtectionSettings: outputs.GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfigurationEndpointProtectionSettings;
    /**
     * Vendor to use for the host scan agent.
     */
    vendor: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfigurationCisBenchmarkSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingsAgentConfigurationEndpointProtectionSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemPortSettings {
    /**
     * The scan level
     */
    scanLevel: string;
}

export interface GetVulnerabilityScanningHostScanRecipesHostScanRecipeSummaryCollectionItemSchedule {
    /**
     * Day of week the scheduled scan occurs (not applicable for DAILY type)
     */
    dayOfWeek: string;
    /**
     * How often the scan occurs
     */
    type: string;
}

export interface GetVulnerabilityScanningHostScanTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningHostScanTargetsHostScanTargetSummaryCollection {
    items: outputs.GetVulnerabilityScanningHostScanTargetsHostScanTargetSummaryCollectionItem[];
}

export interface GetVulnerabilityScanningHostScanTargetsHostScanTargetSummaryCollectionItem {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * Target description.
     */
    description: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * ID of the host scan recipe this target applies.
     */
    hostScanRecipeId: string;
    /**
     * Unique identifier of the config that is immutable on creation
     */
    id: string;
    /**
     * List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
     */
    instanceIds: string[];
    /**
     * A filter to return only resources whose lifecycleState matches the given lifecycleState.
     */
    state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags: {[key: string]: any};
    /**
     * Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
     */
    targetCompartmentId: string;
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeCreated: string;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeUpdated: string;
}

export interface GetWaasAddressListsAddressList {
    /**
     * The total number of unique IP addresses in the address list.
     */
    addressCount: number;
    /**
     * The list of IP addresses or CIDR notations.
     */
    addresses: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name of the address list.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the address list.
     */
    id: string;
    /**
     * The current lifecycle state of the address list.
     */
    state: string;
    /**
     * The date and time the address list was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
}

export interface GetWaasAddressListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasCertificateExtension {
    /**
     * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
     */
    isCritical: boolean;
    /**
     * The certificate extension name.
     */
    name: string;
    /**
     * The certificate extension value.
     */
    value: string;
}

export interface GetWaasCertificateIssuerName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface GetWaasCertificatePublicKeyInfo {
    /**
     * The algorithm identifier and parameters for the public key.
     */
    algorithm: string;
    /**
     * The private key exponent.
     */
    exponent: number;
    /**
     * The number of bits in a key used by a cryptographic algorithm.
     */
    keySize: number;
}

export interface GetWaasCertificateSubjectName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface GetWaasCertificatesCertificate {
    /**
     * The data of the SSL certificate.
     */
    certificateData: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name of the SSL certificate.
     */
    displayName: string;
    /**
     * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     */
    extensions: outputs.GetWaasCertificatesCertificateExtension[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
     */
    id: string;
    /**
     * This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     */
    isTrustVerificationDisabled: boolean;
    issuedBy: string;
    /**
     * The issuer of the certificate.
     */
    issuerName: outputs.GetWaasCertificatesCertificateIssuerName;
    privateKeyData: string;
    /**
     * Information about the public key and the algorithm used by the public key.
     */
    publicKeyInfo: outputs.GetWaasCertificatesCertificatePublicKeyInfo;
    /**
     * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     */
    serialNumber: string;
    /**
     * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     */
    signatureAlgorithm: string;
    /**
     * The current lifecycle state of the SSL certificate.
     */
    state: string;
    /**
     * The entity to be secured by the certificate.
     */
    subjectName: outputs.GetWaasCertificatesCertificateSubjectName;
    /**
     * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
    /**
     * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     */
    timeNotValidAfter: string;
    /**
     * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     */
    timeNotValidBefore: string;
    /**
     * The version of the encoded certificate.
     */
    version: number;
}

export interface GetWaasCertificatesCertificateExtension {
    /**
     * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
     */
    isCritical: boolean;
    /**
     * The certificate extension name.
     */
    name: string;
    /**
     * The certificate extension value.
     */
    value: string;
}

export interface GetWaasCertificatesCertificateIssuerName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface GetWaasCertificatesCertificatePublicKeyInfo {
    /**
     * The algorithm identifier and parameters for the public key.
     */
    algorithm: string;
    /**
     * The private key exponent.
     */
    exponent: number;
    /**
     * The number of bits in a key used by a cryptographic algorithm.
     */
    keySize: number;
}

export interface GetWaasCertificatesCertificateSubjectName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface GetWaasCertificatesFilter {
    /**
     * The certificate extension name.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasCustomProtectionRulesCustomProtectionRule {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The description of the custom protection rule.
     */
    description: string;
    /**
     * The user-friendly name of the custom protection rule.
     */
    displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
     */
    id: string;
    /**
     * The auto-generated ID for the custom protection rule. These IDs are referenced in logs.
     */
    modSecurityRuleIds: string[];
    /**
     * The current lifecycle state of the custom protection rule.
     */
    state: string;
    /**
     * The template text of the custom protection rule. All custom protection rules are expressed in ModSecurity Rule Language.
     */
    template: string;
    /**
     * The date and time the protection rule was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
}

export interface GetWaasCustomProtectionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasEdgeSubnetsEdgeSubnet {
    /**
     * An edge node subnet. This can include /24 or /8 addresses.
     */
    cidr: string;
    /**
     * The name of the region containing the indicated subnet.
     */
    region: string;
    /**
     * The date and time the last change was made to the indicated edge node subnet, expressed in RFC 3339 timestamp format.
     */
    timeModified: string;
}

export interface GetWaasEdgeSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasHttpRedirectTarget {
    /**
     * The host portion of the redirect.
     */
    host: string;
    /**
     * The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
     */
    path: string;
    /**
     * Port number of the target destination of the redirect, default to match protocol
     */
    port: number;
    /**
     * The protocol used for the target, http or https.
     */
    protocol: string;
    /**
     * The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
     */
    query: string;
}

export interface GetWaasHttpRedirectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasHttpRedirectsHttpRedirect {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
     */
    displayName: string;
    /**
     * The domain from which traffic will be redirected.
     */
    domain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect.
     */
    id: string;
    /**
     * The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
     */
    responseCode: number;
    /**
     * The current lifecycle state of the HTTP Redirect.
     */
    state: string;
    /**
     * The redirect target object including all the redirect data.
     */
    target: outputs.GetWaasHttpRedirectsHttpRedirectTarget;
    /**
     * The date and time the policy was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
}

export interface GetWaasHttpRedirectsHttpRedirectTarget {
    /**
     * The host portion of the redirect.
     */
    host: string;
    /**
     * The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
     */
    path: string;
    /**
     * Port number of the target destination of the redirect, default to match protocol
     */
    port: number;
    /**
     * The protocol used for the target, http or https.
     */
    protocol: string;
    /**
     * The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
     */
    query: string;
}

export interface GetWaasProtectionRuleExclusion {
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * The target of the exclusion.
     */
    target: string;
}

export interface GetWaasProtectionRulesFilter {
    /**
     * The name of the protection rule.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasProtectionRulesProtectionRule {
    /**
     * Filter rules using a list of actions.
     */
    action: string;
    /**
     * The description of the protection rule.
     */
    description: string;
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: outputs.GetWaasProtectionRulesProtectionRuleExclusion[];
    /**
     * The unique key of the protection rule.
     */
    key: string;
    /**
     * The list of labels for the protection rule.
     */
    labels: string[];
    /**
     * The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity's open source WAF rules, see [Mod Security's documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     */
    modSecurityRuleIds: string[];
    /**
     * The name of the protection rule.
     */
    name: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
     */
    waasPolicyId: string;
}

export interface GetWaasProtectionRulesProtectionRuleExclusion {
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * The target of the exclusion.
     */
    target: string;
}

export interface GetWaasWaasPoliciesFilter {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasWaasPoliciesWaasPolicy {
    /**
     * An array of additional domains for this web application.
     */
    additionalDomains: string[];
    /**
     * The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
     */
    cname: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     */
    compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags: {[key: string]: any};
    /**
     * The user-friendly name of the WAAS policy. The name can be changed and does not need to be unique.
     */
    displayName: string;
    /**
     * The domain for which the cookie is set, defaults to WAAS policy domain.
     */
    domain: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
     */
    id: string;
    /**
     * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     */
    originGroups: outputs.GetWaasWaasPoliciesWaasPolicyOriginGroup[];
    /**
     * A map of host servers (origins) and their keys for the web application. Origin keys are used to associate origins to specific protection rules. The key should be a user-friendly name for the host. **Examples:** `primary` or `secondary`.
     */
    origins: outputs.GetWaasWaasPoliciesWaasPolicyOrigin[];
    /**
     * The configuration details for the WAAS policy.
     */
    policyConfig: outputs.GetWaasWaasPoliciesWaasPolicyPolicyConfig;
    /**
     * The current lifecycle state of the WAAS policy.
     */
    state: string;
    /**
     * The date and time the policy was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated: string;
    /**
     * The Web Application Firewall configuration for the WAAS policy.
     */
    wafConfig: outputs.GetWaasWaasPoliciesWaasPolicyWafConfig;
}

export interface GetWaasWaasPoliciesWaasPolicyOrigin {
    /**
     * A list of HTTP headers to forward to your origin.
     */
    customHeaders: outputs.GetWaasWaasPoliciesWaasPolicyOriginCustomHeader[];
    /**
     * The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
     */
    httpPort: number;
    /**
     * The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
     */
    httpsPort: number;
    label: string;
    /**
     * The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
     */
    uri: string;
}

export interface GetWaasWaasPoliciesWaasPolicyOriginCustomHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyOriginGroup {
    label: string;
    originGroups: outputs.GetWaasWaasPoliciesWaasPolicyOriginGroupOriginGroup[];
}

export interface GetWaasWaasPoliciesWaasPolicyOriginGroupOriginGroup {
    /**
     * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     */
    origin: string;
    weight: number;
}

export interface GetWaasWaasPoliciesWaasPolicyPolicyConfig {
    /**
     * The OCID of the SSL certificate to use if HTTPS is supported.
     */
    certificateId: string;
    /**
     * The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
     * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
     */
    cipherGroup: string;
    /**
     * Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
     */
    clientAddressHeader: string;
    /**
     * Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
     */
    healthChecks: outputs.GetWaasWaasPoliciesWaasPolicyPolicyConfigHealthChecks;
    /**
     * Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
     */
    isBehindCdn: boolean;
    /**
     * Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
     */
    isCacheControlRespected: boolean;
    /**
     * Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
     */
    isHttpsEnabled: boolean;
    /**
     * Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
     */
    isHttpsForced: boolean;
    /**
     * Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
     */
    isOriginCompressionEnabled: boolean;
    /**
     * Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
     */
    isResponseBufferingEnabled: boolean;
    /**
     * SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
     */
    isSniEnabled: boolean;
    /**
     * An object that represents a load balancing method and its properties.
     */
    loadBalancingMethod: outputs.GetWaasWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod;
    /**
     * A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
     * * **TLS_V1:** corresponds to TLS 1.0 specification.
     * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
     * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
     * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
     */
    tlsProtocols: string[];
    /**
     * ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
     */
    websocketPathPrefixes: string[];
}

export interface GetWaasWaasPoliciesWaasPolicyPolicyConfigHealthChecks {
    /**
     * The HTTP response codes that signify a healthy state.
     * * **2XX:** Success response code group.
     * * **3XX:** Redirection response code group.
     * * **4XX:** Client errors response code group.
     * * **5XX:** Server errors response code group.
     */
    expectedResponseCodeGroups: string[];
    /**
     * Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
     */
    expectedResponseText: string;
    /**
     * HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
     */
    headers: {[key: string]: any};
    /**
     * Number of successful health checks after which the server is marked up.
     */
    healthyThreshold: number;
    /**
     * Time between health checks of an individual origin server, in seconds.
     */
    intervalInSeconds: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * Enables or disables additional check for predefined text in addition to response code.
     */
    isResponseTextCheckEnabled: boolean;
    /**
     * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * Path to visit on your origins when performing the health check.
     */
    path: string;
    /**
     * Response timeout represents wait time until request is considered failed, in seconds.
     */
    timeoutInSeconds: number;
    /**
     * Number of failed health checks after which the server is marked down.
     */
    unhealthyThreshold: number;
}

export interface GetWaasWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod {
    /**
     * The domain for which the cookie is set, defaults to WAAS policy domain.
     */
    domain: string;
    /**
     * The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
     */
    expirationTimeInSeconds: number;
    /**
     * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfig {
    /**
     * The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     */
    accessRules: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigAccessRule[];
    /**
     * The IP address rate limiting settings used to limit the number of requests from an address.
     */
    addressRateLimiting: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigAddressRateLimiting;
    /**
     * A list of caching rules applied to the web application.
     */
    cachingRules: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigCachingRule[];
    /**
     * A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     */
    captchas: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigCaptcha[];
    /**
     * A list of the custom protection rule OCIDs and their actions.
     */
    customProtectionRules: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigCustomProtectionRule[];
    /**
     * The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     */
    deviceFingerprintChallenge: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge;
    /**
     * The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     */
    humanInteractionChallenge: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge;
    /**
     * The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     */
    jsChallenge: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigJsChallenge;
    /**
     * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     */
    origin: string;
    /**
     * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     */
    originGroups: string[];
    /**
     * The settings to apply to protection rules.
     */
    protectionSettings: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigProtectionSettings;
    /**
     * A list of IP addresses that bypass the Web Application Firewall.
     */
    whitelists: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigWhitelist[];
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigAccessRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
     * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
     * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
     * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
     * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
     */
    bypassChallenges: string[];
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigAccessRuleCriteria[];
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The response status code to return when `action` is set to `REDIRECT`.
     * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
     * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
     */
    redirectResponseCode: string;
    /**
     * The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
     */
    redirectUrl: string;
    /**
     * An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
     */
    responseHeaderManipulations: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigAccessRuleResponseHeaderManipulation[];
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigAccessRuleCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigAddressRateLimiting {
    /**
     * The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     */
    allowedRatePerAddress: number;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     */
    maxDelayedCountPerAddress: number;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigCachingRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    cachingDuration: string;
    /**
     * The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    clientCachingDuration: string;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigCachingRuleCriteria[];
    /**
     * Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
     */
    isClientCachingEnabled: boolean;
    /**
     * The unique key for the caching rule.
     */
    key: string;
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigCachingRuleCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigCaptcha {
    /**
     * The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
     */
    failureMessage: string;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
     */
    footerText: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
     */
    headerText: string;
    /**
     * The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
     */
    sessionExpirationInSeconds: number;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
     */
    submitLabel: string;
    /**
     * The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
     */
    title: string;
    /**
     * The unique URL path at which to show the CAPTCHA challenge.
     */
    url: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigCustomProtectionRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigCustomProtectionRuleExclusion[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
     */
    id: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigCustomProtectionRuleExclusion {
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * The target of the exclusion.
     */
    target: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
     */
    maxAddressCount: number;
    /**
     * The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
     */
    maxAddressCountExpirationInSeconds: number;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings;
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     */
    interactionThreshold: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     */
    recordingPeriodInSeconds: number;
    /**
     * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigJsChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
     */
    areRedirectsChallenged: boolean;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeChallengeSettings;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeCriteria[];
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeSetHttpHeader;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigJsChallengeSetHttpHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigProtectionSettings {
    /**
     * The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
     */
    allowedHttpMethods: string[];
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
     */
    isResponseInspected: boolean;
    /**
     * The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
     */
    maxArgumentCount: number;
    /**
     * The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
     */
    maxNameLengthPerArgument: number;
    /**
     * The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
     */
    maxResponseSizeInKiB: number;
    /**
     * The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
     */
    maxTotalNameLengthOfArguments: number;
    /**
     * The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
     */
    mediaTypes: string[];
    /**
     * The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
     */
    recommendationsPeriodInDays: number;
}

export interface GetWaasWaasPoliciesWaasPolicyWafConfigWhitelist {
    /**
     * A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
     */
    addressLists: string[];
    /**
     * A set of IP addresses or CIDR notations to include in the whitelist.
     */
    addresses: string[];
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GetWaasWaasPolicyOrigin {
    /**
     * A list of HTTP headers to forward to your origin.
     */
    customHeaders: outputs.GetWaasWaasPolicyOriginCustomHeader[];
    /**
     * The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
     */
    httpPort?: number;
    /**
     * The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
     */
    httpsPort?: number;
    label: string;
    /**
     * The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
     */
    uri: string;
}

export interface GetWaasWaasPolicyOriginCustomHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyOriginGroup {
    label: string;
    originGroups: outputs.GetWaasWaasPolicyOriginGroupOriginGroup[];
}

export interface GetWaasWaasPolicyOriginGroupOriginGroup {
    /**
     * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     */
    origin: string;
    weight: number;
}

export interface GetWaasWaasPolicyPolicyConfig {
    /**
     * The OCID of the SSL certificate to use if HTTPS is supported.
     */
    certificateId: string;
    /**
     * The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
     * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
     */
    cipherGroup: string;
    /**
     * Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
     */
    clientAddressHeader: string;
    /**
     * Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
     */
    healthChecks: outputs.GetWaasWaasPolicyPolicyConfigHealthChecks;
    /**
     * Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
     */
    isBehindCdn: boolean;
    /**
     * Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
     */
    isCacheControlRespected: boolean;
    /**
     * Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
     */
    isHttpsEnabled: boolean;
    /**
     * Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
     */
    isHttpsForced: boolean;
    /**
     * Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
     */
    isOriginCompressionEnabled: boolean;
    /**
     * Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
     */
    isResponseBufferingEnabled: boolean;
    /**
     * SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
     */
    isSniEnabled: boolean;
    /**
     * An object that represents a load balancing method and its properties.
     */
    loadBalancingMethod: outputs.GetWaasWaasPolicyPolicyConfigLoadBalancingMethod;
    /**
     * A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
     * * **TLS_V1:** corresponds to TLS 1.0 specification.
     * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
     * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
     * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
     */
    tlsProtocols: string[];
    /**
     * ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
     */
    websocketPathPrefixes: string[];
}

export interface GetWaasWaasPolicyPolicyConfigHealthChecks {
    /**
     * The HTTP response codes that signify a healthy state.
     * * **2XX:** Success response code group.
     * * **3XX:** Redirection response code group.
     * * **4XX:** Client errors response code group.
     * * **5XX:** Server errors response code group.
     */
    expectedResponseCodeGroups: string[];
    /**
     * Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
     */
    expectedResponseText: string;
    /**
     * HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
     */
    headers: {[key: string]: any};
    /**
     * Number of successful health checks after which the server is marked up.
     */
    healthyThreshold: number;
    /**
     * Time between health checks of an individual origin server, in seconds.
     */
    intervalInSeconds: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * Enables or disables additional check for predefined text in addition to response code.
     */
    isResponseTextCheckEnabled: boolean;
    /**
     * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * Path to visit on your origins when performing the health check.
     */
    path: string;
    /**
     * Response timeout represents wait time until request is considered failed, in seconds.
     */
    timeoutInSeconds: number;
    /**
     * Number of failed health checks after which the server is marked down.
     */
    unhealthyThreshold: number;
}

export interface GetWaasWaasPolicyPolicyConfigLoadBalancingMethod {
    /**
     * The domain for which the cookie is set, defaults to WAAS policy domain.
     */
    domain: string;
    /**
     * The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
     */
    expirationTimeInSeconds: number;
    /**
     * Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GetWaasWaasPolicyWafConfig {
    /**
     * The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     */
    accessRules: outputs.GetWaasWaasPolicyWafConfigAccessRule[];
    /**
     * The IP address rate limiting settings used to limit the number of requests from an address.
     */
    addressRateLimiting: outputs.GetWaasWaasPolicyWafConfigAddressRateLimiting;
    /**
     * A list of caching rules applied to the web application.
     */
    cachingRules: outputs.GetWaasWaasPolicyWafConfigCachingRule[];
    /**
     * A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     */
    captchas: outputs.GetWaasWaasPolicyWafConfigCaptcha[];
    /**
     * A list of the custom protection rule OCIDs and their actions.
     */
    customProtectionRules: outputs.GetWaasWaasPolicyWafConfigCustomProtectionRule[];
    /**
     * The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     */
    deviceFingerprintChallenge: outputs.GetWaasWaasPolicyWafConfigDeviceFingerprintChallenge;
    /**
     * The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     */
    humanInteractionChallenge: outputs.GetWaasWaasPolicyWafConfigHumanInteractionChallenge;
    /**
     * The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     */
    jsChallenge: outputs.GetWaasWaasPolicyWafConfigJsChallenge;
    /**
     * The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     */
    origin: string;
    /**
     * The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     */
    originGroups: string[];
    /**
     * The settings to apply to protection rules.
     */
    protectionSettings: outputs.GetWaasWaasPolicyWafConfigProtectionSettings;
    /**
     * A list of IP addresses that bypass the Web Application Firewall.
     */
    whitelists: outputs.GetWaasWaasPolicyWafConfigWhitelist[];
}

export interface GetWaasWaasPolicyWafConfigAccessRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
     * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
     * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
     * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
     * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
     */
    bypassChallenges: string[];
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPolicyWafConfigAccessRuleCriteria[];
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The response status code to return when `action` is set to `REDIRECT`.
     * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
     * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
     */
    redirectResponseCode: string;
    /**
     * The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
     */
    redirectUrl: string;
    /**
     * An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
     */
    responseHeaderManipulations: outputs.GetWaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation[];
}

export interface GetWaasWaasPolicyWafConfigAccessRuleCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigAddressRateLimiting {
    /**
     * The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     */
    allowedRatePerAddress: number;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     */
    maxDelayedCountPerAddress: number;
}

export interface GetWaasWaasPolicyWafConfigCachingRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    cachingDuration: string;
    /**
     * The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    clientCachingDuration: string;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPolicyWafConfigCachingRuleCriteria[];
    /**
     * Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
     */
    isClientCachingEnabled: boolean;
    /**
     * The unique key for the caching rule.
     */
    key: string;
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GetWaasWaasPolicyWafConfigCachingRuleCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigCaptcha {
    /**
     * The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
     */
    failureMessage: string;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
     */
    footerText: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
     */
    headerText: string;
    /**
     * The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
     */
    sessionExpirationInSeconds: number;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
     */
    submitLabel: string;
    /**
     * The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
     */
    title: string;
    /**
     * The unique URL path at which to show the CAPTCHA challenge.
     */
    url: string;
}

export interface GetWaasWaasPolicyWafConfigCustomProtectionRule {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: outputs.GetWaasWaasPolicyWafConfigCustomProtectionRuleExclusion[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
     */
    id: string;
}

export interface GetWaasWaasPolicyWafConfigCustomProtectionRuleExclusion {
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * The target of the exclusion.
     */
    target: string;
}

export interface GetWaasWaasPolicyWafConfigDeviceFingerprintChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
     */
    maxAddressCount: number;
    /**
     * The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
     */
    maxAddressCountExpirationInSeconds: number;
}

export interface GetWaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPolicyWafConfigHumanInteractionChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings;
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     */
    interactionThreshold: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     */
    recordingPeriodInSeconds: number;
    /**
     * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.GetWaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader;
}

export interface GetWaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigJsChallenge {
    /**
     * The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
     */
    areRedirectsChallenged: boolean;
    /**
     * The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.GetWaasWaasPolicyWafConfigJsChallengeChallengeSettings;
    /**
     * When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.GetWaasWaasPolicyWafConfigJsChallengeCriteria[];
    /**
     * The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.GetWaasWaasPolicyWafConfigJsChallengeSetHttpHeader;
}

export interface GetWaasWaasPolicyWafConfigJsChallengeChallengeSettings {
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface GetWaasWaasPolicyWafConfigJsChallengeCriteria {
    /**
     * The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigJsChallengeSetHttpHeader {
    /**
     * The unique name of the whitelist.
     */
    name: string;
    /**
     * The value of the header.
     */
    value: string;
}

export interface GetWaasWaasPolicyWafConfigProtectionSettings {
    /**
     * The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
     */
    allowedHttpMethods: string[];
    /**
     * If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
     */
    isResponseInspected: boolean;
    /**
     * The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
     */
    maxArgumentCount: number;
    /**
     * The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
     */
    maxNameLengthPerArgument: number;
    /**
     * The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
     */
    maxResponseSizeInKiB: number;
    /**
     * The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
     */
    maxTotalNameLengthOfArguments: number;
    /**
     * The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
     */
    mediaTypes: string[];
    /**
     * The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
     */
    recommendationsPeriodInDays: number;
}

export interface GetWaasWaasPolicyWafConfigWhitelist {
    /**
     * A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
     */
    addressLists: string[];
    /**
     * A set of IP addresses or CIDR notations to include in the whitelist.
     */
    addresses: string[];
    /**
     * The unique name of the whitelist.
     */
    name: string;
}

export interface GoldenGateDeploymentOggData {
    /**
     * (Updatable) The password associated with the GoldenGate deployment console username. The password must be 8 to 30 characters long and must contain at least 1 uppercase, 1 lowercase, 1 numeric, and 1 special character. Special characters such as ‘$’, ‘^’, or ‘?’ are not allowed.
     */
    adminPassword: string;
    /**
     * (Updatable) The GoldenGate deployment console username.
     */
    adminUsername: string;
    /**
     * (Updatable) A PEM-encoded SSL certificate.
     */
    certificate: string;
    /**
     * The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     */
    deploymentName: string;
    /**
     * (Updatable) A PEM-encoded private key.
     */
    key: string;
}

export interface IdentityAuthenticationPolicyNetworkPolicy {
    /**
     * (Updatable) Network Source ids
     */
    networkSourceIds: string[];
}

export interface IdentityAuthenticationPolicyPasswordPolicy {
    /**
     * (Updatable) At least one lower case character required.
     */
    isLowercaseCharactersRequired: boolean;
    /**
     * (Updatable) At least one numeric character required.
     */
    isNumericCharactersRequired: boolean;
    /**
     * (Updatable) At least one special character required.
     */
    isSpecialCharactersRequired: boolean;
    /**
     * (Updatable) At least one uppercase character required.
     */
    isUppercaseCharactersRequired: boolean;
    /**
     * (Updatable) User name is allowed to be part of the password.
     */
    isUsernameContainmentAllowed: boolean;
    /**
     * (Updatable) Minimum password length required.
     */
    minimumPasswordLength: number;
}

export interface IdentityNetworkSourceVirtualSourceList {
    ipRanges: string[];
    vcnId: string;
}

export interface IdentityTagValidator {
    /**
     * (Updatable) Specifies the type of validation: a static value (no validation) or a list.
     */
    validatorType: string;
    /**
     * (Updatable) The list of allowed values for a definedTag value.
     */
    values: string[];
}

export interface IdentityUserCapabilities {
    /**
     * Indicates if the user can use API keys.
     */
    canUseApiKeys: boolean;
    /**
     * Indicates if the user can use SWIFT passwords / auth tokens.
     */
    canUseAuthTokens: boolean;
    /**
     * Indicates if the user can log in to the console.
     */
    canUseConsolePassword: boolean;
    /**
     * Indicates if the user can use SigV4 symmetric keys.
     */
    canUseCustomerSecretKeys: boolean;
    /**
     * Indicates if the user can use OAuth2 credentials and tokens.
     */
    canUseOauth2clientCredentials: boolean;
    /**
     * Indicates if the user can use SMTP passwords.
     */
    canUseSmtpCredentials: boolean;
}

export interface IntegrationIntegrationInstanceAlternateCustomEndpoint {
    /**
     * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * (Updatable) A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface IntegrationIntegrationInstanceCustomEndpoint {
    /**
     * (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
     */
    certificateSecretId: string;
    /**
     * The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
     */
    certificateSecretVersion: number;
    /**
     * (Updatable) A custom hostname to be used for the integration instance URL, in FQDN format.
     */
    hostname: string;
}

export interface IntegrationIntegrationInstanceNetworkEndpointDetails {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedHttpIps: string[];
    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     */
    allowlistedHttpVcns: outputs.IntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn[];
    /**
     * The Integration service's VCN is allow-listed to allow integrations to call back into other integrations
     */
    isIntegrationVcnAllowlisted: boolean;
    /**
     * The type of network endpoint.
     */
    networkEndpointType: string;
}

export interface IntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn {
    /**
     * Source IP addresses or IP address ranges ingress rules.
     */
    allowlistedIps: string[];
    /**
     * The Virtual Cloud Network OCID.
     */
    id: string;
}

export interface KmsGeneratedKeyKeyShape {
    /**
     * The algorithm used by a key's key versions to encrypt or decrypt.
     */
    algorithm: string;
    /**
     * Supported curve IDs for ECDSA keys.
     */
    curveId: string;
    /**
     * The length of the key in bytes, expressed as an integer. Supported values include the following:
     * * AES: 16, 24, or 32
     * * RSA: 256, 384, or 512
     * * ECDSA: 32, 48, or 66
     */
    length: number;
}

export interface KmsKeyKeyShape {
    /**
     * The algorithm used by a key's key versions to encrypt or decrypt.
     */
    algorithm: string;
    /**
     * Supported curve IDs for ECDSA keys.
     */
    curveId: string;
    /**
     * The length of the key in bytes, expressed as an integer. Supported values include the following:
     * * AES: 16, 24, or 32
     * * RSA: 256, 384, or 512
     * * ECDSA: 32, 48, or 66
     */
    length: number;
}

export interface KmsKeyReplicaDetails {
    /**
     * ReplicationId associated with a key operation
     */
    replicationId: string;
}

export interface KmsKeyRestoreFromFile {
    /**
     * (Updatable) content length of key's backup binary file
     */
    contentLength: string;
    /**
     * (Updatable) content md5 hashed value of key's backup file
     */
    contentMd5?: string;
    /**
     * Key backup file content.
     */
    restoreKeyFromFileDetails: string;
}

export interface KmsKeyRestoreFromObjectStore {
    /**
     * (Updatable) Name of the bucket where key was backed up
     */
    bucket?: string;
    /**
     * (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
     */
    destination: string;
    /**
     * (Updatable) Namespace of the bucket where key was backed up
     */
    namespace?: string;
    /**
     * (Updatable) Object containing the backup
     */
    object?: string;
    /**
     * (Updatable) Pre-authenticated-request-uri of the backup
     */
    uri?: string;
}

export interface KmsKeyVersionReplicaDetails {
    /**
     * ReplicationId associated with a key version operation
     */
    replicationId: string;
}

export interface KmsVaultReplicaDetails {
    /**
     * ReplicationId associated with a vault operation
     */
    replicationId: string;
}

export interface KmsVaultRestoreFromFile {
    /**
     * content length of vault's backup binary file
     */
    contentLength: string;
    /**
     * (Updatable) content md5 hashed value of vault's backup file
     */
    contentMd5?: string;
    /**
     * Vault backup file content
     */
    restoreVaultFromFileDetails: string;
}

export interface KmsVaultRestoreFromObjectStore {
    /**
     * (Updatable) Name of the bucket where vault was backed up
     */
    bucket?: string;
    /**
     * (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
     */
    destination: string;
    /**
     * (Updatable) Namespace of the bucket where vault was backed up
     */
    namespace?: string;
    /**
     * (Updatable) Object containing the backup
     */
    object?: string;
    /**
     * (Updatable) Pre-authenticated-request-uri of the backup* `restoreTrigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     */
    uri?: string;
}

export interface LoadBalancerBackendSetBackend {
    /**
     * Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     */
    backup?: boolean;
    /**
     * Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    drain?: boolean;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * A friendly name for the backend set. It must be unique and it cannot be changed.
     */
    name: string;
    /**
     * Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    offline?: boolean;
    /**
     * (Updatable) The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
     */
    port: number;
    /**
     * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface LoadBalancerBackendSetHealthChecker {
    /**
     * (Updatable) The interval between health checks, in milliseconds.  Example: `10000`
     */
    intervalMs?: number;
    /**
     * (Updatable) The backend server port against which to run the health check. If the port is not specified, the load balancer uses the port information from the `Backend` object.  Example: `8080`
     */
    port?: number;
    /**
     * (Updatable) The protocol the health check must use; either HTTP or TCP.  Example: `HTTP`
     */
    protocol: string;
    /**
     * (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
     */
    responseBodyRegex: string;
    /**
     * (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state.  Example: `3`
     */
    retries?: number;
    /**
     * (Updatable) The status code a healthy backend server should return.  Example: `200`
     */
    returnCode: number;
    /**
     * (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period.  Example: `3000`
     */
    timeoutInMillis?: number;
    /**
     * (Updatable) The path against which to run the health check.  Example: `/healthcheck`
     */
    urlPath: string;
}

export interface LoadBalancerBackendSetLbCookieSessionPersistenceConfiguration {
    /**
     * (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
     */
    cookieName: string;
    /**
     * (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     */
    disableFallback: boolean;
    /**
     * (Updatable) The domain in which the cookie is valid. The `Set-cookie` header inserted by the load balancer contains a domain attribute with the specified value.
     */
    domain: string;
    /**
     * (Updatable) Whether the `Set-cookie` header should contain the `HttpOnly` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `HttpOnly` attribute, which limits the scope of the cookie to HTTP requests. This attribute directs the client or browser to omit the cookie when providing access to cookies through non-HTTP APIs. For example, it restricts the cookie from JavaScript channels.  Example: `true`
     */
    isHttpOnly: boolean;
    /**
     * (Updatable) Whether the `Set-cookie` header should contain the `Secure` attribute. If `true`, the `Set-cookie` header inserted by the load balancer contains the `Secure` attribute, which directs the client or browser to send the cookie only using a secure protocol.
     */
    isSecure: boolean;
    /**
     * (Updatable) The amount of time the cookie remains valid. The `Set-cookie` header inserted by the load balancer contains a `Max-Age` attribute with the specified value.
     */
    maxAgeInSeconds: number;
    /**
     * (Updatable) The path in which the cookie is valid. The `Set-cookie header` inserted by the load balancer contains a `Path` attribute with the specified value.
     */
    path: string;
}

export interface LoadBalancerBackendSetSessionPersistenceConfiguration {
    /**
     * (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify that any cookie set by the backend causes the session to persist.  Example: `exampleCookie`
     */
    cookieName: string;
    /**
     * (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     */
    disableFallback?: boolean;
}

export interface LoadBalancerBackendSetSslConfiguration {
    /**
     * (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
     */
    certificateName: string;
    /**
     * (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
     */
    cipherSuiteName: string;
    /**
     * (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
     */
    protocols: string[];
    /**
     * (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
     */
    serverOrderPreference: string;
    /**
     * (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
     */
    verifyDepth?: number;
    /**
     * (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
     */
    verifyPeerCertificate?: boolean;
}

export interface LoadBalancerIpAddressDetail {
    ipAddress: string;
    isPublic: boolean;
    reservedIp: outputs.LoadBalancerIpAddressDetailReservedIp;
}

export interface LoadBalancerIpAddressDetailReservedIp {
    id: string;
}

export interface LoadBalancerListenerConnectionConfiguration {
    /**
     * (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
     */
    backendTcpProxyProtocolVersion?: number;
    /**
     * (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
     */
    idleTimeoutInSeconds: string;
}

export interface LoadBalancerListenerSslConfiguration {
    /**
     * (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `exampleCertificateBundle`
     */
    certificateName: string;
    /**
     * (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
     */
    cipherSuiteName: string;
    /**
     * (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
     */
    protocols: string[];
    /**
     * (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
     */
    serverOrderPreference: string;
    /**
     * (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
     */
    verifyDepth?: number;
    /**
     * (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
     */
    verifyPeerCertificate?: boolean;
}

export interface LoadBalancerLoadBalancerIpAddressDetail {
    /**
     * An IP address.  Example: `192.168.0.3`
     */
    ipAddress: string;
    /**
     * Whether the IP address is public or private.
     */
    isPublic: boolean;
    /**
     * Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
     */
    reservedIp: outputs.LoadBalancerLoadBalancerIpAddressDetailReservedIp;
}

export interface LoadBalancerLoadBalancerIpAddressDetailReservedIp {
    /**
     * Ocid of the pre-created public IP. That should be attahed to this load balancer.
     */
    id: string;
}

export interface LoadBalancerLoadBalancerReservedIp {
    /**
     * Ocid of the pre-created public IP. That should be attahed to this load balancer.
     */
    id: string;
}

export interface LoadBalancerLoadBalancerRoutingPolicyRule {
    /**
     * (Updatable) A list of actions to be applied when conditions of the routing rule are met.
     */
    actions: outputs.LoadBalancerLoadBalancerRoutingPolicyRuleAction[];
    /**
     * (Updatable) A routing rule to evaluate defined conditions against the incoming HTTP request and perform an action.
     */
    condition: string;
    /**
     * (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface LoadBalancerLoadBalancerRoutingPolicyRuleAction {
    /**
     * (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
     */
    backendSetName: string;
    /**
     * (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
     */
    name: string;
}

export interface LoadBalancerLoadBalancerShapeDetails {
    /**
     * (Updatable) Bandwidth in Mbps that determines the maximum bandwidth (ingress plus egress) that the load balancer can achieve. This bandwidth cannot be always guaranteed. For a guaranteed bandwidth use the minimumBandwidthInMbps parameter.
     */
    maximumBandwidthInMbps: number;
    /**
     * (Updatable) Bandwidth in Mbps that determines the total pre-provisioned bandwidth (ingress plus egress). The values must be between 10 and the maximumBandwidthInMbps.  Example: `150`
     */
    minimumBandwidthInMbps: number;
}

export interface LoadBalancerPathRouteSetPathRoute {
    /**
     * (Updatable) The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
     */
    backendSetName: string;
    /**
     * (Updatable) The path string to match against the incoming URI path.
     * *  Path strings are case-insensitive.
     * *  Asterisk (*) wildcards are not supported.
     * *  Regular expressions are not supported.
     */
    path: string;
    /**
     * (Updatable) The type of matching to apply to incoming URIs.
     */
    pathMatchType: outputs.LoadBalancerPathRouteSetPathRoutePathMatchType;
}

export interface LoadBalancerPathRouteSetPathRoutePathMatchType {
    /**
     * (Updatable) Specifies how the load balancing service compares a [PathRoute](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/requests/PathRoute) object's `path` string against the incoming URI.
     * *  **EXACT_MATCH** - Looks for a `path` string that exactly matches the incoming URI path.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - Looks for the `path` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - Looks for a `path` string that matches the beginning portion of the incoming URI path.
     * *  **SUFFIX_MATCH** - Looks for a `path` string that matches the ending portion of the incoming URI path.
     */
    matchType: string;
}

export interface LoadBalancerReservedIp {
    id: string;
}

export interface LoadBalancerRuleSetItem {
    /**
     * (Updatable) The action can be one of these values: `ADD_HTTP_REQUEST_HEADER`, `ADD_HTTP_RESPONSE_HEADER`, `ALLOW`, `CONTROL_ACCESS_USING_HTTP_METHODS`, `EXTEND_HTTP_REQUEST_HEADER_VALUE`, `EXTEND_HTTP_RESPONSE_HEADER_VALUE`, `HTTP_HEADER`, `REDIRECT`, `REMOVE_HTTP_REQUEST_HEADER`, `REMOVE_HTTP_RESPONSE_HEADER`
     */
    action: string;
    /**
     * (Updatable) The list of HTTP methods allowed for this listener.
     */
    allowedMethods: string[];
    /**
     * (Updatable) Indicates whether or not invalid characters in client header fields will be allowed. Valid names are composed of English letters, digits, hyphens and underscores. If "true", invalid characters are allowed in the HTTP header. If "false", invalid characters are not allowed in the HTTP header
     */
    areInvalidCharactersAllowed: boolean;
    /**
     * (Updatable)
     */
    conditions: outputs.LoadBalancerRuleSetItemCondition[];
    /**
     * (Updatable) A brief description of the access control rule. Avoid entering confidential information.
     */
    description: string;
    /**
     * (Updatable) A header name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * (Updatable) The maximum size of each buffer used for reading http client request header. This value indicates the maximum size allowed for each buffer. The allowed values for buffer size are 8, 16, 32 and 64.
     */
    httpLargeHeaderSizeInKb: number;
    /**
     * (Updatable) A string to prepend to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    prefix: string;
    /**
     * (Updatable) An object that defines the redirect URI applied to the original request. The object property values compose the redirect URI.
     */
    redirectUri: outputs.LoadBalancerRuleSetItemRedirectUri;
    /**
     * (Updatable) The HTTP status code to return when the incoming request is redirected.
     */
    responseCode: number;
    /**
     * (Updatable) The HTTP status code to return when the requested HTTP method is not in the list of allowed methods. The associated status line returned with the code is mapped from the standard HTTP specification. The default value is `405 (Method Not Allowed)`.  Example: 403
     */
    statusCode: number;
    /**
     * (Updatable) A string to append to the header value. The resulting header value must still conform to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    suffix: string;
    /**
     * (Updatable) A header value that conforms to RFC 7230. With the following exceptions:
     * *  value cannot contain `$`
     * *  value cannot contain patterns like `{variable_name}`. They are reserved for future extensions. Currently, such values are invalid.
     */
    value: string;
}

export interface LoadBalancerRuleSetItemCondition {
    /**
     * (Updatable) The attributeName can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     */
    attributeName: string;
    /**
     * (Updatable) Depends on `attributeName`:
     * - when `attributeName` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
     * - when `attributeName` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
     */
    attributeValue: string;
    /**
     * (Updatable) A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     */
    operator: string;
}

export interface LoadBalancerRuleSetItemRedirectUri {
    /**
     * (Updatable) The valid domain name (hostname) or IP address to use in the redirect URI.
     */
    host: string;
    /**
     * (Updatable) The HTTP URI path to use in the redirect URI.
     */
    path: string;
    /**
     * (Updatable) The communication port to use in the redirect URI.
     */
    port: number;
    /**
     * (Updatable) The HTTP protocol to use in the redirect URI.
     */
    protocol: string;
    /**
     * (Updatable) The query string to use in the redirect URI.
     */
    query: string;
}

export interface LoadBalancerShapeDetails {
    maximumBandwidthInMbps: number;
    minimumBandwidthInMbps: number;
}

export interface LogAnalyticsLogAnalyticsObjectCollectionRuleOverride {
    matchType: string;
    matchValue: string;
    propertyName: string;
    propertyValue: string;
}

export interface LoggingLogConfiguration {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    compartmentId: string;
    /**
     * The source the log object comes from.
     */
    source: outputs.LoggingLogConfigurationSource;
}

export interface LoggingLogConfigurationSource {
    /**
     * Log object category.
     */
    category: string;
    /**
     * The unique identifier of the resource emitting the log.
     */
    resource: string;
    /**
     * Service generating log.
     */
    service: string;
    /**
     * The log source.
     * * **OCISERVICE:** Oracle Service.
     */
    sourceType: string;
}

export interface LoggingUnifiedAgentConfigurationGroupAssociation {
    /**
     * (Updatable) list of group/dynamic group ids associated with this configuration.
     */
    groupLists: string[];
}

export interface LoggingUnifiedAgentConfigurationServiceConfiguration {
    /**
     * (Updatable) Type of Unified Agent service configuration.
     */
    configurationType: string;
    /**
     * (Updatable) Logging destination object.
     */
    destination: outputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestination;
    /**
     * (Updatable)
     */
    sources: outputs.LoggingUnifiedAgentConfigurationServiceConfigurationSource[];
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestination {
    /**
     * (Updatable) The OCID of the resource.
     */
    logObjectId: string;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSource {
    /**
     * (Updatable)
     */
    channels: string[];
    /**
     * (Updatable) The name key to tag this grok pattern.
     */
    name: string;
    /**
     * (Updatable) source parser object.
     */
    parser: outputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParser;
    /**
     * (Updatable)
     */
    paths: string[];
    /**
     * (Updatable) Unified schema logging source type.
     */
    sourceType: string;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParser {
    /**
     * (Updatable)
     */
    delimiter: string;
    /**
     * (Updatable)
     */
    expression: string;
    /**
     * (Updatable) Specify the time field for the event time. If the event doesn't have this field, the current time is used.
     */
    fieldTimeKey: string;
    /**
     * (Updatable)
     */
    formatFirstline: string;
    /**
     * (Updatable)
     */
    formats: string[];
    /**
     * (Updatable)
     */
    grokFailureKey: string;
    /**
     * (Updatable)
     */
    grokNameKey: string;
    /**
     * (Updatable) If true, use Fluent::EventTime.now(current time) as a timestamp when timeKey is specified.
     */
    isEstimateCurrentEvent: boolean;
    /**
     * (Updatable) If true, keep time field in the record.
     */
    isKeepTimeKey: boolean;
    /**
     * (Updatable) If true, an empty string field is replaced with nil.
     */
    isNullEmptyString: boolean;
    /**
     * (Updatable)
     */
    isSupportColonlessIdent: boolean;
    /**
     * (Updatable)
     */
    isWithPriority: boolean;
    /**
     * (Updatable)
     */
    keys: string[];
    /**
     * (Updatable)
     */
    messageFormat: string;
    /**
     * (Updatable)
     */
    messageKey: string;
    /**
     * (Updatable)
     */
    multiLineStartRegexp: string;
    /**
     * (Updatable) Specify the null value pattern.
     */
    nullValuePattern: string;
    /**
     * (Updatable) Type of fluent parser.
     */
    parserType: string;
    /**
     * (Updatable)
     */
    patterns: outputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern[];
    /**
     * (Updatable)
     */
    rfc5424timeFormat: string;
    /**
     * (Updatable)
     */
    syslogParserType: string;
    /**
     * (Updatable)
     */
    timeFormat: string;
    /**
     * (Updatable)
     */
    timeType: string;
    /**
     * (Updatable) Specify the timeout for parse processing. This is mainly for detecting an incorrect regexp pattern.
     */
    timeoutInMilliseconds: number;
    /**
     * (Updatable) Specify types for converting a field into another type.
     */
    types: {[key: string]: any};
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
    /**
     * (Updatable) Process value using the specified format. This is available only when timeType is a string.
     */
    fieldTimeFormat: string;
    /**
     * (Updatable) Specify the time field for the event time. If the event doesn't have this field, the current time is used.
     */
    fieldTimeKey: string;
    /**
     * (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     */
    fieldTimeZone: string;
    /**
     * (Updatable) The name key to tag this grok pattern.
     */
    name: string;
    /**
     * (Updatable) The grok pattern.
     */
    pattern: string;
}

export interface ManagementAgentManagementAgentPluginList {
    /**
     * Management Agent Plugin Identifier, can be renamed
     */
    pluginDisplayName: string;
    /**
     * Plugin Id
     */
    pluginId: string;
    /**
     * Management Agent Plugin Name
     */
    pluginName: string;
    /**
     * Plugin Version
     */
    pluginVersion: string;
}

export interface MarketplacePublicationIcon {
    /**
     * The content URL of the upload data.
     */
    contentUrl: string;
    /**
     * The file extension of the upload data.
     */
    fileExtension: string;
    /**
     * The MIME type of the upload data.
     */
    mimeType: string;
    /**
     * (Updatable) The name of the contact.
     */
    name: string;
}

export interface MarketplacePublicationPackageDetails {
    /**
     * End User License Agreeement that a consumer of this listing has to accept
     */
    eulas: outputs.MarketplacePublicationPackageDetailsEula[];
    /**
     * base image id of the listing
     */
    imageId: string;
    /**
     * OS used by the listing.
     */
    operatingSystem: outputs.MarketplacePublicationPackageDetailsOperatingSystem;
    /**
     * Type of the artifact of the listing
     */
    packageType: string;
    /**
     * The version of the package
     */
    packageVersion: string;
}

export interface MarketplacePublicationPackageDetailsEula {
    /**
     * the specified eula's type
     */
    eulaType: string;
    /**
     * text of the eula
     */
    licenseText: string;
}

export interface MarketplacePublicationPackageDetailsOperatingSystem {
    /**
     * (Updatable) The name of the contact.
     */
    name: string;
}

export interface MarketplacePublicationSupportContact {
    /**
     * (Updatable) The email of the contact.
     */
    email: string;
    /**
     * (Updatable) The name of the contact.
     */
    name: string;
    /**
     * (Updatable) The phone number of the contact.
     */
    phone: string;
    /**
     * (Updatable) The email subject line to use when contacting support.
     */
    subject: string;
}

export interface MarketplacePublicationSupportedOperatingSystem {
    /**
     * (Updatable) The name of the contact.
     */
    name: string;
}

export interface MeteringComputationCustomTableSavedCustomTable {
    /**
     * (Updatable) The column groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    columnGroupBies: string[];
    /**
     * (Updatable) The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * (Updatable) The name of the custom table.
     */
    displayName: string;
    /**
     * (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only one tag in the list is supported. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.MeteringComputationCustomTableSavedCustomTableGroupByTag[];
    /**
     * (Updatable) The row groupBy key list. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    rowGroupBies: string[];
    /**
     * (Updatable) The version of the custom table.
     */
    version: number;
}

export interface MeteringComputationCustomTableSavedCustomTableGroupByTag {
    /**
     * (Updatable) The tag key.
     */
    key: string;
    /**
     * (Updatable) The tag namespace.
     */
    namespace: string;
    /**
     * (Updatable) The tag value.
     */
    value: string;
}

export interface MeteringComputationQueryQueryDefinition {
    /**
     * (Updatable) The common fields for Cost Analysis UI rendering.
     */
    costAnalysisUi: outputs.MeteringComputationQueryQueryDefinitionCostAnalysisUi;
    /**
     * (Updatable) The query display name. Avoid entering confidential information.
     */
    displayName: string;
    /**
     * (Updatable) The request of the generated Cost Analysis report.
     */
    reportQuery: outputs.MeteringComputationQueryQueryDefinitionReportQuery;
    /**
     * (Updatable) The saved query version.
     */
    version: number;
}

export interface MeteringComputationQueryQueryDefinitionCostAnalysisUi {
    /**
     * (Updatable) The graph type.
     */
    graph: string;
    /**
     * (Updatable) A cumulative graph.
     */
    isCumulativeGraph: boolean;
}

export interface MeteringComputationQueryQueryDefinitionReportQuery {
    /**
     * (Updatable) The compartment depth level.
     */
    compartmentDepth: number;
    /**
     * (Updatable) The UI date range, for example, LAST_THREE_MONTHS. Conflicts with timeUsageStarted and timeUsageEnded.
     */
    dateRangeName: string;
    /**
     * (Updatable)
     */
    filter: string;
    /**
     * (Updatable) Forecast configuration of usage/cost.
     */
    forecast: outputs.MeteringComputationQueryQueryDefinitionReportQueryForecast;
    /**
     * (Updatable) The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
     */
    granularity: string;
    /**
     * (Updatable) Aggregate the result by. example: `["tagNamespace", "tagKey", "tagValue", "service", "skuName", "skuPartNumber", "unit", "compartmentName", "compartmentPath", "compartmentId", "platform", "region", "logicalAd", "resourceId", "tenantId", "tenantName"]`
     */
    groupBies: string[];
    /**
     * (Updatable) GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{"namespace":"oracle", "key":"createdBy"]`
     */
    groupByTags: outputs.MeteringComputationQueryQueryDefinitionReportQueryGroupByTag[];
    /**
     * (Updatable) Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
     */
    isAggregateByTime: boolean;
    /**
     * (Updatable) The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data AllCredit - Query the credit adjustments and expired credit
     */
    queryType: string;
    /**
     * (Updatable) Tenant ID.
     */
    tenantId: string;
    /**
     * (Updatable) The usage end time.
     */
    timeUsageEnded: string;
    /**
     * (Updatable) The usage start time.
     */
    timeUsageStarted: string;
}

export interface MeteringComputationQueryQueryDefinitionReportQueryForecast {
    /**
     * (Updatable) BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     */
    forecastType: string;
    /**
     * (Updatable) The forecast end time.
     */
    timeForecastEnded: string;
    /**
     * (Updatable) The forecast start time. Defaults to UTC-1 if not specified.
     */
    timeForecastStarted: string;
}

export interface MeteringComputationQueryQueryDefinitionReportQueryGroupByTag {
    /**
     * (Updatable) The tag key.
     */
    key: string;
    /**
     * (Updatable) The tag namespace.
     */
    namespace: string;
    /**
     * (Updatable) The tag value.
     */
    value: string;
}

export interface MeteringComputationUsageForecast {
    /**
     * BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     */
    forecastType: string;
    /**
     * The forecast end time.
     */
    timeForecastEnded: string;
    /**
     * The forecast start time. Defaults to UTC-1 if not specified.
     */
    timeForecastStarted: string;
}

export interface MeteringComputationUsageGroupByTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface MeteringComputationUsageItem {
    /**
     * The availability domain of the usage.
     */
    ad: string;
    /**
     * The compartment OCID.
     */
    compartmentId: string;
    /**
     * The compartment name.
     */
    compartmentName: string;
    /**
     * The compartment path, starting from root.
     */
    compartmentPath: string;
    /**
     * The computed cost.
     */
    computedAmount: number;
    /**
     * The usage number.
     */
    computedQuantity: number;
    /**
     * The price currency.
     */
    currency: string;
    /**
     * The discretionary discount applied to the SKU.
     */
    discount: number;
    /**
     * The forecasted data.
     */
    isForecast: boolean;
    /**
     * The SKU list rate (not discount).
     */
    listRate: number;
    /**
     * The overage usage.
     */
    overage: string;
    /**
     * The SPM OverageFlag.
     */
    overagesFlag: string;
    /**
     * Platform for the cost.
     */
    platform: string;
    /**
     * The region of the usage.
     */
    region: string;
    /**
     * The resource OCID that is incurring the cost.
     */
    resourceId: string;
    /**
     * The resource name that is incurring the cost.
     */
    resourceName: string;
    /**
     * The service name that is incurring the cost.
     */
    service: string;
    /**
     * The resource shape.
     */
    shape: string;
    /**
     * The SKU friendly name.
     */
    skuName: string;
    /**
     * The SKU part number.
     */
    skuPartNumber: string;
    /**
     * The subscription ID.
     */
    subscriptionId: string;
    /**
     * For grouping, a tag definition. For filtering, a definition and key.
     */
    tags: outputs.MeteringComputationUsageItemTag[];
    /**
     * Tenant ID.
     */
    tenantId: string;
    /**
     * The tenancy name.
     */
    tenantName: string;
    /**
     * The usage end time.
     */
    timeUsageEnded: string;
    /**
     * The usage start time.
     */
    timeUsageStarted: string;
    /**
     * The usage unit.
     */
    unit: string;
    /**
     * The price per unit.
     */
    unitPrice: number;
    /**
     * The resource size being metered.
     */
    weight: number;
}

export interface MeteringComputationUsageItemTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag namespace.
     */
    namespace: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface MonitoringAlarmSuppression {
    /**
     * (Updatable) Human-readable reason for suppressing alarm notifications. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description: string;
    /**
     * (Updatable) The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     */
    timeSuppressFrom: string;
    /**
     * (Updatable) The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.  Example: `2019-02-01T02:02:29.600Z`
     */
    timeSuppressUntil: string;
}

export interface MysqlAnalyticsClusterClusterNode {
    /**
     * The ID of the node within MySQL Analytics Cluster.
     */
    nodeId: string;
    /**
     * (Updatable) The target state for the Analytics Cluster. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state: string;
    /**
     * The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
}

export interface MysqlChannelSource {
    /**
     * (Updatable) The network address of the MySQL instance.
     */
    hostname: string;
    /**
     * (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     */
    password: string;
    /**
     * (Updatable) The port the source MySQL instance listens on.
     */
    port: number;
    /**
     * (Updatable) The specific source identifier.
     */
    sourceType: string;
    /**
     * (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.MysqlChannelSourceSslCaCertificate;
    /**
     * (Updatable) The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface MysqlChannelSourceSslCaCertificate {
    /**
     * (Updatable) The type of CA certificate.
     */
    certificateType: string;
    /**
     * (Updatable) The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface MysqlChannelTarget {
    /**
     * (Updatable) The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * (Updatable) The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The OCID of the target DB System.
     */
    dbSystemId: string;
    /**
     * (Updatable) The specific target identifier.
     */
    targetType: string;
}

export interface MysqlHeatWaveClusterClusterNode {
    /**
     * The ID of the node within MySQL HeatWave cluster.
     */
    nodeId: string;
    /**
     * (Updatable) The target state for the HeatWave cluster. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state: string;
    /**
     * The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated: string;
    /**
     * The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated: string;
}

export interface MysqlMysqlBackupDbSystemSnapshot {
    /**
     * The username for the administrative user.
     */
    adminUsername: string;
    /**
     * The Availability Domain where the primary DB System should be located.
     */
    availabilityDomain: string;
    /**
     * The Backup policy for the DB System.
     */
    backupPolicy: outputs.MysqlMysqlBackupDbSystemSnapshotBackupPolicy;
    /**
     * (Updatable) The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the Configuration to be used for Instances in this DB System.
     */
    configurationId: string;
    /**
     * Initial size of the data volume in GiBs that will be created and attached.
     */
    dataStorageSizeInGb: number;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) A user-supplied description for the backup.
     */
    description: string;
    /**
     * (Updatable) A user-supplied display name for the backup.
     */
    displayName: string;
    /**
     * The network endpoints available for this DB System.
     */
    endpoints: outputs.MysqlMysqlBackupDbSystemSnapshotEndpoint[];
    /**
     * The name of the Fault Domain the DB System is located in.
     */
    faultDomain: string;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The hostname for the primary endpoint of the DB System. Used for DNS. The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com"). Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel: string;
    /**
     * OCID of the backup itself
     */
    id: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * If the policy is to enable high availability of the instance, by maintaining secondary/failover capacity as necessary.
     */
    isHighlyAvailable: boolean;
    /**
     * The Maintenance Policy for the DB System.
     */
    maintenance: outputs.MysqlMysqlBackupDbSystemSnapshotMaintenance;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    mysqlVersion: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The shape of the DB System instance used for backup.
     */
    shapeName: string;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId: string;
}

export interface MysqlMysqlBackupDbSystemSnapshotBackupPolicy {
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * If automated backups are enabled or disabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Number of days to retain this backup.
     */
    retentionInDays: number;
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface MysqlMysqlBackupDbSystemSnapshotEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. This will be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The network port on which X Plugin listens for TCP/IP connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface MysqlMysqlBackupDbSystemSnapshotMaintenance {
    /**
     * The start time of the maintenance window.
     */
    windowStartTime: string;
}

export interface MysqlMysqlDbSystemAnalyticsCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The name of the shape. The shape determines the resources allocated
     * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface MysqlMysqlDbSystemBackupPolicy {
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * (Updatable) Specifies if automatic backups are enabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Number of days to retain an automatic backup.
     */
    retentionInDays: number;
    /**
     * (Updatable) The start of the 2 hour maintenance window.
     */
    windowStartTime: string;
}

export interface MysqlMysqlDbSystemChannel {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags: {[key: string]: any};
    /**
     * (Updatable) The user-friendly name for the DB System. It does not have to be unique.
     */
    displayName: string;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags: {[key: string]: any};
    /**
     * The OCID of the DB System.
     */
    id: string;
    /**
     * (Updatable) Specifies if automatic backups are enabled.
     */
    isEnabled: boolean;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails: string;
    /**
     * Parameters detailing how to provision the initial data of the system.
     */
    source: outputs.MysqlMysqlDbSystemChannelSource;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state: string;
    /**
     * Details about the Channel target.
     */
    target: outputs.MysqlMysqlDbSystemChannelTarget;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface MysqlMysqlDbSystemChannelSource {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     */
    sourceType: string;
    /**
     * The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     */
    sslCaCertificate: outputs.MysqlMysqlDbSystemChannelSourceSslCaCertificate;
    /**
     * The SSL mode of the Channel.
     */
    sslMode: string;
    /**
     * The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     */
    username: string;
}

export interface MysqlMysqlDbSystemChannelSourceSslCaCertificate {
    /**
     * The type of CA certificate.
     */
    certificateType: string;
    /**
     * The string containing the CA certificate in PEM format.
     */
    contents: string;
}

export interface MysqlMysqlDbSystemChannelTarget {
    /**
     * The username for the replication applier of the target MySQL DB System.
     */
    applierUsername: string;
    /**
     * The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     */
    channelName: string;
    /**
     * The OCID of the source DB System.
     */
    dbSystemId: string;
    /**
     * The specific target identifier.
     */
    targetType: string;
}

export interface MysqlMysqlDbSystemCurrentPlacement {
    /**
     * The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     */
    availabilityDomain: string;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     */
    faultDomain: string;
}

export interface MysqlMysqlDbSystemEndpoint {
    /**
     * The network address of the DB System.
     */
    hostname: string;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
     */
    ipAddress: string;
    /**
     * The access modes from the client that this endpoint supports.
     */
    modes: string[];
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port: number;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    portX: number;
    /**
     * The state of the endpoints, as far as it can seen from the DB System. There may be some inconsistency with the actual state of the MySQL service.
     */
    status: string;
    /**
     * Additional information about the current endpoint status.
     */
    statusDetails: string;
}

export interface MysqlMysqlDbSystemHeatWaveCluster {
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    clusterSize: number;
    /**
     * The name of the shape. The shape determines the resources allocated
     * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     */
    shapeName: string;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state: string;
    /**
     * The date and time the DB System was created.
     */
    timeCreated: string;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated: string;
}

export interface MysqlMysqlDbSystemMaintenance {
    /**
     * (Updatable) The start of the 2 hour maintenance window.
     */
    windowStartTime: string;
}

export interface MysqlMysqlDbSystemSource {
    /**
     * The OCID of the backup to be used as the source for the new DB System.
     */
    backupId: string;
    /**
     * The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     */
    sourceType: string;
}

export interface NetworkLoadBalancerBackendSetBackend {
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress: string;
    /**
     * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup: boolean;
    /**
     * Whether the network load balancer should drain this server. Servers marked "isDrain" receive no  incoming traffic.  Example: `false`
     */
    isDrain: boolean;
    /**
     * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline: boolean;
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    name: string;
    /**
     * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId: string;
    /**
     * The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about load balancing policies, see [How Network Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3`
     */
    weight: number;
}

export interface NetworkLoadBalancerBackendSetHealthChecker {
    /**
     * (Updatable) The interval between health checks, in milliseconds. The default value is 10000 (10 seconds).  Example: `10000`
     */
    intervalInMillis: number;
    /**
     * (Updatable) The backend server port against which to run the health check. If the port is not specified, then the network load balancer uses the port information from the `Backend` object. The port must be specified if the backend port is 0.  Example: `8080`
     */
    port: number;
    /**
     * (Updatable) The protocol the health check must use; either HTTP or HTTPS, or UDP or TCP.  Example: `HTTP`
     */
    protocol: string;
    /**
     * (Updatable) Base64 encoded pattern to be sent as UDP or TCP health check probe.
     */
    requestData: string;
    /**
     * (Updatable) A regular expression for parsing the response body from the backend server.  Example: `^((?!false).|\s)*$`
     */
    responseBodyRegex: string;
    /**
     * (Updatable) Base64 encoded pattern to be validated as UDP or TCP health check probe response.
     */
    responseData: string;
    /**
     * (Updatable) The number of retries to attempt before a backend server is considered "unhealthy". This number also applies when recovering a server to the "healthy" state. The default value is 3.  Example: `3`
     */
    retries: number;
    /**
     * (Updatable) The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol, then you can use common HTTP status codes such as "200".  Example: `200`
     */
    returnCode: number;
    /**
     * (Updatable) The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply returns within this timeout period. The default value is 3000 (3 seconds).  Example: `3000`
     */
    timeoutInMillis: number;
    /**
     * (Updatable) The path against which to run the health check.  Example: `/healthcheck`
     */
    urlPath: string;
}

export interface NetworkLoadBalancerNetworkLoadBalancerIpAddress {
    /**
     * An IP address.  Example: `192.168.0.3`
     */
    ipAddress: string;
    /**
     * Whether the IP address is public or private.
     */
    isPublic: boolean;
    /**
     * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
     */
    reservedIp: outputs.NetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp;
}

export interface NetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface NetworkLoadBalancerNetworkLoadBalancerReservedIp {
    /**
     * OCID of the reserved public IP address created with the virtual cloud network.
     */
    id: string;
}

export interface NosqlIndexKey {
    /**
     * The name of a column to be included as an index key.
     */
    columnName: string;
    /**
     * If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     */
    jsonFieldType: string;
    /**
     * If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     */
    jsonPath: string;
}

export interface NosqlTableSchema {
    /**
     * The columns of a table.
     */
    columns: outputs.NosqlTableSchemaColumn[];
    /**
     * A list of column names that make up a key.
     */
    primaryKeys: string[];
    /**
     * A list of column names that make up a key.
     */
    shardKeys: string[];
    /**
     * The default Time-to-Live for the table, in days.
     */
    ttl: number;
}

export interface NosqlTableSchemaColumn {
    /**
     * The column default value.
     */
    defaultValue: string;
    /**
     * The column nullable flag.
     */
    isNullable: boolean;
    /**
     * Table name.
     */
    name: string;
    /**
     * The column type.
     */
    type: string;
}

export interface NosqlTableTableLimits {
    /**
     * (Updatable) Maximum sustained read throughput limit for the table.
     */
    maxReadUnits: number;
    /**
     * (Updatable) Maximum size of storage used by the table.
     */
    maxStorageInGbs: number;
    /**
     * (Updatable) Maximum sustained write throughput limit for the table.
     */
    maxWriteUnits: number;
}

export interface ObjectstorageBucketRetentionRule {
    /**
     * A user-specified name for the retention rule. Names can be helpful in identifying retention rules. The name should be unique. This attribute is a forcenew attribute
     */
    displayName: string;
    /**
     * (Updatable)
     */
    duration?: outputs.ObjectstorageBucketRetentionRuleDuration;
    /**
     * Unique identifier for the retention rule.
     */
    retentionRuleId: string;
    /**
     * The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     */
    timeCreated: string;
    /**
     * The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeModified: string;
    /**
     * (Updatable) The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule is locked and can only be deleted by deleting the bucket. Once a rule is locked, only increases in the duration are allowed and no other properties can be changed. This property cannot be updated for rules that are in a locked state. Specifying it when a duration is not specified is considered an error.
     */
    timeRuleLocked?: string;
}

export interface ObjectstorageBucketRetentionRuleDuration {
    /**
     * (Updatable) The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified timestamp.
     */
    timeAmount: string;
    /**
     * (Updatable) The unit that should be used to interpret timeAmount.
     */
    timeUnit: string;
}

export interface ObjectstorageObjectLifecyclePolicyRule {
    /**
     * (Updatable) The action of the object lifecycle policy rule. Rules using the action 'ARCHIVE' move objects from Standard and InfrequentAccess storage tiers into the [Archive storage tier](https://docs.cloud.oracle.com/iaas/Content/Archive/Concepts/archivestorageoverview.htm). Rules using the action 'INFREQUENT_ACCESS' move objects from Standard storage tier into the Infrequent Access Storage tier. Objects that are already in InfrequentAccess tier or in Archive tier are left untouched. Rules using the action 'DELETE' permanently delete objects from buckets. Rules using 'ABORT' abort the uncommitted multipart-uploads and permanently delete their parts from buckets.
     */
    action: string;
    /**
     * (Updatable) A Boolean that determines whether this rule is currently enabled.
     */
    isEnabled: boolean;
    /**
     * (Updatable) The name of the lifecycle rule to be applied.
     */
    name: string;
    /**
     * (Updatable) A filter that compares object names to a set of prefixes or patterns to determine if a rule applies to a given object. The filter can contain include glob patterns, exclude glob patterns and inclusion prefixes. The inclusion prefixes property is kept for backward compatibility. It is recommended to use inclusion patterns instead of prefixes. Exclusions take precedence over inclusions.
     */
    objectNameFilter: outputs.ObjectstorageObjectLifecyclePolicyRuleObjectNameFilter;
    /**
     * (Updatable) The target of the object lifecycle policy rule. The values of target can be either "objects", "multipart-uploads" or "previous-object-versions". This field when declared as "objects" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for objects. This field when declared as "previous-object-versions" is used to specify ARCHIVE, INFREQUENT_ACCESS or DELETE rule for previous versions of existing objects. This field when declared as "multipart-uploads" is used to specify the ABORT (only) rule for uncommitted multipart-uploads.
     */
    target?: string;
    /**
     * (Updatable) Specifies the age of objects to apply the rule to. The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation to each object's Last-Modified time.
     */
    timeAmount: string;
    /**
     * (Updatable) The unit that should be used to interpret timeAmount.  Days are defined as starting and ending at midnight UTC. Years are defined as 365.2425 days long and likewise round up to the next midnight UTC.
     */
    timeUnit: string;
}

export interface ObjectstorageObjectLifecyclePolicyRuleObjectNameFilter {
    /**
     * (Updatable) An array of glob patterns to match the object names to exclude. An empty array is ignored. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
     */
    exclusionPatterns: string[];
    /**
     * (Updatable) An array of glob patterns to match the object names to include. An empty array includes all objects in the bucket. Exclusion patterns take precedence over inclusion patterns. A Glob pattern is a sequence of characters to match text. Any character that appears in the pattern, other than the special pattern characters described below, matches itself. Glob patterns must be between 1 and 1024 characters.
     */
    inclusionPatterns: string[];
    /**
     * (Updatable) An array of object name prefixes that the rule will apply to. An empty array means to include all objects.
     */
    inclusionPrefixes: string[];
}

export interface ObjectstorageObjectSourceUriDetails {
    /**
     * The name of the bucket for the source object.
     */
    bucket: string;
    /**
     * The entity tag to match the target object.
     */
    destinationObjectIfMatchEtag?: string;
    /**
     * The entity tag to not match the target object.
     */
    destinationObjectIfNoneMatchEtag?: string;
    /**
     * The top-level namespace of the source object.
     */
    namespace: string;
    /**
     * The name of the source object.
     */
    object: string;
    /**
     * The region of the source object.
     */
    region: string;
    /**
     * The entity tag to match the source object.
     */
    sourceObjectIfMatchEtag?: string;
    /**
     * The version id of the object to be restored.
     */
    sourceVersionId?: string;
}

export interface OcvpSddcHcxOnPremLicense {
    /**
     * HCX on-premise license key value
     */
    activationKey: string;
    /**
     * status of HCX on-premise license
     */
    status: string;
    /**
     * Name of the system that consumed the HCX on-premise license
     */
    systemName: string;
}

export interface OptimizerProfileLevelsConfiguration {
    /**
     * (Updatable) The list of target tags attached to the current profile override.
     */
    items: outputs.OptimizerProfileLevelsConfigurationItem[];
}

export interface OptimizerProfileLevelsConfigurationItem {
    /**
     * (Updatable) The pre-defined profile level.
     */
    level: string;
    /**
     * (Updatable) The unique OCID of the recommendation.
     */
    recommendationId: string;
}

export interface OptimizerProfileTargetCompartments {
    /**
     * (Updatable) The list of target tags attached to the current profile override.
     */
    items: string[];
}

export interface OptimizerProfileTargetTags {
    /**
     * (Updatable) The list of target tags attached to the current profile override.
     */
    items: outputs.OptimizerProfileTargetTagsItem[];
}

export interface OptimizerProfileTargetTagsItem {
    /**
     * (Updatable) The name of the tag definition.
     */
    tagDefinitionName: string;
    /**
     * (Updatable) The name of the tag namespace.
     */
    tagNamespaceName: string;
    /**
     * (Updatable) The tag value type.
     */
    tagValueType: string;
    /**
     * (Updatable) The list of tag values.
     */
    tagValues: string[];
}

export interface OptimizerRecommendationResourceCount {
    /**
     * The count of resources.
     */
    count: number;
    /**
     * (Updatable) The status of the recommendation.
     */
    status: string;
}

export interface OptimizerRecommendationSupportedLevels {
    /**
     * The list of supported levels.
     */
    items: outputs.OptimizerRecommendationSupportedLevelsItem[];
}

export interface OptimizerRecommendationSupportedLevelsItem {
    /**
     * The name of the profile level.
     */
    name: string;
}

export interface OptimizerResourceActionAction {
    /**
     * Text describing the recommended action.
     */
    description: string;
    /**
     * The status of the resource action.
     */
    type: string;
    /**
     * The URL path to documentation that explains how to perform the action.
     */
    url: string;
}

export interface OsmanagementManagedInstanceGroupManagedInstance {
    /**
     * (Updatable) Managed Instance Group identifier
     */
    displayName: string;
    /**
     * unique identifier that is immutable on creation
     */
    id: string;
}

export interface OsmanagementManagedInstanceManagementChildSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface OsmanagementManagedInstanceManagementManagedInstanceGroup {
    /**
     * User friendly name
     */
    displayName: string;
    /**
     * software source identifier
     */
    id: string;
}

export interface OsmanagementManagedInstanceManagementParentSoftwareSource {
    /**
     * software source identifier
     */
    id: string;
    /**
     * software source name
     */
    name: string;
}

export interface OsmanagementSoftwareSourceAssociatedManagedInstance {
    /**
     * (Updatable) User friendly name for the software source
     */
    displayName: string;
    /**
     * OCID for the Software Source
     */
    id: string;
}

export interface SchServiceConnectorSource {
    /**
     * (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     */
    cursor: outputs.SchServiceConnectorSourceCursor;
    /**
     * (Updatable) The type descriminator.
     */
    kind: string;
    /**
     * (Updatable) The resources affected by this work request.
     */
    logSources: outputs.SchServiceConnectorSourceLogSource[];
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
}

export interface SchServiceConnectorSourceCursor {
    /**
     * (Updatable) The type descriminator.
     */
    kind: string;
}

export interface SchServiceConnectorSourceLogSource {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
     */
    logId: string;
}

export interface SchServiceConnectorTarget {
    /**
     * (Updatable) The batch rollover size in megabytes.
     */
    batchRolloverSizeInMbs: number;
    /**
     * (Updatable) The batch rollover time in milliseconds.
     */
    batchRolloverTimeInMs: number;
    /**
     * (Updatable) The name of the bucket. Avoid entering confidential information.
     */
    bucket: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId: string;
    /**
     * (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
     */
    enableFormattedMessaging: boolean;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * (Updatable) The type descriminator.
     */
    kind: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     */
    logGroupId: string;
    /**
     * (Updatable) The name of the metric.  Example: `CpuUtilization`
     */
    metric: string;
    /**
     * (Updatable) The namespace of the metric.  Example: `ociComputeagent`
     */
    metricNamespace: string;
    /**
     * (Updatable) The namespace.
     */
    namespace: string;
    /**
     * (Updatable) The prefix of the objects. Avoid entering confidential information.
     */
    objectNamePrefix: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     */
    streamId: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     */
    topicId: string;
}

export interface SchServiceConnectorTask {
    /**
     * (Updatable) Size limit (kilobytes) for batch sent to invoke the function.
     */
    batchSizeInKbs: number;
    /**
     * (Updatable) Time limit (seconds) for batch sent to invoke the function.
     */
    batchTimeInSec: number;
    /**
     * (Updatable) A filter or mask to limit the source used in the flow defined by the service connector.
     */
    condition: string;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     */
    functionId: string;
    /**
     * (Updatable) The type descriminator.
     */
    kind: string;
}

export interface ServiceCatalogPrivateApplicationLogo {
    /**
     * The content URL of the uploaded data.
     */
    contentUrl: string;
    /**
     * (Updatable) The name of the private application.
     */
    displayName: string;
    /**
     * The MIME type of the uploaded data.
     */
    mimeType: string;
}

export interface ServiceCatalogPrivateApplicationPackageDetails {
    /**
     * The package's type.
     */
    packageType: string;
    /**
     * The package version.
     */
    version: string;
    zipFileBase64encoded: string;
}

export interface StreamingStreamPoolCustomEncryptionKey {
    /**
     * Life cycle State of the custom key
     */
    keyState: string;
    /**
     * (Updatable) Custom Encryption Key (Master Key) ocid.
     */
    kmsKeyId: string;
}

export interface StreamingStreamPoolKafkaSettings {
    /**
     * (Updatable) Enable auto creation of topic on the server.
     */
    autoCreateTopicsEnable: boolean;
    /**
     * (Updatable) Bootstrap servers.
     */
    bootstrapServers: string;
    /**
     * (Updatable) The number of hours to keep a log file before deleting it (in hours).
     */
    logRetentionHours: number;
    /**
     * (Updatable) The default number of log partitions per topic.
     */
    numPartitions: number;
}

export interface StreamingStreamPoolPrivateEndpointSettings {
    /**
     * The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
     */
    nsgIds: string[];
    /**
     * The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
     */
    privateEndpointIp: string;
    /**
     * If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
     */
    subnetId: string;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettings {
    /**
     * (Updatable) Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
     */
    agentConfiguration: outputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration;
    /**
     * (Updatable) The scan level
     */
    scanLevel: string;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration {
    /**
     * (Updatable) CIS (Center for Internet Security) Benchmark scan settings for a host scan
     */
    cisBenchmarkSettings: outputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings;
    /**
     * (Updatable) Endpoint Protection scan settings for a host scan
     */
    endpointProtectionSettings: outputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings;
    /**
     * (Updatable) Vendor to use for the host scan agent.
     */
    vendor: string;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings {
    /**
     * (Updatable) The scan level
     */
    scanLevel: string;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings {
    /**
     * (Updatable) The scan level
     */
    scanLevel: string;
}

export interface VulnerabilityScanningHostScanRecipePortSettings {
    /**
     * (Updatable) The scan level
     */
    scanLevel: string;
}

export interface VulnerabilityScanningHostScanRecipeSchedule {
    /**
     * (Updatable) Day of week the scheduled scan occurs (not applicable for DAILY type)
     */
    dayOfWeek: string;
    /**
     * (Updatable) How often the scan occurs
     */
    type: string;
}

export interface WaasCertificateExtension {
    /**
     * The critical flag of the extension. Critical extensions must be processed, non-critical extensions can be ignored.
     */
    isCritical: boolean;
    /**
     * The certificate extension name.
     */
    name: string;
    /**
     * The certificate extension value.
     */
    value: string;
}

export interface WaasCertificateIssuerName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface WaasCertificatePublicKeyInfo {
    /**
     * The algorithm identifier and parameters for the public key.
     */
    algorithm: string;
    /**
     * The private key exponent.
     */
    exponent: number;
    /**
     * The number of bits in a key used by a cryptographic algorithm.
     */
    keySize: number;
}

export interface WaasCertificateSubjectName {
    /**
     * The fully qualified domain name used for DNS lookups of the server.
     */
    commonName: string;
    /**
     * ISO 3166-1 alpha-2 code of the country where the organization is located. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
     */
    country: string;
    /**
     * The email address of the server's administrator.
     */
    emailAddress: string;
    /**
     * The city in which the organization is located.
     */
    locality: string;
    /**
     * The organization name.
     */
    organization: string;
    /**
     * The field to differentiate between divisions within an organization.
     */
    organizationalUnit: string;
    /**
     * The province where the organization is located.
     */
    stateProvince: string;
}

export interface WaasHttpRedirectTarget {
    /**
     * (Updatable) The host portion of the redirect.
     */
    host: string;
    /**
     * (Updatable) The path component of the target URL (e.g., "/path/to/resource" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying, or request-prefixing. Use of \ is not permitted except to escape a following \, {, or }. An empty value is treated the same as static "/". A static value must begin with a leading "/", optionally followed by other path characters. A request-copying value must exactly match "{path}", and will be replaced with the path component of the request URL (including its initial "/"). A request-prefixing value must start with "/" and end with a non-escaped "{path}", which will be replaced with the path component of the request URL (including its initial "/"). Only one such replacement token is allowed.
     */
    path: string;
    /**
     * (Updatable) Port number of the target destination of the redirect, default to match protocol
     */
    port: number;
    /**
     * (Updatable) The protocol used for the target, http or https.
     */
    protocol: string;
    /**
     * (Updatable) The query component of the target URL (e.g., "?redirected" in "https://target.example.com/path/to/resource?redirected"), which can be empty, static, or request-copying. Use of \ is not permitted except to escape a following \, {, or }. An empty value results in a redirection target URL with no query component. A static value must begin with a leading "?", optionally followed by other query characters. A request-copying value must exactly match "{query}", and will be replaced with the query component of the request URL (including a leading "?" if and only if the request URL includes a query component).
     */
    query: string;
}

export interface WaasProtectionRuleExclusion {
    /**
     * An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * The target of the exclusion.
     */
    target: string;
}

export interface WaasWaasPolicyOrigin {
    /**
     * (Updatable) A list of HTTP headers to forward to your origin.
     */
    customHeaders: outputs.WaasWaasPolicyOriginCustomHeader[];
    /**
     * (Updatable) The HTTP port on the origin that the web application listens on. If unspecified, defaults to `80`. If `0` is specified - the origin is not used for HTTP traffic.
     */
    httpPort?: number;
    /**
     * (Updatable) The HTTPS port on the origin that the web application listens on. If unspecified, defaults to `443`. If `0` is specified - the origin is not used for HTTPS traffic.
     */
    httpsPort?: number;
    label: string;
    /**
     * (Updatable) The URI of the origin. Does not support paths. Port numbers should be specified in the `httpPort` and `httpsPort` fields.
     */
    uri: string;
}

export interface WaasWaasPolicyOriginCustomHeader {
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyOriginGroup {
    label: string;
    originGroups: outputs.WaasWaasPolicyOriginGroupOriginGroup[];
}

export interface WaasWaasPolicyOriginGroupOriginGroup {
    /**
     * (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
     */
    origin: string;
    weight?: number;
}

export interface WaasWaasPolicyPolicyConfig {
    /**
     * (Updatable) The OCID of the SSL certificate to use if HTTPS is supported.
     */
    certificateId: string;
    /**
     * (Updatable) The set cipher group for the configured TLS protocol. This sets the configuration for the TLS connections between clients and edge nodes only.
     * * **DEFAULT:** Cipher group supports TLS 1.0, TLS 1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled: `ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA`
     */
    cipherGroup: string;
    /**
     * (Updatable) Specifies an HTTP header name which is treated as the connecting client's IP address. Applicable only if `isBehindCdn` is enabled.
     */
    clientAddressHeader?: string;
    /**
     * (Updatable) Health checks monitor the status of your origin servers and only route traffic to the origins that pass the health check. If the health check fails, origin is automatically removed from the load balancing. There is roughly one health check per EDGE POP per period. Any checks that pass will be reported as "healthy".
     */
    healthChecks: outputs.WaasWaasPolicyPolicyConfigHealthChecks;
    /**
     * (Updatable) Enabling `isBehindCdn` allows for the collection of IP addresses from client requests if the WAF is connected to a CDN.
     */
    isBehindCdn: boolean;
    /**
     * (Updatable) Enable or disable automatic content caching based on the response `cache-control` header. This feature enables the origin to act as a proxy cache. Caching is usually defined using `cache-control` header. For example `cache-control: max-age=120` means that the returned resource is valid for 120 seconds. Caching rules will overwrite this setting.
     */
    isCacheControlRespected: boolean;
    /**
     * (Updatable) Enable or disable HTTPS support. If true, a `certificateId` is required. If unspecified, defaults to `false`.
     */
    isHttpsEnabled: boolean;
    /**
     * (Updatable) Force HTTP to HTTPS redirection. If unspecified, defaults to `false`.
     */
    isHttpsForced: boolean;
    /**
     * (Updatable) Enable or disable GZIP compression of origin responses. If enabled, the header `Accept-Encoding: gzip` is sent to origin, otherwise, the empty `Accept-Encoding:` header is used.
     */
    isOriginCompressionEnabled: boolean;
    /**
     * (Updatable) Enable or disable buffering of responses from the origin. Buffering improves overall stability in case of network issues, but slightly increases Time To First Byte.
     */
    isResponseBufferingEnabled: boolean;
    /**
     * (Updatable) SNI stands for Server Name Indication and is an extension of the TLS protocol. It indicates which hostname is being contacted by the browser at the beginning of the 'handshake'-process. This allows a server to connect multiple SSL Certificates to one IP address and port.
     */
    isSniEnabled: boolean;
    /**
     * (Updatable) An object that represents a load balancing method and its properties.
     */
    loadBalancingMethod: outputs.WaasWaasPolicyPolicyConfigLoadBalancingMethod;
    /**
     * (Updatable) A list of allowed TLS protocols. Only applicable when HTTPS support is enabled. The TLS protocol is negotiated while the request is connecting and the most recent protocol supported by both the edge node and client browser will be selected. If no such version exists, the connection will be aborted.
     * * **TLS_V1:** corresponds to TLS 1.0 specification.
     * * **TLS_V1_1:** corresponds to TLS 1.1 specification.
     * * **TLS_V1_2:** corresponds to TLS 1.2 specification.
     * * **TLS_V1_3:** corresponds to TLS 1.3 specification.
     */
    tlsProtocols: string[];
    /**
     * (Updatable) ModSecurity is not capable to inspect WebSockets. Therefore paths specified here have WAF disabled if Connection request header from the client has the value Upgrade (case insensitive matching) and Upgrade request header has the value websocket (case insensitive matching). Paths matches if the concatenation of request URL path and query starts with the contents of the one of `websocketPathPrefixes` array value. In All other cases challenges, like JSC, HIC and etc., remain active.
     */
    websocketPathPrefixes: string[];
}

export interface WaasWaasPolicyPolicyConfigHealthChecks {
    /**
     * (Updatable) The HTTP response codes that signify a healthy state.
     * * **2XX:** Success response code group.
     * * **3XX:** Redirection response code group.
     * * **4XX:** Client errors response code group.
     * * **5XX:** Server errors response code group.
     */
    expectedResponseCodeGroups: string[];
    /**
     * (Updatable) Health check will search for the given text in a case-sensitive manner within the response body and will fail if the text is not found.
     */
    expectedResponseText: string;
    /**
     * (Updatable) HTTP header fields to include in health check requests, expressed as `"name": "value"` properties. Because HTTP header field names are case-insensitive, any use of names that are case-insensitive equal to other names will be rejected. If Host is not specified, requests will include a Host header field with value matching the policy's protected domain. If User-Agent is not specified, requests will include a User-Agent header field with value "waf health checks".
     */
    headers: {[key: string]: any};
    /**
     * (Updatable) Number of successful health checks after which the server is marked up.
     */
    healthyThreshold: number;
    /**
     * (Updatable) Time between health checks of an individual origin server, in seconds.
     */
    intervalInSeconds: number;
    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * (Updatable) Enables or disables additional check for predefined text in addition to response code.
     */
    isResponseTextCheckEnabled: boolean;
    /**
     * (Updatable) Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * (Updatable) Path to visit on your origins when performing the health check.
     */
    path: string;
    /**
     * (Updatable) Response timeout represents wait time until request is considered failed, in seconds.
     */
    timeoutInSeconds: number;
    /**
     * (Updatable) Number of failed health checks after which the server is marked down.
     */
    unhealthyThreshold: number;
}

export interface WaasWaasPolicyPolicyConfigLoadBalancingMethod {
    /**
     * (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
     */
    domain: string;
    /**
     * (Updatable) The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
     */
    expirationTimeInSeconds: number;
    /**
     * (Updatable) Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client's next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     */
    method: string;
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
}

export interface WaasWaasPolicyWafConfig {
    /**
     * (Updatable) The access rules applied to the Web Application Firewall. Access rules allow custom content access policies to be defined and `ALLOW`, `DETECT`, or `BLOCK` actions to be taken on a request when specified criteria are met.
     */
    accessRules: outputs.WaasWaasPolicyWafConfigAccessRule[];
    /**
     * (Updatable) The settings used to limit the number of requests from an IP address.
     */
    addressRateLimiting: outputs.WaasWaasPolicyWafConfigAddressRateLimiting;
    /**
     * (Updatable) A list of caching rules applied to the web application.
     */
    cachingRules: outputs.WaasWaasPolicyWafConfigCachingRule[];
    /**
     * (Updatable) A list of CAPTCHA challenge settings. CAPTCHAs challenge requests to ensure a human is attempting to reach the specified URL and not a bot.
     */
    captchas: outputs.WaasWaasPolicyWafConfigCaptcha[];
    /**
     * (Updatable) A list of the custom protection rule OCIDs and their actions.
     */
    customProtectionRules: outputs.WaasWaasPolicyWafConfigCustomProtectionRule[];
    /**
     * (Updatable) The device fingerprint challenge settings. Blocks bots based on unique device fingerprint information.
     */
    deviceFingerprintChallenge: outputs.WaasWaasPolicyWafConfigDeviceFingerprintChallenge;
    /**
     * (Updatable) The human interaction challenge settings. Detects natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     */
    humanInteractionChallenge: outputs.WaasWaasPolicyWafConfigHumanInteractionChallenge;
    /**
     * (Updatable) The JavaScript challenge settings. Blocks bots by challenging requests from browsers that have no JavaScript support.
     */
    jsChallenge: outputs.WaasWaasPolicyWafConfigJsChallenge;
    /**
     * (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
     */
    origin: string;
    /**
     * (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     */
    originGroups: string[];
    /**
     * (Updatable) The settings applied to protection rules.
     */
    protectionSettings: outputs.WaasWaasPolicyWafConfigProtectionSettings;
    /**
     * (Updatable) A list of IP addresses that bypass the Web Application Firewall.
     */
    whitelists: outputs.WaasWaasPolicyWafConfigWhitelist[];
}

export interface WaasWaasPolicyWafConfigAccessRule {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) The list of challenges to bypass when `action` is set to `BYPASS`. If unspecified or empty, all challenges are bypassed.
     * * **JS_CHALLENGE:** Bypasses JavaScript Challenge.
     * * **DEVICE_FINGERPRINT_CHALLENGE:** Bypasses Device Fingerprint Challenge.
     * * **HUMAN_INTERACTION_CHALLENGE:** Bypasses Human Interaction Challenge.
     * * **CAPTCHA:** Bypasses CAPTCHA Challenge.
     */
    bypassChallenges: string[];
    /**
     * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
    /**
     * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.WaasWaasPolicyWafConfigAccessRuleCriteria[];
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
    /**
     * (Updatable) The response status code to return when `action` is set to `REDIRECT`.
     * * **MOVED_PERMANENTLY:** Used for designating the permanent movement of a page (numerical code - 301).
     * * **FOUND:** Used for designating the temporary movement of a page (numerical code - 302).
     */
    redirectResponseCode: string;
    /**
     * (Updatable) The target to which the request should be redirected, represented as a URI reference. Required when `action` is `REDIRECT`.
     */
    redirectUrl: string;
    /**
     * (Updatable) An object that represents an action to apply to an HTTP response headers if all rule criteria will be matched regardless of `action` value.
     */
    responseHeaderManipulations: outputs.WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation[];
}

export interface WaasWaasPolicyWafConfigAccessRuleCriteria {
    /**
     * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * (Updatable) When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) A header field name that conforms to RFC 7230.  Example: `exampleHeaderName`
     */
    header: string;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigAddressRateLimiting {
    /**
     * (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     */
    allowedRatePerAddress: number;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     */
    maxDelayedCountPerAddress: number;
}

export interface WaasWaasPolicyWafConfigCachingRule {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) The duration to cache content for the caching rule, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    cachingDuration?: string;
    /**
     * (Updatable) The duration to cache content in the user's browser, specified in ISO 8601 extended format. Supported units: seconds, minutes, hours, days, weeks, months. The maximum value that can be set for any unit is `99`. Mixing of multiple units is not supported. Only applies when the `action` is set to `CACHE`. Example: `PT1H`
     */
    clientCachingDuration?: string;
    /**
     * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.WaasWaasPolicyWafConfigCachingRuleCriteria[];
    /**
     * (Updatable) Enables or disables client caching. Browsers use the `Cache-Control` header value for caching content locally in the browser. This setting overrides the addition of a `Cache-Control` header in responses.
     */
    isClientCachingEnabled: boolean;
    /**
     * (Updatable) The unique key for the caching rule.
     */
    key: string;
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
}

export interface WaasWaasPolicyWafConfigCachingRuleCriteria {
    /**
     * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigCaptcha {
    /**
     * (Updatable) The text to show when incorrect CAPTCHA text is entered. If unspecified, defaults to `The CAPTCHA was incorrect. Try again.`
     */
    failureMessage: string;
    /**
     * (Updatable) The text to show in the footer when showing a CAPTCHA challenge. If unspecified, defaults to 'Enter the letters and numbers as they are shown in the image above.'
     */
    footerText: string;
    /**
     * (Updatable) The text to show in the header when showing a CAPTCHA challenge. If unspecified, defaults to 'We have detected an increased number of attempts to access this website. To help us keep this site secure, please let us know that you are not a robot by entering the text from the image below.'
     */
    headerText: string;
    /**
     * (Updatable) The amount of time before the CAPTCHA expires, in seconds. If unspecified, defaults to `300`.
     */
    sessionExpirationInSeconds: number;
    /**
     * (Updatable) The text to show on the label of the CAPTCHA challenge submit button. If unspecified, defaults to `Yes, I am human`.
     */
    submitLabel: string;
    /**
     * (Updatable) The title used when displaying a CAPTCHA challenge. If unspecified, defaults to `Are you human?`
     */
    title: string;
    /**
     * (Updatable) The unique URL path at which to show the CAPTCHA challenge.
     */
    url: string;
}

export interface WaasWaasPolicyWafConfigCustomProtectionRule {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: outputs.WaasWaasPolicyWafConfigCustomProtectionRuleExclusion[];
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom protection rule.
     */
    id: string;
}

export interface WaasWaasPolicyWafConfigCustomProtectionRuleExclusion {
    /**
     * (Updatable) An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     */
    exclusions: string[];
    /**
     * (Updatable) The target of the exclusion.
     */
    target: string;
}

export interface WaasWaasPolicyWafConfigDeviceFingerprintChallenge {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * (Updatable) The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.WaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
    /**
     * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * (Updatable) The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
     */
    maxAddressCount: number;
    /**
     * (Updatable) The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
     */
    maxAddressCountExpirationInSeconds: number;
}

export interface WaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
    /**
     * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallenge {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * (Updatable) The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.WaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings;
    /**
     * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     */
    failureThresholdExpirationInSeconds: number;
    /**
     * (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     */
    interactionThreshold: number;
    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     */
    recordingPeriodInSeconds: number;
    /**
     * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.WaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings {
    /**
     * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigJsChallenge {
    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     */
    action: string;
    /**
     * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     */
    actionExpirationInSeconds: number;
    /**
     * (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
     */
    areRedirectsChallenged: boolean;
    /**
     * (Updatable) The challenge settings if `action` is set to `BLOCK`.
     */
    challengeSettings: outputs.WaasWaasPolicyWafConfigJsChallengeChallengeSettings;
    /**
     * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     */
    criterias: outputs.WaasWaasPolicyWafConfigJsChallengeCriteria[];
    /**
     * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     */
    failureThreshold: number;
    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     */
    isEnabled: boolean;
    /**
     * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     */
    isNatEnabled: boolean;
    /**
     * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     */
    setHttpHeader: outputs.WaasWaasPolicyWafConfigJsChallengeSetHttpHeader;
}

export interface WaasWaasPolicyWafConfigJsChallengeChallengeSettings {
    /**
     * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) The text to show in the footer when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, default to `Enter the letters and numbers as they are shown in image above`.
     */
    captchaFooter: string;
    /**
     * (Updatable) The text to show in the header when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `We have detected an increased number of attempts to access this webapp. To help us keep this webapp secure, please let us know that you are not a robot by entering the text from captcha below.`
     */
    captchaHeader: string;
    /**
     * (Updatable) The text to show on the label of the CAPTCHA challenge submit button when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Yes, I am human`.
     */
    captchaSubmitLabel: string;
    /**
     * (Updatable) The title used when showing a CAPTCHA challenge when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_CAPTCHA`, and the request is blocked. If unspecified, defaults to `Are you human?`
     */
    captchaTitle: string;
}

export interface WaasWaasPolicyWafConfigJsChallengeCriteria {
    /**
     * (Updatable) The criteria the access rule and JavaScript Challenge uses to determine if action should be taken on a request.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_IS_NOT:** Matches if the concatenation of request URL path and query is not identical to the contents of the `value` field. URL must start with a `/`.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field. URL must start with a `/`.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * * **URL_REGEX:** Matches if the concatenation of request URL path and query is described by the regular expression in the value field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_MATCH_REGEX:** Matches if the concatenation of request URL path and query is not described by the regular expression in the `value` field. The value must be a valid regular expression recognized by the PCRE library in Nginx (https://www.pcre.org).
     * * **URL_DOES_NOT_START_WITH:** Matches if the concatenation of request URL path and query does not start with the contents of the `value` field.
     * * **URL_PART_DOES_NOT_CONTAIN:** Matches if the concatenation of request URL path and query does not contain the contents of the `value` field.
     * * **URL_PART_DOES_NOT_END_WITH:** Matches if the concatenation of request URL path and query does not end with the contents of the `value` field.
     * * **IP_IS:** Matches if the request originates from one of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IS_NOT:** Matches if the request does not originate from any of the IP addresses contained in the defined address list. The `value` in this case is string with one or multiple IPs or CIDR notations separated by new line symbol \n *Example:* "1.1.1.1\n1.1.1.2\n1.2.2.1/30"
     * * **IP_IN_LIST:** Matches if the request originates from one of the IP addresses contained in the referenced address list. The `value` in this case is OCID of the address list.
     * * **IP_NOT_IN_LIST:** Matches if the request does not originate from any IP address contained in the referenced address list. The `value` field in this case is OCID of the address list.
     * * **HTTP_HEADER_CONTAINS:** The HTTP_HEADER_CONTAINS criteria is defined using a compound value separated by a colon: a header field name and a header field value. `host:test.example.com` is an example of a criteria value where `host` is the header field name and `test.example.com` is the header field value. A request matches when the header field name is a case insensitive match and the header field value is a case insensitive, substring match. *Example:* With a criteria value of `host:test.example.com`, where `host` is the name of the field and `test.example.com` is the value of the host field, a request with the header values, `Host: www.test.example.com` will match, where as a request with header values of `host: www.example.com` or `host: test.sub.example.com` will not match.
     * * **HTTP_METHOD_IS:** Matches if the request method is identical to one of the values listed in field. The `value` in this case is string with one or multiple HTTP methods separated by new line symbol \n The list of available methods: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`
     */
    condition: string;
    /**
     * (Updatable) When enabled, the condition will be matched with case-sensitive rules.
     */
    isCaseSensitive: boolean;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigJsChallengeSetHttpHeader {
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
    /**
     * (Updatable) The value of the header.
     */
    value: string;
}

export interface WaasWaasPolicyWafConfigProtectionSettings {
    /**
     * (Updatable) The list of allowed HTTP methods. If unspecified, default to `[OPTIONS, GET, HEAD, POST]`. This setting only applies if a corresponding protection rule is enabled, such as the "Restrict HTTP Request Methods" rule (key: 911100).
     */
    allowedHttpMethods: string[];
    /**
     * (Updatable) If `action` is set to `BLOCK`, this specifies how the traffic is blocked when detected as malicious by a protection rule. If unspecified, defaults to `SET_RESPONSE_CODE`.
     */
    blockAction: string;
    /**
     * (Updatable) The error code to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`.
     */
    blockErrorPageCode: string;
    /**
     * (Updatable) The description text to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `Access blocked by website owner. Please contact support.`
     */
    blockErrorPageDescription: string;
    /**
     * (Updatable) The message to show on the error page when `action` is set to `BLOCK`, `blockAction` is set to `SHOW_ERROR_PAGE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to 'Access to the website is blocked.'
     */
    blockErrorPageMessage: string;
    /**
     * (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     */
    blockResponseCode: number;
    /**
     * (Updatable) Inspects the response body of origin responses. Can be used to detect leakage of sensitive data. If unspecified, defaults to `false`.
     */
    isResponseInspected: boolean;
    /**
     * (Updatable) The maximum number of arguments allowed to be passed to your application before an action is taken. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `255`. This setting only applies if a corresponding protection rule is enabled, such as the "Number of Arguments Limits" rule (key: 960335).  Example: If `maxArgumentCount` to `2` for the Max Number of Arguments protection rule (key: 960335), the following requests would be blocked: `GET /myapp/path?query=one&query=two&query=three` `POST /myapp/path` with Body `{"argument1":"one","argument2":"two","argument3":"three"}`
     */
    maxArgumentCount: number;
    /**
     * (Updatable) The maximum length allowed for each argument name, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `400`. This setting only applies if a corresponding protection rule is enabled, such as the "Values Limits" rule (key: 960208).
     */
    maxNameLengthPerArgument: number;
    /**
     * (Updatable) The maximum response size to be fully inspected, in binary kilobytes (KiB). Anything over this limit will be partially inspected. If unspecified, defaults to `1024`.
     */
    maxResponseSizeInKiB: number;
    /**
     * (Updatable) The maximum length allowed for the sum of the argument name and value, in characters. Arguements are query parameters or body parameters in a PUT or POST request. If unspecified, defaults to `64000`. This setting only applies if a corresponding protection rule is enabled, such as the "Total Arguments Limits" rule (key: 960341).
     */
    maxTotalNameLengthOfArguments: number;
    /**
     * (Updatable) The list of media types to allow for inspection, if `isResponseInspected` is enabled. Only responses with MIME types in this list will be inspected. If unspecified, defaults to `["text/html", "text/plain", "text/xml"]`.
     */
    mediaTypes: string[];
    /**
     * (Updatable) The length of time to analyze traffic traffic, in days. After the analysis period, `WafRecommendations` will be populated. If unspecified, defaults to `10`.
     */
    recommendationsPeriodInDays: number;
}

export interface WaasWaasPolicyWafConfigWhitelist {
    /**
     * (Updatable) A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of IP address lists to include in the whitelist.
     */
    addressLists: string[];
    /**
     * (Updatable) A set of IP addresses or CIDR notations to include in the whitelist.
     */
    addresses: string[];
    /**
     * (Updatable) The unique name of the whitelist.
     */
    name: string;
}

