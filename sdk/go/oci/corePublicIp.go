// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Public Ip resource in Oracle Cloud Infrastructure Core service.
//
// Creates a public IP. Use the `lifetime` property to specify whether it's an ephemeral or
// reserved public IP. For information about limits on how many you can create, see
// [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
//
// * **For an ephemeral public IP assigned to a private IP:** You must also specify a `privateIpId`
// with the OCID of the primary private IP you want to assign the public IP to. The public IP is
// created in the same availability domain as the private IP. An ephemeral public IP must always be
// assigned to a private IP, and only to the *primary* private IP on a VNIC, not a secondary
// private IP. Exception: If you create a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/), Oracle
// automatically assigns the NAT gateway a regional ephemeral public IP that you cannot remove.
//
// * **For a reserved public IP:** You may also optionally assign the public IP to a private
// IP by specifying `privateIpId`. Or you can later assign the public IP with
// [UpdatePublicIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/PublicIp/UpdatePublicIp).
//
// **Note:** When assigning a public IP to a private IP, the private IP must not already have
// a public IP with `lifecycleState` = ASSIGNING or ASSIGNED. If it does, an error is returned.
//
// Also, for reserved public IPs, the optional assignment part of this operation is
// asynchronous. Poll the public IP's `lifecycleState` to determine if the assignment
// succeeded.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCorePublicIp(ctx, "testPublicIp", &oci.CorePublicIpArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Lifetime:      pulumi.Any(_var.Public_ip_lifetime),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Public_ip_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			PrivateIpId:    pulumi.Any(oci_core_private_ip.Test_private_ip.Id),
// 			PublicIpPoolId: pulumi.Any(oci_core_public_ip_pool.Test_public_ip_pool.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// PublicIps can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/corePublicIp:CorePublicIp test_public_ip "id"
// ```
type CorePublicIp struct {
	pulumi.CustomResourceState

	// The OCID of the entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityId pulumi.StringOutput `pulumi:"assignedEntityId"`
	// The type of entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityType pulumi.StringOutput `pulumi:"assignedEntityType"`
	// The public IP's availability domain. This property is set only for ephemeral public IPs that are assigned to a private IP (that is, when the `scope` of the public IP is set to AVAILABILITY_DOMAIN). The value is the availability domain of the assigned private IP.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) The OCID of the compartment to contain the public IP. For ephemeral public IPs, you must set this to the private IP's compartment OCID.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The public IP address of the `publicIp` object.  Example: `203.0.113.2`
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// Defines when the public IP is deleted and released back to the Oracle Cloud Infrastructure public IP pool. For more information, see [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
	Lifetime pulumi.StringOutput `pulumi:"lifetime"`
	// (Updatable) The OCID of the private IP to assign the public IP to.
	PrivateIpId pulumi.StringPtrOutput `pulumi:"privateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
	PublicIpPoolId pulumi.StringOutput `pulumi:"publicIpPoolId"`
	// Whether the public IP is regional or specific to a particular availability domain.
	// * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs and ephemeral public IPs assigned to a regional entity have `scope` = `REGION`.
	// * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// The public IP's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCorePublicIp registers a new resource with the given unique name, arguments, and options.
func NewCorePublicIp(ctx *pulumi.Context,
	name string, args *CorePublicIpArgs, opts ...pulumi.ResourceOption) (*CorePublicIp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Lifetime == nil {
		return nil, errors.New("invalid value for required argument 'Lifetime'")
	}
	var resource CorePublicIp
	err := ctx.RegisterResource("oci:index/corePublicIp:CorePublicIp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCorePublicIp gets an existing CorePublicIp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCorePublicIp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CorePublicIpState, opts ...pulumi.ResourceOption) (*CorePublicIp, error) {
	var resource CorePublicIp
	err := ctx.ReadResource("oci:index/corePublicIp:CorePublicIp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CorePublicIp resources.
type corePublicIpState struct {
	// The OCID of the entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityId *string `pulumi:"assignedEntityId"`
	// The type of entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityType *string `pulumi:"assignedEntityType"`
	// The public IP's availability domain. This property is set only for ephemeral public IPs that are assigned to a private IP (that is, when the `scope` of the public IP is set to AVAILABILITY_DOMAIN). The value is the availability domain of the assigned private IP.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) The OCID of the compartment to contain the public IP. For ephemeral public IPs, you must set this to the private IP's compartment OCID.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The public IP address of the `publicIp` object.  Example: `203.0.113.2`
	IpAddress *string `pulumi:"ipAddress"`
	// Defines when the public IP is deleted and released back to the Oracle Cloud Infrastructure public IP pool. For more information, see [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
	Lifetime *string `pulumi:"lifetime"`
	// (Updatable) The OCID of the private IP to assign the public IP to.
	PrivateIpId *string `pulumi:"privateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
	PublicIpPoolId *string `pulumi:"publicIpPoolId"`
	// Whether the public IP is regional or specific to a particular availability domain.
	// * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs and ephemeral public IPs assigned to a regional entity have `scope` = `REGION`.
	// * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
	Scope *string `pulumi:"scope"`
	// The public IP's current state.
	State *string `pulumi:"state"`
	// The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CorePublicIpState struct {
	// The OCID of the entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityId pulumi.StringPtrInput
	// The type of entity the public IP is assigned to, or in the process of being assigned to.
	AssignedEntityType pulumi.StringPtrInput
	// The public IP's availability domain. This property is set only for ephemeral public IPs that are assigned to a private IP (that is, when the `scope` of the public IP is set to AVAILABILITY_DOMAIN). The value is the availability domain of the assigned private IP.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment to contain the public IP. For ephemeral public IPs, you must set this to the private IP's compartment OCID.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The public IP address of the `publicIp` object.  Example: `203.0.113.2`
	IpAddress pulumi.StringPtrInput
	// Defines when the public IP is deleted and released back to the Oracle Cloud Infrastructure public IP pool. For more information, see [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
	Lifetime pulumi.StringPtrInput
	// (Updatable) The OCID of the private IP to assign the public IP to.
	PrivateIpId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
	PublicIpPoolId pulumi.StringPtrInput
	// Whether the public IP is regional or specific to a particular availability domain.
	// * `REGION`: The public IP exists within a region and is assigned to a regional entity (such as a [NatGateway](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/NatGateway/)), or can be assigned to a private IP in any availability domain in the region. Reserved public IPs and ephemeral public IPs assigned to a regional entity have `scope` = `REGION`.
	// * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity it's assigned to, which is specified by the `availabilityDomain` property of the public IP object. Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
	Scope pulumi.StringPtrInput
	// The public IP's current state.
	State pulumi.StringPtrInput
	// The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CorePublicIpState) ElementType() reflect.Type {
	return reflect.TypeOf((*corePublicIpState)(nil)).Elem()
}

type corePublicIpArgs struct {
	// (Updatable) The OCID of the compartment to contain the public IP. For ephemeral public IPs, you must set this to the private IP's compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Defines when the public IP is deleted and released back to the Oracle Cloud Infrastructure public IP pool. For more information, see [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
	Lifetime string `pulumi:"lifetime"`
	// (Updatable) The OCID of the private IP to assign the public IP to.
	PrivateIpId *string `pulumi:"privateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
	PublicIpPoolId *string `pulumi:"publicIpPoolId"`
}

// The set of arguments for constructing a CorePublicIp resource.
type CorePublicIpArgs struct {
	// (Updatable) The OCID of the compartment to contain the public IP. For ephemeral public IPs, you must set this to the private IP's compartment OCID.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Defines when the public IP is deleted and released back to the Oracle Cloud Infrastructure public IP pool. For more information, see [Public IP Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingpublicIPs.htm).
	Lifetime pulumi.StringInput
	// (Updatable) The OCID of the private IP to assign the public IP to.
	PrivateIpId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP pool.
	PublicIpPoolId pulumi.StringPtrInput
}

func (CorePublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*corePublicIpArgs)(nil)).Elem()
}

type CorePublicIpInput interface {
	pulumi.Input

	ToCorePublicIpOutput() CorePublicIpOutput
	ToCorePublicIpOutputWithContext(ctx context.Context) CorePublicIpOutput
}

func (*CorePublicIp) ElementType() reflect.Type {
	return reflect.TypeOf((*CorePublicIp)(nil))
}

func (i *CorePublicIp) ToCorePublicIpOutput() CorePublicIpOutput {
	return i.ToCorePublicIpOutputWithContext(context.Background())
}

func (i *CorePublicIp) ToCorePublicIpOutputWithContext(ctx context.Context) CorePublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpOutput)
}

func (i *CorePublicIp) ToCorePublicIpPtrOutput() CorePublicIpPtrOutput {
	return i.ToCorePublicIpPtrOutputWithContext(context.Background())
}

func (i *CorePublicIp) ToCorePublicIpPtrOutputWithContext(ctx context.Context) CorePublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPtrOutput)
}

type CorePublicIpPtrInput interface {
	pulumi.Input

	ToCorePublicIpPtrOutput() CorePublicIpPtrOutput
	ToCorePublicIpPtrOutputWithContext(ctx context.Context) CorePublicIpPtrOutput
}

type corePublicIpPtrType CorePublicIpArgs

func (*corePublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorePublicIp)(nil))
}

func (i *corePublicIpPtrType) ToCorePublicIpPtrOutput() CorePublicIpPtrOutput {
	return i.ToCorePublicIpPtrOutputWithContext(context.Background())
}

func (i *corePublicIpPtrType) ToCorePublicIpPtrOutputWithContext(ctx context.Context) CorePublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpPtrOutput)
}

// CorePublicIpArrayInput is an input type that accepts CorePublicIpArray and CorePublicIpArrayOutput values.
// You can construct a concrete instance of `CorePublicIpArrayInput` via:
//
//          CorePublicIpArray{ CorePublicIpArgs{...} }
type CorePublicIpArrayInput interface {
	pulumi.Input

	ToCorePublicIpArrayOutput() CorePublicIpArrayOutput
	ToCorePublicIpArrayOutputWithContext(context.Context) CorePublicIpArrayOutput
}

type CorePublicIpArray []CorePublicIpInput

func (CorePublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CorePublicIp)(nil)).Elem()
}

func (i CorePublicIpArray) ToCorePublicIpArrayOutput() CorePublicIpArrayOutput {
	return i.ToCorePublicIpArrayOutputWithContext(context.Background())
}

func (i CorePublicIpArray) ToCorePublicIpArrayOutputWithContext(ctx context.Context) CorePublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpArrayOutput)
}

// CorePublicIpMapInput is an input type that accepts CorePublicIpMap and CorePublicIpMapOutput values.
// You can construct a concrete instance of `CorePublicIpMapInput` via:
//
//          CorePublicIpMap{ "key": CorePublicIpArgs{...} }
type CorePublicIpMapInput interface {
	pulumi.Input

	ToCorePublicIpMapOutput() CorePublicIpMapOutput
	ToCorePublicIpMapOutputWithContext(context.Context) CorePublicIpMapOutput
}

type CorePublicIpMap map[string]CorePublicIpInput

func (CorePublicIpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CorePublicIp)(nil)).Elem()
}

func (i CorePublicIpMap) ToCorePublicIpMapOutput() CorePublicIpMapOutput {
	return i.ToCorePublicIpMapOutputWithContext(context.Background())
}

func (i CorePublicIpMap) ToCorePublicIpMapOutputWithContext(ctx context.Context) CorePublicIpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorePublicIpMapOutput)
}

type CorePublicIpOutput struct {
	*pulumi.OutputState
}

func (CorePublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorePublicIp)(nil))
}

func (o CorePublicIpOutput) ToCorePublicIpOutput() CorePublicIpOutput {
	return o
}

func (o CorePublicIpOutput) ToCorePublicIpOutputWithContext(ctx context.Context) CorePublicIpOutput {
	return o
}

func (o CorePublicIpOutput) ToCorePublicIpPtrOutput() CorePublicIpPtrOutput {
	return o.ToCorePublicIpPtrOutputWithContext(context.Background())
}

func (o CorePublicIpOutput) ToCorePublicIpPtrOutputWithContext(ctx context.Context) CorePublicIpPtrOutput {
	return o.ApplyT(func(v CorePublicIp) *CorePublicIp {
		return &v
	}).(CorePublicIpPtrOutput)
}

type CorePublicIpPtrOutput struct {
	*pulumi.OutputState
}

func (CorePublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorePublicIp)(nil))
}

func (o CorePublicIpPtrOutput) ToCorePublicIpPtrOutput() CorePublicIpPtrOutput {
	return o
}

func (o CorePublicIpPtrOutput) ToCorePublicIpPtrOutputWithContext(ctx context.Context) CorePublicIpPtrOutput {
	return o
}

type CorePublicIpArrayOutput struct{ *pulumi.OutputState }

func (CorePublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorePublicIp)(nil))
}

func (o CorePublicIpArrayOutput) ToCorePublicIpArrayOutput() CorePublicIpArrayOutput {
	return o
}

func (o CorePublicIpArrayOutput) ToCorePublicIpArrayOutputWithContext(ctx context.Context) CorePublicIpArrayOutput {
	return o
}

func (o CorePublicIpArrayOutput) Index(i pulumi.IntInput) CorePublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorePublicIp {
		return vs[0].([]CorePublicIp)[vs[1].(int)]
	}).(CorePublicIpOutput)
}

type CorePublicIpMapOutput struct{ *pulumi.OutputState }

func (CorePublicIpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CorePublicIp)(nil))
}

func (o CorePublicIpMapOutput) ToCorePublicIpMapOutput() CorePublicIpMapOutput {
	return o
}

func (o CorePublicIpMapOutput) ToCorePublicIpMapOutputWithContext(ctx context.Context) CorePublicIpMapOutput {
	return o
}

func (o CorePublicIpMapOutput) MapIndex(k pulumi.StringInput) CorePublicIpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CorePublicIp {
		return vs[0].(map[string]CorePublicIp)[vs[1].(string)]
	}).(CorePublicIpOutput)
}

func init() {
	pulumi.RegisterOutputType(CorePublicIpOutput{})
	pulumi.RegisterOutputType(CorePublicIpPtrOutput{})
	pulumi.RegisterOutputType(CorePublicIpArrayOutput{})
	pulumi.RegisterOutputType(CorePublicIpMapOutput{})
}
