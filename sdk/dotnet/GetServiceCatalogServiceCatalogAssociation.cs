// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetServiceCatalogServiceCatalogAssociation
    {
        /// <summary>
        /// This data source provides details about a specific Service Catalog Association resource in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Gets detailed information about specific service catalog association.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testServiceCatalogAssociation = Output.Create(Oci.GetServiceCatalogServiceCatalogAssociation.InvokeAsync(new Oci.GetServiceCatalogServiceCatalogAssociationArgs
        ///         {
        ///             ServiceCatalogAssociationId = oci_service_catalog_service_catalog_association.Test_service_catalog_association.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceCatalogServiceCatalogAssociationResult> InvokeAsync(GetServiceCatalogServiceCatalogAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceCatalogServiceCatalogAssociationResult>("oci:index/getServiceCatalogServiceCatalogAssociation:GetServiceCatalogServiceCatalogAssociation", args ?? new GetServiceCatalogServiceCatalogAssociationArgs(), options.WithVersion());
    }


    public sealed class GetServiceCatalogServiceCatalogAssociationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the service catalog association.
        /// </summary>
        [Input("serviceCatalogAssociationId", required: true)]
        public string ServiceCatalogAssociationId { get; set; } = null!;

        public GetServiceCatalogServiceCatalogAssociationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceCatalogServiceCatalogAssociationResult
    {
        /// <summary>
        /// Identifier of the entity being associated with service catalog.
        /// </summary>
        public readonly string EntityId;
        /// <summary>
        /// The type of the entity that is associated with the service catalog.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// Identifier of the association.
        /// </summary>
        public readonly string Id;
        public readonly string ServiceCatalogAssociationId;
        /// <summary>
        /// Identifier of the service catalog.
        /// </summary>
        public readonly string ServiceCatalogId;
        /// <summary>
        /// Timestamp of when the resource was associated with service catalog.
        /// </summary>
        public readonly string TimeCreated;

        [OutputConstructor]
        private GetServiceCatalogServiceCatalogAssociationResult(
            string entityId,

            string entityType,

            string id,

            string serviceCatalogAssociationId,

            string serviceCatalogId,

            string timeCreated)
        {
            EntityId = entityId;
            EntityType = entityType;
            Id = id;
            ServiceCatalogAssociationId = serviceCatalogAssociationId;
            ServiceCatalogId = serviceCatalogId;
            TimeCreated = timeCreated;
        }
    }
}
