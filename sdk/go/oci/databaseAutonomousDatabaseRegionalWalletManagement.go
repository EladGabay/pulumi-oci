// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Autonomous Database Regional Wallet Management resource in Oracle Cloud Infrastructure Database service.
//
// Updates the Autonomous Database regional wallet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseAutonomousDatabaseRegionalWalletManagement(ctx, "testAutonomousDatabaseRegionalWalletManagement", &oci.DatabaseAutonomousDatabaseRegionalWalletManagementArgs{
// 			ShouldRotate: pulumi.Any(_var.Autonomous_database_regional_wallet_management_should_rotate),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DatabaseAutonomousDatabaseRegionalWalletManagement struct {
	pulumi.CustomResourceState

	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrOutput `pulumi:"shouldRotate"`
	// The current lifecycle state of the Autonomous Database wallet.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the wallet was last rotated.
	TimeRotated pulumi.StringOutput `pulumi:"timeRotated"`
}

// NewDatabaseAutonomousDatabaseRegionalWalletManagement registers a new resource with the given unique name, arguments, and options.
func NewDatabaseAutonomousDatabaseRegionalWalletManagement(ctx *pulumi.Context,
	name string, args *DatabaseAutonomousDatabaseRegionalWalletManagementArgs, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseRegionalWalletManagement, error) {
	if args == nil {
		args = &DatabaseAutonomousDatabaseRegionalWalletManagementArgs{}
	}

	var resource DatabaseAutonomousDatabaseRegionalWalletManagement
	err := ctx.RegisterResource("oci:index/databaseAutonomousDatabaseRegionalWalletManagement:DatabaseAutonomousDatabaseRegionalWalletManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseAutonomousDatabaseRegionalWalletManagement gets an existing DatabaseAutonomousDatabaseRegionalWalletManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseAutonomousDatabaseRegionalWalletManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseAutonomousDatabaseRegionalWalletManagementState, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseRegionalWalletManagement, error) {
	var resource DatabaseAutonomousDatabaseRegionalWalletManagement
	err := ctx.ReadResource("oci:index/databaseAutonomousDatabaseRegionalWalletManagement:DatabaseAutonomousDatabaseRegionalWalletManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseAutonomousDatabaseRegionalWalletManagement resources.
type databaseAutonomousDatabaseRegionalWalletManagementState struct {
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate *bool `pulumi:"shouldRotate"`
	// The current lifecycle state of the Autonomous Database wallet.
	State *string `pulumi:"state"`
	// The date and time the wallet was last rotated.
	TimeRotated *string `pulumi:"timeRotated"`
}

type DatabaseAutonomousDatabaseRegionalWalletManagementState struct {
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrInput
	// The current lifecycle state of the Autonomous Database wallet.
	State pulumi.StringPtrInput
	// The date and time the wallet was last rotated.
	TimeRotated pulumi.StringPtrInput
}

func (DatabaseAutonomousDatabaseRegionalWalletManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseRegionalWalletManagementState)(nil)).Elem()
}

type databaseAutonomousDatabaseRegionalWalletManagementArgs struct {
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate *bool `pulumi:"shouldRotate"`
}

// The set of arguments for constructing a DatabaseAutonomousDatabaseRegionalWalletManagement resource.
type DatabaseAutonomousDatabaseRegionalWalletManagementArgs struct {
	// (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
	ShouldRotate pulumi.BoolPtrInput
}

func (DatabaseAutonomousDatabaseRegionalWalletManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseRegionalWalletManagementArgs)(nil)).Elem()
}

type DatabaseAutonomousDatabaseRegionalWalletManagementInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseRegionalWalletManagementOutput() DatabaseAutonomousDatabaseRegionalWalletManagementOutput
	ToDatabaseAutonomousDatabaseRegionalWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementOutput
}

func (*DatabaseAutonomousDatabaseRegionalWalletManagement) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (i *DatabaseAutonomousDatabaseRegionalWalletManagement) ToDatabaseAutonomousDatabaseRegionalWalletManagementOutput() DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return i.ToDatabaseAutonomousDatabaseRegionalWalletManagementOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseRegionalWalletManagement) ToDatabaseAutonomousDatabaseRegionalWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseRegionalWalletManagementOutput)
}

func (i *DatabaseAutonomousDatabaseRegionalWalletManagement) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput() DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return i.ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseRegionalWalletManagement) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput)
}

type DatabaseAutonomousDatabaseRegionalWalletManagementPtrInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput() DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput
	ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput
}

type databaseAutonomousDatabaseRegionalWalletManagementPtrType DatabaseAutonomousDatabaseRegionalWalletManagementArgs

func (*databaseAutonomousDatabaseRegionalWalletManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (i *databaseAutonomousDatabaseRegionalWalletManagementPtrType) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput() DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return i.ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(context.Background())
}

func (i *databaseAutonomousDatabaseRegionalWalletManagementPtrType) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput)
}

// DatabaseAutonomousDatabaseRegionalWalletManagementArrayInput is an input type that accepts DatabaseAutonomousDatabaseRegionalWalletManagementArray and DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseRegionalWalletManagementArrayInput` via:
//
//          DatabaseAutonomousDatabaseRegionalWalletManagementArray{ DatabaseAutonomousDatabaseRegionalWalletManagementArgs{...} }
type DatabaseAutonomousDatabaseRegionalWalletManagementArrayInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput() DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput
	ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutputWithContext(context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput
}

type DatabaseAutonomousDatabaseRegionalWalletManagementArray []DatabaseAutonomousDatabaseRegionalWalletManagementInput

func (DatabaseAutonomousDatabaseRegionalWalletManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseAutonomousDatabaseRegionalWalletManagement)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseRegionalWalletManagementArray) ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput() DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput {
	return i.ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseRegionalWalletManagementArray) ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput)
}

// DatabaseAutonomousDatabaseRegionalWalletManagementMapInput is an input type that accepts DatabaseAutonomousDatabaseRegionalWalletManagementMap and DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseRegionalWalletManagementMapInput` via:
//
//          DatabaseAutonomousDatabaseRegionalWalletManagementMap{ "key": DatabaseAutonomousDatabaseRegionalWalletManagementArgs{...} }
type DatabaseAutonomousDatabaseRegionalWalletManagementMapInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutput() DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput
	ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutputWithContext(context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput
}

type DatabaseAutonomousDatabaseRegionalWalletManagementMap map[string]DatabaseAutonomousDatabaseRegionalWalletManagementInput

func (DatabaseAutonomousDatabaseRegionalWalletManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseAutonomousDatabaseRegionalWalletManagement)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseRegionalWalletManagementMap) ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutput() DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput {
	return i.ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseRegionalWalletManagementMap) ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput)
}

type DatabaseAutonomousDatabaseRegionalWalletManagementOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseRegionalWalletManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementOutput() DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput() DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return o.ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(context.Background())
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return o.ApplyT(func(v DatabaseAutonomousDatabaseRegionalWalletManagement) *DatabaseAutonomousDatabaseRegionalWalletManagement {
		return &v
	}).(DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput)
}

type DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput() DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput {
	return o
}

type DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput() DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput) Index(i pulumi.IntInput) DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseRegionalWalletManagement {
		return vs[0].([]DatabaseAutonomousDatabaseRegionalWalletManagement)[vs[1].(int)]
	}).(DatabaseAutonomousDatabaseRegionalWalletManagementOutput)
}

type DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseAutonomousDatabaseRegionalWalletManagement)(nil))
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutput() DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput) ToDatabaseAutonomousDatabaseRegionalWalletManagementMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput) MapIndex(k pulumi.StringInput) DatabaseAutonomousDatabaseRegionalWalletManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseRegionalWalletManagement {
		return vs[0].(map[string]DatabaseAutonomousDatabaseRegionalWalletManagement)[vs[1].(string)]
	}).(DatabaseAutonomousDatabaseRegionalWalletManagementOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseRegionalWalletManagementOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseRegionalWalletManagementPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseRegionalWalletManagementArrayOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseRegionalWalletManagementMapOutput{})
}
