// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Container Database resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new external container database resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseExternalContainerDatabase(ctx, "testExternalContainerDatabase", &oci.DatabaseExternalContainerDatabaseArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.External_container_database_display_name),
// 			DefinedTags:   pulumi.Any(_var.External_container_database_defined_tags),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ExternalContainerDatabases can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseExternalContainerDatabase:DatabaseExternalContainerDatabase test_external_container_database "id"
// ```
type DatabaseExternalContainerDatabase struct {
	pulumi.CustomResourceState

	// The character set of the external database.
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringOutput `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringOutput `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfig DatabaseExternalContainerDatabaseDatabaseManagementConfigOutput `pulumi:"databaseManagementConfig"`
	// The Oracle Database version.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringOutput `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringOutput `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringOutput `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet pulumi.StringOutput `pulumi:"ncharacterSet"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewDatabaseExternalContainerDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabaseExternalContainerDatabase(ctx *pulumi.Context,
	name string, args *DatabaseExternalContainerDatabaseArgs, opts ...pulumi.ResourceOption) (*DatabaseExternalContainerDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource DatabaseExternalContainerDatabase
	err := ctx.RegisterResource("oci:index/databaseExternalContainerDatabase:DatabaseExternalContainerDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseExternalContainerDatabase gets an existing DatabaseExternalContainerDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseExternalContainerDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseExternalContainerDatabaseState, opts ...pulumi.ResourceOption) (*DatabaseExternalContainerDatabase, error) {
	var resource DatabaseExternalContainerDatabase
	err := ctx.ReadResource("oci:index/databaseExternalContainerDatabase:DatabaseExternalContainerDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseExternalContainerDatabase resources.
type databaseExternalContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet *string `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration *string `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfig *DatabaseExternalContainerDatabaseDatabaseManagementConfig `pulumi:"databaseManagementConfig"`
	// The Oracle Database version.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId *string `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks *string `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone *string `pulumi:"timeZone"`
}

type DatabaseExternalContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringPtrInput
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringPtrInput
	// The configuration of the Database Management service.
	DatabaseManagementConfig DatabaseExternalContainerDatabaseDatabaseManagementConfigPtrInput
	// The Oracle Database version.
	DatabaseVersion pulumi.StringPtrInput
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringPtrInput
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringPtrInput
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character of the external database.
	NcharacterSet pulumi.StringPtrInput
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringPtrInput
}

func (DatabaseExternalContainerDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalContainerDatabaseState)(nil)).Elem()
}

type databaseExternalContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a DatabaseExternalContainerDatabase resource.
type DatabaseExternalContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (DatabaseExternalContainerDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalContainerDatabaseArgs)(nil)).Elem()
}

type DatabaseExternalContainerDatabaseInput interface {
	pulumi.Input

	ToDatabaseExternalContainerDatabaseOutput() DatabaseExternalContainerDatabaseOutput
	ToDatabaseExternalContainerDatabaseOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseOutput
}

func (*DatabaseExternalContainerDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalContainerDatabase)(nil))
}

func (i *DatabaseExternalContainerDatabase) ToDatabaseExternalContainerDatabaseOutput() DatabaseExternalContainerDatabaseOutput {
	return i.ToDatabaseExternalContainerDatabaseOutputWithContext(context.Background())
}

func (i *DatabaseExternalContainerDatabase) ToDatabaseExternalContainerDatabaseOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalContainerDatabaseOutput)
}

func (i *DatabaseExternalContainerDatabase) ToDatabaseExternalContainerDatabasePtrOutput() DatabaseExternalContainerDatabasePtrOutput {
	return i.ToDatabaseExternalContainerDatabasePtrOutputWithContext(context.Background())
}

func (i *DatabaseExternalContainerDatabase) ToDatabaseExternalContainerDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalContainerDatabasePtrOutput)
}

type DatabaseExternalContainerDatabasePtrInput interface {
	pulumi.Input

	ToDatabaseExternalContainerDatabasePtrOutput() DatabaseExternalContainerDatabasePtrOutput
	ToDatabaseExternalContainerDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabasePtrOutput
}

type databaseExternalContainerDatabasePtrType DatabaseExternalContainerDatabaseArgs

func (*databaseExternalContainerDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalContainerDatabase)(nil))
}

func (i *databaseExternalContainerDatabasePtrType) ToDatabaseExternalContainerDatabasePtrOutput() DatabaseExternalContainerDatabasePtrOutput {
	return i.ToDatabaseExternalContainerDatabasePtrOutputWithContext(context.Background())
}

func (i *databaseExternalContainerDatabasePtrType) ToDatabaseExternalContainerDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalContainerDatabasePtrOutput)
}

// DatabaseExternalContainerDatabaseArrayInput is an input type that accepts DatabaseExternalContainerDatabaseArray and DatabaseExternalContainerDatabaseArrayOutput values.
// You can construct a concrete instance of `DatabaseExternalContainerDatabaseArrayInput` via:
//
//          DatabaseExternalContainerDatabaseArray{ DatabaseExternalContainerDatabaseArgs{...} }
type DatabaseExternalContainerDatabaseArrayInput interface {
	pulumi.Input

	ToDatabaseExternalContainerDatabaseArrayOutput() DatabaseExternalContainerDatabaseArrayOutput
	ToDatabaseExternalContainerDatabaseArrayOutputWithContext(context.Context) DatabaseExternalContainerDatabaseArrayOutput
}

type DatabaseExternalContainerDatabaseArray []DatabaseExternalContainerDatabaseInput

func (DatabaseExternalContainerDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseExternalContainerDatabase)(nil)).Elem()
}

func (i DatabaseExternalContainerDatabaseArray) ToDatabaseExternalContainerDatabaseArrayOutput() DatabaseExternalContainerDatabaseArrayOutput {
	return i.ToDatabaseExternalContainerDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabaseExternalContainerDatabaseArray) ToDatabaseExternalContainerDatabaseArrayOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalContainerDatabaseArrayOutput)
}

// DatabaseExternalContainerDatabaseMapInput is an input type that accepts DatabaseExternalContainerDatabaseMap and DatabaseExternalContainerDatabaseMapOutput values.
// You can construct a concrete instance of `DatabaseExternalContainerDatabaseMapInput` via:
//
//          DatabaseExternalContainerDatabaseMap{ "key": DatabaseExternalContainerDatabaseArgs{...} }
type DatabaseExternalContainerDatabaseMapInput interface {
	pulumi.Input

	ToDatabaseExternalContainerDatabaseMapOutput() DatabaseExternalContainerDatabaseMapOutput
	ToDatabaseExternalContainerDatabaseMapOutputWithContext(context.Context) DatabaseExternalContainerDatabaseMapOutput
}

type DatabaseExternalContainerDatabaseMap map[string]DatabaseExternalContainerDatabaseInput

func (DatabaseExternalContainerDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseExternalContainerDatabase)(nil)).Elem()
}

func (i DatabaseExternalContainerDatabaseMap) ToDatabaseExternalContainerDatabaseMapOutput() DatabaseExternalContainerDatabaseMapOutput {
	return i.ToDatabaseExternalContainerDatabaseMapOutputWithContext(context.Background())
}

func (i DatabaseExternalContainerDatabaseMap) ToDatabaseExternalContainerDatabaseMapOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalContainerDatabaseMapOutput)
}

type DatabaseExternalContainerDatabaseOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalContainerDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalContainerDatabase)(nil))
}

func (o DatabaseExternalContainerDatabaseOutput) ToDatabaseExternalContainerDatabaseOutput() DatabaseExternalContainerDatabaseOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseOutput) ToDatabaseExternalContainerDatabaseOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseOutput) ToDatabaseExternalContainerDatabasePtrOutput() DatabaseExternalContainerDatabasePtrOutput {
	return o.ToDatabaseExternalContainerDatabasePtrOutputWithContext(context.Background())
}

func (o DatabaseExternalContainerDatabaseOutput) ToDatabaseExternalContainerDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabasePtrOutput {
	return o.ApplyT(func(v DatabaseExternalContainerDatabase) *DatabaseExternalContainerDatabase {
		return &v
	}).(DatabaseExternalContainerDatabasePtrOutput)
}

type DatabaseExternalContainerDatabasePtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalContainerDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalContainerDatabase)(nil))
}

func (o DatabaseExternalContainerDatabasePtrOutput) ToDatabaseExternalContainerDatabasePtrOutput() DatabaseExternalContainerDatabasePtrOutput {
	return o
}

func (o DatabaseExternalContainerDatabasePtrOutput) ToDatabaseExternalContainerDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabasePtrOutput {
	return o
}

type DatabaseExternalContainerDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseExternalContainerDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseExternalContainerDatabase)(nil))
}

func (o DatabaseExternalContainerDatabaseArrayOutput) ToDatabaseExternalContainerDatabaseArrayOutput() DatabaseExternalContainerDatabaseArrayOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseArrayOutput) ToDatabaseExternalContainerDatabaseArrayOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseArrayOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseArrayOutput) Index(i pulumi.IntInput) DatabaseExternalContainerDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseExternalContainerDatabase {
		return vs[0].([]DatabaseExternalContainerDatabase)[vs[1].(int)]
	}).(DatabaseExternalContainerDatabaseOutput)
}

type DatabaseExternalContainerDatabaseMapOutput struct{ *pulumi.OutputState }

func (DatabaseExternalContainerDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseExternalContainerDatabase)(nil))
}

func (o DatabaseExternalContainerDatabaseMapOutput) ToDatabaseExternalContainerDatabaseMapOutput() DatabaseExternalContainerDatabaseMapOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseMapOutput) ToDatabaseExternalContainerDatabaseMapOutputWithContext(ctx context.Context) DatabaseExternalContainerDatabaseMapOutput {
	return o
}

func (o DatabaseExternalContainerDatabaseMapOutput) MapIndex(k pulumi.StringInput) DatabaseExternalContainerDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseExternalContainerDatabase {
		return vs[0].(map[string]DatabaseExternalContainerDatabase)[vs[1].(string)]
	}).(DatabaseExternalContainerDatabaseOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseExternalContainerDatabaseOutput{})
	pulumi.RegisterOutputType(DatabaseExternalContainerDatabasePtrOutput{})
	pulumi.RegisterOutputType(DatabaseExternalContainerDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseExternalContainerDatabaseMapOutput{})
}
