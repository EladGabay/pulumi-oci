// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreIpsecStatus
    {
        /// <summary>
        /// This data source provides details about a specific Ip Sec Connection Device Status resource in Oracle Cloud Infrastructure Core service.
        /// 
        /// Deprecated. To get the tunnel status, instead use
        /// [GetIPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/GetIPSecConnectionTunnel).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testIpSecConnectionDeviceStatus = Output.Create(Oci.GetCoreIpsecStatus.InvokeAsync(new Oci.GetCoreIpsecStatusArgs
        ///         {
        ///             IpsecId = oci_core_ipsec.Test_ipsec.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreIpsecStatusResult> InvokeAsync(GetCoreIpsecStatusArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreIpsecStatusResult>("oci:index/getCoreIpsecStatus:GetCoreIpsecStatus", args ?? new GetCoreIpsecStatusArgs(), options.WithVersion());
    }


    public sealed class GetCoreIpsecStatusArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCoreIpsecStatusFilterArgs>? _filters;
        public List<Inputs.GetCoreIpsecStatusFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreIpsecStatusFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
        /// </summary>
        [Input("ipsecId", required: true)]
        public string IpsecId { get; set; } = null!;

        public GetCoreIpsecStatusArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreIpsecStatusResult
    {
        /// <summary>
        /// The OCID of the compartment containing the IPSec connection.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCoreIpsecStatusFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpsecId;
        /// <summary>
        /// The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// Two [TunnelStatus](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelStatus/) objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreIpsecStatusTunnelResult> Tunnels;

        [OutputConstructor]
        private GetCoreIpsecStatusResult(
            string compartmentId,

            ImmutableArray<Outputs.GetCoreIpsecStatusFilterResult> filters,

            string id,

            string ipsecId,

            string timeCreated,

            ImmutableArray<Outputs.GetCoreIpsecStatusTunnelResult> tunnels)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            IpsecId = ipsecId;
            TimeCreated = timeCreated;
            Tunnels = tunnels;
        }
    }
}
