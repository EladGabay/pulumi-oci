// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseDbNodeConsoleConnections
    {
        /// <summary>
        /// This data source provides the list of Db Node Console Connections in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the console connections for the specified database node.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testDbNodeConsoleConnections = Output.Create(Oci.GetDatabaseDbNodeConsoleConnections.InvokeAsync(new Oci.GetDatabaseDbNodeConsoleConnectionsArgs
        ///         {
        ///             DbNodeId = oci_database_db_node.Test_db_node.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseDbNodeConsoleConnectionsResult> InvokeAsync(GetDatabaseDbNodeConsoleConnectionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseDbNodeConsoleConnectionsResult>("oci:index/getDatabaseDbNodeConsoleConnections:GetDatabaseDbNodeConsoleConnections", args ?? new GetDatabaseDbNodeConsoleConnectionsArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseDbNodeConsoleConnectionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbNodeId", required: true)]
        public string DbNodeId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDatabaseDbNodeConsoleConnectionsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseDbNodeConsoleConnectionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseDbNodeConsoleConnectionsFilterArgs>());
            set => _filters = value;
        }

        public GetDatabaseDbNodeConsoleConnectionsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseDbNodeConsoleConnectionsResult
    {
        /// <summary>
        /// The list of console_connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseDbNodeConsoleConnectionsConsoleConnectionResult> ConsoleConnections;
        /// <summary>
        /// The OCID of the database node.
        /// </summary>
        public readonly string DbNodeId;
        public readonly ImmutableArray<Outputs.GetDatabaseDbNodeConsoleConnectionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDatabaseDbNodeConsoleConnectionsResult(
            ImmutableArray<Outputs.GetDatabaseDbNodeConsoleConnectionsConsoleConnectionResult> consoleConnections,

            string dbNodeId,

            ImmutableArray<Outputs.GetDatabaseDbNodeConsoleConnectionsFilterResult> filters,

            string id)
        {
            ConsoleConnections = consoleConnections;
            DbNodeId = dbNodeId;
            Filters = filters;
            Id = id;
        }
    }
}
