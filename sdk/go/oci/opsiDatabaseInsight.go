// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// DatabaseInsights can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/opsiDatabaseInsight:OpsiDatabaseInsight test_database_insight "id"
// ```
type OpsiDatabaseInsight struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment Identifier of database
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Display name of database
	DatabaseDisplayName pulumi.StringOutput `pulumi:"databaseDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// Name of database
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// Operations Insights internal representation of the database type.
	DatabaseType pulumi.StringOutput `pulumi:"databaseType"`
	// The version of the database.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringOutput `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName pulumi.StringOutput `pulumi:"enterpriseManagerEntityDisplayName"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringOutput `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName pulumi.StringOutput `pulumi:"enterpriseManagerEntityName"`
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType pulumi.StringOutput `pulumi:"enterpriseManagerEntityType"`
	// Enterprise Manager Unqiue Identifier
	EnterpriseManagerIdentifier pulumi.StringOutput `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the database entity. The supported type is "EM_MANAGED_EXTERNAL_DATABASE"
	EntitySource pulumi.StringOutput `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Processor count.
	ProcessorCount pulumi.IntOutput `pulumi:"processorCount"`
	// The current state of the database.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringOutput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the the database insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the database insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOpsiDatabaseInsight registers a new resource with the given unique name, arguments, and options.
func NewOpsiDatabaseInsight(ctx *pulumi.Context,
	name string, args *OpsiDatabaseInsightArgs, opts ...pulumi.ResourceOption) (*OpsiDatabaseInsight, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.EnterpriseManagerBridgeId == nil {
		return nil, errors.New("invalid value for required argument 'EnterpriseManagerBridgeId'")
	}
	if args.EnterpriseManagerEntityIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'EnterpriseManagerEntityIdentifier'")
	}
	if args.EnterpriseManagerIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'EnterpriseManagerIdentifier'")
	}
	if args.EntitySource == nil {
		return nil, errors.New("invalid value for required argument 'EntitySource'")
	}
	var resource OpsiDatabaseInsight
	err := ctx.RegisterResource("oci:index/opsiDatabaseInsight:OpsiDatabaseInsight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpsiDatabaseInsight gets an existing OpsiDatabaseInsight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpsiDatabaseInsight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpsiDatabaseInsightState, opts ...pulumi.ResourceOption) (*OpsiDatabaseInsight, error) {
	var resource OpsiDatabaseInsight
	err := ctx.ReadResource("oci:index/opsiDatabaseInsight:OpsiDatabaseInsight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpsiDatabaseInsight resources.
type opsiDatabaseInsightState struct {
	// (Updatable) Compartment Identifier of database
	CompartmentId *string `pulumi:"compartmentId"`
	// Display name of database
	DatabaseDisplayName *string `pulumi:"databaseDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
	DatabaseId *string `pulumi:"databaseId"`
	// Name of database
	DatabaseName *string `pulumi:"databaseName"`
	// Operations Insights internal representation of the database type.
	DatabaseType *string `pulumi:"databaseType"`
	// The version of the database.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId *string `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName *string `pulumi:"enterpriseManagerEntityDisplayName"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier *string `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName *string `pulumi:"enterpriseManagerEntityName"`
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType *string `pulumi:"enterpriseManagerEntityType"`
	// Enterprise Manager Unqiue Identifier
	EnterpriseManagerIdentifier *string `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the database entity. The supported type is "EM_MANAGED_EXTERNAL_DATABASE"
	EntitySource *string `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Processor count.
	ProcessorCount *int `pulumi:"processorCount"`
	// The current state of the database.
	State *string `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status *string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the database insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the database insight was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OpsiDatabaseInsightState struct {
	// (Updatable) Compartment Identifier of database
	CompartmentId pulumi.StringPtrInput
	// Display name of database
	DatabaseDisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
	DatabaseId pulumi.StringPtrInput
	// Name of database
	DatabaseName pulumi.StringPtrInput
	// Operations Insights internal representation of the database type.
	DatabaseType pulumi.StringPtrInput
	// The version of the database.
	DatabaseVersion pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringPtrInput
	// Enterprise Manager Entity Display Name
	EnterpriseManagerEntityDisplayName pulumi.StringPtrInput
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringPtrInput
	// Enterprise Manager Entity Name
	EnterpriseManagerEntityName pulumi.StringPtrInput
	// Enterprise Manager Entity Type
	EnterpriseManagerEntityType pulumi.StringPtrInput
	// Enterprise Manager Unqiue Identifier
	EnterpriseManagerIdentifier pulumi.StringPtrInput
	// (Updatable) Source of the database entity. The supported type is "EM_MANAGED_EXTERNAL_DATABASE"
	EntitySource pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Processor count.
	ProcessorCount pulumi.IntPtrInput
	// The current state of the database.
	State pulumi.StringPtrInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the the database insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the database insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
}

func (OpsiDatabaseInsightState) ElementType() reflect.Type {
	return reflect.TypeOf((*opsiDatabaseInsightState)(nil)).Elem()
}

type opsiDatabaseInsightArgs struct {
	// (Updatable) Compartment Identifier of database
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId string `pulumi:"enterpriseManagerBridgeId"`
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier string `pulumi:"enterpriseManagerEntityIdentifier"`
	// Enterprise Manager Unqiue Identifier
	EnterpriseManagerIdentifier string `pulumi:"enterpriseManagerIdentifier"`
	// (Updatable) Source of the database entity. The supported type is "EM_MANAGED_EXTERNAL_DATABASE"
	EntitySource string `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a OpsiDatabaseInsight resource.
type OpsiDatabaseInsightArgs struct {
	// (Updatable) Compartment Identifier of database
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// OPSI Enterprise Manager Bridge OCID
	EnterpriseManagerBridgeId pulumi.StringInput
	// Enterprise Manager Entity Unique Identifier
	EnterpriseManagerEntityIdentifier pulumi.StringInput
	// Enterprise Manager Unqiue Identifier
	EnterpriseManagerIdentifier pulumi.StringInput
	// (Updatable) Source of the database entity. The supported type is "EM_MANAGED_EXTERNAL_DATABASE"
	EntitySource pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringPtrInput
}

func (OpsiDatabaseInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*opsiDatabaseInsightArgs)(nil)).Elem()
}

type OpsiDatabaseInsightInput interface {
	pulumi.Input

	ToOpsiDatabaseInsightOutput() OpsiDatabaseInsightOutput
	ToOpsiDatabaseInsightOutputWithContext(ctx context.Context) OpsiDatabaseInsightOutput
}

func (*OpsiDatabaseInsight) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsiDatabaseInsight)(nil))
}

func (i *OpsiDatabaseInsight) ToOpsiDatabaseInsightOutput() OpsiDatabaseInsightOutput {
	return i.ToOpsiDatabaseInsightOutputWithContext(context.Background())
}

func (i *OpsiDatabaseInsight) ToOpsiDatabaseInsightOutputWithContext(ctx context.Context) OpsiDatabaseInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiDatabaseInsightOutput)
}

func (i *OpsiDatabaseInsight) ToOpsiDatabaseInsightPtrOutput() OpsiDatabaseInsightPtrOutput {
	return i.ToOpsiDatabaseInsightPtrOutputWithContext(context.Background())
}

func (i *OpsiDatabaseInsight) ToOpsiDatabaseInsightPtrOutputWithContext(ctx context.Context) OpsiDatabaseInsightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiDatabaseInsightPtrOutput)
}

type OpsiDatabaseInsightPtrInput interface {
	pulumi.Input

	ToOpsiDatabaseInsightPtrOutput() OpsiDatabaseInsightPtrOutput
	ToOpsiDatabaseInsightPtrOutputWithContext(ctx context.Context) OpsiDatabaseInsightPtrOutput
}

type opsiDatabaseInsightPtrType OpsiDatabaseInsightArgs

func (*opsiDatabaseInsightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpsiDatabaseInsight)(nil))
}

func (i *opsiDatabaseInsightPtrType) ToOpsiDatabaseInsightPtrOutput() OpsiDatabaseInsightPtrOutput {
	return i.ToOpsiDatabaseInsightPtrOutputWithContext(context.Background())
}

func (i *opsiDatabaseInsightPtrType) ToOpsiDatabaseInsightPtrOutputWithContext(ctx context.Context) OpsiDatabaseInsightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiDatabaseInsightPtrOutput)
}

// OpsiDatabaseInsightArrayInput is an input type that accepts OpsiDatabaseInsightArray and OpsiDatabaseInsightArrayOutput values.
// You can construct a concrete instance of `OpsiDatabaseInsightArrayInput` via:
//
//          OpsiDatabaseInsightArray{ OpsiDatabaseInsightArgs{...} }
type OpsiDatabaseInsightArrayInput interface {
	pulumi.Input

	ToOpsiDatabaseInsightArrayOutput() OpsiDatabaseInsightArrayOutput
	ToOpsiDatabaseInsightArrayOutputWithContext(context.Context) OpsiDatabaseInsightArrayOutput
}

type OpsiDatabaseInsightArray []OpsiDatabaseInsightInput

func (OpsiDatabaseInsightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpsiDatabaseInsight)(nil)).Elem()
}

func (i OpsiDatabaseInsightArray) ToOpsiDatabaseInsightArrayOutput() OpsiDatabaseInsightArrayOutput {
	return i.ToOpsiDatabaseInsightArrayOutputWithContext(context.Background())
}

func (i OpsiDatabaseInsightArray) ToOpsiDatabaseInsightArrayOutputWithContext(ctx context.Context) OpsiDatabaseInsightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiDatabaseInsightArrayOutput)
}

// OpsiDatabaseInsightMapInput is an input type that accepts OpsiDatabaseInsightMap and OpsiDatabaseInsightMapOutput values.
// You can construct a concrete instance of `OpsiDatabaseInsightMapInput` via:
//
//          OpsiDatabaseInsightMap{ "key": OpsiDatabaseInsightArgs{...} }
type OpsiDatabaseInsightMapInput interface {
	pulumi.Input

	ToOpsiDatabaseInsightMapOutput() OpsiDatabaseInsightMapOutput
	ToOpsiDatabaseInsightMapOutputWithContext(context.Context) OpsiDatabaseInsightMapOutput
}

type OpsiDatabaseInsightMap map[string]OpsiDatabaseInsightInput

func (OpsiDatabaseInsightMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpsiDatabaseInsight)(nil)).Elem()
}

func (i OpsiDatabaseInsightMap) ToOpsiDatabaseInsightMapOutput() OpsiDatabaseInsightMapOutput {
	return i.ToOpsiDatabaseInsightMapOutputWithContext(context.Background())
}

func (i OpsiDatabaseInsightMap) ToOpsiDatabaseInsightMapOutputWithContext(ctx context.Context) OpsiDatabaseInsightMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiDatabaseInsightMapOutput)
}

type OpsiDatabaseInsightOutput struct {
	*pulumi.OutputState
}

func (OpsiDatabaseInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsiDatabaseInsight)(nil))
}

func (o OpsiDatabaseInsightOutput) ToOpsiDatabaseInsightOutput() OpsiDatabaseInsightOutput {
	return o
}

func (o OpsiDatabaseInsightOutput) ToOpsiDatabaseInsightOutputWithContext(ctx context.Context) OpsiDatabaseInsightOutput {
	return o
}

func (o OpsiDatabaseInsightOutput) ToOpsiDatabaseInsightPtrOutput() OpsiDatabaseInsightPtrOutput {
	return o.ToOpsiDatabaseInsightPtrOutputWithContext(context.Background())
}

func (o OpsiDatabaseInsightOutput) ToOpsiDatabaseInsightPtrOutputWithContext(ctx context.Context) OpsiDatabaseInsightPtrOutput {
	return o.ApplyT(func(v OpsiDatabaseInsight) *OpsiDatabaseInsight {
		return &v
	}).(OpsiDatabaseInsightPtrOutput)
}

type OpsiDatabaseInsightPtrOutput struct {
	*pulumi.OutputState
}

func (OpsiDatabaseInsightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpsiDatabaseInsight)(nil))
}

func (o OpsiDatabaseInsightPtrOutput) ToOpsiDatabaseInsightPtrOutput() OpsiDatabaseInsightPtrOutput {
	return o
}

func (o OpsiDatabaseInsightPtrOutput) ToOpsiDatabaseInsightPtrOutputWithContext(ctx context.Context) OpsiDatabaseInsightPtrOutput {
	return o
}

type OpsiDatabaseInsightArrayOutput struct{ *pulumi.OutputState }

func (OpsiDatabaseInsightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpsiDatabaseInsight)(nil))
}

func (o OpsiDatabaseInsightArrayOutput) ToOpsiDatabaseInsightArrayOutput() OpsiDatabaseInsightArrayOutput {
	return o
}

func (o OpsiDatabaseInsightArrayOutput) ToOpsiDatabaseInsightArrayOutputWithContext(ctx context.Context) OpsiDatabaseInsightArrayOutput {
	return o
}

func (o OpsiDatabaseInsightArrayOutput) Index(i pulumi.IntInput) OpsiDatabaseInsightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpsiDatabaseInsight {
		return vs[0].([]OpsiDatabaseInsight)[vs[1].(int)]
	}).(OpsiDatabaseInsightOutput)
}

type OpsiDatabaseInsightMapOutput struct{ *pulumi.OutputState }

func (OpsiDatabaseInsightMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OpsiDatabaseInsight)(nil))
}

func (o OpsiDatabaseInsightMapOutput) ToOpsiDatabaseInsightMapOutput() OpsiDatabaseInsightMapOutput {
	return o
}

func (o OpsiDatabaseInsightMapOutput) ToOpsiDatabaseInsightMapOutputWithContext(ctx context.Context) OpsiDatabaseInsightMapOutput {
	return o
}

func (o OpsiDatabaseInsightMapOutput) MapIndex(k pulumi.StringInput) OpsiDatabaseInsightOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OpsiDatabaseInsight {
		return vs[0].(map[string]OpsiDatabaseInsight)[vs[1].(string)]
	}).(OpsiDatabaseInsightOutput)
}

func init() {
	pulumi.RegisterOutputType(OpsiDatabaseInsightOutput{})
	pulumi.RegisterOutputType(OpsiDatabaseInsightPtrOutput{})
	pulumi.RegisterOutputType(OpsiDatabaseInsightArrayOutput{})
	pulumi.RegisterOutputType(OpsiDatabaseInsightMapOutput{})
}
