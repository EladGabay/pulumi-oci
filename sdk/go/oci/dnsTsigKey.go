// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tsig Key resource in Oracle Cloud Infrastructure DNS service.
//
// Creates a new TSIG key in the specified compartment. There is no
// `opc-retry-token` header since TSIG key names must be globally unique.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDnsTsigKey(ctx, "testTsigKey", &oci.DnsTsigKeyArgs{
// 			Algorithm:     pulumi.Any(_var.Tsig_key_algorithm),
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Secret:        pulumi.Any(_var.Tsig_key_secret),
// 			DefinedTags:   pulumi.Any(_var.Tsig_key_defined_tags),
// 			FreeformTags:  pulumi.Any(_var.Tsig_key_freeform_tags),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// TsigKeys can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/dnsTsigKey:DnsTsigKey test_tsig_key "id"
// ```
type DnsTsigKey struct {
	pulumi.CustomResourceState

	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm pulumi.StringOutput `pulumi:"algorithm"`
	// (Updatable) The OCID of the compartment containing the TSIG key.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A globally unique domain name identifying the key for a given pair of hosts.
	Name pulumi.StringOutput `pulumi:"name"`
	// A base64 string encoding the binary shared secret.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringOutput `pulumi:"self"`
	// The current state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDnsTsigKey registers a new resource with the given unique name, arguments, and options.
func NewDnsTsigKey(ctx *pulumi.Context,
	name string, args *DnsTsigKeyArgs, opts ...pulumi.ResourceOption) (*DnsTsigKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Algorithm == nil {
		return nil, errors.New("invalid value for required argument 'Algorithm'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Secret == nil {
		return nil, errors.New("invalid value for required argument 'Secret'")
	}
	var resource DnsTsigKey
	err := ctx.RegisterResource("oci:index/dnsTsigKey:DnsTsigKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsTsigKey gets an existing DnsTsigKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsTsigKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsTsigKeyState, opts ...pulumi.ResourceOption) (*DnsTsigKey, error) {
	var resource DnsTsigKey
	err := ctx.ReadResource("oci:index/dnsTsigKey:DnsTsigKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsTsigKey resources.
type dnsTsigKeyState struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm *string `pulumi:"algorithm"`
	// (Updatable) The OCID of the compartment containing the TSIG key.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A globally unique domain name identifying the key for a given pair of hosts.
	Name *string `pulumi:"name"`
	// A base64 string encoding the binary shared secret.
	Secret *string `pulumi:"secret"`
	// The canonical absolute URL of the resource.
	Self *string `pulumi:"self"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DnsTsigKeyState struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment containing the TSIG key.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.MapInput
	// A globally unique domain name identifying the key for a given pair of hosts.
	Name pulumi.StringPtrInput
	// A base64 string encoding the binary shared secret.
	Secret pulumi.StringPtrInput
	// The canonical absolute URL of the resource.
	Self pulumi.StringPtrInput
	// The current state of the resource.
	State pulumi.StringPtrInput
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringPtrInput
	// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
	TimeUpdated pulumi.StringPtrInput
}

func (DnsTsigKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsTsigKeyState)(nil)).Elem()
}

type dnsTsigKeyArgs struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm string `pulumi:"algorithm"`
	// (Updatable) The OCID of the compartment containing the TSIG key.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A globally unique domain name identifying the key for a given pair of hosts.
	Name *string `pulumi:"name"`
	// A base64 string encoding the binary shared secret.
	Secret string `pulumi:"secret"`
}

// The set of arguments for constructing a DnsTsigKey resource.
type DnsTsigKeyArgs struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm pulumi.StringInput
	// (Updatable) The OCID of the compartment containing the TSIG key.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.MapInput
	// A globally unique domain name identifying the key for a given pair of hosts.
	Name pulumi.StringPtrInput
	// A base64 string encoding the binary shared secret.
	Secret pulumi.StringInput
}

func (DnsTsigKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsTsigKeyArgs)(nil)).Elem()
}

type DnsTsigKeyInput interface {
	pulumi.Input

	ToDnsTsigKeyOutput() DnsTsigKeyOutput
	ToDnsTsigKeyOutputWithContext(ctx context.Context) DnsTsigKeyOutput
}

func (*DnsTsigKey) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsTsigKey)(nil))
}

func (i *DnsTsigKey) ToDnsTsigKeyOutput() DnsTsigKeyOutput {
	return i.ToDnsTsigKeyOutputWithContext(context.Background())
}

func (i *DnsTsigKey) ToDnsTsigKeyOutputWithContext(ctx context.Context) DnsTsigKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsTsigKeyOutput)
}

func (i *DnsTsigKey) ToDnsTsigKeyPtrOutput() DnsTsigKeyPtrOutput {
	return i.ToDnsTsigKeyPtrOutputWithContext(context.Background())
}

func (i *DnsTsigKey) ToDnsTsigKeyPtrOutputWithContext(ctx context.Context) DnsTsigKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsTsigKeyPtrOutput)
}

type DnsTsigKeyPtrInput interface {
	pulumi.Input

	ToDnsTsigKeyPtrOutput() DnsTsigKeyPtrOutput
	ToDnsTsigKeyPtrOutputWithContext(ctx context.Context) DnsTsigKeyPtrOutput
}

type dnsTsigKeyPtrType DnsTsigKeyArgs

func (*dnsTsigKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsTsigKey)(nil))
}

func (i *dnsTsigKeyPtrType) ToDnsTsigKeyPtrOutput() DnsTsigKeyPtrOutput {
	return i.ToDnsTsigKeyPtrOutputWithContext(context.Background())
}

func (i *dnsTsigKeyPtrType) ToDnsTsigKeyPtrOutputWithContext(ctx context.Context) DnsTsigKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsTsigKeyPtrOutput)
}

// DnsTsigKeyArrayInput is an input type that accepts DnsTsigKeyArray and DnsTsigKeyArrayOutput values.
// You can construct a concrete instance of `DnsTsigKeyArrayInput` via:
//
//          DnsTsigKeyArray{ DnsTsigKeyArgs{...} }
type DnsTsigKeyArrayInput interface {
	pulumi.Input

	ToDnsTsigKeyArrayOutput() DnsTsigKeyArrayOutput
	ToDnsTsigKeyArrayOutputWithContext(context.Context) DnsTsigKeyArrayOutput
}

type DnsTsigKeyArray []DnsTsigKeyInput

func (DnsTsigKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsTsigKey)(nil)).Elem()
}

func (i DnsTsigKeyArray) ToDnsTsigKeyArrayOutput() DnsTsigKeyArrayOutput {
	return i.ToDnsTsigKeyArrayOutputWithContext(context.Background())
}

func (i DnsTsigKeyArray) ToDnsTsigKeyArrayOutputWithContext(ctx context.Context) DnsTsigKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsTsigKeyArrayOutput)
}

// DnsTsigKeyMapInput is an input type that accepts DnsTsigKeyMap and DnsTsigKeyMapOutput values.
// You can construct a concrete instance of `DnsTsigKeyMapInput` via:
//
//          DnsTsigKeyMap{ "key": DnsTsigKeyArgs{...} }
type DnsTsigKeyMapInput interface {
	pulumi.Input

	ToDnsTsigKeyMapOutput() DnsTsigKeyMapOutput
	ToDnsTsigKeyMapOutputWithContext(context.Context) DnsTsigKeyMapOutput
}

type DnsTsigKeyMap map[string]DnsTsigKeyInput

func (DnsTsigKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsTsigKey)(nil)).Elem()
}

func (i DnsTsigKeyMap) ToDnsTsigKeyMapOutput() DnsTsigKeyMapOutput {
	return i.ToDnsTsigKeyMapOutputWithContext(context.Background())
}

func (i DnsTsigKeyMap) ToDnsTsigKeyMapOutputWithContext(ctx context.Context) DnsTsigKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsTsigKeyMapOutput)
}

type DnsTsigKeyOutput struct {
	*pulumi.OutputState
}

func (DnsTsigKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsTsigKey)(nil))
}

func (o DnsTsigKeyOutput) ToDnsTsigKeyOutput() DnsTsigKeyOutput {
	return o
}

func (o DnsTsigKeyOutput) ToDnsTsigKeyOutputWithContext(ctx context.Context) DnsTsigKeyOutput {
	return o
}

func (o DnsTsigKeyOutput) ToDnsTsigKeyPtrOutput() DnsTsigKeyPtrOutput {
	return o.ToDnsTsigKeyPtrOutputWithContext(context.Background())
}

func (o DnsTsigKeyOutput) ToDnsTsigKeyPtrOutputWithContext(ctx context.Context) DnsTsigKeyPtrOutput {
	return o.ApplyT(func(v DnsTsigKey) *DnsTsigKey {
		return &v
	}).(DnsTsigKeyPtrOutput)
}

type DnsTsigKeyPtrOutput struct {
	*pulumi.OutputState
}

func (DnsTsigKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsTsigKey)(nil))
}

func (o DnsTsigKeyPtrOutput) ToDnsTsigKeyPtrOutput() DnsTsigKeyPtrOutput {
	return o
}

func (o DnsTsigKeyPtrOutput) ToDnsTsigKeyPtrOutputWithContext(ctx context.Context) DnsTsigKeyPtrOutput {
	return o
}

type DnsTsigKeyArrayOutput struct{ *pulumi.OutputState }

func (DnsTsigKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsTsigKey)(nil))
}

func (o DnsTsigKeyArrayOutput) ToDnsTsigKeyArrayOutput() DnsTsigKeyArrayOutput {
	return o
}

func (o DnsTsigKeyArrayOutput) ToDnsTsigKeyArrayOutputWithContext(ctx context.Context) DnsTsigKeyArrayOutput {
	return o
}

func (o DnsTsigKeyArrayOutput) Index(i pulumi.IntInput) DnsTsigKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsTsigKey {
		return vs[0].([]DnsTsigKey)[vs[1].(int)]
	}).(DnsTsigKeyOutput)
}

type DnsTsigKeyMapOutput struct{ *pulumi.OutputState }

func (DnsTsigKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DnsTsigKey)(nil))
}

func (o DnsTsigKeyMapOutput) ToDnsTsigKeyMapOutput() DnsTsigKeyMapOutput {
	return o
}

func (o DnsTsigKeyMapOutput) ToDnsTsigKeyMapOutputWithContext(ctx context.Context) DnsTsigKeyMapOutput {
	return o
}

func (o DnsTsigKeyMapOutput) MapIndex(k pulumi.StringInput) DnsTsigKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DnsTsigKey {
		return vs[0].(map[string]DnsTsigKey)[vs[1].(string)]
	}).(DnsTsigKeyOutput)
}

func init() {
	pulumi.RegisterOutputType(DnsTsigKeyOutput{})
	pulumi.RegisterOutputType(DnsTsigKeyPtrOutput{})
	pulumi.RegisterOutputType(DnsTsigKeyArrayOutput{})
	pulumi.RegisterOutputType(DnsTsigKeyMapOutput{})
}
