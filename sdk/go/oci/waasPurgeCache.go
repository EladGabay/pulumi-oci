// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Purge Cache resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Performs a purge of the cache for each specified resource. If no resources are passed, the cache for the entire Web Application Firewall will be purged.
// For more information, see [Caching Rules](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/cachingrules.htm#purge).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewWaasPurgeCache(ctx, "testPurgeCache", &oci.WaasPurgeCacheArgs{
// 			WaasPolicyId: pulumi.Any(oci_waas_waas_policy.Test_waas_policy.Id),
// 			Resources:    pulumi.Any(_var.Purge_cache_resources),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type WaasPurgeCache struct {
	pulumi.CustomResourceState

	// A resource to purge, specified by either a hostless absolute path starting with a single slash (Example: `/path/to/resource`) or by a relative path in which the first component will be interpreted as a domain protected by the WAAS policy (Example: `example.com/path/to/resource`).
	Resources pulumi.StringArrayOutput `pulumi:"resources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId pulumi.StringOutput `pulumi:"waasPolicyId"`
}

// NewWaasPurgeCache registers a new resource with the given unique name, arguments, and options.
func NewWaasPurgeCache(ctx *pulumi.Context,
	name string, args *WaasPurgeCacheArgs, opts ...pulumi.ResourceOption) (*WaasPurgeCache, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WaasPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'WaasPolicyId'")
	}
	var resource WaasPurgeCache
	err := ctx.RegisterResource("oci:index/waasPurgeCache:WaasPurgeCache", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWaasPurgeCache gets an existing WaasPurgeCache resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWaasPurgeCache(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WaasPurgeCacheState, opts ...pulumi.ResourceOption) (*WaasPurgeCache, error) {
	var resource WaasPurgeCache
	err := ctx.ReadResource("oci:index/waasPurgeCache:WaasPurgeCache", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WaasPurgeCache resources.
type waasPurgeCacheState struct {
	// A resource to purge, specified by either a hostless absolute path starting with a single slash (Example: `/path/to/resource`) or by a relative path in which the first component will be interpreted as a domain protected by the WAAS policy (Example: `example.com/path/to/resource`).
	Resources []string `pulumi:"resources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId *string `pulumi:"waasPolicyId"`
}

type WaasPurgeCacheState struct {
	// A resource to purge, specified by either a hostless absolute path starting with a single slash (Example: `/path/to/resource`) or by a relative path in which the first component will be interpreted as a domain protected by the WAAS policy (Example: `example.com/path/to/resource`).
	Resources pulumi.StringArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId pulumi.StringPtrInput
}

func (WaasPurgeCacheState) ElementType() reflect.Type {
	return reflect.TypeOf((*waasPurgeCacheState)(nil)).Elem()
}

type waasPurgeCacheArgs struct {
	// A resource to purge, specified by either a hostless absolute path starting with a single slash (Example: `/path/to/resource`) or by a relative path in which the first component will be interpreted as a domain protected by the WAAS policy (Example: `example.com/path/to/resource`).
	Resources []string `pulumi:"resources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId string `pulumi:"waasPolicyId"`
}

// The set of arguments for constructing a WaasPurgeCache resource.
type WaasPurgeCacheArgs struct {
	// A resource to purge, specified by either a hostless absolute path starting with a single slash (Example: `/path/to/resource`) or by a relative path in which the first component will be interpreted as a domain protected by the WAAS policy (Example: `example.com/path/to/resource`).
	Resources pulumi.StringArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId pulumi.StringInput
}

func (WaasPurgeCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*waasPurgeCacheArgs)(nil)).Elem()
}

type WaasPurgeCacheInput interface {
	pulumi.Input

	ToWaasPurgeCacheOutput() WaasPurgeCacheOutput
	ToWaasPurgeCacheOutputWithContext(ctx context.Context) WaasPurgeCacheOutput
}

func (*WaasPurgeCache) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasPurgeCache)(nil))
}

func (i *WaasPurgeCache) ToWaasPurgeCacheOutput() WaasPurgeCacheOutput {
	return i.ToWaasPurgeCacheOutputWithContext(context.Background())
}

func (i *WaasPurgeCache) ToWaasPurgeCacheOutputWithContext(ctx context.Context) WaasPurgeCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasPurgeCacheOutput)
}

func (i *WaasPurgeCache) ToWaasPurgeCachePtrOutput() WaasPurgeCachePtrOutput {
	return i.ToWaasPurgeCachePtrOutputWithContext(context.Background())
}

func (i *WaasPurgeCache) ToWaasPurgeCachePtrOutputWithContext(ctx context.Context) WaasPurgeCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasPurgeCachePtrOutput)
}

type WaasPurgeCachePtrInput interface {
	pulumi.Input

	ToWaasPurgeCachePtrOutput() WaasPurgeCachePtrOutput
	ToWaasPurgeCachePtrOutputWithContext(ctx context.Context) WaasPurgeCachePtrOutput
}

type waasPurgeCachePtrType WaasPurgeCacheArgs

func (*waasPurgeCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasPurgeCache)(nil))
}

func (i *waasPurgeCachePtrType) ToWaasPurgeCachePtrOutput() WaasPurgeCachePtrOutput {
	return i.ToWaasPurgeCachePtrOutputWithContext(context.Background())
}

func (i *waasPurgeCachePtrType) ToWaasPurgeCachePtrOutputWithContext(ctx context.Context) WaasPurgeCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasPurgeCachePtrOutput)
}

// WaasPurgeCacheArrayInput is an input type that accepts WaasPurgeCacheArray and WaasPurgeCacheArrayOutput values.
// You can construct a concrete instance of `WaasPurgeCacheArrayInput` via:
//
//          WaasPurgeCacheArray{ WaasPurgeCacheArgs{...} }
type WaasPurgeCacheArrayInput interface {
	pulumi.Input

	ToWaasPurgeCacheArrayOutput() WaasPurgeCacheArrayOutput
	ToWaasPurgeCacheArrayOutputWithContext(context.Context) WaasPurgeCacheArrayOutput
}

type WaasPurgeCacheArray []WaasPurgeCacheInput

func (WaasPurgeCacheArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaasPurgeCache)(nil)).Elem()
}

func (i WaasPurgeCacheArray) ToWaasPurgeCacheArrayOutput() WaasPurgeCacheArrayOutput {
	return i.ToWaasPurgeCacheArrayOutputWithContext(context.Background())
}

func (i WaasPurgeCacheArray) ToWaasPurgeCacheArrayOutputWithContext(ctx context.Context) WaasPurgeCacheArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasPurgeCacheArrayOutput)
}

// WaasPurgeCacheMapInput is an input type that accepts WaasPurgeCacheMap and WaasPurgeCacheMapOutput values.
// You can construct a concrete instance of `WaasPurgeCacheMapInput` via:
//
//          WaasPurgeCacheMap{ "key": WaasPurgeCacheArgs{...} }
type WaasPurgeCacheMapInput interface {
	pulumi.Input

	ToWaasPurgeCacheMapOutput() WaasPurgeCacheMapOutput
	ToWaasPurgeCacheMapOutputWithContext(context.Context) WaasPurgeCacheMapOutput
}

type WaasPurgeCacheMap map[string]WaasPurgeCacheInput

func (WaasPurgeCacheMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaasPurgeCache)(nil)).Elem()
}

func (i WaasPurgeCacheMap) ToWaasPurgeCacheMapOutput() WaasPurgeCacheMapOutput {
	return i.ToWaasPurgeCacheMapOutputWithContext(context.Background())
}

func (i WaasPurgeCacheMap) ToWaasPurgeCacheMapOutputWithContext(ctx context.Context) WaasPurgeCacheMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasPurgeCacheMapOutput)
}

type WaasPurgeCacheOutput struct {
	*pulumi.OutputState
}

func (WaasPurgeCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasPurgeCache)(nil))
}

func (o WaasPurgeCacheOutput) ToWaasPurgeCacheOutput() WaasPurgeCacheOutput {
	return o
}

func (o WaasPurgeCacheOutput) ToWaasPurgeCacheOutputWithContext(ctx context.Context) WaasPurgeCacheOutput {
	return o
}

func (o WaasPurgeCacheOutput) ToWaasPurgeCachePtrOutput() WaasPurgeCachePtrOutput {
	return o.ToWaasPurgeCachePtrOutputWithContext(context.Background())
}

func (o WaasPurgeCacheOutput) ToWaasPurgeCachePtrOutputWithContext(ctx context.Context) WaasPurgeCachePtrOutput {
	return o.ApplyT(func(v WaasPurgeCache) *WaasPurgeCache {
		return &v
	}).(WaasPurgeCachePtrOutput)
}

type WaasPurgeCachePtrOutput struct {
	*pulumi.OutputState
}

func (WaasPurgeCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasPurgeCache)(nil))
}

func (o WaasPurgeCachePtrOutput) ToWaasPurgeCachePtrOutput() WaasPurgeCachePtrOutput {
	return o
}

func (o WaasPurgeCachePtrOutput) ToWaasPurgeCachePtrOutputWithContext(ctx context.Context) WaasPurgeCachePtrOutput {
	return o
}

type WaasPurgeCacheArrayOutput struct{ *pulumi.OutputState }

func (WaasPurgeCacheArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WaasPurgeCache)(nil))
}

func (o WaasPurgeCacheArrayOutput) ToWaasPurgeCacheArrayOutput() WaasPurgeCacheArrayOutput {
	return o
}

func (o WaasPurgeCacheArrayOutput) ToWaasPurgeCacheArrayOutputWithContext(ctx context.Context) WaasPurgeCacheArrayOutput {
	return o
}

func (o WaasPurgeCacheArrayOutput) Index(i pulumi.IntInput) WaasPurgeCacheOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WaasPurgeCache {
		return vs[0].([]WaasPurgeCache)[vs[1].(int)]
	}).(WaasPurgeCacheOutput)
}

type WaasPurgeCacheMapOutput struct{ *pulumi.OutputState }

func (WaasPurgeCacheMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaasPurgeCache)(nil))
}

func (o WaasPurgeCacheMapOutput) ToWaasPurgeCacheMapOutput() WaasPurgeCacheMapOutput {
	return o
}

func (o WaasPurgeCacheMapOutput) ToWaasPurgeCacheMapOutputWithContext(ctx context.Context) WaasPurgeCacheMapOutput {
	return o
}

func (o WaasPurgeCacheMapOutput) MapIndex(k pulumi.StringInput) WaasPurgeCacheOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WaasPurgeCache {
		return vs[0].(map[string]WaasPurgeCache)[vs[1].(string)]
	}).(WaasPurgeCacheOutput)
}

func init() {
	pulumi.RegisterOutputType(WaasPurgeCacheOutput{})
	pulumi.RegisterOutputType(WaasPurgeCachePtrOutput{})
	pulumi.RegisterOutputType(WaasPurgeCacheArrayOutput{})
	pulumi.RegisterOutputType(WaasPurgeCacheMapOutput{})
}
