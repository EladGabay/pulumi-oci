// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Export resource in Oracle Cloud Infrastructure File Storage service.
//
// Creates a new export in the specified export set, path, and
// file system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewFileStorageExport(ctx, "testExport", &oci.FileStorageExportArgs{
// 			ExportSetId:  pulumi.Any(oci_file_storage_export_set.Test_export_set.Id),
// 			FileSystemId: pulumi.Any(oci_file_storage_file_system.Test_file_system.Id),
// 			Path:         pulumi.Any(_var.Export_path),
// 			ExportOptions: FileStorageExportExportOptionArray{
// 				&FileStorageExportExportOptionArgs{
// 					Source:                      pulumi.Any(_var.Export_export_options_source),
// 					Access:                      pulumi.Any(_var.Export_export_options_access),
// 					AnonymousGid:                pulumi.Any(_var.Export_export_options_anonymous_gid),
// 					AnonymousUid:                pulumi.Any(_var.Export_export_options_anonymous_uid),
// 					IdentitySquash:              pulumi.Any(_var.Export_export_options_identity_squash),
// 					RequirePrivilegedSourcePort: pulumi.Any(_var.Export_export_options_require_privileged_source_port),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Exports can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/fileStorageExport:FileStorageExport test_export "id"
// ```
type FileStorageExport struct {
	pulumi.CustomResourceState

	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	ExportOptions FileStorageExportExportOptionArrayOutput `pulumi:"exportOptions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's export set.
	ExportSetId pulumi.StringOutput `pulumi:"exportSetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's file system.
	FileSystemId pulumi.StringOutput `pulumi:"fileSystemId"`
	// Path used to access the associated file system.
	Path pulumi.StringOutput `pulumi:"path"`
	// The current state of this export.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewFileStorageExport registers a new resource with the given unique name, arguments, and options.
func NewFileStorageExport(ctx *pulumi.Context,
	name string, args *FileStorageExportArgs, opts ...pulumi.ResourceOption) (*FileStorageExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExportSetId == nil {
		return nil, errors.New("invalid value for required argument 'ExportSetId'")
	}
	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	var resource FileStorageExport
	err := ctx.RegisterResource("oci:index/fileStorageExport:FileStorageExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileStorageExport gets an existing FileStorageExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileStorageExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileStorageExportState, opts ...pulumi.ResourceOption) (*FileStorageExport, error) {
	var resource FileStorageExport
	err := ctx.ReadResource("oci:index/fileStorageExport:FileStorageExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileStorageExport resources.
type fileStorageExportState struct {
	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	ExportOptions []FileStorageExportExportOption `pulumi:"exportOptions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's export set.
	ExportSetId *string `pulumi:"exportSetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// Path used to access the associated file system.
	Path *string `pulumi:"path"`
	// The current state of this export.
	State *string `pulumi:"state"`
	// The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type FileStorageExportState struct {
	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	ExportOptions FileStorageExportExportOptionArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's export set.
	ExportSetId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's file system.
	FileSystemId pulumi.StringPtrInput
	// Path used to access the associated file system.
	Path pulumi.StringPtrInput
	// The current state of this export.
	State pulumi.StringPtrInput
	// The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (FileStorageExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileStorageExportState)(nil)).Elem()
}

type fileStorageExportArgs struct {
	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	ExportOptions []FileStorageExportExportOption `pulumi:"exportOptions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's export set.
	ExportSetId string `pulumi:"exportSetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// Path used to access the associated file system.
	Path string `pulumi:"path"`
}

// The set of arguments for constructing a FileStorageExport resource.
type FileStorageExportArgs struct {
	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	ExportOptions FileStorageExportExportOptionArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's export set.
	ExportSetId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export's file system.
	FileSystemId pulumi.StringInput
	// Path used to access the associated file system.
	Path pulumi.StringInput
}

func (FileStorageExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileStorageExportArgs)(nil)).Elem()
}

type FileStorageExportInput interface {
	pulumi.Input

	ToFileStorageExportOutput() FileStorageExportOutput
	ToFileStorageExportOutputWithContext(ctx context.Context) FileStorageExportOutput
}

func (*FileStorageExport) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageExport)(nil))
}

func (i *FileStorageExport) ToFileStorageExportOutput() FileStorageExportOutput {
	return i.ToFileStorageExportOutputWithContext(context.Background())
}

func (i *FileStorageExport) ToFileStorageExportOutputWithContext(ctx context.Context) FileStorageExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageExportOutput)
}

func (i *FileStorageExport) ToFileStorageExportPtrOutput() FileStorageExportPtrOutput {
	return i.ToFileStorageExportPtrOutputWithContext(context.Background())
}

func (i *FileStorageExport) ToFileStorageExportPtrOutputWithContext(ctx context.Context) FileStorageExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageExportPtrOutput)
}

type FileStorageExportPtrInput interface {
	pulumi.Input

	ToFileStorageExportPtrOutput() FileStorageExportPtrOutput
	ToFileStorageExportPtrOutputWithContext(ctx context.Context) FileStorageExportPtrOutput
}

type fileStorageExportPtrType FileStorageExportArgs

func (*fileStorageExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageExport)(nil))
}

func (i *fileStorageExportPtrType) ToFileStorageExportPtrOutput() FileStorageExportPtrOutput {
	return i.ToFileStorageExportPtrOutputWithContext(context.Background())
}

func (i *fileStorageExportPtrType) ToFileStorageExportPtrOutputWithContext(ctx context.Context) FileStorageExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageExportPtrOutput)
}

// FileStorageExportArrayInput is an input type that accepts FileStorageExportArray and FileStorageExportArrayOutput values.
// You can construct a concrete instance of `FileStorageExportArrayInput` via:
//
//          FileStorageExportArray{ FileStorageExportArgs{...} }
type FileStorageExportArrayInput interface {
	pulumi.Input

	ToFileStorageExportArrayOutput() FileStorageExportArrayOutput
	ToFileStorageExportArrayOutputWithContext(context.Context) FileStorageExportArrayOutput
}

type FileStorageExportArray []FileStorageExportInput

func (FileStorageExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileStorageExport)(nil)).Elem()
}

func (i FileStorageExportArray) ToFileStorageExportArrayOutput() FileStorageExportArrayOutput {
	return i.ToFileStorageExportArrayOutputWithContext(context.Background())
}

func (i FileStorageExportArray) ToFileStorageExportArrayOutputWithContext(ctx context.Context) FileStorageExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageExportArrayOutput)
}

// FileStorageExportMapInput is an input type that accepts FileStorageExportMap and FileStorageExportMapOutput values.
// You can construct a concrete instance of `FileStorageExportMapInput` via:
//
//          FileStorageExportMap{ "key": FileStorageExportArgs{...} }
type FileStorageExportMapInput interface {
	pulumi.Input

	ToFileStorageExportMapOutput() FileStorageExportMapOutput
	ToFileStorageExportMapOutputWithContext(context.Context) FileStorageExportMapOutput
}

type FileStorageExportMap map[string]FileStorageExportInput

func (FileStorageExportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileStorageExport)(nil)).Elem()
}

func (i FileStorageExportMap) ToFileStorageExportMapOutput() FileStorageExportMapOutput {
	return i.ToFileStorageExportMapOutputWithContext(context.Background())
}

func (i FileStorageExportMap) ToFileStorageExportMapOutputWithContext(ctx context.Context) FileStorageExportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageExportMapOutput)
}

type FileStorageExportOutput struct {
	*pulumi.OutputState
}

func (FileStorageExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageExport)(nil))
}

func (o FileStorageExportOutput) ToFileStorageExportOutput() FileStorageExportOutput {
	return o
}

func (o FileStorageExportOutput) ToFileStorageExportOutputWithContext(ctx context.Context) FileStorageExportOutput {
	return o
}

func (o FileStorageExportOutput) ToFileStorageExportPtrOutput() FileStorageExportPtrOutput {
	return o.ToFileStorageExportPtrOutputWithContext(context.Background())
}

func (o FileStorageExportOutput) ToFileStorageExportPtrOutputWithContext(ctx context.Context) FileStorageExportPtrOutput {
	return o.ApplyT(func(v FileStorageExport) *FileStorageExport {
		return &v
	}).(FileStorageExportPtrOutput)
}

type FileStorageExportPtrOutput struct {
	*pulumi.OutputState
}

func (FileStorageExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageExport)(nil))
}

func (o FileStorageExportPtrOutput) ToFileStorageExportPtrOutput() FileStorageExportPtrOutput {
	return o
}

func (o FileStorageExportPtrOutput) ToFileStorageExportPtrOutputWithContext(ctx context.Context) FileStorageExportPtrOutput {
	return o
}

type FileStorageExportArrayOutput struct{ *pulumi.OutputState }

func (FileStorageExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileStorageExport)(nil))
}

func (o FileStorageExportArrayOutput) ToFileStorageExportArrayOutput() FileStorageExportArrayOutput {
	return o
}

func (o FileStorageExportArrayOutput) ToFileStorageExportArrayOutputWithContext(ctx context.Context) FileStorageExportArrayOutput {
	return o
}

func (o FileStorageExportArrayOutput) Index(i pulumi.IntInput) FileStorageExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileStorageExport {
		return vs[0].([]FileStorageExport)[vs[1].(int)]
	}).(FileStorageExportOutput)
}

type FileStorageExportMapOutput struct{ *pulumi.OutputState }

func (FileStorageExportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FileStorageExport)(nil))
}

func (o FileStorageExportMapOutput) ToFileStorageExportMapOutput() FileStorageExportMapOutput {
	return o
}

func (o FileStorageExportMapOutput) ToFileStorageExportMapOutputWithContext(ctx context.Context) FileStorageExportMapOutput {
	return o
}

func (o FileStorageExportMapOutput) MapIndex(k pulumi.StringInput) FileStorageExportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FileStorageExport {
		return vs[0].(map[string]FileStorageExport)[vs[1].(string)]
	}).(FileStorageExportOutput)
}

func init() {
	pulumi.RegisterOutputType(FileStorageExportOutput{})
	pulumi.RegisterOutputType(FileStorageExportPtrOutput{})
	pulumi.RegisterOutputType(FileStorageExportArrayOutput{})
	pulumi.RegisterOutputType(FileStorageExportMapOutput{})
}
