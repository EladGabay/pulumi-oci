// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Pluggable Database Management resource in Oracle Cloud Infrastructure Database service.
//
// Enable Database Management Service for the external pluggable database.
// For more information about the Database Management Service, see
// [Database Management Service](https://docs.cloud.oracle.com/iaas/Content/ExternalDatabase/Concepts/databasemanagementservice.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseExternalPluggableDatabaseManagement(ctx, "testExternalPluggableDatabaseManagement", &oci.DatabaseExternalPluggableDatabaseManagementArgs{
// 			ExternalDatabaseConnectorId: pulumi.Any(oci_database_external_database_connector.Test_external_database_connector.Id),
// 			ExternalPluggableDatabaseId: pulumi.Any(oci_database_external_pluggable_database.Test_external_pluggable_database.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DatabaseExternalPluggableDatabaseManagement struct {
	pulumi.CustomResourceState

	EnableManagement pulumi.BoolOutput `pulumi:"enableManagement"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringOutput `pulumi:"externalDatabaseConnectorId"`
	// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalPluggableDatabaseId pulumi.StringOutput `pulumi:"externalPluggableDatabaseId"`
}

// NewDatabaseExternalPluggableDatabaseManagement registers a new resource with the given unique name, arguments, and options.
func NewDatabaseExternalPluggableDatabaseManagement(ctx *pulumi.Context,
	name string, args *DatabaseExternalPluggableDatabaseManagementArgs, opts ...pulumi.ResourceOption) (*DatabaseExternalPluggableDatabaseManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableManagement == nil {
		return nil, errors.New("invalid value for required argument 'EnableManagement'")
	}
	if args.ExternalDatabaseConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalDatabaseConnectorId'")
	}
	if args.ExternalPluggableDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalPluggableDatabaseId'")
	}
	var resource DatabaseExternalPluggableDatabaseManagement
	err := ctx.RegisterResource("oci:index/databaseExternalPluggableDatabaseManagement:DatabaseExternalPluggableDatabaseManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseExternalPluggableDatabaseManagement gets an existing DatabaseExternalPluggableDatabaseManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseExternalPluggableDatabaseManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseExternalPluggableDatabaseManagementState, opts ...pulumi.ResourceOption) (*DatabaseExternalPluggableDatabaseManagement, error) {
	var resource DatabaseExternalPluggableDatabaseManagement
	err := ctx.ReadResource("oci:index/databaseExternalPluggableDatabaseManagement:DatabaseExternalPluggableDatabaseManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseExternalPluggableDatabaseManagement resources.
type databaseExternalPluggableDatabaseManagementState struct {
	EnableManagement *bool `pulumi:"enableManagement"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId *string `pulumi:"externalDatabaseConnectorId"`
	// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalPluggableDatabaseId *string `pulumi:"externalPluggableDatabaseId"`
}

type DatabaseExternalPluggableDatabaseManagementState struct {
	EnableManagement pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringPtrInput
	// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalPluggableDatabaseId pulumi.StringPtrInput
}

func (DatabaseExternalPluggableDatabaseManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalPluggableDatabaseManagementState)(nil)).Elem()
}

type databaseExternalPluggableDatabaseManagementArgs struct {
	EnableManagement bool `pulumi:"enableManagement"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId string `pulumi:"externalDatabaseConnectorId"`
	// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalPluggableDatabaseId string `pulumi:"externalPluggableDatabaseId"`
}

// The set of arguments for constructing a DatabaseExternalPluggableDatabaseManagement resource.
type DatabaseExternalPluggableDatabaseManagementArgs struct {
	EnableManagement pulumi.BoolInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringInput
	// The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalPluggableDatabaseId pulumi.StringInput
}

func (DatabaseExternalPluggableDatabaseManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalPluggableDatabaseManagementArgs)(nil)).Elem()
}

type DatabaseExternalPluggableDatabaseManagementInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseManagementOutput() DatabaseExternalPluggableDatabaseManagementOutput
	ToDatabaseExternalPluggableDatabaseManagementOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementOutput
}

func (*DatabaseExternalPluggableDatabaseManagement) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (i *DatabaseExternalPluggableDatabaseManagement) ToDatabaseExternalPluggableDatabaseManagementOutput() DatabaseExternalPluggableDatabaseManagementOutput {
	return i.ToDatabaseExternalPluggableDatabaseManagementOutputWithContext(context.Background())
}

func (i *DatabaseExternalPluggableDatabaseManagement) ToDatabaseExternalPluggableDatabaseManagementOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseManagementOutput)
}

func (i *DatabaseExternalPluggableDatabaseManagement) ToDatabaseExternalPluggableDatabaseManagementPtrOutput() DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return i.ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(context.Background())
}

func (i *DatabaseExternalPluggableDatabaseManagement) ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseManagementPtrOutput)
}

type DatabaseExternalPluggableDatabaseManagementPtrInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseManagementPtrOutput() DatabaseExternalPluggableDatabaseManagementPtrOutput
	ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementPtrOutput
}

type databaseExternalPluggableDatabaseManagementPtrType DatabaseExternalPluggableDatabaseManagementArgs

func (*databaseExternalPluggableDatabaseManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (i *databaseExternalPluggableDatabaseManagementPtrType) ToDatabaseExternalPluggableDatabaseManagementPtrOutput() DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return i.ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(context.Background())
}

func (i *databaseExternalPluggableDatabaseManagementPtrType) ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseManagementPtrOutput)
}

// DatabaseExternalPluggableDatabaseManagementArrayInput is an input type that accepts DatabaseExternalPluggableDatabaseManagementArray and DatabaseExternalPluggableDatabaseManagementArrayOutput values.
// You can construct a concrete instance of `DatabaseExternalPluggableDatabaseManagementArrayInput` via:
//
//          DatabaseExternalPluggableDatabaseManagementArray{ DatabaseExternalPluggableDatabaseManagementArgs{...} }
type DatabaseExternalPluggableDatabaseManagementArrayInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseManagementArrayOutput() DatabaseExternalPluggableDatabaseManagementArrayOutput
	ToDatabaseExternalPluggableDatabaseManagementArrayOutputWithContext(context.Context) DatabaseExternalPluggableDatabaseManagementArrayOutput
}

type DatabaseExternalPluggableDatabaseManagementArray []DatabaseExternalPluggableDatabaseManagementInput

func (DatabaseExternalPluggableDatabaseManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseExternalPluggableDatabaseManagement)(nil)).Elem()
}

func (i DatabaseExternalPluggableDatabaseManagementArray) ToDatabaseExternalPluggableDatabaseManagementArrayOutput() DatabaseExternalPluggableDatabaseManagementArrayOutput {
	return i.ToDatabaseExternalPluggableDatabaseManagementArrayOutputWithContext(context.Background())
}

func (i DatabaseExternalPluggableDatabaseManagementArray) ToDatabaseExternalPluggableDatabaseManagementArrayOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseManagementArrayOutput)
}

// DatabaseExternalPluggableDatabaseManagementMapInput is an input type that accepts DatabaseExternalPluggableDatabaseManagementMap and DatabaseExternalPluggableDatabaseManagementMapOutput values.
// You can construct a concrete instance of `DatabaseExternalPluggableDatabaseManagementMapInput` via:
//
//          DatabaseExternalPluggableDatabaseManagementMap{ "key": DatabaseExternalPluggableDatabaseManagementArgs{...} }
type DatabaseExternalPluggableDatabaseManagementMapInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseManagementMapOutput() DatabaseExternalPluggableDatabaseManagementMapOutput
	ToDatabaseExternalPluggableDatabaseManagementMapOutputWithContext(context.Context) DatabaseExternalPluggableDatabaseManagementMapOutput
}

type DatabaseExternalPluggableDatabaseManagementMap map[string]DatabaseExternalPluggableDatabaseManagementInput

func (DatabaseExternalPluggableDatabaseManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseExternalPluggableDatabaseManagement)(nil)).Elem()
}

func (i DatabaseExternalPluggableDatabaseManagementMap) ToDatabaseExternalPluggableDatabaseManagementMapOutput() DatabaseExternalPluggableDatabaseManagementMapOutput {
	return i.ToDatabaseExternalPluggableDatabaseManagementMapOutputWithContext(context.Background())
}

func (i DatabaseExternalPluggableDatabaseManagementMap) ToDatabaseExternalPluggableDatabaseManagementMapOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseManagementMapOutput)
}

type DatabaseExternalPluggableDatabaseManagementOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalPluggableDatabaseManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (o DatabaseExternalPluggableDatabaseManagementOutput) ToDatabaseExternalPluggableDatabaseManagementOutput() DatabaseExternalPluggableDatabaseManagementOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementOutput) ToDatabaseExternalPluggableDatabaseManagementOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementOutput) ToDatabaseExternalPluggableDatabaseManagementPtrOutput() DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return o.ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(context.Background())
}

func (o DatabaseExternalPluggableDatabaseManagementOutput) ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return o.ApplyT(func(v DatabaseExternalPluggableDatabaseManagement) *DatabaseExternalPluggableDatabaseManagement {
		return &v
	}).(DatabaseExternalPluggableDatabaseManagementPtrOutput)
}

type DatabaseExternalPluggableDatabaseManagementPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalPluggableDatabaseManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (o DatabaseExternalPluggableDatabaseManagementPtrOutput) ToDatabaseExternalPluggableDatabaseManagementPtrOutput() DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementPtrOutput) ToDatabaseExternalPluggableDatabaseManagementPtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementPtrOutput {
	return o
}

type DatabaseExternalPluggableDatabaseManagementArrayOutput struct{ *pulumi.OutputState }

func (DatabaseExternalPluggableDatabaseManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (o DatabaseExternalPluggableDatabaseManagementArrayOutput) ToDatabaseExternalPluggableDatabaseManagementArrayOutput() DatabaseExternalPluggableDatabaseManagementArrayOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementArrayOutput) ToDatabaseExternalPluggableDatabaseManagementArrayOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementArrayOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementArrayOutput) Index(i pulumi.IntInput) DatabaseExternalPluggableDatabaseManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseExternalPluggableDatabaseManagement {
		return vs[0].([]DatabaseExternalPluggableDatabaseManagement)[vs[1].(int)]
	}).(DatabaseExternalPluggableDatabaseManagementOutput)
}

type DatabaseExternalPluggableDatabaseManagementMapOutput struct{ *pulumi.OutputState }

func (DatabaseExternalPluggableDatabaseManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseExternalPluggableDatabaseManagement)(nil))
}

func (o DatabaseExternalPluggableDatabaseManagementMapOutput) ToDatabaseExternalPluggableDatabaseManagementMapOutput() DatabaseExternalPluggableDatabaseManagementMapOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementMapOutput) ToDatabaseExternalPluggableDatabaseManagementMapOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseManagementMapOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseManagementMapOutput) MapIndex(k pulumi.StringInput) DatabaseExternalPluggableDatabaseManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseExternalPluggableDatabaseManagement {
		return vs[0].(map[string]DatabaseExternalPluggableDatabaseManagement)[vs[1].(string)]
	}).(DatabaseExternalPluggableDatabaseManagementOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseManagementOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseManagementPtrOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseManagementArrayOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseManagementMapOutput{})
}
