// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
//
// Create a configuration to collect logs from object storage bucket.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewLogAnalyticsLogAnalyticsObjectCollectionRule(ctx, "testLogAnalyticsObjectCollectionRule", &oci.LogAnalyticsLogAnalyticsObjectCollectionRuleArgs{
// 			CompartmentId:  pulumi.Any(_var.Compartment_id),
// 			LogGroupId:     pulumi.Any(oci_logging_log_group.Test_log_group.Id),
// 			LogSourceName:  pulumi.Any(_var.Log_analytics_object_collection_rule_log_source_name),
// 			Namespace:      pulumi.Any(_var.Log_analytics_object_collection_rule_namespace),
// 			OsBucketName:   pulumi.Any(oci_objectstorage_bucket.Test_bucket.Name),
// 			OsNamespace:    pulumi.Any(_var.Log_analytics_object_collection_rule_os_namespace),
// 			CharEncoding:   pulumi.Any(_var.Log_analytics_object_collection_rule_char_encoding),
// 			CollectionType: pulumi.Any(_var.Log_analytics_object_collection_rule_collection_type),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Log_analytics_object_collection_rule_description),
// 			EntityId:    pulumi.Any(oci_log_analytics_entity.Test_entity.Id),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			Overrides: pulumi.Any(_var.Log_analytics_object_collection_rule_overrides),
// 			PollSince: pulumi.Any(_var.Log_analytics_object_collection_rule_poll_since),
// 			PollTill:  pulumi.Any(_var.Log_analytics_object_collection_rule_poll_till),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/logAnalyticsLogAnalyticsObjectCollectionRule:LogAnalyticsLogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule "namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}"
// ```
type LogAnalyticsLogAnalyticsObjectCollectionRule struct {
	pulumi.CustomResourceState

	// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding pulumi.StringOutput `pulumi:"charEncoding"`
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType pulumi.StringOutput `pulumi:"collectionType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
	EntityId pulumi.StringOutput `pulumi:"entityId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A detailed status of the life cycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId pulumi.StringOutput `pulumi:"logGroupId"`
	// (Updatable) Name of the Logging Analytics Source to use for the processing.
	LogSourceName pulumi.StringOutput `pulumi:"logSourceName"`
	// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Name of the Object Storage bucket.
	OsBucketName pulumi.StringOutput `pulumi:"osBucketName"`
	// Object Storage namespace.
	OsNamespace pulumi.StringOutput `pulumi:"osNamespace"`
	// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides LogAnalyticsLogAnalyticsObjectCollectionRuleOverrideArrayOutput `pulumi:"overrides"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince pulumi.StringOutput `pulumi:"pollSince"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill pulumi.StringOutput `pulumi:"pollTill"`
	// The current state of the rule.
	State pulumi.StringOutput `pulumi:"state"`
	// The time when this rule was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when this rule was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewLogAnalyticsLogAnalyticsObjectCollectionRule registers a new resource with the given unique name, arguments, and options.
func NewLogAnalyticsLogAnalyticsObjectCollectionRule(ctx *pulumi.Context,
	name string, args *LogAnalyticsLogAnalyticsObjectCollectionRuleArgs, opts ...pulumi.ResourceOption) (*LogAnalyticsLogAnalyticsObjectCollectionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.LogGroupId == nil {
		return nil, errors.New("invalid value for required argument 'LogGroupId'")
	}
	if args.LogSourceName == nil {
		return nil, errors.New("invalid value for required argument 'LogSourceName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.OsBucketName == nil {
		return nil, errors.New("invalid value for required argument 'OsBucketName'")
	}
	if args.OsNamespace == nil {
		return nil, errors.New("invalid value for required argument 'OsNamespace'")
	}
	var resource LogAnalyticsLogAnalyticsObjectCollectionRule
	err := ctx.RegisterResource("oci:index/logAnalyticsLogAnalyticsObjectCollectionRule:LogAnalyticsLogAnalyticsObjectCollectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogAnalyticsLogAnalyticsObjectCollectionRule gets an existing LogAnalyticsLogAnalyticsObjectCollectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogAnalyticsLogAnalyticsObjectCollectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogAnalyticsLogAnalyticsObjectCollectionRuleState, opts ...pulumi.ResourceOption) (*LogAnalyticsLogAnalyticsObjectCollectionRule, error) {
	var resource LogAnalyticsLogAnalyticsObjectCollectionRule
	err := ctx.ReadResource("oci:index/logAnalyticsLogAnalyticsObjectCollectionRule:LogAnalyticsLogAnalyticsObjectCollectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogAnalyticsLogAnalyticsObjectCollectionRule resources.
type logAnalyticsLogAnalyticsObjectCollectionRuleState struct {
	// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding *string `pulumi:"charEncoding"`
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType *string `pulumi:"collectionType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
	EntityId *string `pulumi:"entityId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A detailed status of the life cycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId *string `pulumi:"logGroupId"`
	// (Updatable) Name of the Logging Analytics Source to use for the processing.
	LogSourceName *string `pulumi:"logSourceName"`
	// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace *string `pulumi:"namespace"`
	// Name of the Object Storage bucket.
	OsBucketName *string `pulumi:"osBucketName"`
	// Object Storage namespace.
	OsNamespace *string `pulumi:"osNamespace"`
	// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides []LogAnalyticsLogAnalyticsObjectCollectionRuleOverride `pulumi:"overrides"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince *string `pulumi:"pollSince"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill *string `pulumi:"pollTill"`
	// The current state of the rule.
	State *string `pulumi:"state"`
	// The time when this rule was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when this rule was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleState struct {
	// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding pulumi.StringPtrInput
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
	EntityId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A detailed status of the life cycle state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId pulumi.StringPtrInput
	// (Updatable) Name of the Logging Analytics Source to use for the processing.
	LogSourceName pulumi.StringPtrInput
	// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
	Name pulumi.StringPtrInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringPtrInput
	// Name of the Object Storage bucket.
	OsBucketName pulumi.StringPtrInput
	// Object Storage namespace.
	OsNamespace pulumi.StringPtrInput
	// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides LogAnalyticsLogAnalyticsObjectCollectionRuleOverrideArrayInput
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince pulumi.StringPtrInput
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill pulumi.StringPtrInput
	// The current state of the rule.
	State pulumi.StringPtrInput
	// The time when this rule was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when this rule was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (LogAnalyticsLogAnalyticsObjectCollectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsLogAnalyticsObjectCollectionRuleState)(nil)).Elem()
}

type logAnalyticsLogAnalyticsObjectCollectionRuleArgs struct {
	// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding *string `pulumi:"charEncoding"`
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType *string `pulumi:"collectionType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
	EntityId *string `pulumi:"entityId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId string `pulumi:"logGroupId"`
	// (Updatable) Name of the Logging Analytics Source to use for the processing.
	LogSourceName string `pulumi:"logSourceName"`
	// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
	Name *string `pulumi:"name"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// Name of the Object Storage bucket.
	OsBucketName string `pulumi:"osBucketName"`
	// Object Storage namespace.
	OsNamespace string `pulumi:"osNamespace"`
	// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides []LogAnalyticsLogAnalyticsObjectCollectionRuleOverride `pulumi:"overrides"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince *string `pulumi:"pollSince"`
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill *string `pulumi:"pollTill"`
}

// The set of arguments for constructing a LogAnalyticsLogAnalyticsObjectCollectionRule resource.
type LogAnalyticsLogAnalyticsObjectCollectionRuleArgs struct {
	// (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
	CharEncoding pulumi.StringPtrInput
	// The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
	CollectionType pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
	EntityId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
	LogGroupId pulumi.StringInput
	// (Updatable) Name of the Logging Analytics Source to use for the processing.
	LogSourceName pulumi.StringInput
	// A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
	Name pulumi.StringPtrInput
	// The Logging Analytics namespace used for the request.
	Namespace pulumi.StringInput
	// Name of the Object Storage bucket.
	OsBucketName pulumi.StringInput
	// Object Storage namespace.
	OsNamespace pulumi.StringInput
	// (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
	Overrides LogAnalyticsLogAnalyticsObjectCollectionRuleOverrideArrayInput
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
	PollSince pulumi.StringPtrInput
	// The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
	PollTill pulumi.StringPtrInput
}

func (LogAnalyticsLogAnalyticsObjectCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logAnalyticsLogAnalyticsObjectCollectionRuleArgs)(nil)).Elem()
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleInput interface {
	pulumi.Input

	ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleOutput
	ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleOutput
}

func (*LogAnalyticsLogAnalyticsObjectCollectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (i *LogAnalyticsLogAnalyticsObjectCollectionRule) ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return i.ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutputWithContext(context.Background())
}

func (i *LogAnalyticsLogAnalyticsObjectCollectionRule) ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsLogAnalyticsObjectCollectionRuleOutput)
}

func (i *LogAnalyticsLogAnalyticsObjectCollectionRule) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput() LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return i.ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(context.Background())
}

func (i *LogAnalyticsLogAnalyticsObjectCollectionRule) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput)
}

type LogAnalyticsLogAnalyticsObjectCollectionRulePtrInput interface {
	pulumi.Input

	ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput() LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput
	ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput
}

type logAnalyticsLogAnalyticsObjectCollectionRulePtrType LogAnalyticsLogAnalyticsObjectCollectionRuleArgs

func (*logAnalyticsLogAnalyticsObjectCollectionRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (i *logAnalyticsLogAnalyticsObjectCollectionRulePtrType) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput() LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return i.ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(context.Background())
}

func (i *logAnalyticsLogAnalyticsObjectCollectionRulePtrType) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput)
}

// LogAnalyticsLogAnalyticsObjectCollectionRuleArrayInput is an input type that accepts LogAnalyticsLogAnalyticsObjectCollectionRuleArray and LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput values.
// You can construct a concrete instance of `LogAnalyticsLogAnalyticsObjectCollectionRuleArrayInput` via:
//
//          LogAnalyticsLogAnalyticsObjectCollectionRuleArray{ LogAnalyticsLogAnalyticsObjectCollectionRuleArgs{...} }
type LogAnalyticsLogAnalyticsObjectCollectionRuleArrayInput interface {
	pulumi.Input

	ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput
	ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutputWithContext(context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleArray []LogAnalyticsLogAnalyticsObjectCollectionRuleInput

func (LogAnalyticsLogAnalyticsObjectCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogAnalyticsLogAnalyticsObjectCollectionRule)(nil)).Elem()
}

func (i LogAnalyticsLogAnalyticsObjectCollectionRuleArray) ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput {
	return i.ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutputWithContext(context.Background())
}

func (i LogAnalyticsLogAnalyticsObjectCollectionRuleArray) ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput)
}

// LogAnalyticsLogAnalyticsObjectCollectionRuleMapInput is an input type that accepts LogAnalyticsLogAnalyticsObjectCollectionRuleMap and LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput values.
// You can construct a concrete instance of `LogAnalyticsLogAnalyticsObjectCollectionRuleMapInput` via:
//
//          LogAnalyticsLogAnalyticsObjectCollectionRuleMap{ "key": LogAnalyticsLogAnalyticsObjectCollectionRuleArgs{...} }
type LogAnalyticsLogAnalyticsObjectCollectionRuleMapInput interface {
	pulumi.Input

	ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput
	ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutputWithContext(context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleMap map[string]LogAnalyticsLogAnalyticsObjectCollectionRuleInput

func (LogAnalyticsLogAnalyticsObjectCollectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogAnalyticsLogAnalyticsObjectCollectionRule)(nil)).Elem()
}

func (i LogAnalyticsLogAnalyticsObjectCollectionRuleMap) ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput {
	return i.ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutputWithContext(context.Background())
}

func (i LogAnalyticsLogAnalyticsObjectCollectionRuleMap) ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput)
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleOutput struct {
	*pulumi.OutputState
}

func (LogAnalyticsLogAnalyticsObjectCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput() LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return o.ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(context.Background())
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return o.ApplyT(func(v LogAnalyticsLogAnalyticsObjectCollectionRule) *LogAnalyticsLogAnalyticsObjectCollectionRule {
		return &v
	}).(LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput)
}

type LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput struct {
	*pulumi.OutputState
}

func (LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput() LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRulePtrOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput {
	return o
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput) Index(i pulumi.IntInput) LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogAnalyticsLogAnalyticsObjectCollectionRule {
		return vs[0].([]LogAnalyticsLogAnalyticsObjectCollectionRule)[vs[1].(int)]
	}).(LogAnalyticsLogAnalyticsObjectCollectionRuleOutput)
}

type LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput struct{ *pulumi.OutputState }

func (LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LogAnalyticsLogAnalyticsObjectCollectionRule)(nil))
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput() LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput) ToLogAnalyticsLogAnalyticsObjectCollectionRuleMapOutputWithContext(ctx context.Context) LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput {
	return o
}

func (o LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput) MapIndex(k pulumi.StringInput) LogAnalyticsLogAnalyticsObjectCollectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LogAnalyticsLogAnalyticsObjectCollectionRule {
		return vs[0].(map[string]LogAnalyticsLogAnalyticsObjectCollectionRule)[vs[1].(string)]
	}).(LogAnalyticsLogAnalyticsObjectCollectionRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(LogAnalyticsLogAnalyticsObjectCollectionRuleOutput{})
	pulumi.RegisterOutputType(LogAnalyticsLogAnalyticsObjectCollectionRulePtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsLogAnalyticsObjectCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(LogAnalyticsLogAnalyticsObjectCollectionRuleMapOutput{})
}
