// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetAnalyticsAnalyticsInstancePrivateAccessChannel
    {
        /// <summary>
        /// This data source provides details about a specific Analytics Instance Private Access Channel resource in Oracle Cloud Infrastructure Analytics service.
        /// 
        /// Retrieve private access channel in the specified Analytics Instance.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnalyticsInstancePrivateAccessChannel = Output.Create(Oci.GetAnalyticsAnalyticsInstancePrivateAccessChannel.InvokeAsync(new Oci.GetAnalyticsAnalyticsInstancePrivateAccessChannelArgs
        ///         {
        ///             AnalyticsInstanceId = oci_analytics_analytics_instance.Test_analytics_instance.Id,
        ///             PrivateAccessChannelKey = @var.Analytics_instance_private_access_channel_private_access_channel_key,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAnalyticsAnalyticsInstancePrivateAccessChannelResult> InvokeAsync(GetAnalyticsAnalyticsInstancePrivateAccessChannelArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAnalyticsAnalyticsInstancePrivateAccessChannelResult>("oci:index/getAnalyticsAnalyticsInstancePrivateAccessChannel:GetAnalyticsAnalyticsInstancePrivateAccessChannel", args ?? new GetAnalyticsAnalyticsInstancePrivateAccessChannelArgs(), options.WithVersion());
    }


    public sealed class GetAnalyticsAnalyticsInstancePrivateAccessChannelArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the AnalyticsInstance.
        /// </summary>
        [Input("analyticsInstanceId", required: true)]
        public string AnalyticsInstanceId { get; set; } = null!;

        /// <summary>
        /// The unique identifier key of the Private Access Channel.
        /// </summary>
        [Input("privateAccessChannelKey", required: true)]
        public string PrivateAccessChannelKey { get; set; } = null!;

        public GetAnalyticsAnalyticsInstancePrivateAccessChannelArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAnalyticsAnalyticsInstancePrivateAccessChannelResult
    {
        public readonly string AnalyticsInstanceId;
        /// <summary>
        /// Display Name of the Private Access Channel.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The list of IP addresses from the customer subnet connected to private access channel, used as a source Ip by Private Access Channel for network traffic from the AnalyticsInstance to Private Sources.
        /// </summary>
        public readonly ImmutableArray<string> EgressSourceIpAddresses;
        public readonly string Id;
        /// <summary>
        /// IP Address of the Private Access channel.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Private Access Channel unique identifier key.
        /// </summary>
        public readonly string Key;
        public readonly string PrivateAccessChannelKey;
        /// <summary>
        /// List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneResult> PrivateSourceDnsZones;
        /// <summary>
        /// OCID of the customer subnet connected to private access channel.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// OCID of the customer VCN peered with private access channel.
        /// </summary>
        public readonly string VcnId;

        [OutputConstructor]
        private GetAnalyticsAnalyticsInstancePrivateAccessChannelResult(
            string analyticsInstanceId,

            string displayName,

            ImmutableArray<string> egressSourceIpAddresses,

            string id,

            string ipAddress,

            string key,

            string privateAccessChannelKey,

            ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneResult> privateSourceDnsZones,

            string subnetId,

            string vcnId)
        {
            AnalyticsInstanceId = analyticsInstanceId;
            DisplayName = displayName;
            EgressSourceIpAddresses = egressSourceIpAddresses;
            Id = id;
            IpAddress = ipAddress;
            Key = key;
            PrivateAccessChannelKey = privateAccessChannelKey;
            PrivateSourceDnsZones = privateSourceDnsZones;
            SubnetId = subnetId;
            VcnId = vcnId;
        }
    }
}
