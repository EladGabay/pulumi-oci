// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides the list of Applications in Oracle Cloud Infrastructure Data Flow service.
 *
 * Lists all applications in the specified compartment. Only one parameter other than compartmentId may also be included in a query. The query must include compartmentId. If the query does not include compartmentId, or includes compartmentId but two or more other parameters an error is returned.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testApplications = oci.GetDataflowApplications({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.application_display_name,
 *     displayNameStartsWith: _var.application_display_name_starts_with,
 *     ownerPrincipalId: oci_dataflow_owner_principal.test_owner_principal.id,
 *     sparkVersion: _var.application_spark_version,
 * });
 * ```
 */
export function getDataflowApplications(args: GetDataflowApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflowApplicationsResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getDataflowApplications:GetDataflowApplications", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "displayNameStartsWith": args.displayNameStartsWith,
        "filters": args.filters,
        "ownerPrincipalId": args.ownerPrincipalId,
        "sparkVersion": args.sparkVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking GetDataflowApplications.
 */
export interface GetDataflowApplicationsArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * The query parameter for the Spark application name.
     */
    displayName?: string;
    /**
     * The displayName prefix.
     */
    displayNameStartsWith?: string;
    filters?: inputs.GetDataflowApplicationsFilter[];
    /**
     * The OCID of the user who created the resource.
     */
    ownerPrincipalId?: string;
    /**
     * The Spark version utilized to run the application.
     */
    sparkVersion?: string;
}

/**
 * A collection of values returned by GetDataflowApplications.
 */
export interface GetDataflowApplicationsResult {
    /**
     * The list of applications.
     */
    readonly applications: outputs.GetDataflowApplicationsApplication[];
    /**
     * The OCID of a compartment.
     */
    readonly compartmentId: string;
    /**
     * A user-friendly name. This name is not necessarily unique.
     */
    readonly displayName?: string;
    readonly displayNameStartsWith?: string;
    readonly filters?: outputs.GetDataflowApplicationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The OCID of the user who created the resource.
     */
    readonly ownerPrincipalId?: string;
    /**
     * The Spark version utilized to run the application.
     */
    readonly sparkVersion?: string;
}
