// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Quota resource in Oracle Cloud Infrastructure Limits service.
//
// Creates a new quota with the details supplied.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewLimitsQuota(ctx, "testQuota", &oci.LimitsQuotaArgs{
// 			CompartmentId: pulumi.Any(_var.Tenancy_ocid),
// 			Description:   pulumi.Any(_var.Quota_description),
// 			Statements:    pulumi.Any(_var.Quota_statements),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Quotas can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/limitsQuota:LimitsQuota test_quota "id"
// ```
type LimitsQuota struct {
	pulumi.CustomResourceState

	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The quota's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayOutput `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewLimitsQuota registers a new resource with the given unique name, arguments, and options.
func NewLimitsQuota(ctx *pulumi.Context,
	name string, args *LimitsQuotaArgs, opts ...pulumi.ResourceOption) (*LimitsQuota, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Statements == nil {
		return nil, errors.New("invalid value for required argument 'Statements'")
	}
	var resource LimitsQuota
	err := ctx.RegisterResource("oci:index/limitsQuota:LimitsQuota", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLimitsQuota gets an existing LimitsQuota resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLimitsQuota(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LimitsQuotaState, opts ...pulumi.ResourceOption) (*LimitsQuota, error) {
	var resource LimitsQuota
	err := ctx.ReadResource("oci:index/limitsQuota:LimitsQuota", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LimitsQuota resources.
type limitsQuotaState struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The quota's current state.
	State *string `pulumi:"state"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type LimitsQuotaState struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The quota's current state.
	State pulumi.StringPtrInput
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayInput
	// Date and time the quota was created, in the format defined by RFC 3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (LimitsQuotaState) ElementType() reflect.Type {
	return reflect.TypeOf((*limitsQuotaState)(nil)).Elem()
}

type limitsQuotaArgs struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the quota.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements []string `pulumi:"statements"`
}

// The set of arguments for constructing a LimitsQuota resource.
type LimitsQuotaArgs struct {
	// The OCID of the compartment containing the resource this quota applies to.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the quota.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) An array of quota statements written in the declarative quota statement language.
	Statements pulumi.StringArrayInput
}

func (LimitsQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*limitsQuotaArgs)(nil)).Elem()
}

type LimitsQuotaInput interface {
	pulumi.Input

	ToLimitsQuotaOutput() LimitsQuotaOutput
	ToLimitsQuotaOutputWithContext(ctx context.Context) LimitsQuotaOutput
}

func (*LimitsQuota) ElementType() reflect.Type {
	return reflect.TypeOf((*LimitsQuota)(nil))
}

func (i *LimitsQuota) ToLimitsQuotaOutput() LimitsQuotaOutput {
	return i.ToLimitsQuotaOutputWithContext(context.Background())
}

func (i *LimitsQuota) ToLimitsQuotaOutputWithContext(ctx context.Context) LimitsQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LimitsQuotaOutput)
}

func (i *LimitsQuota) ToLimitsQuotaPtrOutput() LimitsQuotaPtrOutput {
	return i.ToLimitsQuotaPtrOutputWithContext(context.Background())
}

func (i *LimitsQuota) ToLimitsQuotaPtrOutputWithContext(ctx context.Context) LimitsQuotaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LimitsQuotaPtrOutput)
}

type LimitsQuotaPtrInput interface {
	pulumi.Input

	ToLimitsQuotaPtrOutput() LimitsQuotaPtrOutput
	ToLimitsQuotaPtrOutputWithContext(ctx context.Context) LimitsQuotaPtrOutput
}

type limitsQuotaPtrType LimitsQuotaArgs

func (*limitsQuotaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LimitsQuota)(nil))
}

func (i *limitsQuotaPtrType) ToLimitsQuotaPtrOutput() LimitsQuotaPtrOutput {
	return i.ToLimitsQuotaPtrOutputWithContext(context.Background())
}

func (i *limitsQuotaPtrType) ToLimitsQuotaPtrOutputWithContext(ctx context.Context) LimitsQuotaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LimitsQuotaPtrOutput)
}

// LimitsQuotaArrayInput is an input type that accepts LimitsQuotaArray and LimitsQuotaArrayOutput values.
// You can construct a concrete instance of `LimitsQuotaArrayInput` via:
//
//          LimitsQuotaArray{ LimitsQuotaArgs{...} }
type LimitsQuotaArrayInput interface {
	pulumi.Input

	ToLimitsQuotaArrayOutput() LimitsQuotaArrayOutput
	ToLimitsQuotaArrayOutputWithContext(context.Context) LimitsQuotaArrayOutput
}

type LimitsQuotaArray []LimitsQuotaInput

func (LimitsQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LimitsQuota)(nil)).Elem()
}

func (i LimitsQuotaArray) ToLimitsQuotaArrayOutput() LimitsQuotaArrayOutput {
	return i.ToLimitsQuotaArrayOutputWithContext(context.Background())
}

func (i LimitsQuotaArray) ToLimitsQuotaArrayOutputWithContext(ctx context.Context) LimitsQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LimitsQuotaArrayOutput)
}

// LimitsQuotaMapInput is an input type that accepts LimitsQuotaMap and LimitsQuotaMapOutput values.
// You can construct a concrete instance of `LimitsQuotaMapInput` via:
//
//          LimitsQuotaMap{ "key": LimitsQuotaArgs{...} }
type LimitsQuotaMapInput interface {
	pulumi.Input

	ToLimitsQuotaMapOutput() LimitsQuotaMapOutput
	ToLimitsQuotaMapOutputWithContext(context.Context) LimitsQuotaMapOutput
}

type LimitsQuotaMap map[string]LimitsQuotaInput

func (LimitsQuotaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LimitsQuota)(nil)).Elem()
}

func (i LimitsQuotaMap) ToLimitsQuotaMapOutput() LimitsQuotaMapOutput {
	return i.ToLimitsQuotaMapOutputWithContext(context.Background())
}

func (i LimitsQuotaMap) ToLimitsQuotaMapOutputWithContext(ctx context.Context) LimitsQuotaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LimitsQuotaMapOutput)
}

type LimitsQuotaOutput struct {
	*pulumi.OutputState
}

func (LimitsQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LimitsQuota)(nil))
}

func (o LimitsQuotaOutput) ToLimitsQuotaOutput() LimitsQuotaOutput {
	return o
}

func (o LimitsQuotaOutput) ToLimitsQuotaOutputWithContext(ctx context.Context) LimitsQuotaOutput {
	return o
}

func (o LimitsQuotaOutput) ToLimitsQuotaPtrOutput() LimitsQuotaPtrOutput {
	return o.ToLimitsQuotaPtrOutputWithContext(context.Background())
}

func (o LimitsQuotaOutput) ToLimitsQuotaPtrOutputWithContext(ctx context.Context) LimitsQuotaPtrOutput {
	return o.ApplyT(func(v LimitsQuota) *LimitsQuota {
		return &v
	}).(LimitsQuotaPtrOutput)
}

type LimitsQuotaPtrOutput struct {
	*pulumi.OutputState
}

func (LimitsQuotaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LimitsQuota)(nil))
}

func (o LimitsQuotaPtrOutput) ToLimitsQuotaPtrOutput() LimitsQuotaPtrOutput {
	return o
}

func (o LimitsQuotaPtrOutput) ToLimitsQuotaPtrOutputWithContext(ctx context.Context) LimitsQuotaPtrOutput {
	return o
}

type LimitsQuotaArrayOutput struct{ *pulumi.OutputState }

func (LimitsQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LimitsQuota)(nil))
}

func (o LimitsQuotaArrayOutput) ToLimitsQuotaArrayOutput() LimitsQuotaArrayOutput {
	return o
}

func (o LimitsQuotaArrayOutput) ToLimitsQuotaArrayOutputWithContext(ctx context.Context) LimitsQuotaArrayOutput {
	return o
}

func (o LimitsQuotaArrayOutput) Index(i pulumi.IntInput) LimitsQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LimitsQuota {
		return vs[0].([]LimitsQuota)[vs[1].(int)]
	}).(LimitsQuotaOutput)
}

type LimitsQuotaMapOutput struct{ *pulumi.OutputState }

func (LimitsQuotaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LimitsQuota)(nil))
}

func (o LimitsQuotaMapOutput) ToLimitsQuotaMapOutput() LimitsQuotaMapOutput {
	return o
}

func (o LimitsQuotaMapOutput) ToLimitsQuotaMapOutputWithContext(ctx context.Context) LimitsQuotaMapOutput {
	return o
}

func (o LimitsQuotaMapOutput) MapIndex(k pulumi.StringInput) LimitsQuotaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LimitsQuota {
		return vs[0].(map[string]LimitsQuota)[vs[1].(string)]
	}).(LimitsQuotaOutput)
}

func init() {
	pulumi.RegisterOutputType(LimitsQuotaOutput{})
	pulumi.RegisterOutputType(LimitsQuotaPtrOutput{})
	pulumi.RegisterOutputType(LimitsQuotaArrayOutput{})
	pulumi.RegisterOutputType(LimitsQuotaMapOutput{})
}
