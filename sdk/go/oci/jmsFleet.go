// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Fleet resource in Oracle Cloud Infrastructure Jms service.
//
// Create a new Fleet using the information provided.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewJmsFleet(ctx, "testFleet", &oci.JmsFleetArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Fleet_display_name),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Fleet_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Fleets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/jmsFleet:JmsFleet test_fleet "id"
// ```
type JmsFleet struct {
	pulumi.CustomResourceState

	// The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateApplicationCount pulumi.IntOutput `pulumi:"approximateApplicationCount"`
	// The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateInstallationCount pulumi.IntOutput `pulumi:"approximateInstallationCount"`
	// The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateJreCount pulumi.IntOutput `pulumi:"approximateJreCount"`
	// The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateManagedInstanceCount pulumi.IntOutput `pulumi:"approximateManagedInstanceCount"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The Fleet's description. If nothing is provided, the Fleet description will be null.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The lifecycle state of the Fleet.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The creation date and time of the Fleet (formatted according to RFC3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewJmsFleet registers a new resource with the given unique name, arguments, and options.
func NewJmsFleet(ctx *pulumi.Context,
	name string, args *JmsFleetArgs, opts ...pulumi.ResourceOption) (*JmsFleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource JmsFleet
	err := ctx.RegisterResource("oci:index/jmsFleet:JmsFleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJmsFleet gets an existing JmsFleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJmsFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JmsFleetState, opts ...pulumi.ResourceOption) (*JmsFleet, error) {
	var resource JmsFleet
	err := ctx.ReadResource("oci:index/jmsFleet:JmsFleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JmsFleet resources.
type jmsFleetState struct {
	// The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateApplicationCount *int `pulumi:"approximateApplicationCount"`
	// The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateInstallationCount *int `pulumi:"approximateInstallationCount"`
	// The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateJreCount *int `pulumi:"approximateJreCount"`
	// The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateManagedInstanceCount *int `pulumi:"approximateManagedInstanceCount"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The Fleet's description. If nothing is provided, the Fleet description will be null.
	Description *string `pulumi:"description"`
	// (Updatable) The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The lifecycle state of the Fleet.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The creation date and time of the Fleet (formatted according to RFC3339).
	TimeCreated *string `pulumi:"timeCreated"`
}

type JmsFleetState struct {
	// The approximate count of all unique applications in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateApplicationCount pulumi.IntPtrInput
	// The approximate count of all unique Java installations in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateInstallationCount pulumi.IntPtrInput
	// The approximate count of all unique Java Runtimes in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateJreCount pulumi.IntPtrInput
	// The approximate count of all unique managed instances in the Fleet in the past seven days. This metric is provided on a best-effort manner, and is not taken into account when computing the resource ETag.
	ApproximateManagedInstanceCount pulumi.IntPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
	DefinedTags pulumi.MapInput
	// (Updatable) The Fleet's description. If nothing is provided, the Fleet description will be null.
	Description pulumi.StringPtrInput
	// (Updatable) The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
	FreeformTags pulumi.MapInput
	// The lifecycle state of the Fleet.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The creation date and time of the Fleet (formatted according to RFC3339).
	TimeCreated pulumi.StringPtrInput
}

func (JmsFleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*jmsFleetState)(nil)).Elem()
}

type jmsFleetArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The Fleet's description. If nothing is provided, the Fleet description will be null.
	Description *string `pulumi:"description"`
	// (Updatable) The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a JmsFleet resource.
type JmsFleetArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
	DefinedTags pulumi.MapInput
	// (Updatable) The Fleet's description. If nothing is provided, the Fleet description will be null.
	Description pulumi.StringPtrInput
	// (Updatable) The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
	FreeformTags pulumi.MapInput
}

func (JmsFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jmsFleetArgs)(nil)).Elem()
}

type JmsFleetInput interface {
	pulumi.Input

	ToJmsFleetOutput() JmsFleetOutput
	ToJmsFleetOutputWithContext(ctx context.Context) JmsFleetOutput
}

func (*JmsFleet) ElementType() reflect.Type {
	return reflect.TypeOf((*JmsFleet)(nil))
}

func (i *JmsFleet) ToJmsFleetOutput() JmsFleetOutput {
	return i.ToJmsFleetOutputWithContext(context.Background())
}

func (i *JmsFleet) ToJmsFleetOutputWithContext(ctx context.Context) JmsFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JmsFleetOutput)
}

func (i *JmsFleet) ToJmsFleetPtrOutput() JmsFleetPtrOutput {
	return i.ToJmsFleetPtrOutputWithContext(context.Background())
}

func (i *JmsFleet) ToJmsFleetPtrOutputWithContext(ctx context.Context) JmsFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JmsFleetPtrOutput)
}

type JmsFleetPtrInput interface {
	pulumi.Input

	ToJmsFleetPtrOutput() JmsFleetPtrOutput
	ToJmsFleetPtrOutputWithContext(ctx context.Context) JmsFleetPtrOutput
}

type jmsFleetPtrType JmsFleetArgs

func (*jmsFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JmsFleet)(nil))
}

func (i *jmsFleetPtrType) ToJmsFleetPtrOutput() JmsFleetPtrOutput {
	return i.ToJmsFleetPtrOutputWithContext(context.Background())
}

func (i *jmsFleetPtrType) ToJmsFleetPtrOutputWithContext(ctx context.Context) JmsFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JmsFleetPtrOutput)
}

// JmsFleetArrayInput is an input type that accepts JmsFleetArray and JmsFleetArrayOutput values.
// You can construct a concrete instance of `JmsFleetArrayInput` via:
//
//          JmsFleetArray{ JmsFleetArgs{...} }
type JmsFleetArrayInput interface {
	pulumi.Input

	ToJmsFleetArrayOutput() JmsFleetArrayOutput
	ToJmsFleetArrayOutputWithContext(context.Context) JmsFleetArrayOutput
}

type JmsFleetArray []JmsFleetInput

func (JmsFleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JmsFleet)(nil)).Elem()
}

func (i JmsFleetArray) ToJmsFleetArrayOutput() JmsFleetArrayOutput {
	return i.ToJmsFleetArrayOutputWithContext(context.Background())
}

func (i JmsFleetArray) ToJmsFleetArrayOutputWithContext(ctx context.Context) JmsFleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JmsFleetArrayOutput)
}

// JmsFleetMapInput is an input type that accepts JmsFleetMap and JmsFleetMapOutput values.
// You can construct a concrete instance of `JmsFleetMapInput` via:
//
//          JmsFleetMap{ "key": JmsFleetArgs{...} }
type JmsFleetMapInput interface {
	pulumi.Input

	ToJmsFleetMapOutput() JmsFleetMapOutput
	ToJmsFleetMapOutputWithContext(context.Context) JmsFleetMapOutput
}

type JmsFleetMap map[string]JmsFleetInput

func (JmsFleetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JmsFleet)(nil)).Elem()
}

func (i JmsFleetMap) ToJmsFleetMapOutput() JmsFleetMapOutput {
	return i.ToJmsFleetMapOutputWithContext(context.Background())
}

func (i JmsFleetMap) ToJmsFleetMapOutputWithContext(ctx context.Context) JmsFleetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JmsFleetMapOutput)
}

type JmsFleetOutput struct {
	*pulumi.OutputState
}

func (JmsFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JmsFleet)(nil))
}

func (o JmsFleetOutput) ToJmsFleetOutput() JmsFleetOutput {
	return o
}

func (o JmsFleetOutput) ToJmsFleetOutputWithContext(ctx context.Context) JmsFleetOutput {
	return o
}

func (o JmsFleetOutput) ToJmsFleetPtrOutput() JmsFleetPtrOutput {
	return o.ToJmsFleetPtrOutputWithContext(context.Background())
}

func (o JmsFleetOutput) ToJmsFleetPtrOutputWithContext(ctx context.Context) JmsFleetPtrOutput {
	return o.ApplyT(func(v JmsFleet) *JmsFleet {
		return &v
	}).(JmsFleetPtrOutput)
}

type JmsFleetPtrOutput struct {
	*pulumi.OutputState
}

func (JmsFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JmsFleet)(nil))
}

func (o JmsFleetPtrOutput) ToJmsFleetPtrOutput() JmsFleetPtrOutput {
	return o
}

func (o JmsFleetPtrOutput) ToJmsFleetPtrOutputWithContext(ctx context.Context) JmsFleetPtrOutput {
	return o
}

type JmsFleetArrayOutput struct{ *pulumi.OutputState }

func (JmsFleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JmsFleet)(nil))
}

func (o JmsFleetArrayOutput) ToJmsFleetArrayOutput() JmsFleetArrayOutput {
	return o
}

func (o JmsFleetArrayOutput) ToJmsFleetArrayOutputWithContext(ctx context.Context) JmsFleetArrayOutput {
	return o
}

func (o JmsFleetArrayOutput) Index(i pulumi.IntInput) JmsFleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JmsFleet {
		return vs[0].([]JmsFleet)[vs[1].(int)]
	}).(JmsFleetOutput)
}

type JmsFleetMapOutput struct{ *pulumi.OutputState }

func (JmsFleetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JmsFleet)(nil))
}

func (o JmsFleetMapOutput) ToJmsFleetMapOutput() JmsFleetMapOutput {
	return o
}

func (o JmsFleetMapOutput) ToJmsFleetMapOutputWithContext(ctx context.Context) JmsFleetMapOutput {
	return o
}

func (o JmsFleetMapOutput) MapIndex(k pulumi.StringInput) JmsFleetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) JmsFleet {
		return vs[0].(map[string]JmsFleet)[vs[1].(string)]
	}).(JmsFleetOutput)
}

func init() {
	pulumi.RegisterOutputType(JmsFleetOutput{})
	pulumi.RegisterOutputType(JmsFleetPtrOutput{})
	pulumi.RegisterOutputType(JmsFleetArrayOutput{})
	pulumi.RegisterOutputType(JmsFleetMapOutput{})
}
