// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Project resource in Oracle Cloud Infrastructure Data Science service.
//
// Creates a new project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatascienceProject(ctx, "testProject", &oci.DatascienceProjectArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Project_description),
// 			DisplayName: pulumi.Any(_var.Project_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Projects can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/datascienceProject:DatascienceProject test_project "id"
// ```
type DatascienceProject struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the project in.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created this project.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A short description of the project.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The state of the project.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewDatascienceProject registers a new resource with the given unique name, arguments, and options.
func NewDatascienceProject(ctx *pulumi.Context,
	name string, args *DatascienceProjectArgs, opts ...pulumi.ResourceOption) (*DatascienceProject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource DatascienceProject
	err := ctx.RegisterResource("oci:index/datascienceProject:DatascienceProject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatascienceProject gets an existing DatascienceProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatascienceProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatascienceProjectState, opts ...pulumi.ResourceOption) (*DatascienceProject, error) {
	var resource DatascienceProject
	err := ctx.ReadResource("oci:index/datascienceProject:DatascienceProject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatascienceProject resources.
type datascienceProjectState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the project in.
	CompartmentId *string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created this project.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A short description of the project.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The state of the project.
	State *string `pulumi:"state"`
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
	TimeCreated *string `pulumi:"timeCreated"`
}

type DatascienceProjectState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the project in.
	CompartmentId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created this project.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A short description of the project.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The state of the project.
	State pulumi.StringPtrInput
	// The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2019-08-25T21:10:29.41Z
	TimeCreated pulumi.StringPtrInput
}

func (DatascienceProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*datascienceProjectState)(nil)).Elem()
}

type datascienceProjectArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the project in.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A short description of the project.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a DatascienceProject resource.
type DatascienceProjectArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the project in.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A short description of the project.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (DatascienceProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datascienceProjectArgs)(nil)).Elem()
}

type DatascienceProjectInput interface {
	pulumi.Input

	ToDatascienceProjectOutput() DatascienceProjectOutput
	ToDatascienceProjectOutputWithContext(ctx context.Context) DatascienceProjectOutput
}

func (*DatascienceProject) ElementType() reflect.Type {
	return reflect.TypeOf((*DatascienceProject)(nil))
}

func (i *DatascienceProject) ToDatascienceProjectOutput() DatascienceProjectOutput {
	return i.ToDatascienceProjectOutputWithContext(context.Background())
}

func (i *DatascienceProject) ToDatascienceProjectOutputWithContext(ctx context.Context) DatascienceProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatascienceProjectOutput)
}

func (i *DatascienceProject) ToDatascienceProjectPtrOutput() DatascienceProjectPtrOutput {
	return i.ToDatascienceProjectPtrOutputWithContext(context.Background())
}

func (i *DatascienceProject) ToDatascienceProjectPtrOutputWithContext(ctx context.Context) DatascienceProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatascienceProjectPtrOutput)
}

type DatascienceProjectPtrInput interface {
	pulumi.Input

	ToDatascienceProjectPtrOutput() DatascienceProjectPtrOutput
	ToDatascienceProjectPtrOutputWithContext(ctx context.Context) DatascienceProjectPtrOutput
}

type datascienceProjectPtrType DatascienceProjectArgs

func (*datascienceProjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatascienceProject)(nil))
}

func (i *datascienceProjectPtrType) ToDatascienceProjectPtrOutput() DatascienceProjectPtrOutput {
	return i.ToDatascienceProjectPtrOutputWithContext(context.Background())
}

func (i *datascienceProjectPtrType) ToDatascienceProjectPtrOutputWithContext(ctx context.Context) DatascienceProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatascienceProjectPtrOutput)
}

// DatascienceProjectArrayInput is an input type that accepts DatascienceProjectArray and DatascienceProjectArrayOutput values.
// You can construct a concrete instance of `DatascienceProjectArrayInput` via:
//
//          DatascienceProjectArray{ DatascienceProjectArgs{...} }
type DatascienceProjectArrayInput interface {
	pulumi.Input

	ToDatascienceProjectArrayOutput() DatascienceProjectArrayOutput
	ToDatascienceProjectArrayOutputWithContext(context.Context) DatascienceProjectArrayOutput
}

type DatascienceProjectArray []DatascienceProjectInput

func (DatascienceProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatascienceProject)(nil)).Elem()
}

func (i DatascienceProjectArray) ToDatascienceProjectArrayOutput() DatascienceProjectArrayOutput {
	return i.ToDatascienceProjectArrayOutputWithContext(context.Background())
}

func (i DatascienceProjectArray) ToDatascienceProjectArrayOutputWithContext(ctx context.Context) DatascienceProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatascienceProjectArrayOutput)
}

// DatascienceProjectMapInput is an input type that accepts DatascienceProjectMap and DatascienceProjectMapOutput values.
// You can construct a concrete instance of `DatascienceProjectMapInput` via:
//
//          DatascienceProjectMap{ "key": DatascienceProjectArgs{...} }
type DatascienceProjectMapInput interface {
	pulumi.Input

	ToDatascienceProjectMapOutput() DatascienceProjectMapOutput
	ToDatascienceProjectMapOutputWithContext(context.Context) DatascienceProjectMapOutput
}

type DatascienceProjectMap map[string]DatascienceProjectInput

func (DatascienceProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatascienceProject)(nil)).Elem()
}

func (i DatascienceProjectMap) ToDatascienceProjectMapOutput() DatascienceProjectMapOutput {
	return i.ToDatascienceProjectMapOutputWithContext(context.Background())
}

func (i DatascienceProjectMap) ToDatascienceProjectMapOutputWithContext(ctx context.Context) DatascienceProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatascienceProjectMapOutput)
}

type DatascienceProjectOutput struct {
	*pulumi.OutputState
}

func (DatascienceProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatascienceProject)(nil))
}

func (o DatascienceProjectOutput) ToDatascienceProjectOutput() DatascienceProjectOutput {
	return o
}

func (o DatascienceProjectOutput) ToDatascienceProjectOutputWithContext(ctx context.Context) DatascienceProjectOutput {
	return o
}

func (o DatascienceProjectOutput) ToDatascienceProjectPtrOutput() DatascienceProjectPtrOutput {
	return o.ToDatascienceProjectPtrOutputWithContext(context.Background())
}

func (o DatascienceProjectOutput) ToDatascienceProjectPtrOutputWithContext(ctx context.Context) DatascienceProjectPtrOutput {
	return o.ApplyT(func(v DatascienceProject) *DatascienceProject {
		return &v
	}).(DatascienceProjectPtrOutput)
}

type DatascienceProjectPtrOutput struct {
	*pulumi.OutputState
}

func (DatascienceProjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatascienceProject)(nil))
}

func (o DatascienceProjectPtrOutput) ToDatascienceProjectPtrOutput() DatascienceProjectPtrOutput {
	return o
}

func (o DatascienceProjectPtrOutput) ToDatascienceProjectPtrOutputWithContext(ctx context.Context) DatascienceProjectPtrOutput {
	return o
}

type DatascienceProjectArrayOutput struct{ *pulumi.OutputState }

func (DatascienceProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatascienceProject)(nil))
}

func (o DatascienceProjectArrayOutput) ToDatascienceProjectArrayOutput() DatascienceProjectArrayOutput {
	return o
}

func (o DatascienceProjectArrayOutput) ToDatascienceProjectArrayOutputWithContext(ctx context.Context) DatascienceProjectArrayOutput {
	return o
}

func (o DatascienceProjectArrayOutput) Index(i pulumi.IntInput) DatascienceProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatascienceProject {
		return vs[0].([]DatascienceProject)[vs[1].(int)]
	}).(DatascienceProjectOutput)
}

type DatascienceProjectMapOutput struct{ *pulumi.OutputState }

func (DatascienceProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatascienceProject)(nil))
}

func (o DatascienceProjectMapOutput) ToDatascienceProjectMapOutput() DatascienceProjectMapOutput {
	return o
}

func (o DatascienceProjectMapOutput) ToDatascienceProjectMapOutputWithContext(ctx context.Context) DatascienceProjectMapOutput {
	return o
}

func (o DatascienceProjectMapOutput) MapIndex(k pulumi.StringInput) DatascienceProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatascienceProject {
		return vs[0].(map[string]DatascienceProject)[vs[1].(string)]
	}).(DatascienceProjectOutput)
}

func init() {
	pulumi.RegisterOutputType(DatascienceProjectOutput{})
	pulumi.RegisterOutputType(DatascienceProjectPtrOutput{})
	pulumi.RegisterOutputType(DatascienceProjectArrayOutput{})
	pulumi.RegisterOutputType(DatascienceProjectMapOutput{})
}
