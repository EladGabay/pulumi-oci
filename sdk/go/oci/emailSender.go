// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Sender resource in Oracle Cloud Infrastructure Email service.
//
// Creates a sender for a tenancy in a given compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewEmailSender(ctx, "testSender", &oci.EmailSenderArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			EmailAddress:  pulumi.Any(_var.Sender_email_address),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Senders can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/emailSender:EmailSender test_sender "id"
// ```
type EmailSender struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that contains the sender.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The email address of the sender.
	EmailAddress pulumi.StringOutput `pulumi:"emailAddress"`
	// The email domain used to assert responsibility for emails sent from this sender.
	EmailDomainId pulumi.StringOutput `pulumi:"emailDomainId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolOutput `pulumi:"isSpf"`
	// The current status of the approved sender.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the approved sender was added in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewEmailSender registers a new resource with the given unique name, arguments, and options.
func NewEmailSender(ctx *pulumi.Context,
	name string, args *EmailSenderArgs, opts ...pulumi.ResourceOption) (*EmailSender, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.EmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'EmailAddress'")
	}
	var resource EmailSender
	err := ctx.RegisterResource("oci:index/emailSender:EmailSender", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailSender gets an existing EmailSender resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailSender(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailSenderState, opts ...pulumi.ResourceOption) (*EmailSender, error) {
	var resource EmailSender
	err := ctx.ReadResource("oci:index/emailSender:EmailSender", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailSender resources.
type emailSenderState struct {
	// (Updatable) The OCID of the compartment that contains the sender.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The email address of the sender.
	EmailAddress *string `pulumi:"emailAddress"`
	// The email domain used to assert responsibility for emails sent from this sender.
	EmailDomainId *string `pulumi:"emailDomainId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf *bool `pulumi:"isSpf"`
	// The current status of the approved sender.
	State *string `pulumi:"state"`
	// The date and time the approved sender was added in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
}

type EmailSenderState struct {
	// (Updatable) The OCID of the compartment that contains the sender.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The email address of the sender.
	EmailAddress pulumi.StringPtrInput
	// The email domain used to assert responsibility for emails sent from this sender.
	EmailDomainId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolPtrInput
	// The current status of the approved sender.
	State pulumi.StringPtrInput
	// The date and time the approved sender was added in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput
}

func (EmailSenderState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailSenderState)(nil)).Elem()
}

type emailSenderArgs struct {
	// (Updatable) The OCID of the compartment that contains the sender.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The email address of the sender.
	EmailAddress string `pulumi:"emailAddress"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a EmailSender resource.
type EmailSenderArgs struct {
	// (Updatable) The OCID of the compartment that contains the sender.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The email address of the sender.
	EmailAddress pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (EmailSenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailSenderArgs)(nil)).Elem()
}

type EmailSenderInput interface {
	pulumi.Input

	ToEmailSenderOutput() EmailSenderOutput
	ToEmailSenderOutputWithContext(ctx context.Context) EmailSenderOutput
}

func (*EmailSender) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSender)(nil))
}

func (i *EmailSender) ToEmailSenderOutput() EmailSenderOutput {
	return i.ToEmailSenderOutputWithContext(context.Background())
}

func (i *EmailSender) ToEmailSenderOutputWithContext(ctx context.Context) EmailSenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderOutput)
}

func (i *EmailSender) ToEmailSenderPtrOutput() EmailSenderPtrOutput {
	return i.ToEmailSenderPtrOutputWithContext(context.Background())
}

func (i *EmailSender) ToEmailSenderPtrOutputWithContext(ctx context.Context) EmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderPtrOutput)
}

type EmailSenderPtrInput interface {
	pulumi.Input

	ToEmailSenderPtrOutput() EmailSenderPtrOutput
	ToEmailSenderPtrOutputWithContext(ctx context.Context) EmailSenderPtrOutput
}

type emailSenderPtrType EmailSenderArgs

func (*emailSenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSender)(nil))
}

func (i *emailSenderPtrType) ToEmailSenderPtrOutput() EmailSenderPtrOutput {
	return i.ToEmailSenderPtrOutputWithContext(context.Background())
}

func (i *emailSenderPtrType) ToEmailSenderPtrOutputWithContext(ctx context.Context) EmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderPtrOutput)
}

// EmailSenderArrayInput is an input type that accepts EmailSenderArray and EmailSenderArrayOutput values.
// You can construct a concrete instance of `EmailSenderArrayInput` via:
//
//          EmailSenderArray{ EmailSenderArgs{...} }
type EmailSenderArrayInput interface {
	pulumi.Input

	ToEmailSenderArrayOutput() EmailSenderArrayOutput
	ToEmailSenderArrayOutputWithContext(context.Context) EmailSenderArrayOutput
}

type EmailSenderArray []EmailSenderInput

func (EmailSenderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailSender)(nil)).Elem()
}

func (i EmailSenderArray) ToEmailSenderArrayOutput() EmailSenderArrayOutput {
	return i.ToEmailSenderArrayOutputWithContext(context.Background())
}

func (i EmailSenderArray) ToEmailSenderArrayOutputWithContext(ctx context.Context) EmailSenderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderArrayOutput)
}

// EmailSenderMapInput is an input type that accepts EmailSenderMap and EmailSenderMapOutput values.
// You can construct a concrete instance of `EmailSenderMapInput` via:
//
//          EmailSenderMap{ "key": EmailSenderArgs{...} }
type EmailSenderMapInput interface {
	pulumi.Input

	ToEmailSenderMapOutput() EmailSenderMapOutput
	ToEmailSenderMapOutputWithContext(context.Context) EmailSenderMapOutput
}

type EmailSenderMap map[string]EmailSenderInput

func (EmailSenderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailSender)(nil)).Elem()
}

func (i EmailSenderMap) ToEmailSenderMapOutput() EmailSenderMapOutput {
	return i.ToEmailSenderMapOutputWithContext(context.Background())
}

func (i EmailSenderMap) ToEmailSenderMapOutputWithContext(ctx context.Context) EmailSenderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSenderMapOutput)
}

type EmailSenderOutput struct {
	*pulumi.OutputState
}

func (EmailSenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSender)(nil))
}

func (o EmailSenderOutput) ToEmailSenderOutput() EmailSenderOutput {
	return o
}

func (o EmailSenderOutput) ToEmailSenderOutputWithContext(ctx context.Context) EmailSenderOutput {
	return o
}

func (o EmailSenderOutput) ToEmailSenderPtrOutput() EmailSenderPtrOutput {
	return o.ToEmailSenderPtrOutputWithContext(context.Background())
}

func (o EmailSenderOutput) ToEmailSenderPtrOutputWithContext(ctx context.Context) EmailSenderPtrOutput {
	return o.ApplyT(func(v EmailSender) *EmailSender {
		return &v
	}).(EmailSenderPtrOutput)
}

type EmailSenderPtrOutput struct {
	*pulumi.OutputState
}

func (EmailSenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSender)(nil))
}

func (o EmailSenderPtrOutput) ToEmailSenderPtrOutput() EmailSenderPtrOutput {
	return o
}

func (o EmailSenderPtrOutput) ToEmailSenderPtrOutputWithContext(ctx context.Context) EmailSenderPtrOutput {
	return o
}

type EmailSenderArrayOutput struct{ *pulumi.OutputState }

func (EmailSenderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailSender)(nil))
}

func (o EmailSenderArrayOutput) ToEmailSenderArrayOutput() EmailSenderArrayOutput {
	return o
}

func (o EmailSenderArrayOutput) ToEmailSenderArrayOutputWithContext(ctx context.Context) EmailSenderArrayOutput {
	return o
}

func (o EmailSenderArrayOutput) Index(i pulumi.IntInput) EmailSenderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailSender {
		return vs[0].([]EmailSender)[vs[1].(int)]
	}).(EmailSenderOutput)
}

type EmailSenderMapOutput struct{ *pulumi.OutputState }

func (EmailSenderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EmailSender)(nil))
}

func (o EmailSenderMapOutput) ToEmailSenderMapOutput() EmailSenderMapOutput {
	return o
}

func (o EmailSenderMapOutput) ToEmailSenderMapOutputWithContext(ctx context.Context) EmailSenderMapOutput {
	return o
}

func (o EmailSenderMapOutput) MapIndex(k pulumi.StringInput) EmailSenderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EmailSender {
		return vs[0].(map[string]EmailSender)[vs[1].(string)]
	}).(EmailSenderOutput)
}

func init() {
	pulumi.RegisterOutputType(EmailSenderOutput{})
	pulumi.RegisterOutputType(EmailSenderPtrOutput{})
	pulumi.RegisterOutputType(EmailSenderArrayOutput{})
	pulumi.RegisterOutputType(EmailSenderMapOutput{})
}
