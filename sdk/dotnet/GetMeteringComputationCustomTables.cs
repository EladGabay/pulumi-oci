// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMeteringComputationCustomTables
    {
        /// <summary>
        /// This data source provides the list of Custom Tables in Oracle Cloud Infrastructure Metering Computation service.
        /// 
        /// Returns the saved custom table list.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCustomTables = Output.Create(Oci.GetMeteringComputationCustomTables.InvokeAsync(new Oci.GetMeteringComputationCustomTablesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             SavedReportId = oci_metering_computation_saved_report.Test_saved_report.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMeteringComputationCustomTablesResult> InvokeAsync(GetMeteringComputationCustomTablesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMeteringComputationCustomTablesResult>("oci:index/getMeteringComputationCustomTables:GetMeteringComputationCustomTables", args ?? new GetMeteringComputationCustomTablesArgs(), options.WithVersion());
    }


    public sealed class GetMeteringComputationCustomTablesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment ID in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetMeteringComputationCustomTablesFilterArgs>? _filters;
        public List<Inputs.GetMeteringComputationCustomTablesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMeteringComputationCustomTablesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The saved report ID in which to list resources.
        /// </summary>
        [Input("savedReportId", required: true)]
        public string SavedReportId { get; set; } = null!;

        public GetMeteringComputationCustomTablesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMeteringComputationCustomTablesResult
    {
        /// <summary>
        /// The custom table compartment OCID.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of custom_table_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMeteringComputationCustomTablesCustomTableCollectionResult> CustomTableCollections;
        public readonly ImmutableArray<Outputs.GetMeteringComputationCustomTablesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The custom table associated saved report OCID.
        /// </summary>
        public readonly string SavedReportId;

        [OutputConstructor]
        private GetMeteringComputationCustomTablesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetMeteringComputationCustomTablesCustomTableCollectionResult> customTableCollections,

            ImmutableArray<Outputs.GetMeteringComputationCustomTablesFilterResult> filters,

            string id,

            string savedReportId)
        {
            CompartmentId = compartmentId;
            CustomTableCollections = customTableCollections;
            Filters = filters;
            Id = id;
            SavedReportId = savedReportId;
        }
    }
}
