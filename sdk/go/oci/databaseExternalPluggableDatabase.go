// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Pluggable Database resource in Oracle Cloud Infrastructure Database service.
//
// Registers a new [ExternalPluggableDatabase](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails)
// resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseExternalPluggableDatabase(ctx, "testExternalPluggableDatabase", &oci.DatabaseExternalPluggableDatabaseArgs{
// 			CompartmentId:               pulumi.Any(_var.Compartment_id),
// 			DisplayName:                 pulumi.Any(_var.External_pluggable_database_display_name),
// 			ExternalContainerDatabaseId: pulumi.Any(oci_database_external_container_database.Test_external_container_database.Id),
// 			DefinedTags:                 pulumi.Any(_var.External_pluggable_database_defined_tags),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			SourceId: pulumi.Any(oci_database_source.Test_source.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ExternalPluggableDatabases can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseExternalPluggableDatabase:DatabaseExternalPluggableDatabase test_external_pluggable_database "id"
// ```
type DatabaseExternalPluggableDatabase struct {
	pulumi.CustomResourceState

	// The character set of the external database.
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringOutput `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringOutput `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfig DatabaseExternalPluggableDatabaseDatabaseManagementConfigOutput `pulumi:"databaseManagementConfig"`
	// The Oracle Database version.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringOutput `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringOutput `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringOutput `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId pulumi.StringOutput `pulumi:"externalContainerDatabaseId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet pulumi.StringOutput `pulumi:"ncharacterSet"`
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfig DatabaseExternalPluggableDatabaseOperationsInsightsConfigOutput `pulumi:"operationsInsightsConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
	SourceId pulumi.StringOutput `pulumi:"sourceId"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewDatabaseExternalPluggableDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabaseExternalPluggableDatabase(ctx *pulumi.Context,
	name string, args *DatabaseExternalPluggableDatabaseArgs, opts ...pulumi.ResourceOption) (*DatabaseExternalPluggableDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ExternalContainerDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalContainerDatabaseId'")
	}
	var resource DatabaseExternalPluggableDatabase
	err := ctx.RegisterResource("oci:index/databaseExternalPluggableDatabase:DatabaseExternalPluggableDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseExternalPluggableDatabase gets an existing DatabaseExternalPluggableDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseExternalPluggableDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseExternalPluggableDatabaseState, opts ...pulumi.ResourceOption) (*DatabaseExternalPluggableDatabase, error) {
	var resource DatabaseExternalPluggableDatabase
	err := ctx.ReadResource("oci:index/databaseExternalPluggableDatabase:DatabaseExternalPluggableDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseExternalPluggableDatabase resources.
type databaseExternalPluggableDatabaseState struct {
	// The character set of the external database.
	CharacterSet *string `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration *string `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfig *DatabaseExternalPluggableDatabaseDatabaseManagementConfig `pulumi:"databaseManagementConfig"`
	// The Oracle Database version.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId *string `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks *string `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId *string `pulumi:"externalContainerDatabaseId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfig *DatabaseExternalPluggableDatabaseOperationsInsightsConfig `pulumi:"operationsInsightsConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
	SourceId *string `pulumi:"sourceId"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone *string `pulumi:"timeZone"`
}

type DatabaseExternalPluggableDatabaseState struct {
	// The character set of the external database.
	CharacterSet pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringPtrInput
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringPtrInput
	// The configuration of the Database Management service.
	DatabaseManagementConfig DatabaseExternalPluggableDatabaseDatabaseManagementConfigPtrInput
	// The Oracle Database version.
	DatabaseVersion pulumi.StringPtrInput
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringPtrInput
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringPtrInput
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character of the external database.
	NcharacterSet pulumi.StringPtrInput
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfig DatabaseExternalPluggableDatabaseOperationsInsightsConfigPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
	SourceId pulumi.StringPtrInput
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringPtrInput
}

func (DatabaseExternalPluggableDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalPluggableDatabaseState)(nil)).Elem()
}

type databaseExternalPluggableDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId string `pulumi:"externalContainerDatabaseId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
	SourceId *string `pulumi:"sourceId"`
}

// The set of arguments for constructing a DatabaseExternalPluggableDatabase resource.
type DatabaseExternalPluggableDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the the non-container database that was converted to a pluggable database to create this resource.
	SourceId pulumi.StringPtrInput
}

func (DatabaseExternalPluggableDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseExternalPluggableDatabaseArgs)(nil)).Elem()
}

type DatabaseExternalPluggableDatabaseInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseOutput() DatabaseExternalPluggableDatabaseOutput
	ToDatabaseExternalPluggableDatabaseOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseOutput
}

func (*DatabaseExternalPluggableDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalPluggableDatabase)(nil))
}

func (i *DatabaseExternalPluggableDatabase) ToDatabaseExternalPluggableDatabaseOutput() DatabaseExternalPluggableDatabaseOutput {
	return i.ToDatabaseExternalPluggableDatabaseOutputWithContext(context.Background())
}

func (i *DatabaseExternalPluggableDatabase) ToDatabaseExternalPluggableDatabaseOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseOutput)
}

func (i *DatabaseExternalPluggableDatabase) ToDatabaseExternalPluggableDatabasePtrOutput() DatabaseExternalPluggableDatabasePtrOutput {
	return i.ToDatabaseExternalPluggableDatabasePtrOutputWithContext(context.Background())
}

func (i *DatabaseExternalPluggableDatabase) ToDatabaseExternalPluggableDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabasePtrOutput)
}

type DatabaseExternalPluggableDatabasePtrInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabasePtrOutput() DatabaseExternalPluggableDatabasePtrOutput
	ToDatabaseExternalPluggableDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabasePtrOutput
}

type databaseExternalPluggableDatabasePtrType DatabaseExternalPluggableDatabaseArgs

func (*databaseExternalPluggableDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalPluggableDatabase)(nil))
}

func (i *databaseExternalPluggableDatabasePtrType) ToDatabaseExternalPluggableDatabasePtrOutput() DatabaseExternalPluggableDatabasePtrOutput {
	return i.ToDatabaseExternalPluggableDatabasePtrOutputWithContext(context.Background())
}

func (i *databaseExternalPluggableDatabasePtrType) ToDatabaseExternalPluggableDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabasePtrOutput)
}

// DatabaseExternalPluggableDatabaseArrayInput is an input type that accepts DatabaseExternalPluggableDatabaseArray and DatabaseExternalPluggableDatabaseArrayOutput values.
// You can construct a concrete instance of `DatabaseExternalPluggableDatabaseArrayInput` via:
//
//          DatabaseExternalPluggableDatabaseArray{ DatabaseExternalPluggableDatabaseArgs{...} }
type DatabaseExternalPluggableDatabaseArrayInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseArrayOutput() DatabaseExternalPluggableDatabaseArrayOutput
	ToDatabaseExternalPluggableDatabaseArrayOutputWithContext(context.Context) DatabaseExternalPluggableDatabaseArrayOutput
}

type DatabaseExternalPluggableDatabaseArray []DatabaseExternalPluggableDatabaseInput

func (DatabaseExternalPluggableDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseExternalPluggableDatabase)(nil)).Elem()
}

func (i DatabaseExternalPluggableDatabaseArray) ToDatabaseExternalPluggableDatabaseArrayOutput() DatabaseExternalPluggableDatabaseArrayOutput {
	return i.ToDatabaseExternalPluggableDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabaseExternalPluggableDatabaseArray) ToDatabaseExternalPluggableDatabaseArrayOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseArrayOutput)
}

// DatabaseExternalPluggableDatabaseMapInput is an input type that accepts DatabaseExternalPluggableDatabaseMap and DatabaseExternalPluggableDatabaseMapOutput values.
// You can construct a concrete instance of `DatabaseExternalPluggableDatabaseMapInput` via:
//
//          DatabaseExternalPluggableDatabaseMap{ "key": DatabaseExternalPluggableDatabaseArgs{...} }
type DatabaseExternalPluggableDatabaseMapInput interface {
	pulumi.Input

	ToDatabaseExternalPluggableDatabaseMapOutput() DatabaseExternalPluggableDatabaseMapOutput
	ToDatabaseExternalPluggableDatabaseMapOutputWithContext(context.Context) DatabaseExternalPluggableDatabaseMapOutput
}

type DatabaseExternalPluggableDatabaseMap map[string]DatabaseExternalPluggableDatabaseInput

func (DatabaseExternalPluggableDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseExternalPluggableDatabase)(nil)).Elem()
}

func (i DatabaseExternalPluggableDatabaseMap) ToDatabaseExternalPluggableDatabaseMapOutput() DatabaseExternalPluggableDatabaseMapOutput {
	return i.ToDatabaseExternalPluggableDatabaseMapOutputWithContext(context.Background())
}

func (i DatabaseExternalPluggableDatabaseMap) ToDatabaseExternalPluggableDatabaseMapOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExternalPluggableDatabaseMapOutput)
}

type DatabaseExternalPluggableDatabaseOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalPluggableDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExternalPluggableDatabase)(nil))
}

func (o DatabaseExternalPluggableDatabaseOutput) ToDatabaseExternalPluggableDatabaseOutput() DatabaseExternalPluggableDatabaseOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseOutput) ToDatabaseExternalPluggableDatabaseOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseOutput) ToDatabaseExternalPluggableDatabasePtrOutput() DatabaseExternalPluggableDatabasePtrOutput {
	return o.ToDatabaseExternalPluggableDatabasePtrOutputWithContext(context.Background())
}

func (o DatabaseExternalPluggableDatabaseOutput) ToDatabaseExternalPluggableDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabasePtrOutput {
	return o.ApplyT(func(v DatabaseExternalPluggableDatabase) *DatabaseExternalPluggableDatabase {
		return &v
	}).(DatabaseExternalPluggableDatabasePtrOutput)
}

type DatabaseExternalPluggableDatabasePtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseExternalPluggableDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExternalPluggableDatabase)(nil))
}

func (o DatabaseExternalPluggableDatabasePtrOutput) ToDatabaseExternalPluggableDatabasePtrOutput() DatabaseExternalPluggableDatabasePtrOutput {
	return o
}

func (o DatabaseExternalPluggableDatabasePtrOutput) ToDatabaseExternalPluggableDatabasePtrOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabasePtrOutput {
	return o
}

type DatabaseExternalPluggableDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseExternalPluggableDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseExternalPluggableDatabase)(nil))
}

func (o DatabaseExternalPluggableDatabaseArrayOutput) ToDatabaseExternalPluggableDatabaseArrayOutput() DatabaseExternalPluggableDatabaseArrayOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseArrayOutput) ToDatabaseExternalPluggableDatabaseArrayOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseArrayOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseArrayOutput) Index(i pulumi.IntInput) DatabaseExternalPluggableDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseExternalPluggableDatabase {
		return vs[0].([]DatabaseExternalPluggableDatabase)[vs[1].(int)]
	}).(DatabaseExternalPluggableDatabaseOutput)
}

type DatabaseExternalPluggableDatabaseMapOutput struct{ *pulumi.OutputState }

func (DatabaseExternalPluggableDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseExternalPluggableDatabase)(nil))
}

func (o DatabaseExternalPluggableDatabaseMapOutput) ToDatabaseExternalPluggableDatabaseMapOutput() DatabaseExternalPluggableDatabaseMapOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseMapOutput) ToDatabaseExternalPluggableDatabaseMapOutputWithContext(ctx context.Context) DatabaseExternalPluggableDatabaseMapOutput {
	return o
}

func (o DatabaseExternalPluggableDatabaseMapOutput) MapIndex(k pulumi.StringInput) DatabaseExternalPluggableDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseExternalPluggableDatabase {
		return vs[0].(map[string]DatabaseExternalPluggableDatabase)[vs[1].(string)]
	}).(DatabaseExternalPluggableDatabaseOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabasePtrOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseExternalPluggableDatabaseMapOutput{})
}
