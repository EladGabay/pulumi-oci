// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetBlockchainOsn
    {
        /// <summary>
        /// This data source provides details about a specific Osn resource in Oracle Cloud Infrastructure Blockchain service.
        /// 
        /// Gets information about an OSN identified by the specific id
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testOsn = Output.Create(Oci.GetBlockchainOsn.InvokeAsync(new Oci.GetBlockchainOsnArgs
        ///         {
        ///             BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
        ///             OsnId = oci_blockchain_osn.Test_osn.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlockchainOsnResult> InvokeAsync(GetBlockchainOsnArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBlockchainOsnResult>("oci:index/getBlockchainOsn:GetBlockchainOsn", args ?? new GetBlockchainOsnArgs(), options.WithVersion());
    }


    public sealed class GetBlockchainOsnArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public string BlockchainPlatformId { get; set; } = null!;

        /// <summary>
        /// OSN identifier.
        /// </summary>
        [Input("osnId", required: true)]
        public string OsnId { get; set; } = null!;

        public GetBlockchainOsnArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBlockchainOsnResult
    {
        /// <summary>
        /// Availability Domain of OSN
        /// </summary>
        public readonly string Ad;
        public readonly string BlockchainPlatformId;
        public readonly string Id;
        /// <summary>
        /// OCPU allocation parameter
        /// </summary>
        public readonly Outputs.GetBlockchainOsnOcpuAllocationParamResult OcpuAllocationParam;
        public readonly string OsnId;
        /// <summary>
        /// OSN identifier
        /// </summary>
        public readonly string OsnKey;
        /// <summary>
        /// The current state of the OSN.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetBlockchainOsnResult(
            string ad,

            string blockchainPlatformId,

            string id,

            Outputs.GetBlockchainOsnOcpuAllocationParamResult ocpuAllocationParam,

            string osnId,

            string osnKey,

            string state)
        {
            Ad = ad;
            BlockchainPlatformId = blockchainPlatformId;
            Id = id;
            OcpuAllocationParam = ocpuAllocationParam;
            OsnId = osnId;
            OsnKey = osnKey;
            State = state;
        }
    }
}
