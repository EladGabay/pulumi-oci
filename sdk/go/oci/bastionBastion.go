// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bastion resource in Oracle Cloud Infrastructure Bastion service.
//
// Creates a new bastion. A bastion provides secured, public access to target resources in the cloud that you cannot otherwise reach from the internet. A bastion resides in a public subnet and establishes the network infrastructure needed to connect a user to a target resource in a private subnet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewBastionBastion(ctx, "testBastion", &oci.BastionBastionArgs{
// 			BastionType:               pulumi.Any(_var.Bastion_bastion_type),
// 			CompartmentId:             pulumi.Any(_var.Compartment_id),
// 			TargetSubnetId:            pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 			ClientCidrBlockAllowLists: pulumi.Any(_var.Bastion_client_cidr_block_allow_list),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			MaxSessionTtlInSeconds:    pulumi.Any(_var.Bastion_max_session_ttl_in_seconds),
// 			PhoneBookEntry:            pulumi.Any(_var.Bastion_phone_book_entry),
// 			StaticJumpHostIpAddresses: pulumi.Any(_var.Bastion_static_jump_host_ip_addresses),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Bastions can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/bastionBastion:BastionBastion test_bastion "id"
// ```
type BastionBastion struct {
	pulumi.CustomResourceState

	// The type of bastion. Use `standard`.
	BastionType pulumi.StringOutput `pulumi:"bastionType"`
	// (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists pulumi.StringArrayOutput `pulumi:"clientCidrBlockAllowLists"`
	// (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds pulumi.IntOutput `pulumi:"maxSessionTtlInSeconds"`
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed pulumi.IntOutput `pulumi:"maxSessionsAllowed"`
	// The name of the bastion, which can't be changed after creation.
	Name pulumi.StringOutput `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry pulumi.StringOutput `pulumi:"phoneBookEntry"`
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress pulumi.StringOutput `pulumi:"privateEndpointIpAddress"`
	// The current state of the bastion.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses pulumi.StringArrayOutput `pulumi:"staticJumpHostIpAddresses"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId pulumi.StringOutput `pulumi:"targetSubnetId"`
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId pulumi.StringOutput `pulumi:"targetVcnId"`
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewBastionBastion registers a new resource with the given unique name, arguments, and options.
func NewBastionBastion(ctx *pulumi.Context,
	name string, args *BastionBastionArgs, opts ...pulumi.ResourceOption) (*BastionBastion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BastionType == nil {
		return nil, errors.New("invalid value for required argument 'BastionType'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.TargetSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetSubnetId'")
	}
	var resource BastionBastion
	err := ctx.RegisterResource("oci:index/bastionBastion:BastionBastion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBastionBastion gets an existing BastionBastion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBastionBastion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BastionBastionState, opts ...pulumi.ResourceOption) (*BastionBastion, error) {
	var resource BastionBastion
	err := ctx.ReadResource("oci:index/bastionBastion:BastionBastion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BastionBastion resources.
type bastionBastionState struct {
	// The type of bastion. Use `standard`.
	BastionType *string `pulumi:"bastionType"`
	// (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists []string `pulumi:"clientCidrBlockAllowLists"`
	// (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds *int `pulumi:"maxSessionTtlInSeconds"`
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed *int `pulumi:"maxSessionsAllowed"`
	// The name of the bastion, which can't be changed after creation.
	Name *string `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry *string `pulumi:"phoneBookEntry"`
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress *string `pulumi:"privateEndpointIpAddress"`
	// The current state of the bastion.
	State *string `pulumi:"state"`
	// (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses []string `pulumi:"staticJumpHostIpAddresses"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId *string `pulumi:"targetSubnetId"`
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId *string `pulumi:"targetVcnId"`
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type BastionBastionState struct {
	// The type of bastion. Use `standard`.
	BastionType pulumi.StringPtrInput
	// (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists pulumi.StringArrayInput
	// (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds pulumi.IntPtrInput
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed pulumi.IntPtrInput
	// The name of the bastion, which can't be changed after creation.
	Name pulumi.StringPtrInput
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry pulumi.StringPtrInput
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress pulumi.StringPtrInput
	// The current state of the bastion.
	State pulumi.StringPtrInput
	// (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses pulumi.StringArrayInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId pulumi.StringPtrInput
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId pulumi.StringPtrInput
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (BastionBastionState) ElementType() reflect.Type {
	return reflect.TypeOf((*bastionBastionState)(nil)).Elem()
}

type bastionBastionArgs struct {
	// The type of bastion. Use `standard`.
	BastionType string `pulumi:"bastionType"`
	// (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists []string `pulumi:"clientCidrBlockAllowLists"`
	// (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds *int `pulumi:"maxSessionTtlInSeconds"`
	// The name of the bastion, which can't be changed after creation.
	Name *string `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry *string `pulumi:"phoneBookEntry"`
	// (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses []string `pulumi:"staticJumpHostIpAddresses"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId string `pulumi:"targetSubnetId"`
}

// The set of arguments for constructing a BastionBastion resource.
type BastionBastionArgs struct {
	// The type of bastion. Use `standard`.
	BastionType pulumi.StringInput
	// (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists pulumi.StringArrayInput
	// (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds pulumi.IntPtrInput
	// The name of the bastion, which can't be changed after creation.
	Name pulumi.StringPtrInput
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry pulumi.StringPtrInput
	// (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses pulumi.StringArrayInput
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId pulumi.StringInput
}

func (BastionBastionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bastionBastionArgs)(nil)).Elem()
}

type BastionBastionInput interface {
	pulumi.Input

	ToBastionBastionOutput() BastionBastionOutput
	ToBastionBastionOutputWithContext(ctx context.Context) BastionBastionOutput
}

func (*BastionBastion) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionBastion)(nil))
}

func (i *BastionBastion) ToBastionBastionOutput() BastionBastionOutput {
	return i.ToBastionBastionOutputWithContext(context.Background())
}

func (i *BastionBastion) ToBastionBastionOutputWithContext(ctx context.Context) BastionBastionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionBastionOutput)
}

func (i *BastionBastion) ToBastionBastionPtrOutput() BastionBastionPtrOutput {
	return i.ToBastionBastionPtrOutputWithContext(context.Background())
}

func (i *BastionBastion) ToBastionBastionPtrOutputWithContext(ctx context.Context) BastionBastionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionBastionPtrOutput)
}

type BastionBastionPtrInput interface {
	pulumi.Input

	ToBastionBastionPtrOutput() BastionBastionPtrOutput
	ToBastionBastionPtrOutputWithContext(ctx context.Context) BastionBastionPtrOutput
}

type bastionBastionPtrType BastionBastionArgs

func (*bastionBastionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionBastion)(nil))
}

func (i *bastionBastionPtrType) ToBastionBastionPtrOutput() BastionBastionPtrOutput {
	return i.ToBastionBastionPtrOutputWithContext(context.Background())
}

func (i *bastionBastionPtrType) ToBastionBastionPtrOutputWithContext(ctx context.Context) BastionBastionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionBastionPtrOutput)
}

// BastionBastionArrayInput is an input type that accepts BastionBastionArray and BastionBastionArrayOutput values.
// You can construct a concrete instance of `BastionBastionArrayInput` via:
//
//          BastionBastionArray{ BastionBastionArgs{...} }
type BastionBastionArrayInput interface {
	pulumi.Input

	ToBastionBastionArrayOutput() BastionBastionArrayOutput
	ToBastionBastionArrayOutputWithContext(context.Context) BastionBastionArrayOutput
}

type BastionBastionArray []BastionBastionInput

func (BastionBastionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BastionBastion)(nil)).Elem()
}

func (i BastionBastionArray) ToBastionBastionArrayOutput() BastionBastionArrayOutput {
	return i.ToBastionBastionArrayOutputWithContext(context.Background())
}

func (i BastionBastionArray) ToBastionBastionArrayOutputWithContext(ctx context.Context) BastionBastionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionBastionArrayOutput)
}

// BastionBastionMapInput is an input type that accepts BastionBastionMap and BastionBastionMapOutput values.
// You can construct a concrete instance of `BastionBastionMapInput` via:
//
//          BastionBastionMap{ "key": BastionBastionArgs{...} }
type BastionBastionMapInput interface {
	pulumi.Input

	ToBastionBastionMapOutput() BastionBastionMapOutput
	ToBastionBastionMapOutputWithContext(context.Context) BastionBastionMapOutput
}

type BastionBastionMap map[string]BastionBastionInput

func (BastionBastionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BastionBastion)(nil)).Elem()
}

func (i BastionBastionMap) ToBastionBastionMapOutput() BastionBastionMapOutput {
	return i.ToBastionBastionMapOutputWithContext(context.Background())
}

func (i BastionBastionMap) ToBastionBastionMapOutputWithContext(ctx context.Context) BastionBastionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionBastionMapOutput)
}

type BastionBastionOutput struct {
	*pulumi.OutputState
}

func (BastionBastionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionBastion)(nil))
}

func (o BastionBastionOutput) ToBastionBastionOutput() BastionBastionOutput {
	return o
}

func (o BastionBastionOutput) ToBastionBastionOutputWithContext(ctx context.Context) BastionBastionOutput {
	return o
}

func (o BastionBastionOutput) ToBastionBastionPtrOutput() BastionBastionPtrOutput {
	return o.ToBastionBastionPtrOutputWithContext(context.Background())
}

func (o BastionBastionOutput) ToBastionBastionPtrOutputWithContext(ctx context.Context) BastionBastionPtrOutput {
	return o.ApplyT(func(v BastionBastion) *BastionBastion {
		return &v
	}).(BastionBastionPtrOutput)
}

type BastionBastionPtrOutput struct {
	*pulumi.OutputState
}

func (BastionBastionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionBastion)(nil))
}

func (o BastionBastionPtrOutput) ToBastionBastionPtrOutput() BastionBastionPtrOutput {
	return o
}

func (o BastionBastionPtrOutput) ToBastionBastionPtrOutputWithContext(ctx context.Context) BastionBastionPtrOutput {
	return o
}

type BastionBastionArrayOutput struct{ *pulumi.OutputState }

func (BastionBastionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionBastion)(nil))
}

func (o BastionBastionArrayOutput) ToBastionBastionArrayOutput() BastionBastionArrayOutput {
	return o
}

func (o BastionBastionArrayOutput) ToBastionBastionArrayOutputWithContext(ctx context.Context) BastionBastionArrayOutput {
	return o
}

func (o BastionBastionArrayOutput) Index(i pulumi.IntInput) BastionBastionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionBastion {
		return vs[0].([]BastionBastion)[vs[1].(int)]
	}).(BastionBastionOutput)
}

type BastionBastionMapOutput struct{ *pulumi.OutputState }

func (BastionBastionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BastionBastion)(nil))
}

func (o BastionBastionMapOutput) ToBastionBastionMapOutput() BastionBastionMapOutput {
	return o
}

func (o BastionBastionMapOutput) ToBastionBastionMapOutputWithContext(ctx context.Context) BastionBastionMapOutput {
	return o
}

func (o BastionBastionMapOutput) MapIndex(k pulumi.StringInput) BastionBastionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BastionBastion {
		return vs[0].(map[string]BastionBastion)[vs[1].(string)]
	}).(BastionBastionOutput)
}

func init() {
	pulumi.RegisterOutputType(BastionBastionOutput{})
	pulumi.RegisterOutputType(BastionBastionPtrOutput{})
	pulumi.RegisterOutputType(BastionBastionArrayOutput{})
	pulumi.RegisterOutputType(BastionBastionMapOutput{})
}
