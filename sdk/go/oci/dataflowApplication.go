// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Application resource in Oracle Cloud Infrastructure Data Flow service.
//
// Creates an application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDataflowApplication(ctx, "testApplication", &oci.DataflowApplicationArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Application_display_name),
// 			DriverShape:   pulumi.Any(_var.Application_driver_shape),
// 			ExecutorShape: pulumi.Any(_var.Application_executor_shape),
// 			FileUri:       pulumi.Any(_var.Application_file_uri),
// 			Language:      pulumi.Any(_var.Application_language),
// 			NumExecutors:  pulumi.Any(_var.Application_num_executors),
// 			SparkVersion:  pulumi.Any(_var.Application_spark_version),
// 			ArchiveUri:    pulumi.Any(_var.Application_archive_uri),
// 			Arguments:     pulumi.Any(_var.Application_arguments),
// 			ClassName:     pulumi.Any(_var.Application_class_name),
// 			Configuration: pulumi.Any(_var.Application_configuration),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Application_description),
// 			Execute:     pulumi.Any(_var.Application_execute),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			LogsBucketUri: pulumi.Any(_var.Application_logs_bucket_uri),
// 			MetastoreId:   pulumi.Any(_var.Metastore_id),
// 			Parameters: DataflowApplicationParameterArray{
// 				&DataflowApplicationParameterArgs{
// 					Name:  pulumi.Any(_var.Application_parameters_name),
// 					Value: pulumi.Any(_var.Application_parameters_value),
// 				},
// 			},
// 			PrivateEndpointId:  pulumi.Any(oci_dataflow_private_endpoint.Test_private_endpoint.Id),
// 			WarehouseBucketUri: pulumi.Any(_var.Application_warehouse_bucket_uri),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Applications can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/dataflowApplication:DataflowApplication test_application "id"
// ```
type DataflowApplication struct {
	pulumi.CustomResourceState

	// (Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	ArchiveUri pulumi.StringPtrOutput `pulumi:"archiveUri"`
	// (Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
	Arguments pulumi.StringArrayOutput `pulumi:"arguments"`
	// (Updatable) The class for the application.
	ClassName pulumi.StringPtrOutput `pulumi:"className"`
	// (Updatable) The OCID of a compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
	Configuration pulumi.MapOutput `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The VM shape for the driver. Sets the driver cores and memory.
	DriverShape pulumi.StringOutput `pulumi:"driverShape"`
	// (Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
	Execute pulumi.StringOutput `pulumi:"execute"`
	// (Updatable) The VM shape for the executors. Sets the executor cores and memory.
	ExecutorShape pulumi.StringOutput `pulumi:"executorShape"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	FileUri pulumi.StringOutput `pulumi:"fileUri"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The Spark language.
	Language pulumi.StringOutput `pulumi:"language"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	LogsBucketUri pulumi.StringOutput `pulumi:"logsBucketUri"`
	// (Updatable) The OCID of Oracle Cloud Infrastructure Hive Metastore.
	MetastoreId pulumi.StringOutput `pulumi:"metastoreId"`
	// (Updatable) The number of executor VMs requested.
	NumExecutors pulumi.IntOutput `pulumi:"numExecutors"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId pulumi.StringOutput `pulumi:"ownerPrincipalId"`
	// The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
	OwnerUserName pulumi.StringOutput `pulumi:"ownerUserName"`
	// (Updatable) An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
	Parameters DataflowApplicationParameterArrayOutput `pulumi:"parameters"`
	// (Updatable) The OCID of a private endpoint.
	PrivateEndpointId pulumi.StringOutput `pulumi:"privateEndpointId"`
	// (Updatable) The Spark version utilized to run the application.
	SparkVersion pulumi.StringOutput `pulumi:"sparkVersion"`
	// The current state of this application.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	WarehouseBucketUri pulumi.StringOutput `pulumi:"warehouseBucketUri"`
}

// NewDataflowApplication registers a new resource with the given unique name, arguments, and options.
func NewDataflowApplication(ctx *pulumi.Context,
	name string, args *DataflowApplicationArgs, opts ...pulumi.ResourceOption) (*DataflowApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.DriverShape == nil {
		return nil, errors.New("invalid value for required argument 'DriverShape'")
	}
	if args.ExecutorShape == nil {
		return nil, errors.New("invalid value for required argument 'ExecutorShape'")
	}
	if args.FileUri == nil {
		return nil, errors.New("invalid value for required argument 'FileUri'")
	}
	if args.Language == nil {
		return nil, errors.New("invalid value for required argument 'Language'")
	}
	if args.NumExecutors == nil {
		return nil, errors.New("invalid value for required argument 'NumExecutors'")
	}
	if args.SparkVersion == nil {
		return nil, errors.New("invalid value for required argument 'SparkVersion'")
	}
	var resource DataflowApplication
	err := ctx.RegisterResource("oci:index/dataflowApplication:DataflowApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataflowApplication gets an existing DataflowApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataflowApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataflowApplicationState, opts ...pulumi.ResourceOption) (*DataflowApplication, error) {
	var resource DataflowApplication
	err := ctx.ReadResource("oci:index/dataflowApplication:DataflowApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataflowApplication resources.
type dataflowApplicationState struct {
	// (Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	ArchiveUri *string `pulumi:"archiveUri"`
	// (Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
	Arguments []string `pulumi:"arguments"`
	// (Updatable) The class for the application.
	ClassName *string `pulumi:"className"`
	// (Updatable) The OCID of a compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
	Configuration map[string]interface{} `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The VM shape for the driver. Sets the driver cores and memory.
	DriverShape *string `pulumi:"driverShape"`
	// (Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
	Execute *string `pulumi:"execute"`
	// (Updatable) The VM shape for the executors. Sets the executor cores and memory.
	ExecutorShape *string `pulumi:"executorShape"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	FileUri *string `pulumi:"fileUri"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The Spark language.
	Language *string `pulumi:"language"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	LogsBucketUri *string `pulumi:"logsBucketUri"`
	// (Updatable) The OCID of Oracle Cloud Infrastructure Hive Metastore.
	MetastoreId *string `pulumi:"metastoreId"`
	// (Updatable) The number of executor VMs requested.
	NumExecutors *int `pulumi:"numExecutors"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId *string `pulumi:"ownerPrincipalId"`
	// The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
	OwnerUserName *string `pulumi:"ownerUserName"`
	// (Updatable) An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
	Parameters []DataflowApplicationParameter `pulumi:"parameters"`
	// (Updatable) The OCID of a private endpoint.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The Spark version utilized to run the application.
	SparkVersion *string `pulumi:"sparkVersion"`
	// The current state of this application.
	State *string `pulumi:"state"`
	// The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	WarehouseBucketUri *string `pulumi:"warehouseBucketUri"`
}

type DataflowApplicationState struct {
	// (Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	ArchiveUri pulumi.StringPtrInput
	// (Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
	Arguments pulumi.StringArrayInput
	// (Updatable) The class for the application.
	ClassName pulumi.StringPtrInput
	// (Updatable) The OCID of a compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
	Configuration pulumi.MapInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly description. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The VM shape for the driver. Sets the driver cores and memory.
	DriverShape pulumi.StringPtrInput
	// (Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
	Execute pulumi.StringPtrInput
	// (Updatable) The VM shape for the executors. Sets the executor cores and memory.
	ExecutorShape pulumi.StringPtrInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	FileUri pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The Spark language.
	Language pulumi.StringPtrInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	LogsBucketUri pulumi.StringPtrInput
	// (Updatable) The OCID of Oracle Cloud Infrastructure Hive Metastore.
	MetastoreId pulumi.StringPtrInput
	// (Updatable) The number of executor VMs requested.
	NumExecutors pulumi.IntPtrInput
	// The OCID of the user who created the resource.
	OwnerPrincipalId pulumi.StringPtrInput
	// The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
	OwnerUserName pulumi.StringPtrInput
	// (Updatable) An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
	Parameters DataflowApplicationParameterArrayInput
	// (Updatable) The OCID of a private endpoint.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The Spark version utilized to run the application.
	SparkVersion pulumi.StringPtrInput
	// The current state of this application.
	State pulumi.StringPtrInput
	// The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time a application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	WarehouseBucketUri pulumi.StringPtrInput
}

func (DataflowApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataflowApplicationState)(nil)).Elem()
}

type dataflowApplicationArgs struct {
	// (Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	ArchiveUri *string `pulumi:"archiveUri"`
	// (Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
	Arguments []string `pulumi:"arguments"`
	// (Updatable) The class for the application.
	ClassName *string `pulumi:"className"`
	// (Updatable) The OCID of a compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
	Configuration map[string]interface{} `pulumi:"configuration"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) The VM shape for the driver. Sets the driver cores and memory.
	DriverShape string `pulumi:"driverShape"`
	// (Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
	Execute *string `pulumi:"execute"`
	// (Updatable) The VM shape for the executors. Sets the executor cores and memory.
	ExecutorShape string `pulumi:"executorShape"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	FileUri string `pulumi:"fileUri"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The Spark language.
	Language string `pulumi:"language"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	LogsBucketUri *string `pulumi:"logsBucketUri"`
	// (Updatable) The OCID of Oracle Cloud Infrastructure Hive Metastore.
	MetastoreId *string `pulumi:"metastoreId"`
	// (Updatable) The number of executor VMs requested.
	NumExecutors int `pulumi:"numExecutors"`
	// (Updatable) An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
	Parameters []DataflowApplicationParameter `pulumi:"parameters"`
	// (Updatable) The OCID of a private endpoint.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The Spark version utilized to run the application.
	SparkVersion string `pulumi:"sparkVersion"`
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	WarehouseBucketUri *string `pulumi:"warehouseBucketUri"`
}

// The set of arguments for constructing a DataflowApplication resource.
type DataflowApplicationArgs struct {
	// (Updatable) An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	ArchiveUri pulumi.StringPtrInput
	// (Updatable) The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ "--input", "${input_file}", "--name", "John Doe" ]` If "inputFile" has a value of "mydata.xml", then the value above will be translated to `--input mydata.xml --name "John Doe"`
	Arguments pulumi.StringArrayInput
	// (Updatable) The class for the application.
	ClassName pulumi.StringPtrInput
	// (Updatable) The OCID of a compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { "spark.app.name" : "My App Name", "spark.shuffle.io.maxRetries" : "4" } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
	Configuration pulumi.MapInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly description. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) The VM shape for the driver. Sets the driver cores and memory.
	DriverShape pulumi.StringInput
	// (Updatable) The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
	Execute pulumi.StringPtrInput
	// (Updatable) The VM shape for the executors. Sets the executor cores and memory.
	ExecutorShape pulumi.StringInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	FileUri pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The Spark language.
	Language pulumi.StringInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	LogsBucketUri pulumi.StringPtrInput
	// (Updatable) The OCID of Oracle Cloud Infrastructure Hive Metastore.
	MetastoreId pulumi.StringPtrInput
	// (Updatable) The number of executor VMs requested.
	NumExecutors pulumi.IntInput
	// (Updatable) An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: "iterations", value: "10"}, { name: "inputFile", value: "mydata.xml" }, { name: "variableX", value: "${x}"} ]
	Parameters DataflowApplicationParameterArrayInput
	// (Updatable) The OCID of a private endpoint.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The Spark version utilized to run the application.
	SparkVersion pulumi.StringInput
	// (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
	WarehouseBucketUri pulumi.StringPtrInput
}

func (DataflowApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataflowApplicationArgs)(nil)).Elem()
}

type DataflowApplicationInput interface {
	pulumi.Input

	ToDataflowApplicationOutput() DataflowApplicationOutput
	ToDataflowApplicationOutputWithContext(ctx context.Context) DataflowApplicationOutput
}

func (*DataflowApplication) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowApplication)(nil))
}

func (i *DataflowApplication) ToDataflowApplicationOutput() DataflowApplicationOutput {
	return i.ToDataflowApplicationOutputWithContext(context.Background())
}

func (i *DataflowApplication) ToDataflowApplicationOutputWithContext(ctx context.Context) DataflowApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowApplicationOutput)
}

func (i *DataflowApplication) ToDataflowApplicationPtrOutput() DataflowApplicationPtrOutput {
	return i.ToDataflowApplicationPtrOutputWithContext(context.Background())
}

func (i *DataflowApplication) ToDataflowApplicationPtrOutputWithContext(ctx context.Context) DataflowApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowApplicationPtrOutput)
}

type DataflowApplicationPtrInput interface {
	pulumi.Input

	ToDataflowApplicationPtrOutput() DataflowApplicationPtrOutput
	ToDataflowApplicationPtrOutputWithContext(ctx context.Context) DataflowApplicationPtrOutput
}

type dataflowApplicationPtrType DataflowApplicationArgs

func (*dataflowApplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowApplication)(nil))
}

func (i *dataflowApplicationPtrType) ToDataflowApplicationPtrOutput() DataflowApplicationPtrOutput {
	return i.ToDataflowApplicationPtrOutputWithContext(context.Background())
}

func (i *dataflowApplicationPtrType) ToDataflowApplicationPtrOutputWithContext(ctx context.Context) DataflowApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowApplicationPtrOutput)
}

// DataflowApplicationArrayInput is an input type that accepts DataflowApplicationArray and DataflowApplicationArrayOutput values.
// You can construct a concrete instance of `DataflowApplicationArrayInput` via:
//
//          DataflowApplicationArray{ DataflowApplicationArgs{...} }
type DataflowApplicationArrayInput interface {
	pulumi.Input

	ToDataflowApplicationArrayOutput() DataflowApplicationArrayOutput
	ToDataflowApplicationArrayOutputWithContext(context.Context) DataflowApplicationArrayOutput
}

type DataflowApplicationArray []DataflowApplicationInput

func (DataflowApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataflowApplication)(nil)).Elem()
}

func (i DataflowApplicationArray) ToDataflowApplicationArrayOutput() DataflowApplicationArrayOutput {
	return i.ToDataflowApplicationArrayOutputWithContext(context.Background())
}

func (i DataflowApplicationArray) ToDataflowApplicationArrayOutputWithContext(ctx context.Context) DataflowApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowApplicationArrayOutput)
}

// DataflowApplicationMapInput is an input type that accepts DataflowApplicationMap and DataflowApplicationMapOutput values.
// You can construct a concrete instance of `DataflowApplicationMapInput` via:
//
//          DataflowApplicationMap{ "key": DataflowApplicationArgs{...} }
type DataflowApplicationMapInput interface {
	pulumi.Input

	ToDataflowApplicationMapOutput() DataflowApplicationMapOutput
	ToDataflowApplicationMapOutputWithContext(context.Context) DataflowApplicationMapOutput
}

type DataflowApplicationMap map[string]DataflowApplicationInput

func (DataflowApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataflowApplication)(nil)).Elem()
}

func (i DataflowApplicationMap) ToDataflowApplicationMapOutput() DataflowApplicationMapOutput {
	return i.ToDataflowApplicationMapOutputWithContext(context.Background())
}

func (i DataflowApplicationMap) ToDataflowApplicationMapOutputWithContext(ctx context.Context) DataflowApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowApplicationMapOutput)
}

type DataflowApplicationOutput struct {
	*pulumi.OutputState
}

func (DataflowApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowApplication)(nil))
}

func (o DataflowApplicationOutput) ToDataflowApplicationOutput() DataflowApplicationOutput {
	return o
}

func (o DataflowApplicationOutput) ToDataflowApplicationOutputWithContext(ctx context.Context) DataflowApplicationOutput {
	return o
}

func (o DataflowApplicationOutput) ToDataflowApplicationPtrOutput() DataflowApplicationPtrOutput {
	return o.ToDataflowApplicationPtrOutputWithContext(context.Background())
}

func (o DataflowApplicationOutput) ToDataflowApplicationPtrOutputWithContext(ctx context.Context) DataflowApplicationPtrOutput {
	return o.ApplyT(func(v DataflowApplication) *DataflowApplication {
		return &v
	}).(DataflowApplicationPtrOutput)
}

type DataflowApplicationPtrOutput struct {
	*pulumi.OutputState
}

func (DataflowApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowApplication)(nil))
}

func (o DataflowApplicationPtrOutput) ToDataflowApplicationPtrOutput() DataflowApplicationPtrOutput {
	return o
}

func (o DataflowApplicationPtrOutput) ToDataflowApplicationPtrOutputWithContext(ctx context.Context) DataflowApplicationPtrOutput {
	return o
}

type DataflowApplicationArrayOutput struct{ *pulumi.OutputState }

func (DataflowApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowApplication)(nil))
}

func (o DataflowApplicationArrayOutput) ToDataflowApplicationArrayOutput() DataflowApplicationArrayOutput {
	return o
}

func (o DataflowApplicationArrayOutput) ToDataflowApplicationArrayOutputWithContext(ctx context.Context) DataflowApplicationArrayOutput {
	return o
}

func (o DataflowApplicationArrayOutput) Index(i pulumi.IntInput) DataflowApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowApplication {
		return vs[0].([]DataflowApplication)[vs[1].(int)]
	}).(DataflowApplicationOutput)
}

type DataflowApplicationMapOutput struct{ *pulumi.OutputState }

func (DataflowApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataflowApplication)(nil))
}

func (o DataflowApplicationMapOutput) ToDataflowApplicationMapOutput() DataflowApplicationMapOutput {
	return o
}

func (o DataflowApplicationMapOutput) ToDataflowApplicationMapOutputWithContext(ctx context.Context) DataflowApplicationMapOutput {
	return o
}

func (o DataflowApplicationMapOutput) MapIndex(k pulumi.StringInput) DataflowApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataflowApplication {
		return vs[0].(map[string]DataflowApplication)[vs[1].(string)]
	}).(DataflowApplicationOutput)
}

func init() {
	pulumi.RegisterOutputType(DataflowApplicationOutput{})
	pulumi.RegisterOutputType(DataflowApplicationPtrOutput{})
	pulumi.RegisterOutputType(DataflowApplicationArrayOutput{})
	pulumi.RegisterOutputType(DataflowApplicationMapOutput{})
}
