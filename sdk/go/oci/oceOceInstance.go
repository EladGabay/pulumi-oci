// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Oce Instance resource in Oracle Cloud Infrastructure Content and Experience service.
//
// Creates a new OceInstance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewOceOceInstance(ctx, "testOceInstance", &oci.OceOceInstanceArgs{
// 			AdminEmail:             pulumi.Any(_var.Oce_instance_admin_email),
// 			CompartmentId:          pulumi.Any(_var.Compartment_id),
// 			IdcsAccessToken:        pulumi.Any(_var.Oce_instance_idcs_access_token),
// 			ObjectStorageNamespace: pulumi.Any(_var.Oce_instance_object_storage_namespace),
// 			TenancyId:              pulumi.Any(oci_identity_tenancy.Test_tenancy.Id),
// 			TenancyName:            pulumi.Any(oci_identity_tenancy.Test_tenancy.Name),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Oce_instance_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			InstanceAccessType:  pulumi.Any(_var.Oce_instance_instance_access_type),
// 			InstanceLicenseType: pulumi.Any(_var.Oce_instance_instance_license_type),
// 			InstanceUsageType:   pulumi.Any(_var.Oce_instance_instance_usage_type),
// 			UpgradeSchedule:     pulumi.Any(_var.Oce_instance_upgrade_schedule),
// 			WafPrimaryDomain:    pulumi.Any(_var.Oce_instance_waf_primary_domain),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// OceInstances can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/oceOceInstance:OceOceInstance test_oce_instance "id"
// ```
type OceOceInstance struct {
	pulumi.CustomResourceState

	// Admin Email for Notification
	AdminEmail pulumi.StringOutput `pulumi:"adminEmail"`
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) OceInstance description
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Unique GUID identifier that is immutable on creation
	Guid pulumi.StringOutput `pulumi:"guid"`
	// Identity Cloud Service access token identifying a stripe and service administrator user
	IdcsAccessToken pulumi.StringOutput `pulumi:"idcsAccessToken"`
	// IDCS Tenancy Identifier
	IdcsTenancy pulumi.StringOutput `pulumi:"idcsTenancy"`
	// Flag indicating whether the instance access is private or public
	InstanceAccessType pulumi.StringOutput `pulumi:"instanceAccessType"`
	// (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType pulumi.StringOutput `pulumi:"instanceLicenseType"`
	// (Updatable) Instance type based on its usage
	InstanceUsageType pulumi.StringOutput `pulumi:"instanceUsageType"`
	// OceInstance Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Object Storage Namespace of Tenancy
	ObjectStorageNamespace pulumi.StringOutput `pulumi:"objectStorageNamespace"`
	// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
	Service pulumi.MapOutput `pulumi:"service"`
	// The current state of the file system.
	State pulumi.StringOutput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Tenancy Identifier
	TenancyId pulumi.StringOutput `pulumi:"tenancyId"`
	// Tenancy Name
	TenancyName pulumi.StringOutput `pulumi:"tenancyName"`
	// The time the the OceInstance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the OceInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule pulumi.StringOutput `pulumi:"upgradeSchedule"`
	// (Updatable) Web Application Firewall(WAF) primary domain
	WafPrimaryDomain pulumi.StringOutput `pulumi:"wafPrimaryDomain"`
}

// NewOceOceInstance registers a new resource with the given unique name, arguments, and options.
func NewOceOceInstance(ctx *pulumi.Context,
	name string, args *OceOceInstanceArgs, opts ...pulumi.ResourceOption) (*OceOceInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminEmail == nil {
		return nil, errors.New("invalid value for required argument 'AdminEmail'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.IdcsAccessToken == nil {
		return nil, errors.New("invalid value for required argument 'IdcsAccessToken'")
	}
	if args.ObjectStorageNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ObjectStorageNamespace'")
	}
	if args.TenancyId == nil {
		return nil, errors.New("invalid value for required argument 'TenancyId'")
	}
	if args.TenancyName == nil {
		return nil, errors.New("invalid value for required argument 'TenancyName'")
	}
	var resource OceOceInstance
	err := ctx.RegisterResource("oci:index/oceOceInstance:OceOceInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOceOceInstance gets an existing OceOceInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOceOceInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OceOceInstanceState, opts ...pulumi.ResourceOption) (*OceOceInstance, error) {
	var resource OceOceInstance
	err := ctx.ReadResource("oci:index/oceOceInstance:OceOceInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OceOceInstance resources.
type oceOceInstanceState struct {
	// Admin Email for Notification
	AdminEmail *string `pulumi:"adminEmail"`
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) OceInstance description
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique GUID identifier that is immutable on creation
	Guid *string `pulumi:"guid"`
	// Identity Cloud Service access token identifying a stripe and service administrator user
	IdcsAccessToken *string `pulumi:"idcsAccessToken"`
	// IDCS Tenancy Identifier
	IdcsTenancy *string `pulumi:"idcsTenancy"`
	// Flag indicating whether the instance access is private or public
	InstanceAccessType *string `pulumi:"instanceAccessType"`
	// (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType *string `pulumi:"instanceLicenseType"`
	// (Updatable) Instance type based on its usage
	InstanceUsageType *string `pulumi:"instanceUsageType"`
	// OceInstance Name
	Name *string `pulumi:"name"`
	// Object Storage Namespace of Tenancy
	ObjectStorageNamespace *string `pulumi:"objectStorageNamespace"`
	// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
	Service map[string]interface{} `pulumi:"service"`
	// The current state of the file system.
	State *string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage *string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Tenancy Identifier
	TenancyId *string `pulumi:"tenancyId"`
	// Tenancy Name
	TenancyName *string `pulumi:"tenancyName"`
	// The time the the OceInstance was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the OceInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule *string `pulumi:"upgradeSchedule"`
	// (Updatable) Web Application Firewall(WAF) primary domain
	WafPrimaryDomain *string `pulumi:"wafPrimaryDomain"`
}

type OceOceInstanceState struct {
	// Admin Email for Notification
	AdminEmail pulumi.StringPtrInput
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) OceInstance description
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Unique GUID identifier that is immutable on creation
	Guid pulumi.StringPtrInput
	// Identity Cloud Service access token identifying a stripe and service administrator user
	IdcsAccessToken pulumi.StringPtrInput
	// IDCS Tenancy Identifier
	IdcsTenancy pulumi.StringPtrInput
	// Flag indicating whether the instance access is private or public
	InstanceAccessType pulumi.StringPtrInput
	// (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType pulumi.StringPtrInput
	// (Updatable) Instance type based on its usage
	InstanceUsageType pulumi.StringPtrInput
	// OceInstance Name
	Name pulumi.StringPtrInput
	// Object Storage Namespace of Tenancy
	ObjectStorageNamespace pulumi.StringPtrInput
	// SERVICE data. Example: `{"service": {"IDCS": "value"}}`
	Service pulumi.MapInput
	// The current state of the file system.
	State pulumi.StringPtrInput
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Tenancy Identifier
	TenancyId pulumi.StringPtrInput
	// Tenancy Name
	TenancyName pulumi.StringPtrInput
	// The time the the OceInstance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the OceInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule pulumi.StringPtrInput
	// (Updatable) Web Application Firewall(WAF) primary domain
	WafPrimaryDomain pulumi.StringPtrInput
}

func (OceOceInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*oceOceInstanceState)(nil)).Elem()
}

type oceOceInstanceArgs struct {
	// Admin Email for Notification
	AdminEmail string `pulumi:"adminEmail"`
	// (Updatable) Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) OceInstance description
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Identity Cloud Service access token identifying a stripe and service administrator user
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Flag indicating whether the instance access is private or public
	InstanceAccessType *string `pulumi:"instanceAccessType"`
	// (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType *string `pulumi:"instanceLicenseType"`
	// (Updatable) Instance type based on its usage
	InstanceUsageType *string `pulumi:"instanceUsageType"`
	// OceInstance Name
	Name *string `pulumi:"name"`
	// Object Storage Namespace of Tenancy
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// Tenancy Identifier
	TenancyId string `pulumi:"tenancyId"`
	// Tenancy Name
	TenancyName string `pulumi:"tenancyName"`
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule *string `pulumi:"upgradeSchedule"`
	// (Updatable) Web Application Firewall(WAF) primary domain
	WafPrimaryDomain *string `pulumi:"wafPrimaryDomain"`
}

// The set of arguments for constructing a OceOceInstance resource.
type OceOceInstanceArgs struct {
	// Admin Email for Notification
	AdminEmail pulumi.StringInput
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) OceInstance description
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Identity Cloud Service access token identifying a stripe and service administrator user
	IdcsAccessToken pulumi.StringInput
	// Flag indicating whether the instance access is private or public
	InstanceAccessType pulumi.StringPtrInput
	// (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
	InstanceLicenseType pulumi.StringPtrInput
	// (Updatable) Instance type based on its usage
	InstanceUsageType pulumi.StringPtrInput
	// OceInstance Name
	Name pulumi.StringPtrInput
	// Object Storage Namespace of Tenancy
	ObjectStorageNamespace pulumi.StringInput
	// Tenancy Identifier
	TenancyId pulumi.StringInput
	// Tenancy Name
	TenancyName pulumi.StringInput
	// Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
	UpgradeSchedule pulumi.StringPtrInput
	// (Updatable) Web Application Firewall(WAF) primary domain
	WafPrimaryDomain pulumi.StringPtrInput
}

func (OceOceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oceOceInstanceArgs)(nil)).Elem()
}

type OceOceInstanceInput interface {
	pulumi.Input

	ToOceOceInstanceOutput() OceOceInstanceOutput
	ToOceOceInstanceOutputWithContext(ctx context.Context) OceOceInstanceOutput
}

func (*OceOceInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*OceOceInstance)(nil))
}

func (i *OceOceInstance) ToOceOceInstanceOutput() OceOceInstanceOutput {
	return i.ToOceOceInstanceOutputWithContext(context.Background())
}

func (i *OceOceInstance) ToOceOceInstanceOutputWithContext(ctx context.Context) OceOceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceOceInstanceOutput)
}

func (i *OceOceInstance) ToOceOceInstancePtrOutput() OceOceInstancePtrOutput {
	return i.ToOceOceInstancePtrOutputWithContext(context.Background())
}

func (i *OceOceInstance) ToOceOceInstancePtrOutputWithContext(ctx context.Context) OceOceInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceOceInstancePtrOutput)
}

type OceOceInstancePtrInput interface {
	pulumi.Input

	ToOceOceInstancePtrOutput() OceOceInstancePtrOutput
	ToOceOceInstancePtrOutputWithContext(ctx context.Context) OceOceInstancePtrOutput
}

type oceOceInstancePtrType OceOceInstanceArgs

func (*oceOceInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceOceInstance)(nil))
}

func (i *oceOceInstancePtrType) ToOceOceInstancePtrOutput() OceOceInstancePtrOutput {
	return i.ToOceOceInstancePtrOutputWithContext(context.Background())
}

func (i *oceOceInstancePtrType) ToOceOceInstancePtrOutputWithContext(ctx context.Context) OceOceInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceOceInstancePtrOutput)
}

// OceOceInstanceArrayInput is an input type that accepts OceOceInstanceArray and OceOceInstanceArrayOutput values.
// You can construct a concrete instance of `OceOceInstanceArrayInput` via:
//
//          OceOceInstanceArray{ OceOceInstanceArgs{...} }
type OceOceInstanceArrayInput interface {
	pulumi.Input

	ToOceOceInstanceArrayOutput() OceOceInstanceArrayOutput
	ToOceOceInstanceArrayOutputWithContext(context.Context) OceOceInstanceArrayOutput
}

type OceOceInstanceArray []OceOceInstanceInput

func (OceOceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OceOceInstance)(nil)).Elem()
}

func (i OceOceInstanceArray) ToOceOceInstanceArrayOutput() OceOceInstanceArrayOutput {
	return i.ToOceOceInstanceArrayOutputWithContext(context.Background())
}

func (i OceOceInstanceArray) ToOceOceInstanceArrayOutputWithContext(ctx context.Context) OceOceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceOceInstanceArrayOutput)
}

// OceOceInstanceMapInput is an input type that accepts OceOceInstanceMap and OceOceInstanceMapOutput values.
// You can construct a concrete instance of `OceOceInstanceMapInput` via:
//
//          OceOceInstanceMap{ "key": OceOceInstanceArgs{...} }
type OceOceInstanceMapInput interface {
	pulumi.Input

	ToOceOceInstanceMapOutput() OceOceInstanceMapOutput
	ToOceOceInstanceMapOutputWithContext(context.Context) OceOceInstanceMapOutput
}

type OceOceInstanceMap map[string]OceOceInstanceInput

func (OceOceInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OceOceInstance)(nil)).Elem()
}

func (i OceOceInstanceMap) ToOceOceInstanceMapOutput() OceOceInstanceMapOutput {
	return i.ToOceOceInstanceMapOutputWithContext(context.Background())
}

func (i OceOceInstanceMap) ToOceOceInstanceMapOutputWithContext(ctx context.Context) OceOceInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceOceInstanceMapOutput)
}

type OceOceInstanceOutput struct {
	*pulumi.OutputState
}

func (OceOceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceOceInstance)(nil))
}

func (o OceOceInstanceOutput) ToOceOceInstanceOutput() OceOceInstanceOutput {
	return o
}

func (o OceOceInstanceOutput) ToOceOceInstanceOutputWithContext(ctx context.Context) OceOceInstanceOutput {
	return o
}

func (o OceOceInstanceOutput) ToOceOceInstancePtrOutput() OceOceInstancePtrOutput {
	return o.ToOceOceInstancePtrOutputWithContext(context.Background())
}

func (o OceOceInstanceOutput) ToOceOceInstancePtrOutputWithContext(ctx context.Context) OceOceInstancePtrOutput {
	return o.ApplyT(func(v OceOceInstance) *OceOceInstance {
		return &v
	}).(OceOceInstancePtrOutput)
}

type OceOceInstancePtrOutput struct {
	*pulumi.OutputState
}

func (OceOceInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceOceInstance)(nil))
}

func (o OceOceInstancePtrOutput) ToOceOceInstancePtrOutput() OceOceInstancePtrOutput {
	return o
}

func (o OceOceInstancePtrOutput) ToOceOceInstancePtrOutputWithContext(ctx context.Context) OceOceInstancePtrOutput {
	return o
}

type OceOceInstanceArrayOutput struct{ *pulumi.OutputState }

func (OceOceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceOceInstance)(nil))
}

func (o OceOceInstanceArrayOutput) ToOceOceInstanceArrayOutput() OceOceInstanceArrayOutput {
	return o
}

func (o OceOceInstanceArrayOutput) ToOceOceInstanceArrayOutputWithContext(ctx context.Context) OceOceInstanceArrayOutput {
	return o
}

func (o OceOceInstanceArrayOutput) Index(i pulumi.IntInput) OceOceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceOceInstance {
		return vs[0].([]OceOceInstance)[vs[1].(int)]
	}).(OceOceInstanceOutput)
}

type OceOceInstanceMapOutput struct{ *pulumi.OutputState }

func (OceOceInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OceOceInstance)(nil))
}

func (o OceOceInstanceMapOutput) ToOceOceInstanceMapOutput() OceOceInstanceMapOutput {
	return o
}

func (o OceOceInstanceMapOutput) ToOceOceInstanceMapOutputWithContext(ctx context.Context) OceOceInstanceMapOutput {
	return o
}

func (o OceOceInstanceMapOutput) MapIndex(k pulumi.StringInput) OceOceInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OceOceInstance {
		return vs[0].(map[string]OceOceInstance)[vs[1].(string)]
	}).(OceOceInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(OceOceInstanceOutput{})
	pulumi.RegisterOutputType(OceOceInstancePtrOutput{})
	pulumi.RegisterOutputType(OceOceInstanceArrayOutput{})
	pulumi.RegisterOutputType(OceOceInstanceMapOutput{})
}
