// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Db Home resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new Database Home in the specified database system based on the request parameters you provide. Applies only to bare metal and Exadata systems.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseDbHome(ctx, "testDbHome", &oci.DatabaseDbHomeArgs{
// 			Database: &DatabaseDbHomeDatabaseArgs{
// 				AdminPassword:           pulumi.Any(_var.Db_home_database_admin_password),
// 				BackupId:                pulumi.Any(oci_database_backup.Test_backup.Id),
// 				BackupTdePassword:       pulumi.Any(_var.Db_home_database_backup_tde_password),
// 				CharacterSet:            pulumi.Any(_var.Db_home_database_character_set),
// 				DatabaseId:              pulumi.Any(oci_database_database.Test_database.Id),
// 				DatabaseSoftwareImageId: pulumi.Any(oci_database_database_software_image.Test_database_software_image.Id),
// 				DbBackupConfig: &DatabaseDbHomeDatabaseDbBackupConfigArgs{
// 					AutoBackupEnabled: pulumi.Any(_var.Db_home_database_db_backup_config_auto_backup_enabled),
// 					AutoBackupWindow:  pulumi.Any(_var.Db_home_database_db_backup_config_auto_backup_window),
// 					BackupDestinationDetails: DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetailArray{
// 						&DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetailArgs{
// 							Id:   pulumi.Any(_var.Db_home_database_db_backup_config_backup_destination_details_id),
// 							Type: pulumi.Any(_var.Db_home_database_db_backup_config_backup_destination_details_type),
// 						},
// 					},
// 					RecoveryWindowInDays: pulumi.Any(_var.Db_home_database_db_backup_config_recovery_window_in_days),
// 				},
// 				DbName:                          pulumi.Any(_var.Db_home_database_db_name),
// 				DbWorkload:                      pulumi.Any(_var.Db_home_database_db_workload),
// 				DefinedTags:                     pulumi.Any(_var.Db_home_database_defined_tags),
// 				FreeformTags:                    pulumi.Any(_var.Db_home_database_freeform_tags),
// 				NcharacterSet:                   pulumi.Any(_var.Db_home_database_ncharacter_set),
// 				PdbName:                         pulumi.Any(_var.Db_home_database_pdb_name),
// 				TdeWalletPassword:               pulumi.Any(_var.Db_home_database_tde_wallet_password),
// 				TimeStampForPointInTimeRecovery: pulumi.Any(_var.Db_home_database_time_stamp_for_point_in_time_recovery),
// 			},
// 			DatabaseSoftwareImageId: pulumi.Any(oci_database_database_software_image.Test_database_software_image.Id),
// 			DbSystemId:              pulumi.Any(oci_database_db_system.Test_db_system.Id),
// 			DbVersion: pulumi.String{
// 				nil,
// 			},
// 			DefinedTags: pulumi.Any(_var.Db_home_defined_tags),
// 			DisplayName: pulumi.Any(_var.Db_home_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsDesupportedVersion: pulumi.Any(_var.Db_home_is_desupported_version),
// 			KmsKeyId:             pulumi.Any(oci_kms_key.Test_key.Id),
// 			KmsKeyVersionId:      pulumi.Any(oci_kms_key_version.Test_key_version.Id),
// 			Source:               pulumi.Any(_var.Db_home_source),
// 			VmClusterId:          pulumi.Any(oci_database_vm_cluster.Test_vm_cluster.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// DbHomes can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseDbHome:DatabaseDbHome test_db_home "id"
// ```
//
//  Import is only supported for source=NONE database.0.admin_password is not returned by the service for security reasons. Add the following to the resource:
//
//  lifecycle {
//
//  ignore_changes = ["database.0.admin_password"]
//
//  } The creation of an oci_database_db_system requires that it be created with exactly one oci_database_db_home. Therefore the first db home will have to be a property of the db system resource and any further db homes to be added to the db system will have to be added as first class resources using "oci_database_db_home".
type DatabaseDbHome struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Details for creating a database.
	Database DatabaseDbHomeDatabaseOutput `pulumi:"database"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId pulumi.StringOutput `pulumi:"databaseSoftwareImageId"`
	// The location of the Oracle Database Home.
	DbHomeLocation pulumi.StringOutput `pulumi:"dbHomeLocation"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-provided name of the Database Home.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// If true, the customer acknowledges that the specified Oracle Database software is an older release that is not currently supported by OCI.
	IsDesupportedVersion pulumi.BoolOutput `pulumi:"isDesupportedVersion"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringOutput `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
	LastPatchHistoryEntryId pulumi.StringOutput `pulumi:"lastPatchHistoryEntryId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The source of database: NONE for creating a new database. DB_BACKUP for creating a new database by restoring from a database backup. VM_CLUSTER_NEW for creating a database for VM Cluster.
	Source pulumi.StringOutput `pulumi:"source"`
	// The current state of the Database Home.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the Database Home was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringOutput `pulumi:"vmClusterId"`
}

// NewDatabaseDbHome registers a new resource with the given unique name, arguments, and options.
func NewDatabaseDbHome(ctx *pulumi.Context,
	name string, args *DatabaseDbHomeArgs, opts ...pulumi.ResourceOption) (*DatabaseDbHome, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	var resource DatabaseDbHome
	err := ctx.RegisterResource("oci:index/databaseDbHome:DatabaseDbHome", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseDbHome gets an existing DatabaseDbHome resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseDbHome(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseDbHomeState, opts ...pulumi.ResourceOption) (*DatabaseDbHome, error) {
	var resource DatabaseDbHome
	err := ctx.ReadResource("oci:index/databaseDbHome:DatabaseDbHome", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseDbHome resources.
type databaseDbHomeState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Details for creating a database.
	Database *DatabaseDbHomeDatabase `pulumi:"database"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId *string `pulumi:"databaseSoftwareImageId"`
	// The location of the Oracle Database Home.
	DbHomeLocation *string `pulumi:"dbHomeLocation"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId *string `pulumi:"dbSystemId"`
	// A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
	DbVersion *string `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-provided name of the Database Home.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// If true, the customer acknowledges that the specified Oracle Database software is an older release that is not currently supported by OCI.
	IsDesupportedVersion *bool `pulumi:"isDesupportedVersion"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
	LastPatchHistoryEntryId *string `pulumi:"lastPatchHistoryEntryId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The source of database: NONE for creating a new database. DB_BACKUP for creating a new database by restoring from a database backup. VM_CLUSTER_NEW for creating a database for VM Cluster.
	Source *string `pulumi:"source"`
	// The current state of the Database Home.
	State *string `pulumi:"state"`
	// The date and time the Database Home was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId *string `pulumi:"vmClusterId"`
}

type DatabaseDbHomeState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Details for creating a database.
	Database DatabaseDbHomeDatabasePtrInput
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId pulumi.StringPtrInput
	// The location of the Oracle Database Home.
	DbHomeLocation pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringPtrInput
	// A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
	DbVersion pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-provided name of the Database Home.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// If true, the customer acknowledges that the specified Oracle Database software is an older release that is not currently supported by OCI.
	IsDesupportedVersion pulumi.BoolPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
	LastPatchHistoryEntryId pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The source of database: NONE for creating a new database. DB_BACKUP for creating a new database by restoring from a database backup. VM_CLUSTER_NEW for creating a database for VM Cluster.
	Source pulumi.StringPtrInput
	// The current state of the Database Home.
	State pulumi.StringPtrInput
	// The date and time the Database Home was created.
	TimeCreated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringPtrInput
}

func (DatabaseDbHomeState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseDbHomeState)(nil)).Elem()
}

type databaseDbHomeArgs struct {
	// (Updatable) Details for creating a database.
	Database DatabaseDbHomeDatabase `pulumi:"database"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId *string `pulumi:"databaseSoftwareImageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId *string `pulumi:"dbSystemId"`
	// A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
	DbVersion *string `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-provided name of the Database Home.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// If true, the customer acknowledges that the specified Oracle Database software is an older release that is not currently supported by OCI.
	IsDesupportedVersion *bool `pulumi:"isDesupportedVersion"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The source of database: NONE for creating a new database. DB_BACKUP for creating a new database by restoring from a database backup. VM_CLUSTER_NEW for creating a database for VM Cluster.
	Source *string `pulumi:"source"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId *string `pulumi:"vmClusterId"`
}

// The set of arguments for constructing a DatabaseDbHome resource.
type DatabaseDbHomeArgs struct {
	// (Updatable) Details for creating a database.
	Database DatabaseDbHomeDatabaseInput
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringPtrInput
	// A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
	DbVersion pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-provided name of the Database Home.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// If true, the customer acknowledges that the specified Oracle Database software is an older release that is not currently supported by OCI.
	IsDesupportedVersion pulumi.BoolPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringPtrInput
	// The source of database: NONE for creating a new database. DB_BACKUP for creating a new database by restoring from a database backup. VM_CLUSTER_NEW for creating a database for VM Cluster.
	Source pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringPtrInput
}

func (DatabaseDbHomeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseDbHomeArgs)(nil)).Elem()
}

type DatabaseDbHomeInput interface {
	pulumi.Input

	ToDatabaseDbHomeOutput() DatabaseDbHomeOutput
	ToDatabaseDbHomeOutputWithContext(ctx context.Context) DatabaseDbHomeOutput
}

func (*DatabaseDbHome) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDbHome)(nil))
}

func (i *DatabaseDbHome) ToDatabaseDbHomeOutput() DatabaseDbHomeOutput {
	return i.ToDatabaseDbHomeOutputWithContext(context.Background())
}

func (i *DatabaseDbHome) ToDatabaseDbHomeOutputWithContext(ctx context.Context) DatabaseDbHomeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDbHomeOutput)
}

func (i *DatabaseDbHome) ToDatabaseDbHomePtrOutput() DatabaseDbHomePtrOutput {
	return i.ToDatabaseDbHomePtrOutputWithContext(context.Background())
}

func (i *DatabaseDbHome) ToDatabaseDbHomePtrOutputWithContext(ctx context.Context) DatabaseDbHomePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDbHomePtrOutput)
}

type DatabaseDbHomePtrInput interface {
	pulumi.Input

	ToDatabaseDbHomePtrOutput() DatabaseDbHomePtrOutput
	ToDatabaseDbHomePtrOutputWithContext(ctx context.Context) DatabaseDbHomePtrOutput
}

type databaseDbHomePtrType DatabaseDbHomeArgs

func (*databaseDbHomePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDbHome)(nil))
}

func (i *databaseDbHomePtrType) ToDatabaseDbHomePtrOutput() DatabaseDbHomePtrOutput {
	return i.ToDatabaseDbHomePtrOutputWithContext(context.Background())
}

func (i *databaseDbHomePtrType) ToDatabaseDbHomePtrOutputWithContext(ctx context.Context) DatabaseDbHomePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDbHomePtrOutput)
}

// DatabaseDbHomeArrayInput is an input type that accepts DatabaseDbHomeArray and DatabaseDbHomeArrayOutput values.
// You can construct a concrete instance of `DatabaseDbHomeArrayInput` via:
//
//          DatabaseDbHomeArray{ DatabaseDbHomeArgs{...} }
type DatabaseDbHomeArrayInput interface {
	pulumi.Input

	ToDatabaseDbHomeArrayOutput() DatabaseDbHomeArrayOutput
	ToDatabaseDbHomeArrayOutputWithContext(context.Context) DatabaseDbHomeArrayOutput
}

type DatabaseDbHomeArray []DatabaseDbHomeInput

func (DatabaseDbHomeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseDbHome)(nil)).Elem()
}

func (i DatabaseDbHomeArray) ToDatabaseDbHomeArrayOutput() DatabaseDbHomeArrayOutput {
	return i.ToDatabaseDbHomeArrayOutputWithContext(context.Background())
}

func (i DatabaseDbHomeArray) ToDatabaseDbHomeArrayOutputWithContext(ctx context.Context) DatabaseDbHomeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDbHomeArrayOutput)
}

// DatabaseDbHomeMapInput is an input type that accepts DatabaseDbHomeMap and DatabaseDbHomeMapOutput values.
// You can construct a concrete instance of `DatabaseDbHomeMapInput` via:
//
//          DatabaseDbHomeMap{ "key": DatabaseDbHomeArgs{...} }
type DatabaseDbHomeMapInput interface {
	pulumi.Input

	ToDatabaseDbHomeMapOutput() DatabaseDbHomeMapOutput
	ToDatabaseDbHomeMapOutputWithContext(context.Context) DatabaseDbHomeMapOutput
}

type DatabaseDbHomeMap map[string]DatabaseDbHomeInput

func (DatabaseDbHomeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseDbHome)(nil)).Elem()
}

func (i DatabaseDbHomeMap) ToDatabaseDbHomeMapOutput() DatabaseDbHomeMapOutput {
	return i.ToDatabaseDbHomeMapOutputWithContext(context.Background())
}

func (i DatabaseDbHomeMap) ToDatabaseDbHomeMapOutputWithContext(ctx context.Context) DatabaseDbHomeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDbHomeMapOutput)
}

type DatabaseDbHomeOutput struct {
	*pulumi.OutputState
}

func (DatabaseDbHomeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDbHome)(nil))
}

func (o DatabaseDbHomeOutput) ToDatabaseDbHomeOutput() DatabaseDbHomeOutput {
	return o
}

func (o DatabaseDbHomeOutput) ToDatabaseDbHomeOutputWithContext(ctx context.Context) DatabaseDbHomeOutput {
	return o
}

func (o DatabaseDbHomeOutput) ToDatabaseDbHomePtrOutput() DatabaseDbHomePtrOutput {
	return o.ToDatabaseDbHomePtrOutputWithContext(context.Background())
}

func (o DatabaseDbHomeOutput) ToDatabaseDbHomePtrOutputWithContext(ctx context.Context) DatabaseDbHomePtrOutput {
	return o.ApplyT(func(v DatabaseDbHome) *DatabaseDbHome {
		return &v
	}).(DatabaseDbHomePtrOutput)
}

type DatabaseDbHomePtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseDbHomePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDbHome)(nil))
}

func (o DatabaseDbHomePtrOutput) ToDatabaseDbHomePtrOutput() DatabaseDbHomePtrOutput {
	return o
}

func (o DatabaseDbHomePtrOutput) ToDatabaseDbHomePtrOutputWithContext(ctx context.Context) DatabaseDbHomePtrOutput {
	return o
}

type DatabaseDbHomeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseDbHomeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseDbHome)(nil))
}

func (o DatabaseDbHomeArrayOutput) ToDatabaseDbHomeArrayOutput() DatabaseDbHomeArrayOutput {
	return o
}

func (o DatabaseDbHomeArrayOutput) ToDatabaseDbHomeArrayOutputWithContext(ctx context.Context) DatabaseDbHomeArrayOutput {
	return o
}

func (o DatabaseDbHomeArrayOutput) Index(i pulumi.IntInput) DatabaseDbHomeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseDbHome {
		return vs[0].([]DatabaseDbHome)[vs[1].(int)]
	}).(DatabaseDbHomeOutput)
}

type DatabaseDbHomeMapOutput struct{ *pulumi.OutputState }

func (DatabaseDbHomeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseDbHome)(nil))
}

func (o DatabaseDbHomeMapOutput) ToDatabaseDbHomeMapOutput() DatabaseDbHomeMapOutput {
	return o
}

func (o DatabaseDbHomeMapOutput) ToDatabaseDbHomeMapOutputWithContext(ctx context.Context) DatabaseDbHomeMapOutput {
	return o
}

func (o DatabaseDbHomeMapOutput) MapIndex(k pulumi.StringInput) DatabaseDbHomeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseDbHome {
		return vs[0].(map[string]DatabaseDbHome)[vs[1].(string)]
	}).(DatabaseDbHomeOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseDbHomeOutput{})
	pulumi.RegisterOutputType(DatabaseDbHomePtrOutput{})
	pulumi.RegisterOutputType(DatabaseDbHomeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseDbHomeMapOutput{})
}
