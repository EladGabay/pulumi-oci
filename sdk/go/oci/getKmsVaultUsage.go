// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vault Usage resource in Oracle Cloud Infrastructure Kms service.
//
// Gets the count of keys and key versions in the specified vault to calculate usage against service limits.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.GetKmsVaultUsage(ctx, &GetKmsVaultUsageArgs{
// 			VaultId: oci_kms_vault.Test_vault.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetKmsVaultUsage(ctx *pulumi.Context, args *GetKmsVaultUsageArgs, opts ...pulumi.InvokeOption) (*GetKmsVaultUsageResult, error) {
	var rv GetKmsVaultUsageResult
	err := ctx.Invoke("oci:index/getKmsVaultUsage:GetKmsVaultUsage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetKmsVaultUsage.
type GetKmsVaultUsageArgs struct {
	// The OCID of the vault.
	VaultId string `pulumi:"vaultId"`
}

// A collection of values returned by GetKmsVaultUsage.
type GetKmsVaultUsageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The number of keys in this vault, across all compartments, excluding keys in a `DELETED` state.
	KeyCount int `pulumi:"keyCount"`
	// The number of key versions in this vault, across all compartments, excluding key versions in a `DELETED` state.
	KeyVersionCount int `pulumi:"keyVersionCount"`
	// The number of keys in this vault that persist on the server, across all compartments, excluding keys in a `DELETED` state.
	SoftwareKeyCount int `pulumi:"softwareKeyCount"`
	// The number of key versions in this vault that persist on the server, across all compartments, excluding key versions in a `DELETED` state.
	SoftwareKeyVersionCount int    `pulumi:"softwareKeyVersionCount"`
	VaultId                 string `pulumi:"vaultId"`
}
