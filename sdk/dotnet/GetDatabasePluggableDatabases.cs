// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabasePluggableDatabases
    {
        /// <summary>
        /// This data source provides the list of Pluggable Databases in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of the pluggable databases in a database or compartment. You must provide either a `databaseId` or `compartmentId` value.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testPluggableDatabases = Output.Create(Oci.GetDatabasePluggableDatabases.InvokeAsync(new Oci.GetDatabasePluggableDatabasesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DatabaseId = oci_database_database.Test_database.Id,
        ///             PdbName = @var.Pluggable_database_pdb_name,
        ///             State = @var.Pluggable_database_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabasePluggableDatabasesResult> InvokeAsync(GetDatabasePluggableDatabasesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabasePluggableDatabasesResult>("oci:index/getDatabasePluggableDatabases:GetDatabasePluggableDatabases", args ?? new GetDatabasePluggableDatabasesArgs(), options.WithVersion());
    }


    public sealed class GetDatabasePluggableDatabasesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        [Input("databaseId")]
        public string? DatabaseId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabasePluggableDatabasesFilterArgs>? _filters;
        public List<Inputs.GetDatabasePluggableDatabasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabasePluggableDatabasesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
        /// </summary>
        [Input("pdbName")]
        public string? PdbName { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDatabasePluggableDatabasesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabasePluggableDatabasesResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly string? DatabaseId;
        public readonly ImmutableArray<Outputs.GetDatabasePluggableDatabasesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
        /// </summary>
        public readonly string? PdbName;
        /// <summary>
        /// The list of pluggable_databases.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabasePluggableDatabasesPluggableDatabaseResult> PluggableDatabases;
        /// <summary>
        /// The current state of the pluggable database.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDatabasePluggableDatabasesResult(
            string? compartmentId,

            string? databaseId,

            ImmutableArray<Outputs.GetDatabasePluggableDatabasesFilterResult> filters,

            string id,

            string? pdbName,

            ImmutableArray<Outputs.GetDatabasePluggableDatabasesPluggableDatabaseResult> pluggableDatabases,

            string? state)
        {
            CompartmentId = compartmentId;
            DatabaseId = databaseId;
            Filters = filters;
            Id = id;
            PdbName = pdbName;
            PluggableDatabases = pluggableDatabases;
            State = state;
        }
    }
}
