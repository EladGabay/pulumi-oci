// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides the list of Generic Artifacts in Oracle Cloud Infrastructure Artifacts service.
 *
 * Lists artifacts in the specified repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testGenericArtifacts = oci.GetArtifactsGenericArtifacts({
 *     compartmentId: _var.compartment_id,
 *     repositoryId: oci_artifacts_repository.test_repository.id,
 *     artifactPath: _var.generic_artifact_artifact_path,
 *     displayName: _var.generic_artifact_display_name,
 *     id: _var.generic_artifact_id,
 *     sha256: _var.generic_artifact_sha256,
 *     state: _var.generic_artifact_state,
 *     version: _var.generic_artifact_version,
 * });
 * ```
 */
export function getArtifactsGenericArtifacts(args: GetArtifactsGenericArtifactsArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsGenericArtifactsResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getArtifactsGenericArtifacts:GetArtifactsGenericArtifacts", {
        "artifactPath": args.artifactPath,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "repositoryId": args.repositoryId,
        "sha256": args.sha256,
        "state": args.state,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking GetArtifactsGenericArtifacts.
 */
export interface GetArtifactsGenericArtifactsArgs {
    /**
     * Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     */
    artifactPath?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.GetArtifactsGenericArtifactsFilter[];
    /**
     * A filter to return the resources for the specified OCID.
     */
    id?: string;
    /**
     * A filter to return the artifacts only for the specified repository OCID.
     */
    repositoryId: string;
    /**
     * Filter results by a specified SHA256 digest for the artifact.
     */
    sha256?: string;
    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     */
    state?: string;
    /**
     * Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     */
    version?: string;
}

/**
 * A collection of values returned by GetArtifactsGenericArtifacts.
 */
export interface GetArtifactsGenericArtifactsResult {
    /**
     * A user-defined path to describe the location of an artifact. Slashes do not create a directory structure, but you can use slashes to organize the repository. An artifact path does not include an artifact version.  Example: `project01/my-web-app/artifact-abc`
     */
    readonly artifactPath?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository's compartment.
     */
    readonly compartmentId: string;
    /**
     * The artifact name with the format of `<artifact-path>:<artifact-version>`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
     */
    readonly displayName?: string;
    readonly filters?: outputs.GetArtifactsGenericArtifactsFilter[];
    /**
     * The list of generic_artifact_collection.
     */
    readonly genericArtifactCollections: outputs.GetArtifactsGenericArtifactsGenericArtifactCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the artifact.  Example: `ocid1.genericartifact.oc1..exampleuniqueID`
     */
    readonly id?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository.
     */
    readonly repositoryId: string;
    /**
     * The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
     */
    readonly sha256?: string;
    /**
     * The current state of the artifact.
     */
    readonly state?: string;
    /**
     * A user-defined string to describe the artifact version.  Example: `1.1.0` or `1.2-beta-2`
     */
    readonly version?: string;
}
