// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Import is not supported for this resource.
type DnsRecord struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrOutput `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolOutput `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrOutput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringOutput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringOutput `pulumi:"rrsetVersion"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringOutput `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrOutput `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringOutput `pulumi:"zoneNameOrId"`
}

// NewDnsRecord registers a new resource with the given unique name, arguments, and options.
func NewDnsRecord(ctx *pulumi.Context,
	name string, args *DnsRecordArgs, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Rtype == nil {
		return nil, errors.New("invalid value for required argument 'Rtype'")
	}
	if args.ZoneNameOrId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneNameOrId'")
	}
	var resource DnsRecord
	err := ctx.RegisterResource("oci:index/dnsRecord:DnsRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsRecord gets an existing DnsRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsRecordState, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	var resource DnsRecord
	err := ctx.ReadResource("oci:index/dnsRecord:DnsRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsRecord resources.
type dnsRecordState struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId *string `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain *string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected *bool `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash *string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion *string `pulumi:"rrsetVersion"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype *string `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl *int `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId *string `pulumi:"zoneNameOrId"`
}

type DnsRecordState struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrInput
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringPtrInput
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolPtrInput
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringPtrInput
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringPtrInput
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringPtrInput
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrInput
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringPtrInput
}

func (DnsRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordState)(nil)).Elem()
}

type dnsRecordArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId *string `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain string `pulumi:"domain"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype string `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl *int `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId string `pulumi:"zoneNameOrId"`
}

// The set of arguments for constructing a DnsRecord resource.
type DnsRecordArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrInput
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringInput
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringInput
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrInput
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringInput
}

func (DnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordArgs)(nil)).Elem()
}

type DnsRecordInput interface {
	pulumi.Input

	ToDnsRecordOutput() DnsRecordOutput
	ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput
}

func (*DnsRecord) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecord)(nil))
}

func (i *DnsRecord) ToDnsRecordOutput() DnsRecordOutput {
	return i.ToDnsRecordOutputWithContext(context.Background())
}

func (i *DnsRecord) ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordOutput)
}

func (i *DnsRecord) ToDnsRecordPtrOutput() DnsRecordPtrOutput {
	return i.ToDnsRecordPtrOutputWithContext(context.Background())
}

func (i *DnsRecord) ToDnsRecordPtrOutputWithContext(ctx context.Context) DnsRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordPtrOutput)
}

type DnsRecordPtrInput interface {
	pulumi.Input

	ToDnsRecordPtrOutput() DnsRecordPtrOutput
	ToDnsRecordPtrOutputWithContext(ctx context.Context) DnsRecordPtrOutput
}

type dnsRecordPtrType DnsRecordArgs

func (*dnsRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecord)(nil))
}

func (i *dnsRecordPtrType) ToDnsRecordPtrOutput() DnsRecordPtrOutput {
	return i.ToDnsRecordPtrOutputWithContext(context.Background())
}

func (i *dnsRecordPtrType) ToDnsRecordPtrOutputWithContext(ctx context.Context) DnsRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordPtrOutput)
}

// DnsRecordArrayInput is an input type that accepts DnsRecordArray and DnsRecordArrayOutput values.
// You can construct a concrete instance of `DnsRecordArrayInput` via:
//
//          DnsRecordArray{ DnsRecordArgs{...} }
type DnsRecordArrayInput interface {
	pulumi.Input

	ToDnsRecordArrayOutput() DnsRecordArrayOutput
	ToDnsRecordArrayOutputWithContext(context.Context) DnsRecordArrayOutput
}

type DnsRecordArray []DnsRecordInput

func (DnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsRecord)(nil)).Elem()
}

func (i DnsRecordArray) ToDnsRecordArrayOutput() DnsRecordArrayOutput {
	return i.ToDnsRecordArrayOutputWithContext(context.Background())
}

func (i DnsRecordArray) ToDnsRecordArrayOutputWithContext(ctx context.Context) DnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordArrayOutput)
}

// DnsRecordMapInput is an input type that accepts DnsRecordMap and DnsRecordMapOutput values.
// You can construct a concrete instance of `DnsRecordMapInput` via:
//
//          DnsRecordMap{ "key": DnsRecordArgs{...} }
type DnsRecordMapInput interface {
	pulumi.Input

	ToDnsRecordMapOutput() DnsRecordMapOutput
	ToDnsRecordMapOutputWithContext(context.Context) DnsRecordMapOutput
}

type DnsRecordMap map[string]DnsRecordInput

func (DnsRecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsRecord)(nil)).Elem()
}

func (i DnsRecordMap) ToDnsRecordMapOutput() DnsRecordMapOutput {
	return i.ToDnsRecordMapOutputWithContext(context.Background())
}

func (i DnsRecordMap) ToDnsRecordMapOutputWithContext(ctx context.Context) DnsRecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordMapOutput)
}

type DnsRecordOutput struct {
	*pulumi.OutputState
}

func (DnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecord)(nil))
}

func (o DnsRecordOutput) ToDnsRecordOutput() DnsRecordOutput {
	return o
}

func (o DnsRecordOutput) ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput {
	return o
}

func (o DnsRecordOutput) ToDnsRecordPtrOutput() DnsRecordPtrOutput {
	return o.ToDnsRecordPtrOutputWithContext(context.Background())
}

func (o DnsRecordOutput) ToDnsRecordPtrOutputWithContext(ctx context.Context) DnsRecordPtrOutput {
	return o.ApplyT(func(v DnsRecord) *DnsRecord {
		return &v
	}).(DnsRecordPtrOutput)
}

type DnsRecordPtrOutput struct {
	*pulumi.OutputState
}

func (DnsRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecord)(nil))
}

func (o DnsRecordPtrOutput) ToDnsRecordPtrOutput() DnsRecordPtrOutput {
	return o
}

func (o DnsRecordPtrOutput) ToDnsRecordPtrOutputWithContext(ctx context.Context) DnsRecordPtrOutput {
	return o
}

type DnsRecordArrayOutput struct{ *pulumi.OutputState }

func (DnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsRecord)(nil))
}

func (o DnsRecordArrayOutput) ToDnsRecordArrayOutput() DnsRecordArrayOutput {
	return o
}

func (o DnsRecordArrayOutput) ToDnsRecordArrayOutputWithContext(ctx context.Context) DnsRecordArrayOutput {
	return o
}

func (o DnsRecordArrayOutput) Index(i pulumi.IntInput) DnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsRecord {
		return vs[0].([]DnsRecord)[vs[1].(int)]
	}).(DnsRecordOutput)
}

type DnsRecordMapOutput struct{ *pulumi.OutputState }

func (DnsRecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DnsRecord)(nil))
}

func (o DnsRecordMapOutput) ToDnsRecordMapOutput() DnsRecordMapOutput {
	return o
}

func (o DnsRecordMapOutput) ToDnsRecordMapOutputWithContext(ctx context.Context) DnsRecordMapOutput {
	return o
}

func (o DnsRecordMapOutput) MapIndex(k pulumi.StringInput) DnsRecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DnsRecord {
		return vs[0].(map[string]DnsRecord)[vs[1].(string)]
	}).(DnsRecordOutput)
}

func init() {
	pulumi.RegisterOutputType(DnsRecordOutput{})
	pulumi.RegisterOutputType(DnsRecordPtrOutput{})
	pulumi.RegisterOutputType(DnsRecordArrayOutput{})
	pulumi.RegisterOutputType(DnsRecordMapOutput{})
}
