// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Console History resource in Oracle Cloud Infrastructure Core service.
//
// Captures the most recent serial console data (up to a megabyte) for the
// specified instance.
//
// The `CaptureConsoleHistory` operation works with the other console history operations
// as described below.
//
// 1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of the
//    most recent console history. This call returns a `ConsoleHistory`
//    object. The object will have a state of REQUESTED.
// 2. Wait for the capture operation to succeed by polling `GetConsoleHistory` with
//    the identifier of the console history metadata. The state of the
//    `ConsoleHistory` object will go from REQUESTED to GETTING-HISTORY and
//    then SUCCEEDED (or FAILED).
// 3. Use `GetConsoleHistoryContent` to get the actual console history data (not the
//    metadata).
// 4. Optionally, use `DeleteConsoleHistory` to delete the console history metadata
//    and the console history data.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreConsoleHistory(ctx, "testConsoleHistory", &oci.CoreConsoleHistoryArgs{
// 			InstanceId: pulumi.Any(oci_core_instance.Test_instance.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Console_history_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ConsoleHistories can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreConsoleHistory:CoreConsoleHistory test_console_history "id"
// ```
type CoreConsoleHistory struct {
	pulumi.CustomResourceState

	// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The OCID of the instance to get the console history from.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The current state of the console history.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the history was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCoreConsoleHistory registers a new resource with the given unique name, arguments, and options.
func NewCoreConsoleHistory(ctx *pulumi.Context,
	name string, args *CoreConsoleHistoryArgs, opts ...pulumi.ResourceOption) (*CoreConsoleHistory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	var resource CoreConsoleHistory
	err := ctx.RegisterResource("oci:index/coreConsoleHistory:CoreConsoleHistory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreConsoleHistory gets an existing CoreConsoleHistory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreConsoleHistory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreConsoleHistoryState, opts ...pulumi.ResourceOption) (*CoreConsoleHistory, error) {
	var resource CoreConsoleHistory
	err := ctx.ReadResource("oci:index/coreConsoleHistory:CoreConsoleHistory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreConsoleHistory resources.
type coreConsoleHistoryState struct {
	// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the instance to get the console history from.
	InstanceId *string `pulumi:"instanceId"`
	// The current state of the console history.
	State *string `pulumi:"state"`
	// The date and time the history was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CoreConsoleHistoryState struct {
	// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the instance to get the console history from.
	InstanceId pulumi.StringPtrInput
	// The current state of the console history.
	State pulumi.StringPtrInput
	// The date and time the history was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CoreConsoleHistoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreConsoleHistoryState)(nil)).Elem()
}

type coreConsoleHistoryArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the instance to get the console history from.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a CoreConsoleHistory resource.
type CoreConsoleHistoryArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the instance to get the console history from.
	InstanceId pulumi.StringInput
}

func (CoreConsoleHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreConsoleHistoryArgs)(nil)).Elem()
}

type CoreConsoleHistoryInput interface {
	pulumi.Input

	ToCoreConsoleHistoryOutput() CoreConsoleHistoryOutput
	ToCoreConsoleHistoryOutputWithContext(ctx context.Context) CoreConsoleHistoryOutput
}

func (*CoreConsoleHistory) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreConsoleHistory)(nil))
}

func (i *CoreConsoleHistory) ToCoreConsoleHistoryOutput() CoreConsoleHistoryOutput {
	return i.ToCoreConsoleHistoryOutputWithContext(context.Background())
}

func (i *CoreConsoleHistory) ToCoreConsoleHistoryOutputWithContext(ctx context.Context) CoreConsoleHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreConsoleHistoryOutput)
}

func (i *CoreConsoleHistory) ToCoreConsoleHistoryPtrOutput() CoreConsoleHistoryPtrOutput {
	return i.ToCoreConsoleHistoryPtrOutputWithContext(context.Background())
}

func (i *CoreConsoleHistory) ToCoreConsoleHistoryPtrOutputWithContext(ctx context.Context) CoreConsoleHistoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreConsoleHistoryPtrOutput)
}

type CoreConsoleHistoryPtrInput interface {
	pulumi.Input

	ToCoreConsoleHistoryPtrOutput() CoreConsoleHistoryPtrOutput
	ToCoreConsoleHistoryPtrOutputWithContext(ctx context.Context) CoreConsoleHistoryPtrOutput
}

type coreConsoleHistoryPtrType CoreConsoleHistoryArgs

func (*coreConsoleHistoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreConsoleHistory)(nil))
}

func (i *coreConsoleHistoryPtrType) ToCoreConsoleHistoryPtrOutput() CoreConsoleHistoryPtrOutput {
	return i.ToCoreConsoleHistoryPtrOutputWithContext(context.Background())
}

func (i *coreConsoleHistoryPtrType) ToCoreConsoleHistoryPtrOutputWithContext(ctx context.Context) CoreConsoleHistoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreConsoleHistoryPtrOutput)
}

// CoreConsoleHistoryArrayInput is an input type that accepts CoreConsoleHistoryArray and CoreConsoleHistoryArrayOutput values.
// You can construct a concrete instance of `CoreConsoleHistoryArrayInput` via:
//
//          CoreConsoleHistoryArray{ CoreConsoleHistoryArgs{...} }
type CoreConsoleHistoryArrayInput interface {
	pulumi.Input

	ToCoreConsoleHistoryArrayOutput() CoreConsoleHistoryArrayOutput
	ToCoreConsoleHistoryArrayOutputWithContext(context.Context) CoreConsoleHistoryArrayOutput
}

type CoreConsoleHistoryArray []CoreConsoleHistoryInput

func (CoreConsoleHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreConsoleHistory)(nil)).Elem()
}

func (i CoreConsoleHistoryArray) ToCoreConsoleHistoryArrayOutput() CoreConsoleHistoryArrayOutput {
	return i.ToCoreConsoleHistoryArrayOutputWithContext(context.Background())
}

func (i CoreConsoleHistoryArray) ToCoreConsoleHistoryArrayOutputWithContext(ctx context.Context) CoreConsoleHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreConsoleHistoryArrayOutput)
}

// CoreConsoleHistoryMapInput is an input type that accepts CoreConsoleHistoryMap and CoreConsoleHistoryMapOutput values.
// You can construct a concrete instance of `CoreConsoleHistoryMapInput` via:
//
//          CoreConsoleHistoryMap{ "key": CoreConsoleHistoryArgs{...} }
type CoreConsoleHistoryMapInput interface {
	pulumi.Input

	ToCoreConsoleHistoryMapOutput() CoreConsoleHistoryMapOutput
	ToCoreConsoleHistoryMapOutputWithContext(context.Context) CoreConsoleHistoryMapOutput
}

type CoreConsoleHistoryMap map[string]CoreConsoleHistoryInput

func (CoreConsoleHistoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreConsoleHistory)(nil)).Elem()
}

func (i CoreConsoleHistoryMap) ToCoreConsoleHistoryMapOutput() CoreConsoleHistoryMapOutput {
	return i.ToCoreConsoleHistoryMapOutputWithContext(context.Background())
}

func (i CoreConsoleHistoryMap) ToCoreConsoleHistoryMapOutputWithContext(ctx context.Context) CoreConsoleHistoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreConsoleHistoryMapOutput)
}

type CoreConsoleHistoryOutput struct {
	*pulumi.OutputState
}

func (CoreConsoleHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreConsoleHistory)(nil))
}

func (o CoreConsoleHistoryOutput) ToCoreConsoleHistoryOutput() CoreConsoleHistoryOutput {
	return o
}

func (o CoreConsoleHistoryOutput) ToCoreConsoleHistoryOutputWithContext(ctx context.Context) CoreConsoleHistoryOutput {
	return o
}

func (o CoreConsoleHistoryOutput) ToCoreConsoleHistoryPtrOutput() CoreConsoleHistoryPtrOutput {
	return o.ToCoreConsoleHistoryPtrOutputWithContext(context.Background())
}

func (o CoreConsoleHistoryOutput) ToCoreConsoleHistoryPtrOutputWithContext(ctx context.Context) CoreConsoleHistoryPtrOutput {
	return o.ApplyT(func(v CoreConsoleHistory) *CoreConsoleHistory {
		return &v
	}).(CoreConsoleHistoryPtrOutput)
}

type CoreConsoleHistoryPtrOutput struct {
	*pulumi.OutputState
}

func (CoreConsoleHistoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreConsoleHistory)(nil))
}

func (o CoreConsoleHistoryPtrOutput) ToCoreConsoleHistoryPtrOutput() CoreConsoleHistoryPtrOutput {
	return o
}

func (o CoreConsoleHistoryPtrOutput) ToCoreConsoleHistoryPtrOutputWithContext(ctx context.Context) CoreConsoleHistoryPtrOutput {
	return o
}

type CoreConsoleHistoryArrayOutput struct{ *pulumi.OutputState }

func (CoreConsoleHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreConsoleHistory)(nil))
}

func (o CoreConsoleHistoryArrayOutput) ToCoreConsoleHistoryArrayOutput() CoreConsoleHistoryArrayOutput {
	return o
}

func (o CoreConsoleHistoryArrayOutput) ToCoreConsoleHistoryArrayOutputWithContext(ctx context.Context) CoreConsoleHistoryArrayOutput {
	return o
}

func (o CoreConsoleHistoryArrayOutput) Index(i pulumi.IntInput) CoreConsoleHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreConsoleHistory {
		return vs[0].([]CoreConsoleHistory)[vs[1].(int)]
	}).(CoreConsoleHistoryOutput)
}

type CoreConsoleHistoryMapOutput struct{ *pulumi.OutputState }

func (CoreConsoleHistoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreConsoleHistory)(nil))
}

func (o CoreConsoleHistoryMapOutput) ToCoreConsoleHistoryMapOutput() CoreConsoleHistoryMapOutput {
	return o
}

func (o CoreConsoleHistoryMapOutput) ToCoreConsoleHistoryMapOutputWithContext(ctx context.Context) CoreConsoleHistoryMapOutput {
	return o
}

func (o CoreConsoleHistoryMapOutput) MapIndex(k pulumi.StringInput) CoreConsoleHistoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreConsoleHistory {
		return vs[0].(map[string]CoreConsoleHistory)[vs[1].(string)]
	}).(CoreConsoleHistoryOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreConsoleHistoryOutput{})
	pulumi.RegisterOutputType(CoreConsoleHistoryPtrOutput{})
	pulumi.RegisterOutputType(CoreConsoleHistoryArrayOutput{})
	pulumi.RegisterOutputType(CoreConsoleHistoryMapOutput{})
}
