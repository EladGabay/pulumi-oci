// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CoreListingResourceVersionAgreement struct {
	pulumi.CustomResourceState

	EulaLink               pulumi.StringOutput `pulumi:"eulaLink"`
	ListingId              pulumi.StringOutput `pulumi:"listingId"`
	ListingResourceVersion pulumi.StringOutput `pulumi:"listingResourceVersion"`
	OracleTermsOfUseLink   pulumi.StringOutput `pulumi:"oracleTermsOfUseLink"`
	Signature              pulumi.StringOutput `pulumi:"signature"`
	TimeRetrieved          pulumi.StringOutput `pulumi:"timeRetrieved"`
}

// NewCoreListingResourceVersionAgreement registers a new resource with the given unique name, arguments, and options.
func NewCoreListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, args *CoreListingResourceVersionAgreementArgs, opts ...pulumi.ResourceOption) (*CoreListingResourceVersionAgreement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.ListingResourceVersion == nil {
		return nil, errors.New("invalid value for required argument 'ListingResourceVersion'")
	}
	var resource CoreListingResourceVersionAgreement
	err := ctx.RegisterResource("oci:index/coreListingResourceVersionAgreement:CoreListingResourceVersionAgreement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreListingResourceVersionAgreement gets an existing CoreListingResourceVersionAgreement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreListingResourceVersionAgreementState, opts ...pulumi.ResourceOption) (*CoreListingResourceVersionAgreement, error) {
	var resource CoreListingResourceVersionAgreement
	err := ctx.ReadResource("oci:index/coreListingResourceVersionAgreement:CoreListingResourceVersionAgreement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreListingResourceVersionAgreement resources.
type coreListingResourceVersionAgreementState struct {
	EulaLink               *string `pulumi:"eulaLink"`
	ListingId              *string `pulumi:"listingId"`
	ListingResourceVersion *string `pulumi:"listingResourceVersion"`
	OracleTermsOfUseLink   *string `pulumi:"oracleTermsOfUseLink"`
	Signature              *string `pulumi:"signature"`
	TimeRetrieved          *string `pulumi:"timeRetrieved"`
}

type CoreListingResourceVersionAgreementState struct {
	EulaLink               pulumi.StringPtrInput
	ListingId              pulumi.StringPtrInput
	ListingResourceVersion pulumi.StringPtrInput
	OracleTermsOfUseLink   pulumi.StringPtrInput
	Signature              pulumi.StringPtrInput
	TimeRetrieved          pulumi.StringPtrInput
}

func (CoreListingResourceVersionAgreementState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreListingResourceVersionAgreementState)(nil)).Elem()
}

type coreListingResourceVersionAgreementArgs struct {
	ListingId              string `pulumi:"listingId"`
	ListingResourceVersion string `pulumi:"listingResourceVersion"`
}

// The set of arguments for constructing a CoreListingResourceVersionAgreement resource.
type CoreListingResourceVersionAgreementArgs struct {
	ListingId              pulumi.StringInput
	ListingResourceVersion pulumi.StringInput
}

func (CoreListingResourceVersionAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreListingResourceVersionAgreementArgs)(nil)).Elem()
}

type CoreListingResourceVersionAgreementInput interface {
	pulumi.Input

	ToCoreListingResourceVersionAgreementOutput() CoreListingResourceVersionAgreementOutput
	ToCoreListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementOutput
}

func (*CoreListingResourceVersionAgreement) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreListingResourceVersionAgreement)(nil))
}

func (i *CoreListingResourceVersionAgreement) ToCoreListingResourceVersionAgreementOutput() CoreListingResourceVersionAgreementOutput {
	return i.ToCoreListingResourceVersionAgreementOutputWithContext(context.Background())
}

func (i *CoreListingResourceVersionAgreement) ToCoreListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreListingResourceVersionAgreementOutput)
}

func (i *CoreListingResourceVersionAgreement) ToCoreListingResourceVersionAgreementPtrOutput() CoreListingResourceVersionAgreementPtrOutput {
	return i.ToCoreListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *CoreListingResourceVersionAgreement) ToCoreListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreListingResourceVersionAgreementPtrOutput)
}

type CoreListingResourceVersionAgreementPtrInput interface {
	pulumi.Input

	ToCoreListingResourceVersionAgreementPtrOutput() CoreListingResourceVersionAgreementPtrOutput
	ToCoreListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementPtrOutput
}

type coreListingResourceVersionAgreementPtrType CoreListingResourceVersionAgreementArgs

func (*coreListingResourceVersionAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreListingResourceVersionAgreement)(nil))
}

func (i *coreListingResourceVersionAgreementPtrType) ToCoreListingResourceVersionAgreementPtrOutput() CoreListingResourceVersionAgreementPtrOutput {
	return i.ToCoreListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *coreListingResourceVersionAgreementPtrType) ToCoreListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreListingResourceVersionAgreementPtrOutput)
}

// CoreListingResourceVersionAgreementArrayInput is an input type that accepts CoreListingResourceVersionAgreementArray and CoreListingResourceVersionAgreementArrayOutput values.
// You can construct a concrete instance of `CoreListingResourceVersionAgreementArrayInput` via:
//
//          CoreListingResourceVersionAgreementArray{ CoreListingResourceVersionAgreementArgs{...} }
type CoreListingResourceVersionAgreementArrayInput interface {
	pulumi.Input

	ToCoreListingResourceVersionAgreementArrayOutput() CoreListingResourceVersionAgreementArrayOutput
	ToCoreListingResourceVersionAgreementArrayOutputWithContext(context.Context) CoreListingResourceVersionAgreementArrayOutput
}

type CoreListingResourceVersionAgreementArray []CoreListingResourceVersionAgreementInput

func (CoreListingResourceVersionAgreementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreListingResourceVersionAgreement)(nil)).Elem()
}

func (i CoreListingResourceVersionAgreementArray) ToCoreListingResourceVersionAgreementArrayOutput() CoreListingResourceVersionAgreementArrayOutput {
	return i.ToCoreListingResourceVersionAgreementArrayOutputWithContext(context.Background())
}

func (i CoreListingResourceVersionAgreementArray) ToCoreListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreListingResourceVersionAgreementArrayOutput)
}

// CoreListingResourceVersionAgreementMapInput is an input type that accepts CoreListingResourceVersionAgreementMap and CoreListingResourceVersionAgreementMapOutput values.
// You can construct a concrete instance of `CoreListingResourceVersionAgreementMapInput` via:
//
//          CoreListingResourceVersionAgreementMap{ "key": CoreListingResourceVersionAgreementArgs{...} }
type CoreListingResourceVersionAgreementMapInput interface {
	pulumi.Input

	ToCoreListingResourceVersionAgreementMapOutput() CoreListingResourceVersionAgreementMapOutput
	ToCoreListingResourceVersionAgreementMapOutputWithContext(context.Context) CoreListingResourceVersionAgreementMapOutput
}

type CoreListingResourceVersionAgreementMap map[string]CoreListingResourceVersionAgreementInput

func (CoreListingResourceVersionAgreementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreListingResourceVersionAgreement)(nil)).Elem()
}

func (i CoreListingResourceVersionAgreementMap) ToCoreListingResourceVersionAgreementMapOutput() CoreListingResourceVersionAgreementMapOutput {
	return i.ToCoreListingResourceVersionAgreementMapOutputWithContext(context.Background())
}

func (i CoreListingResourceVersionAgreementMap) ToCoreListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreListingResourceVersionAgreementMapOutput)
}

type CoreListingResourceVersionAgreementOutput struct {
	*pulumi.OutputState
}

func (CoreListingResourceVersionAgreementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreListingResourceVersionAgreement)(nil))
}

func (o CoreListingResourceVersionAgreementOutput) ToCoreListingResourceVersionAgreementOutput() CoreListingResourceVersionAgreementOutput {
	return o
}

func (o CoreListingResourceVersionAgreementOutput) ToCoreListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementOutput {
	return o
}

func (o CoreListingResourceVersionAgreementOutput) ToCoreListingResourceVersionAgreementPtrOutput() CoreListingResourceVersionAgreementPtrOutput {
	return o.ToCoreListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (o CoreListingResourceVersionAgreementOutput) ToCoreListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementPtrOutput {
	return o.ApplyT(func(v CoreListingResourceVersionAgreement) *CoreListingResourceVersionAgreement {
		return &v
	}).(CoreListingResourceVersionAgreementPtrOutput)
}

type CoreListingResourceVersionAgreementPtrOutput struct {
	*pulumi.OutputState
}

func (CoreListingResourceVersionAgreementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreListingResourceVersionAgreement)(nil))
}

func (o CoreListingResourceVersionAgreementPtrOutput) ToCoreListingResourceVersionAgreementPtrOutput() CoreListingResourceVersionAgreementPtrOutput {
	return o
}

func (o CoreListingResourceVersionAgreementPtrOutput) ToCoreListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementPtrOutput {
	return o
}

type CoreListingResourceVersionAgreementArrayOutput struct{ *pulumi.OutputState }

func (CoreListingResourceVersionAgreementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreListingResourceVersionAgreement)(nil))
}

func (o CoreListingResourceVersionAgreementArrayOutput) ToCoreListingResourceVersionAgreementArrayOutput() CoreListingResourceVersionAgreementArrayOutput {
	return o
}

func (o CoreListingResourceVersionAgreementArrayOutput) ToCoreListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementArrayOutput {
	return o
}

func (o CoreListingResourceVersionAgreementArrayOutput) Index(i pulumi.IntInput) CoreListingResourceVersionAgreementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreListingResourceVersionAgreement {
		return vs[0].([]CoreListingResourceVersionAgreement)[vs[1].(int)]
	}).(CoreListingResourceVersionAgreementOutput)
}

type CoreListingResourceVersionAgreementMapOutput struct{ *pulumi.OutputState }

func (CoreListingResourceVersionAgreementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreListingResourceVersionAgreement)(nil))
}

func (o CoreListingResourceVersionAgreementMapOutput) ToCoreListingResourceVersionAgreementMapOutput() CoreListingResourceVersionAgreementMapOutput {
	return o
}

func (o CoreListingResourceVersionAgreementMapOutput) ToCoreListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) CoreListingResourceVersionAgreementMapOutput {
	return o
}

func (o CoreListingResourceVersionAgreementMapOutput) MapIndex(k pulumi.StringInput) CoreListingResourceVersionAgreementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreListingResourceVersionAgreement {
		return vs[0].(map[string]CoreListingResourceVersionAgreement)[vs[1].(string)]
	}).(CoreListingResourceVersionAgreementOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreListingResourceVersionAgreementOutput{})
	pulumi.RegisterOutputType(CoreListingResourceVersionAgreementPtrOutput{})
	pulumi.RegisterOutputType(CoreListingResourceVersionAgreementArrayOutput{})
	pulumi.RegisterOutputType(CoreListingResourceVersionAgreementMapOutput{})
}
