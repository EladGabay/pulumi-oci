// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Log Group resource in Oracle Cloud Infrastructure Logging service.
//
// Create a new log group with a unique display name. This call fails
// if the log group is already created with the same displayName in the compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewLoggingLogGroup(ctx, "testLogGroup", &oci.LoggingLogGroupArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Log_group_display_name),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Log_group_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// LogGroups can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/loggingLogGroup:LoggingLogGroup test_log_group "id"
// ```
type LoggingLogGroup struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that the resource belongs to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Description for this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The log group object state.
	State pulumi.StringOutput `pulumi:"state"`
	// Time the resource was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time the resource was last modified.
	TimeLastModified pulumi.StringOutput `pulumi:"timeLastModified"`
}

// NewLoggingLogGroup registers a new resource with the given unique name, arguments, and options.
func NewLoggingLogGroup(ctx *pulumi.Context,
	name string, args *LoggingLogGroupArgs, opts ...pulumi.ResourceOption) (*LoggingLogGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource LoggingLogGroup
	err := ctx.RegisterResource("oci:index/loggingLogGroup:LoggingLogGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingLogGroup gets an existing LoggingLogGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingLogGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingLogGroupState, opts ...pulumi.ResourceOption) (*LoggingLogGroup, error) {
	var resource LoggingLogGroup
	err := ctx.ReadResource("oci:index/loggingLogGroup:LoggingLogGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingLogGroup resources.
type loggingLogGroupState struct {
	// (Updatable) The OCID of the compartment that the resource belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Description for this resource.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The log group object state.
	State *string `pulumi:"state"`
	// Time the resource was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Time the resource was last modified.
	TimeLastModified *string `pulumi:"timeLastModified"`
}

type LoggingLogGroupState struct {
	// (Updatable) The OCID of the compartment that the resource belongs to.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Description for this resource.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The log group object state.
	State pulumi.StringPtrInput
	// Time the resource was created.
	TimeCreated pulumi.StringPtrInput
	// Time the resource was last modified.
	TimeLastModified pulumi.StringPtrInput
}

func (LoggingLogGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogGroupState)(nil)).Elem()
}

type loggingLogGroupArgs struct {
	// (Updatable) The OCID of the compartment that the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Description for this resource.
	Description *string `pulumi:"description"`
	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a LoggingLogGroup resource.
type LoggingLogGroupArgs struct {
	// (Updatable) The OCID of the compartment that the resource belongs to.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Description for this resource.
	Description pulumi.StringPtrInput
	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (LoggingLogGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogGroupArgs)(nil)).Elem()
}

type LoggingLogGroupInput interface {
	pulumi.Input

	ToLoggingLogGroupOutput() LoggingLogGroupOutput
	ToLoggingLogGroupOutputWithContext(ctx context.Context) LoggingLogGroupOutput
}

func (*LoggingLogGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingLogGroup)(nil))
}

func (i *LoggingLogGroup) ToLoggingLogGroupOutput() LoggingLogGroupOutput {
	return i.ToLoggingLogGroupOutputWithContext(context.Background())
}

func (i *LoggingLogGroup) ToLoggingLogGroupOutputWithContext(ctx context.Context) LoggingLogGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogGroupOutput)
}

func (i *LoggingLogGroup) ToLoggingLogGroupPtrOutput() LoggingLogGroupPtrOutput {
	return i.ToLoggingLogGroupPtrOutputWithContext(context.Background())
}

func (i *LoggingLogGroup) ToLoggingLogGroupPtrOutputWithContext(ctx context.Context) LoggingLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogGroupPtrOutput)
}

type LoggingLogGroupPtrInput interface {
	pulumi.Input

	ToLoggingLogGroupPtrOutput() LoggingLogGroupPtrOutput
	ToLoggingLogGroupPtrOutputWithContext(ctx context.Context) LoggingLogGroupPtrOutput
}

type loggingLogGroupPtrType LoggingLogGroupArgs

func (*loggingLogGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogGroup)(nil))
}

func (i *loggingLogGroupPtrType) ToLoggingLogGroupPtrOutput() LoggingLogGroupPtrOutput {
	return i.ToLoggingLogGroupPtrOutputWithContext(context.Background())
}

func (i *loggingLogGroupPtrType) ToLoggingLogGroupPtrOutputWithContext(ctx context.Context) LoggingLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogGroupPtrOutput)
}

// LoggingLogGroupArrayInput is an input type that accepts LoggingLogGroupArray and LoggingLogGroupArrayOutput values.
// You can construct a concrete instance of `LoggingLogGroupArrayInput` via:
//
//          LoggingLogGroupArray{ LoggingLogGroupArgs{...} }
type LoggingLogGroupArrayInput interface {
	pulumi.Input

	ToLoggingLogGroupArrayOutput() LoggingLogGroupArrayOutput
	ToLoggingLogGroupArrayOutputWithContext(context.Context) LoggingLogGroupArrayOutput
}

type LoggingLogGroupArray []LoggingLogGroupInput

func (LoggingLogGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoggingLogGroup)(nil)).Elem()
}

func (i LoggingLogGroupArray) ToLoggingLogGroupArrayOutput() LoggingLogGroupArrayOutput {
	return i.ToLoggingLogGroupArrayOutputWithContext(context.Background())
}

func (i LoggingLogGroupArray) ToLoggingLogGroupArrayOutputWithContext(ctx context.Context) LoggingLogGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogGroupArrayOutput)
}

// LoggingLogGroupMapInput is an input type that accepts LoggingLogGroupMap and LoggingLogGroupMapOutput values.
// You can construct a concrete instance of `LoggingLogGroupMapInput` via:
//
//          LoggingLogGroupMap{ "key": LoggingLogGroupArgs{...} }
type LoggingLogGroupMapInput interface {
	pulumi.Input

	ToLoggingLogGroupMapOutput() LoggingLogGroupMapOutput
	ToLoggingLogGroupMapOutputWithContext(context.Context) LoggingLogGroupMapOutput
}

type LoggingLogGroupMap map[string]LoggingLogGroupInput

func (LoggingLogGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoggingLogGroup)(nil)).Elem()
}

func (i LoggingLogGroupMap) ToLoggingLogGroupMapOutput() LoggingLogGroupMapOutput {
	return i.ToLoggingLogGroupMapOutputWithContext(context.Background())
}

func (i LoggingLogGroupMap) ToLoggingLogGroupMapOutputWithContext(ctx context.Context) LoggingLogGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogGroupMapOutput)
}

type LoggingLogGroupOutput struct {
	*pulumi.OutputState
}

func (LoggingLogGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingLogGroup)(nil))
}

func (o LoggingLogGroupOutput) ToLoggingLogGroupOutput() LoggingLogGroupOutput {
	return o
}

func (o LoggingLogGroupOutput) ToLoggingLogGroupOutputWithContext(ctx context.Context) LoggingLogGroupOutput {
	return o
}

func (o LoggingLogGroupOutput) ToLoggingLogGroupPtrOutput() LoggingLogGroupPtrOutput {
	return o.ToLoggingLogGroupPtrOutputWithContext(context.Background())
}

func (o LoggingLogGroupOutput) ToLoggingLogGroupPtrOutputWithContext(ctx context.Context) LoggingLogGroupPtrOutput {
	return o.ApplyT(func(v LoggingLogGroup) *LoggingLogGroup {
		return &v
	}).(LoggingLogGroupPtrOutput)
}

type LoggingLogGroupPtrOutput struct {
	*pulumi.OutputState
}

func (LoggingLogGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogGroup)(nil))
}

func (o LoggingLogGroupPtrOutput) ToLoggingLogGroupPtrOutput() LoggingLogGroupPtrOutput {
	return o
}

func (o LoggingLogGroupPtrOutput) ToLoggingLogGroupPtrOutputWithContext(ctx context.Context) LoggingLogGroupPtrOutput {
	return o
}

type LoggingLogGroupArrayOutput struct{ *pulumi.OutputState }

func (LoggingLogGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingLogGroup)(nil))
}

func (o LoggingLogGroupArrayOutput) ToLoggingLogGroupArrayOutput() LoggingLogGroupArrayOutput {
	return o
}

func (o LoggingLogGroupArrayOutput) ToLoggingLogGroupArrayOutputWithContext(ctx context.Context) LoggingLogGroupArrayOutput {
	return o
}

func (o LoggingLogGroupArrayOutput) Index(i pulumi.IntInput) LoggingLogGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingLogGroup {
		return vs[0].([]LoggingLogGroup)[vs[1].(int)]
	}).(LoggingLogGroupOutput)
}

type LoggingLogGroupMapOutput struct{ *pulumi.OutputState }

func (LoggingLogGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LoggingLogGroup)(nil))
}

func (o LoggingLogGroupMapOutput) ToLoggingLogGroupMapOutput() LoggingLogGroupMapOutput {
	return o
}

func (o LoggingLogGroupMapOutput) ToLoggingLogGroupMapOutputWithContext(ctx context.Context) LoggingLogGroupMapOutput {
	return o
}

func (o LoggingLogGroupMapOutput) MapIndex(k pulumi.StringInput) LoggingLogGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LoggingLogGroup {
		return vs[0].(map[string]LoggingLogGroup)[vs[1].(string)]
	}).(LoggingLogGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(LoggingLogGroupOutput{})
	pulumi.RegisterOutputType(LoggingLogGroupPtrOutput{})
	pulumi.RegisterOutputType(LoggingLogGroupArrayOutput{})
	pulumi.RegisterOutputType(LoggingLogGroupMapOutput{})
}
