// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the oci package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// (Optional) The type of auth to use. Options are 'ApiKey', 'SecurityToken' and 'InstancePrincipal'. By default, 'ApiKey'
	// will be used.
	Auth pulumi.StringPtrOutput `pulumi:"auth"`
	// (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
	ConfigFileProfile pulumi.StringPtrOutput `pulumi:"configFileProfile"`
	// (Optional) The fingerprint for the user's RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
	// console. Required if auth is set to 'ApiKey', ignored otherwise.
	Fingerprint pulumi.StringPtrOutput `pulumi:"fingerprint"`
	// (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
	// set to 'ApiKey', ignored otherwise.
	PrivateKey pulumi.StringPtrOutput `pulumi:"privateKey"`
	// (Optional) The password used to secure the private key.
	PrivateKeyPassword pulumi.StringPtrOutput `pulumi:"privateKeyPassword"`
	// (Optional) The path to the user's PEM formatted private key. A private_key or a private_key_path must be provided if
	// auth is set to 'ApiKey', ignored otherwise.
	PrivateKeyPath pulumi.StringPtrOutput `pulumi:"privateKeyPath"`
	// (Required) The region for API connections (e.g. us-ashburn-1).
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
	// Infrastructure console. Required if auth is set to 'ApiKey', ignored otherwise.
	TenancyOcid pulumi.StringPtrOutput `pulumi:"tenancyOcid"`
	// (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
	// auth is set to 'ApiKey', ignored otherwise.
	UserOcid pulumi.StringPtrOutput `pulumi:"userOcid"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:oci", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// (Optional) The type of auth to use. Options are 'ApiKey', 'SecurityToken' and 'InstancePrincipal'. By default, 'ApiKey'
	// will be used.
	Auth *string `pulumi:"auth"`
	// (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
	ConfigFileProfile *string `pulumi:"configFileProfile"`
	// (Optional) Disable automatic retries for retriable errors. Automatic retries were introduced to solve some eventual
	// consistency problems but it also introduced performance issues on destroy operations.
	DisableAutoRetries *bool `pulumi:"disableAutoRetries"`
	// (Optional) The fingerprint for the user's RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
	// console. Required if auth is set to 'ApiKey', ignored otherwise.
	Fingerprint *string `pulumi:"fingerprint"`
	// (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
	// set to 'ApiKey', ignored otherwise.
	PrivateKey *string `pulumi:"privateKey"`
	// (Optional) The password used to secure the private key.
	PrivateKeyPassword *string `pulumi:"privateKeyPassword"`
	// (Optional) The path to the user's PEM formatted private key. A private_key or a private_key_path must be provided if
	// auth is set to 'ApiKey', ignored otherwise.
	PrivateKeyPath *string `pulumi:"privateKeyPath"`
	// (Required) The region for API connections (e.g. us-ashburn-1).
	Region *string `pulumi:"region"`
	// (Optional) The minimum duration (in seconds) to retry a resource operation in response to an error. The actual retry
	// duration may be longer due to jittering of retry operations. This value is ignored if the `disable_auto_retries` field
	// is set to true.
	RetryDurationSeconds *int `pulumi:"retryDurationSeconds"`
	// (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
	// Infrastructure console. Required if auth is set to 'ApiKey', ignored otherwise.
	TenancyOcid *string `pulumi:"tenancyOcid"`
	// (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
	// auth is set to 'ApiKey', ignored otherwise.
	UserOcid *string `pulumi:"userOcid"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// (Optional) The type of auth to use. Options are 'ApiKey', 'SecurityToken' and 'InstancePrincipal'. By default, 'ApiKey'
	// will be used.
	Auth pulumi.StringPtrInput
	// (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
	ConfigFileProfile pulumi.StringPtrInput
	// (Optional) Disable automatic retries for retriable errors. Automatic retries were introduced to solve some eventual
	// consistency problems but it also introduced performance issues on destroy operations.
	DisableAutoRetries pulumi.BoolPtrInput
	// (Optional) The fingerprint for the user's RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
	// console. Required if auth is set to 'ApiKey', ignored otherwise.
	Fingerprint pulumi.StringPtrInput
	// (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
	// set to 'ApiKey', ignored otherwise.
	PrivateKey pulumi.StringPtrInput
	// (Optional) The password used to secure the private key.
	PrivateKeyPassword pulumi.StringPtrInput
	// (Optional) The path to the user's PEM formatted private key. A private_key or a private_key_path must be provided if
	// auth is set to 'ApiKey', ignored otherwise.
	PrivateKeyPath pulumi.StringPtrInput
	// (Required) The region for API connections (e.g. us-ashburn-1).
	Region pulumi.StringPtrInput
	// (Optional) The minimum duration (in seconds) to retry a resource operation in response to an error. The actual retry
	// duration may be longer due to jittering of retry operations. This value is ignored if the `disable_auto_retries` field
	// is set to true.
	RetryDurationSeconds pulumi.IntPtrInput
	// (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
	// Infrastructure console. Required if auth is set to 'ApiKey', ignored otherwise.
	TenancyOcid pulumi.StringPtrInput
	// (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
	// auth is set to 'ApiKey', ignored otherwise.
	UserOcid pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

func (i *Provider) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i *Provider) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPtrOutput)
}

type ProviderPtrInput interface {
	pulumi.Input

	ToProviderPtrOutput() ProviderPtrOutput
	ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput
}

type providerPtrType ProviderArgs

func (*providerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil))
}

func (i *providerPtrType) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i *providerPtrType) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPtrOutput)
}

type ProviderOutput struct {
	*pulumi.OutputState
}

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o.ToProviderPtrOutputWithContext(context.Background())
}

func (o ProviderOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o.ApplyT(func(v Provider) *Provider {
		return &v
	}).(ProviderPtrOutput)
}

type ProviderPtrOutput struct {
	*pulumi.OutputState
}

func (ProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil))
}

func (o ProviderPtrOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o
}

func (o ProviderPtrOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderPtrOutput{})
}
