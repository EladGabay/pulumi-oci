// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Host Insight resource in Oracle Cloud Infrastructure Opsi service.
//
// Create a Host Insight resource for a host in Operations Insights. The host will be enabled in Operations Insights. Host metric collection and analysis will be started.
//
// ## Import
//
// HostInsights can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/opsiHostInsight:OpsiHostInsight test_host_insight "id"
// ```
type OpsiHostInsight struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment Identifier of host
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Source of the host entity.
	EntitySource pulumi.StringOutput `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The user-friendly name for the host. The name does not have to be unique.
	HostDisplayName pulumi.StringOutput `pulumi:"hostDisplayName"`
	// The host name. The host name is unique amongst the hosts managed by the same management agent.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// Operations Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
	HostType pulumi.StringOutput `pulumi:"hostType"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
	ManagementAgentId pulumi.StringOutput `pulumi:"managementAgentId"`
	// Platform name.
	PlatformName pulumi.StringOutput `pulumi:"platformName"`
	// Platform type.
	PlatformType pulumi.StringOutput `pulumi:"platformType"`
	// Platform version.
	PlatformVersion pulumi.StringOutput `pulumi:"platformVersion"`
	// Processor count.
	ProcessorCount pulumi.IntOutput `pulumi:"processorCount"`
	// The current state of the host.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringOutput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the the host insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the host insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOpsiHostInsight registers a new resource with the given unique name, arguments, and options.
func NewOpsiHostInsight(ctx *pulumi.Context,
	name string, args *OpsiHostInsightArgs, opts ...pulumi.ResourceOption) (*OpsiHostInsight, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.EntitySource == nil {
		return nil, errors.New("invalid value for required argument 'EntitySource'")
	}
	if args.ManagementAgentId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementAgentId'")
	}
	var resource OpsiHostInsight
	err := ctx.RegisterResource("oci:index/opsiHostInsight:OpsiHostInsight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpsiHostInsight gets an existing OpsiHostInsight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpsiHostInsight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpsiHostInsightState, opts ...pulumi.ResourceOption) (*OpsiHostInsight, error) {
	var resource OpsiHostInsight
	err := ctx.ReadResource("oci:index/opsiHostInsight:OpsiHostInsight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpsiHostInsight resources.
type opsiHostInsightState struct {
	// (Updatable) Compartment Identifier of host
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Source of the host entity.
	EntitySource *string `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The user-friendly name for the host. The name does not have to be unique.
	HostDisplayName *string `pulumi:"hostDisplayName"`
	// The host name. The host name is unique amongst the hosts managed by the same management agent.
	HostName *string `pulumi:"hostName"`
	// Operations Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
	HostType *string `pulumi:"hostType"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// Platform name.
	PlatformName *string `pulumi:"platformName"`
	// Platform type.
	PlatformType *string `pulumi:"platformType"`
	// Platform version.
	PlatformVersion *string `pulumi:"platformVersion"`
	// Processor count.
	ProcessorCount *int `pulumi:"processorCount"`
	// The current state of the host.
	State *string `pulumi:"state"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status *string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the host insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the host insight was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OpsiHostInsightState struct {
	// (Updatable) Compartment Identifier of host
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Source of the host entity.
	EntitySource pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The user-friendly name for the host. The name does not have to be unique.
	HostDisplayName pulumi.StringPtrInput
	// The host name. The host name is unique amongst the hosts managed by the same management agent.
	HostName pulumi.StringPtrInput
	// Operations Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
	HostType pulumi.StringPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
	ManagementAgentId pulumi.StringPtrInput
	// Platform name.
	PlatformName pulumi.StringPtrInput
	// Platform type.
	PlatformType pulumi.StringPtrInput
	// Platform version.
	PlatformVersion pulumi.StringPtrInput
	// Processor count.
	ProcessorCount pulumi.IntPtrInput
	// The current state of the host.
	State pulumi.StringPtrInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the the host insight was first enabled. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the host insight was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
}

func (OpsiHostInsightState) ElementType() reflect.Type {
	return reflect.TypeOf((*opsiHostInsightState)(nil)).Elem()
}

type opsiHostInsightArgs struct {
	// (Updatable) Compartment Identifier of host
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Source of the host entity.
	EntitySource string `pulumi:"entitySource"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
	ManagementAgentId string `pulumi:"managementAgentId"`
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a OpsiHostInsight resource.
type OpsiHostInsightArgs struct {
	// (Updatable) Compartment Identifier of host
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Source of the host entity.
	EntitySource pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
	ManagementAgentId pulumi.StringInput
	// (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
	Status pulumi.StringPtrInput
}

func (OpsiHostInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*opsiHostInsightArgs)(nil)).Elem()
}

type OpsiHostInsightInput interface {
	pulumi.Input

	ToOpsiHostInsightOutput() OpsiHostInsightOutput
	ToOpsiHostInsightOutputWithContext(ctx context.Context) OpsiHostInsightOutput
}

func (*OpsiHostInsight) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsiHostInsight)(nil))
}

func (i *OpsiHostInsight) ToOpsiHostInsightOutput() OpsiHostInsightOutput {
	return i.ToOpsiHostInsightOutputWithContext(context.Background())
}

func (i *OpsiHostInsight) ToOpsiHostInsightOutputWithContext(ctx context.Context) OpsiHostInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiHostInsightOutput)
}

func (i *OpsiHostInsight) ToOpsiHostInsightPtrOutput() OpsiHostInsightPtrOutput {
	return i.ToOpsiHostInsightPtrOutputWithContext(context.Background())
}

func (i *OpsiHostInsight) ToOpsiHostInsightPtrOutputWithContext(ctx context.Context) OpsiHostInsightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiHostInsightPtrOutput)
}

type OpsiHostInsightPtrInput interface {
	pulumi.Input

	ToOpsiHostInsightPtrOutput() OpsiHostInsightPtrOutput
	ToOpsiHostInsightPtrOutputWithContext(ctx context.Context) OpsiHostInsightPtrOutput
}

type opsiHostInsightPtrType OpsiHostInsightArgs

func (*opsiHostInsightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpsiHostInsight)(nil))
}

func (i *opsiHostInsightPtrType) ToOpsiHostInsightPtrOutput() OpsiHostInsightPtrOutput {
	return i.ToOpsiHostInsightPtrOutputWithContext(context.Background())
}

func (i *opsiHostInsightPtrType) ToOpsiHostInsightPtrOutputWithContext(ctx context.Context) OpsiHostInsightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiHostInsightPtrOutput)
}

// OpsiHostInsightArrayInput is an input type that accepts OpsiHostInsightArray and OpsiHostInsightArrayOutput values.
// You can construct a concrete instance of `OpsiHostInsightArrayInput` via:
//
//          OpsiHostInsightArray{ OpsiHostInsightArgs{...} }
type OpsiHostInsightArrayInput interface {
	pulumi.Input

	ToOpsiHostInsightArrayOutput() OpsiHostInsightArrayOutput
	ToOpsiHostInsightArrayOutputWithContext(context.Context) OpsiHostInsightArrayOutput
}

type OpsiHostInsightArray []OpsiHostInsightInput

func (OpsiHostInsightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpsiHostInsight)(nil)).Elem()
}

func (i OpsiHostInsightArray) ToOpsiHostInsightArrayOutput() OpsiHostInsightArrayOutput {
	return i.ToOpsiHostInsightArrayOutputWithContext(context.Background())
}

func (i OpsiHostInsightArray) ToOpsiHostInsightArrayOutputWithContext(ctx context.Context) OpsiHostInsightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiHostInsightArrayOutput)
}

// OpsiHostInsightMapInput is an input type that accepts OpsiHostInsightMap and OpsiHostInsightMapOutput values.
// You can construct a concrete instance of `OpsiHostInsightMapInput` via:
//
//          OpsiHostInsightMap{ "key": OpsiHostInsightArgs{...} }
type OpsiHostInsightMapInput interface {
	pulumi.Input

	ToOpsiHostInsightMapOutput() OpsiHostInsightMapOutput
	ToOpsiHostInsightMapOutputWithContext(context.Context) OpsiHostInsightMapOutput
}

type OpsiHostInsightMap map[string]OpsiHostInsightInput

func (OpsiHostInsightMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpsiHostInsight)(nil)).Elem()
}

func (i OpsiHostInsightMap) ToOpsiHostInsightMapOutput() OpsiHostInsightMapOutput {
	return i.ToOpsiHostInsightMapOutputWithContext(context.Background())
}

func (i OpsiHostInsightMap) ToOpsiHostInsightMapOutputWithContext(ctx context.Context) OpsiHostInsightMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsiHostInsightMapOutput)
}

type OpsiHostInsightOutput struct {
	*pulumi.OutputState
}

func (OpsiHostInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsiHostInsight)(nil))
}

func (o OpsiHostInsightOutput) ToOpsiHostInsightOutput() OpsiHostInsightOutput {
	return o
}

func (o OpsiHostInsightOutput) ToOpsiHostInsightOutputWithContext(ctx context.Context) OpsiHostInsightOutput {
	return o
}

func (o OpsiHostInsightOutput) ToOpsiHostInsightPtrOutput() OpsiHostInsightPtrOutput {
	return o.ToOpsiHostInsightPtrOutputWithContext(context.Background())
}

func (o OpsiHostInsightOutput) ToOpsiHostInsightPtrOutputWithContext(ctx context.Context) OpsiHostInsightPtrOutput {
	return o.ApplyT(func(v OpsiHostInsight) *OpsiHostInsight {
		return &v
	}).(OpsiHostInsightPtrOutput)
}

type OpsiHostInsightPtrOutput struct {
	*pulumi.OutputState
}

func (OpsiHostInsightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpsiHostInsight)(nil))
}

func (o OpsiHostInsightPtrOutput) ToOpsiHostInsightPtrOutput() OpsiHostInsightPtrOutput {
	return o
}

func (o OpsiHostInsightPtrOutput) ToOpsiHostInsightPtrOutputWithContext(ctx context.Context) OpsiHostInsightPtrOutput {
	return o
}

type OpsiHostInsightArrayOutput struct{ *pulumi.OutputState }

func (OpsiHostInsightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpsiHostInsight)(nil))
}

func (o OpsiHostInsightArrayOutput) ToOpsiHostInsightArrayOutput() OpsiHostInsightArrayOutput {
	return o
}

func (o OpsiHostInsightArrayOutput) ToOpsiHostInsightArrayOutputWithContext(ctx context.Context) OpsiHostInsightArrayOutput {
	return o
}

func (o OpsiHostInsightArrayOutput) Index(i pulumi.IntInput) OpsiHostInsightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpsiHostInsight {
		return vs[0].([]OpsiHostInsight)[vs[1].(int)]
	}).(OpsiHostInsightOutput)
}

type OpsiHostInsightMapOutput struct{ *pulumi.OutputState }

func (OpsiHostInsightMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OpsiHostInsight)(nil))
}

func (o OpsiHostInsightMapOutput) ToOpsiHostInsightMapOutput() OpsiHostInsightMapOutput {
	return o
}

func (o OpsiHostInsightMapOutput) ToOpsiHostInsightMapOutputWithContext(ctx context.Context) OpsiHostInsightMapOutput {
	return o
}

func (o OpsiHostInsightMapOutput) MapIndex(k pulumi.StringInput) OpsiHostInsightOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OpsiHostInsight {
		return vs[0].(map[string]OpsiHostInsight)[vs[1].(string)]
	}).(OpsiHostInsightOutput)
}

func init() {
	pulumi.RegisterOutputType(OpsiHostInsightOutput{})
	pulumi.RegisterOutputType(OpsiHostInsightPtrOutput{})
	pulumi.RegisterOutputType(OpsiHostInsightArrayOutput{})
	pulumi.RegisterOutputType(OpsiHostInsightMapOutput{})
}
