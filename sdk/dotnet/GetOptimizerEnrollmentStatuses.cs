// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetOptimizerEnrollmentStatuses
    {
        /// <summary>
        /// This data source provides the list of Enrollment Statuses in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the Cloud Advisor enrollment statuses.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testEnrollmentStatuses = Output.Create(Oci.GetOptimizerEnrollmentStatuses.InvokeAsync(new Oci.GetOptimizerEnrollmentStatusesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             State = @var.Enrollment_status_state,
        ///             Status = @var.Enrollment_status_status,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOptimizerEnrollmentStatusesResult> InvokeAsync(GetOptimizerEnrollmentStatusesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOptimizerEnrollmentStatusesResult>("oci:index/getOptimizerEnrollmentStatuses:GetOptimizerEnrollmentStatuses", args ?? new GetOptimizerEnrollmentStatusesArgs(), options.WithVersion());
    }


    public sealed class GetOptimizerEnrollmentStatusesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetOptimizerEnrollmentStatusesFilterArgs>? _filters;
        public List<Inputs.GetOptimizerEnrollmentStatusesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOptimizerEnrollmentStatusesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter that returns results that match the Cloud Advisor enrollment status specified.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetOptimizerEnrollmentStatusesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOptimizerEnrollmentStatusesResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of enrollment_status_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOptimizerEnrollmentStatusesEnrollmentStatusCollectionResult> EnrollmentStatusCollections;
        public readonly ImmutableArray<Outputs.GetOptimizerEnrollmentStatusesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The enrollment status' current state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current Cloud Advisor enrollment status.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetOptimizerEnrollmentStatusesResult(
            string compartmentId,

            ImmutableArray<Outputs.GetOptimizerEnrollmentStatusesEnrollmentStatusCollectionResult> enrollmentStatusCollections,

            ImmutableArray<Outputs.GetOptimizerEnrollmentStatusesFilterResult> filters,

            string id,

            string? state,

            string? status)
        {
            CompartmentId = compartmentId;
            EnrollmentStatusCollections = enrollmentStatusCollections;
            Filters = filters;
            Id = id;
            State = state;
            Status = status;
        }
    }
}
