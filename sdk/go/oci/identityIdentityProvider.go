// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Identity Provider resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new identity provider in your tenancy. For more information, see
// [Identity Providers and Federation](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/federation.htm).
//
// You must specify your tenancy's OCID as the compartment ID in the request object.
// Remember that the tenancy is simply the root compartment. For information about
// OCIDs, see [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You must also specify a *name* for the `IdentityProvider`, which must be unique
// across all `IdentityProvider` objects in your tenancy and cannot be changed.
//
// You must also specify a *description* for the `IdentityProvider` (although
// it can be an empty string). It does not have to be unique, and you can change
// it anytime with
// [UpdateIdentityProvider](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/IdentityProvider/UpdateIdentityProvider).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityIdentityProvider(ctx, "testIdentityProvider", &oci.IdentityIdentityProviderArgs{
// 			CompartmentId: pulumi.Any(_var.Tenancy_ocid),
// 			Description:   pulumi.Any(_var.Identity_provider_description),
// 			Metadata:      pulumi.Any(_var.Identity_provider_metadata),
// 			MetadataUrl:   pulumi.Any(_var.Identity_provider_metadata_url),
// 			ProductType:   pulumi.Any(_var.Identity_provider_product_type),
// 			Protocol:      pulumi.Any(_var.Identity_provider_protocol),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformAttributes: pulumi.Any(_var.Identity_provider_freeform_attributes),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// IdentityProviders can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityIdentityProvider:IdentityIdentityProvider test_identity_provider "id"
// ```
type IdentityIdentityProvider struct {
	pulumi.CustomResourceState

	// The OCID of your tenancy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
	FreeformAttributes pulumi.MapOutput `pulumi:"freeformAttributes"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// (Updatable) The XML that contains the information required for federating.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// (Updatable) The URL for retrieving the identity provider's metadata, which contains information required for federating.
	MetadataUrl pulumi.StringOutput `pulumi:"metadataUrl"`
	// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
	ProductType pulumi.StringOutput `pulumi:"productType"`
	// (Updatable) The protocol used for federation.  Example: `SAML2`
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The URL to redirect federated users to for authentication with the identity provider.
	RedirectUrl pulumi.StringOutput `pulumi:"redirectUrl"`
	// The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
	SigningCertificate pulumi.StringOutput `pulumi:"signingCertificate"`
	// The current state.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewIdentityIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewIdentityIdentityProvider(ctx *pulumi.Context,
	name string, args *IdentityIdentityProviderArgs, opts ...pulumi.ResourceOption) (*IdentityIdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Metadata == nil {
		return nil, errors.New("invalid value for required argument 'Metadata'")
	}
	if args.MetadataUrl == nil {
		return nil, errors.New("invalid value for required argument 'MetadataUrl'")
	}
	if args.ProductType == nil {
		return nil, errors.New("invalid value for required argument 'ProductType'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	var resource IdentityIdentityProvider
	err := ctx.RegisterResource("oci:index/identityIdentityProvider:IdentityIdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityIdentityProvider gets an existing IdentityIdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityIdentityProviderState, opts ...pulumi.ResourceOption) (*IdentityIdentityProvider, error) {
	var resource IdentityIdentityProvider
	err := ctx.ReadResource("oci:index/identityIdentityProvider:IdentityIdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityIdentityProvider resources.
type identityIdentityProviderState struct {
	// The OCID of your tenancy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
	FreeformAttributes map[string]interface{} `pulumi:"freeformAttributes"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// (Updatable) The XML that contains the information required for federating.
	Metadata *string `pulumi:"metadata"`
	// (Updatable) The URL for retrieving the identity provider's metadata, which contains information required for federating.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
	ProductType *string `pulumi:"productType"`
	// (Updatable) The protocol used for federation.  Example: `SAML2`
	Protocol *string `pulumi:"protocol"`
	// The URL to redirect federated users to for authentication with the identity provider.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
	SigningCertificate *string `pulumi:"signingCertificate"`
	// The current state.
	State *string `pulumi:"state"`
	// Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type IdentityIdentityProviderState struct {
	// The OCID of your tenancy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
	FreeformAttributes pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// (Updatable) The XML that contains the information required for federating.
	Metadata pulumi.StringPtrInput
	// (Updatable) The URL for retrieving the identity provider's metadata, which contains information required for federating.
	MetadataUrl pulumi.StringPtrInput
	// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
	ProductType pulumi.StringPtrInput
	// (Updatable) The protocol used for federation.  Example: `SAML2`
	Protocol pulumi.StringPtrInput
	// The URL to redirect federated users to for authentication with the identity provider.
	RedirectUrl pulumi.StringPtrInput
	// The identity provider's signing certificate used by the IAM Service to validate the SAML2 token.
	SigningCertificate pulumi.StringPtrInput
	// The current state.
	State pulumi.StringPtrInput
	// Date and time the `IdentityProvider` was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (IdentityIdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityIdentityProviderState)(nil)).Elem()
}

type identityIdentityProviderArgs struct {
	// The OCID of your tenancy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
	FreeformAttributes map[string]interface{} `pulumi:"freeformAttributes"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The XML that contains the information required for federating.
	Metadata string `pulumi:"metadata"`
	// (Updatable) The URL for retrieving the identity provider's metadata, which contains information required for federating.
	MetadataUrl string `pulumi:"metadataUrl"`
	// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
	ProductType string `pulumi:"productType"`
	// (Updatable) The protocol used for federation.  Example: `SAML2`
	Protocol string `pulumi:"protocol"`
}

// The set of arguments for constructing a IdentityIdentityProvider resource.
type IdentityIdentityProviderArgs struct {
	// The OCID of your tenancy.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Extra name value pairs associated with this identity provider. Example: `{"clientId": "appSf3kdjf3"}`
	FreeformAttributes pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The XML that contains the information required for federating.
	Metadata pulumi.StringInput
	// (Updatable) The URL for retrieving the identity provider's metadata, which contains information required for federating.
	MetadataUrl pulumi.StringInput
	// The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
	ProductType pulumi.StringInput
	// (Updatable) The protocol used for federation.  Example: `SAML2`
	Protocol pulumi.StringInput
}

func (IdentityIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityIdentityProviderArgs)(nil)).Elem()
}

type IdentityIdentityProviderInput interface {
	pulumi.Input

	ToIdentityIdentityProviderOutput() IdentityIdentityProviderOutput
	ToIdentityIdentityProviderOutputWithContext(ctx context.Context) IdentityIdentityProviderOutput
}

func (*IdentityIdentityProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityIdentityProvider)(nil))
}

func (i *IdentityIdentityProvider) ToIdentityIdentityProviderOutput() IdentityIdentityProviderOutput {
	return i.ToIdentityIdentityProviderOutputWithContext(context.Background())
}

func (i *IdentityIdentityProvider) ToIdentityIdentityProviderOutputWithContext(ctx context.Context) IdentityIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdentityProviderOutput)
}

func (i *IdentityIdentityProvider) ToIdentityIdentityProviderPtrOutput() IdentityIdentityProviderPtrOutput {
	return i.ToIdentityIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *IdentityIdentityProvider) ToIdentityIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdentityProviderPtrOutput)
}

type IdentityIdentityProviderPtrInput interface {
	pulumi.Input

	ToIdentityIdentityProviderPtrOutput() IdentityIdentityProviderPtrOutput
	ToIdentityIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityIdentityProviderPtrOutput
}

type identityIdentityProviderPtrType IdentityIdentityProviderArgs

func (*identityIdentityProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityIdentityProvider)(nil))
}

func (i *identityIdentityProviderPtrType) ToIdentityIdentityProviderPtrOutput() IdentityIdentityProviderPtrOutput {
	return i.ToIdentityIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *identityIdentityProviderPtrType) ToIdentityIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdentityProviderPtrOutput)
}

// IdentityIdentityProviderArrayInput is an input type that accepts IdentityIdentityProviderArray and IdentityIdentityProviderArrayOutput values.
// You can construct a concrete instance of `IdentityIdentityProviderArrayInput` via:
//
//          IdentityIdentityProviderArray{ IdentityIdentityProviderArgs{...} }
type IdentityIdentityProviderArrayInput interface {
	pulumi.Input

	ToIdentityIdentityProviderArrayOutput() IdentityIdentityProviderArrayOutput
	ToIdentityIdentityProviderArrayOutputWithContext(context.Context) IdentityIdentityProviderArrayOutput
}

type IdentityIdentityProviderArray []IdentityIdentityProviderInput

func (IdentityIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityIdentityProvider)(nil)).Elem()
}

func (i IdentityIdentityProviderArray) ToIdentityIdentityProviderArrayOutput() IdentityIdentityProviderArrayOutput {
	return i.ToIdentityIdentityProviderArrayOutputWithContext(context.Background())
}

func (i IdentityIdentityProviderArray) ToIdentityIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdentityProviderArrayOutput)
}

// IdentityIdentityProviderMapInput is an input type that accepts IdentityIdentityProviderMap and IdentityIdentityProviderMapOutput values.
// You can construct a concrete instance of `IdentityIdentityProviderMapInput` via:
//
//          IdentityIdentityProviderMap{ "key": IdentityIdentityProviderArgs{...} }
type IdentityIdentityProviderMapInput interface {
	pulumi.Input

	ToIdentityIdentityProviderMapOutput() IdentityIdentityProviderMapOutput
	ToIdentityIdentityProviderMapOutputWithContext(context.Context) IdentityIdentityProviderMapOutput
}

type IdentityIdentityProviderMap map[string]IdentityIdentityProviderInput

func (IdentityIdentityProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityIdentityProvider)(nil)).Elem()
}

func (i IdentityIdentityProviderMap) ToIdentityIdentityProviderMapOutput() IdentityIdentityProviderMapOutput {
	return i.ToIdentityIdentityProviderMapOutputWithContext(context.Background())
}

func (i IdentityIdentityProviderMap) ToIdentityIdentityProviderMapOutputWithContext(ctx context.Context) IdentityIdentityProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdentityProviderMapOutput)
}

type IdentityIdentityProviderOutput struct {
	*pulumi.OutputState
}

func (IdentityIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityIdentityProvider)(nil))
}

func (o IdentityIdentityProviderOutput) ToIdentityIdentityProviderOutput() IdentityIdentityProviderOutput {
	return o
}

func (o IdentityIdentityProviderOutput) ToIdentityIdentityProviderOutputWithContext(ctx context.Context) IdentityIdentityProviderOutput {
	return o
}

func (o IdentityIdentityProviderOutput) ToIdentityIdentityProviderPtrOutput() IdentityIdentityProviderPtrOutput {
	return o.ToIdentityIdentityProviderPtrOutputWithContext(context.Background())
}

func (o IdentityIdentityProviderOutput) ToIdentityIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityIdentityProviderPtrOutput {
	return o.ApplyT(func(v IdentityIdentityProvider) *IdentityIdentityProvider {
		return &v
	}).(IdentityIdentityProviderPtrOutput)
}

type IdentityIdentityProviderPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityIdentityProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityIdentityProvider)(nil))
}

func (o IdentityIdentityProviderPtrOutput) ToIdentityIdentityProviderPtrOutput() IdentityIdentityProviderPtrOutput {
	return o
}

func (o IdentityIdentityProviderPtrOutput) ToIdentityIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityIdentityProviderPtrOutput {
	return o
}

type IdentityIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (IdentityIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityIdentityProvider)(nil))
}

func (o IdentityIdentityProviderArrayOutput) ToIdentityIdentityProviderArrayOutput() IdentityIdentityProviderArrayOutput {
	return o
}

func (o IdentityIdentityProviderArrayOutput) ToIdentityIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityIdentityProviderArrayOutput {
	return o
}

func (o IdentityIdentityProviderArrayOutput) Index(i pulumi.IntInput) IdentityIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityIdentityProvider {
		return vs[0].([]IdentityIdentityProvider)[vs[1].(int)]
	}).(IdentityIdentityProviderOutput)
}

type IdentityIdentityProviderMapOutput struct{ *pulumi.OutputState }

func (IdentityIdentityProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityIdentityProvider)(nil))
}

func (o IdentityIdentityProviderMapOutput) ToIdentityIdentityProviderMapOutput() IdentityIdentityProviderMapOutput {
	return o
}

func (o IdentityIdentityProviderMapOutput) ToIdentityIdentityProviderMapOutputWithContext(ctx context.Context) IdentityIdentityProviderMapOutput {
	return o
}

func (o IdentityIdentityProviderMapOutput) MapIndex(k pulumi.StringInput) IdentityIdentityProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityIdentityProvider {
		return vs[0].(map[string]IdentityIdentityProvider)[vs[1].(string)]
	}).(IdentityIdentityProviderOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityIdentityProviderPtrOutput{})
	pulumi.RegisterOutputType(IdentityIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(IdentityIdentityProviderMapOutput{})
}
