// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    [OciResourceType("oci:index/coreVirtualNetwork:CoreVirtualNetwork")]
    public partial class CoreVirtualNetwork : Pulumi.CustomResource
    {
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        [Output("cidrBlocks")]
        public Output<ImmutableArray<string>> CidrBlocks { get; private set; } = null!;

        [Output("compartmentId")]
        public Output<string> CompartmentId { get; private set; } = null!;

        [Output("defaultDhcpOptionsId")]
        public Output<string> DefaultDhcpOptionsId { get; private set; } = null!;

        [Output("defaultRouteTableId")]
        public Output<string> DefaultRouteTableId { get; private set; } = null!;

        [Output("defaultSecurityListId")]
        public Output<string> DefaultSecurityListId { get; private set; } = null!;

        [Output("definedTags")]
        public Output<ImmutableDictionary<string, object>> DefinedTags { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("dnsLabel")]
        public Output<string> DnsLabel { get; private set; } = null!;

        [Output("freeformTags")]
        public Output<ImmutableDictionary<string, object>> FreeformTags { get; private set; } = null!;

        [Output("ipv6cidrBlocks")]
        public Output<ImmutableArray<string>> Ipv6cidrBlocks { get; private set; } = null!;

        [Output("isIpv6enabled")]
        public Output<bool> IsIpv6enabled { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("timeCreated")]
        public Output<string> TimeCreated { get; private set; } = null!;

        [Output("vcnDomainName")]
        public Output<string> VcnDomainName { get; private set; } = null!;


        /// <summary>
        /// Create a CoreVirtualNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CoreVirtualNetwork(string name, CoreVirtualNetworkArgs args, CustomResourceOptions? options = null)
            : base("oci:index/coreVirtualNetwork:CoreVirtualNetwork", name, args ?? new CoreVirtualNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CoreVirtualNetwork(string name, Input<string> id, CoreVirtualNetworkState? state = null, CustomResourceOptions? options = null)
            : base("oci:index/coreVirtualNetwork:CoreVirtualNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CoreVirtualNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CoreVirtualNetwork Get(string name, Input<string> id, CoreVirtualNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new CoreVirtualNetwork(name, id, state, options);
        }
    }

    public sealed class CoreVirtualNetworkArgs : Pulumi.ResourceArgs
    {
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        [Input("cidrBlocks")]
        private InputList<string>? _cidrBlocks;
        public InputList<string> CidrBlocks
        {
            get => _cidrBlocks ?? (_cidrBlocks = new InputList<string>());
            set => _cidrBlocks = value;
        }

        [Input("compartmentId", required: true)]
        public Input<string> CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private InputMap<object>? _definedTags;
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("dnsLabel")]
        public Input<string>? DnsLabel { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("isIpv6enabled")]
        public Input<bool>? IsIpv6enabled { get; set; }

        public CoreVirtualNetworkArgs()
        {
        }
    }

    public sealed class CoreVirtualNetworkState : Pulumi.ResourceArgs
    {
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        [Input("cidrBlocks")]
        private InputList<string>? _cidrBlocks;
        public InputList<string> CidrBlocks
        {
            get => _cidrBlocks ?? (_cidrBlocks = new InputList<string>());
            set => _cidrBlocks = value;
        }

        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        [Input("defaultDhcpOptionsId")]
        public Input<string>? DefaultDhcpOptionsId { get; set; }

        [Input("defaultRouteTableId")]
        public Input<string>? DefaultRouteTableId { get; set; }

        [Input("defaultSecurityListId")]
        public Input<string>? DefaultSecurityListId { get; set; }

        [Input("definedTags")]
        private InputMap<object>? _definedTags;
        public InputMap<object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new InputMap<object>());
            set => _definedTags = value;
        }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("dnsLabel")]
        public Input<string>? DnsLabel { get; set; }

        [Input("freeformTags")]
        private InputMap<object>? _freeformTags;
        public InputMap<object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new InputMap<object>());
            set => _freeformTags = value;
        }

        [Input("ipv6cidrBlocks")]
        private InputList<string>? _ipv6cidrBlocks;
        public InputList<string> Ipv6cidrBlocks
        {
            get => _ipv6cidrBlocks ?? (_ipv6cidrBlocks = new InputList<string>());
            set => _ipv6cidrBlocks = value;
        }

        [Input("isIpv6enabled")]
        public Input<bool>? IsIpv6enabled { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("timeCreated")]
        public Input<string>? TimeCreated { get; set; }

        [Input("vcnDomainName")]
        public Input<string>? VcnDomainName { get; set; }

        public CoreVirtualNetworkState()
        {
        }
    }
}
