// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreBootVolumeAttachments
    {
        public static Task<GetCoreBootVolumeAttachmentsResult> InvokeAsync(GetCoreBootVolumeAttachmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreBootVolumeAttachmentsResult>("oci:index/getCoreBootVolumeAttachments:GetCoreBootVolumeAttachments", args ?? new GetCoreBootVolumeAttachmentsArgs(), options.WithVersion());
    }


    public sealed class GetCoreBootVolumeAttachmentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain", required: true)]
        public string AvailabilityDomain { get; set; } = null!;

        /// <summary>
        /// The OCID of the boot volume.
        /// </summary>
        [Input("bootVolumeId")]
        public string? BootVolumeId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreBootVolumeAttachmentsFilterArgs>? _filters;
        public List<Inputs.GetCoreBootVolumeAttachmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreBootVolumeAttachmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        public GetCoreBootVolumeAttachmentsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreBootVolumeAttachmentsResult
    {
        /// <summary>
        /// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// The list of boot_volume_attachments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreBootVolumeAttachmentsBootVolumeAttachmentResult> BootVolumeAttachments;
        /// <summary>
        /// The OCID of the boot volume.
        /// </summary>
        public readonly string? BootVolumeId;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCoreBootVolumeAttachmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the instance the boot volume is attached to.
        /// </summary>
        public readonly string? InstanceId;

        [OutputConstructor]
        private GetCoreBootVolumeAttachmentsResult(
            string availabilityDomain,

            ImmutableArray<Outputs.GetCoreBootVolumeAttachmentsBootVolumeAttachmentResult> bootVolumeAttachments,

            string? bootVolumeId,

            string compartmentId,

            ImmutableArray<Outputs.GetCoreBootVolumeAttachmentsFilterResult> filters,

            string id,

            string? instanceId)
        {
            AvailabilityDomain = availabilityDomain;
            BootVolumeAttachments = bootVolumeAttachments;
            BootVolumeId = bootVolumeId;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            InstanceId = instanceId;
        }
    }
}
