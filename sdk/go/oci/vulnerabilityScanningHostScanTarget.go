// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Creates a new HostScanTarget. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewVulnerabilityScanningHostScanTarget(ctx, "testHostScanTarget", &oci.VulnerabilityScanningHostScanTargetArgs{
// 			CompartmentId:       pulumi.Any(_var.Compartment_id),
// 			HostScanRecipeId:    pulumi.Any(oci_vulnerability_scanning_host_scan_recipe.Test_host_scan_recipe.Id),
// 			TargetCompartmentId: pulumi.Any(oci_identity_compartment.Test_compartment.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Host_scan_target_description),
// 			DisplayName: pulumi.Any(_var.Host_scan_target_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			InstanceIds: pulumi.Any(_var.Host_scan_target_instance_ids),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// HostScanTargets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/vulnerabilityScanningHostScanTarget:VulnerabilityScanningHostScanTarget test_host_scan_target "id"
// ```
type VulnerabilityScanningHostScanTarget struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringOutput `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayOutput `pulumi:"instanceIds"`
	// The current state of the config.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId pulumi.StringOutput `pulumi:"targetCompartmentId"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewVulnerabilityScanningHostScanTarget registers a new resource with the given unique name, arguments, and options.
func NewVulnerabilityScanningHostScanTarget(ctx *pulumi.Context,
	name string, args *VulnerabilityScanningHostScanTargetArgs, opts ...pulumi.ResourceOption) (*VulnerabilityScanningHostScanTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.HostScanRecipeId == nil {
		return nil, errors.New("invalid value for required argument 'HostScanRecipeId'")
	}
	if args.TargetCompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'TargetCompartmentId'")
	}
	var resource VulnerabilityScanningHostScanTarget
	err := ctx.RegisterResource("oci:index/vulnerabilityScanningHostScanTarget:VulnerabilityScanningHostScanTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVulnerabilityScanningHostScanTarget gets an existing VulnerabilityScanningHostScanTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVulnerabilityScanningHostScanTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VulnerabilityScanningHostScanTargetState, opts ...pulumi.ResourceOption) (*VulnerabilityScanningHostScanTarget, error) {
	var resource VulnerabilityScanningHostScanTarget
	err := ctx.ReadResource("oci:index/vulnerabilityScanningHostScanTarget:VulnerabilityScanningHostScanTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VulnerabilityScanningHostScanTarget resources.
type vulnerabilityScanningHostScanTargetState struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description *string `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId *string `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds []string `pulumi:"instanceIds"`
	// The current state of the config.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated *string `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type VulnerabilityScanningHostScanTargetState struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Target description.
	Description pulumi.StringPtrInput
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringPtrInput
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayInput
	// The current state of the config.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId pulumi.StringPtrInput
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated pulumi.StringPtrInput
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated pulumi.StringPtrInput
}

func (VulnerabilityScanningHostScanTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityScanningHostScanTargetState)(nil)).Elem()
}

type vulnerabilityScanningHostScanTargetArgs struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description *string `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId string `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds []string `pulumi:"instanceIds"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId string `pulumi:"targetCompartmentId"`
}

// The set of arguments for constructing a VulnerabilityScanningHostScanTarget resource.
type VulnerabilityScanningHostScanTargetArgs struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Target description.
	Description pulumi.StringPtrInput
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringInput
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayInput
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId pulumi.StringInput
}

func (VulnerabilityScanningHostScanTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityScanningHostScanTargetArgs)(nil)).Elem()
}

type VulnerabilityScanningHostScanTargetInput interface {
	pulumi.Input

	ToVulnerabilityScanningHostScanTargetOutput() VulnerabilityScanningHostScanTargetOutput
	ToVulnerabilityScanningHostScanTargetOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetOutput
}

func (*VulnerabilityScanningHostScanTarget) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityScanningHostScanTarget)(nil))
}

func (i *VulnerabilityScanningHostScanTarget) ToVulnerabilityScanningHostScanTargetOutput() VulnerabilityScanningHostScanTargetOutput {
	return i.ToVulnerabilityScanningHostScanTargetOutputWithContext(context.Background())
}

func (i *VulnerabilityScanningHostScanTarget) ToVulnerabilityScanningHostScanTargetOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityScanningHostScanTargetOutput)
}

func (i *VulnerabilityScanningHostScanTarget) ToVulnerabilityScanningHostScanTargetPtrOutput() VulnerabilityScanningHostScanTargetPtrOutput {
	return i.ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(context.Background())
}

func (i *VulnerabilityScanningHostScanTarget) ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityScanningHostScanTargetPtrOutput)
}

type VulnerabilityScanningHostScanTargetPtrInput interface {
	pulumi.Input

	ToVulnerabilityScanningHostScanTargetPtrOutput() VulnerabilityScanningHostScanTargetPtrOutput
	ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetPtrOutput
}

type vulnerabilityScanningHostScanTargetPtrType VulnerabilityScanningHostScanTargetArgs

func (*vulnerabilityScanningHostScanTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityScanningHostScanTarget)(nil))
}

func (i *vulnerabilityScanningHostScanTargetPtrType) ToVulnerabilityScanningHostScanTargetPtrOutput() VulnerabilityScanningHostScanTargetPtrOutput {
	return i.ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityScanningHostScanTargetPtrType) ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityScanningHostScanTargetPtrOutput)
}

// VulnerabilityScanningHostScanTargetArrayInput is an input type that accepts VulnerabilityScanningHostScanTargetArray and VulnerabilityScanningHostScanTargetArrayOutput values.
// You can construct a concrete instance of `VulnerabilityScanningHostScanTargetArrayInput` via:
//
//          VulnerabilityScanningHostScanTargetArray{ VulnerabilityScanningHostScanTargetArgs{...} }
type VulnerabilityScanningHostScanTargetArrayInput interface {
	pulumi.Input

	ToVulnerabilityScanningHostScanTargetArrayOutput() VulnerabilityScanningHostScanTargetArrayOutput
	ToVulnerabilityScanningHostScanTargetArrayOutputWithContext(context.Context) VulnerabilityScanningHostScanTargetArrayOutput
}

type VulnerabilityScanningHostScanTargetArray []VulnerabilityScanningHostScanTargetInput

func (VulnerabilityScanningHostScanTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityScanningHostScanTarget)(nil)).Elem()
}

func (i VulnerabilityScanningHostScanTargetArray) ToVulnerabilityScanningHostScanTargetArrayOutput() VulnerabilityScanningHostScanTargetArrayOutput {
	return i.ToVulnerabilityScanningHostScanTargetArrayOutputWithContext(context.Background())
}

func (i VulnerabilityScanningHostScanTargetArray) ToVulnerabilityScanningHostScanTargetArrayOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityScanningHostScanTargetArrayOutput)
}

// VulnerabilityScanningHostScanTargetMapInput is an input type that accepts VulnerabilityScanningHostScanTargetMap and VulnerabilityScanningHostScanTargetMapOutput values.
// You can construct a concrete instance of `VulnerabilityScanningHostScanTargetMapInput` via:
//
//          VulnerabilityScanningHostScanTargetMap{ "key": VulnerabilityScanningHostScanTargetArgs{...} }
type VulnerabilityScanningHostScanTargetMapInput interface {
	pulumi.Input

	ToVulnerabilityScanningHostScanTargetMapOutput() VulnerabilityScanningHostScanTargetMapOutput
	ToVulnerabilityScanningHostScanTargetMapOutputWithContext(context.Context) VulnerabilityScanningHostScanTargetMapOutput
}

type VulnerabilityScanningHostScanTargetMap map[string]VulnerabilityScanningHostScanTargetInput

func (VulnerabilityScanningHostScanTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityScanningHostScanTarget)(nil)).Elem()
}

func (i VulnerabilityScanningHostScanTargetMap) ToVulnerabilityScanningHostScanTargetMapOutput() VulnerabilityScanningHostScanTargetMapOutput {
	return i.ToVulnerabilityScanningHostScanTargetMapOutputWithContext(context.Background())
}

func (i VulnerabilityScanningHostScanTargetMap) ToVulnerabilityScanningHostScanTargetMapOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityScanningHostScanTargetMapOutput)
}

type VulnerabilityScanningHostScanTargetOutput struct {
	*pulumi.OutputState
}

func (VulnerabilityScanningHostScanTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityScanningHostScanTarget)(nil))
}

func (o VulnerabilityScanningHostScanTargetOutput) ToVulnerabilityScanningHostScanTargetOutput() VulnerabilityScanningHostScanTargetOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetOutput) ToVulnerabilityScanningHostScanTargetOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetOutput) ToVulnerabilityScanningHostScanTargetPtrOutput() VulnerabilityScanningHostScanTargetPtrOutput {
	return o.ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(context.Background())
}

func (o VulnerabilityScanningHostScanTargetOutput) ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetPtrOutput {
	return o.ApplyT(func(v VulnerabilityScanningHostScanTarget) *VulnerabilityScanningHostScanTarget {
		return &v
	}).(VulnerabilityScanningHostScanTargetPtrOutput)
}

type VulnerabilityScanningHostScanTargetPtrOutput struct {
	*pulumi.OutputState
}

func (VulnerabilityScanningHostScanTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityScanningHostScanTarget)(nil))
}

func (o VulnerabilityScanningHostScanTargetPtrOutput) ToVulnerabilityScanningHostScanTargetPtrOutput() VulnerabilityScanningHostScanTargetPtrOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetPtrOutput) ToVulnerabilityScanningHostScanTargetPtrOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetPtrOutput {
	return o
}

type VulnerabilityScanningHostScanTargetArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityScanningHostScanTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VulnerabilityScanningHostScanTarget)(nil))
}

func (o VulnerabilityScanningHostScanTargetArrayOutput) ToVulnerabilityScanningHostScanTargetArrayOutput() VulnerabilityScanningHostScanTargetArrayOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetArrayOutput) ToVulnerabilityScanningHostScanTargetArrayOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetArrayOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetArrayOutput) Index(i pulumi.IntInput) VulnerabilityScanningHostScanTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VulnerabilityScanningHostScanTarget {
		return vs[0].([]VulnerabilityScanningHostScanTarget)[vs[1].(int)]
	}).(VulnerabilityScanningHostScanTargetOutput)
}

type VulnerabilityScanningHostScanTargetMapOutput struct{ *pulumi.OutputState }

func (VulnerabilityScanningHostScanTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]VulnerabilityScanningHostScanTarget)(nil))
}

func (o VulnerabilityScanningHostScanTargetMapOutput) ToVulnerabilityScanningHostScanTargetMapOutput() VulnerabilityScanningHostScanTargetMapOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetMapOutput) ToVulnerabilityScanningHostScanTargetMapOutputWithContext(ctx context.Context) VulnerabilityScanningHostScanTargetMapOutput {
	return o
}

func (o VulnerabilityScanningHostScanTargetMapOutput) MapIndex(k pulumi.StringInput) VulnerabilityScanningHostScanTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) VulnerabilityScanningHostScanTarget {
		return vs[0].(map[string]VulnerabilityScanningHostScanTarget)[vs[1].(string)]
	}).(VulnerabilityScanningHostScanTargetOutput)
}

func init() {
	pulumi.RegisterOutputType(VulnerabilityScanningHostScanTargetOutput{})
	pulumi.RegisterOutputType(VulnerabilityScanningHostScanTargetPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityScanningHostScanTargetArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityScanningHostScanTargetMapOutput{})
}
