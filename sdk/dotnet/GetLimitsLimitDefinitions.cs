// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetLimitsLimitDefinitions
    {
        /// <summary>
        /// This data source provides the list of Limit Definitions in Oracle Cloud Infrastructure Limits service.
        /// 
        /// Includes a list of resource limits that are currently supported.
        /// If the 'areQuotasSupported' property is true, you can create quota policies on top of this limit at the
        /// compartment level.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testLimitDefinitions = Output.Create(Oci.GetLimitsLimitDefinitions.InvokeAsync(new Oci.GetLimitsLimitDefinitionsArgs
        ///         {
        ///             CompartmentId = @var.Tenancy_ocid,
        ///             Name = @var.Limit_definition_name,
        ///             ServiceName = oci_limits_service.Test_service.Name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLimitsLimitDefinitionsResult> InvokeAsync(GetLimitsLimitDefinitionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLimitsLimitDefinitionsResult>("oci:index/getLimitsLimitDefinitions:GetLimitsLimitDefinitions", args ?? new GetLimitsLimitDefinitionsArgs(), options.WithVersion());
    }


    public sealed class GetLimitsLimitDefinitionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetLimitsLimitDefinitionsFilterArgs>? _filters;
        public List<Inputs.GetLimitsLimitDefinitionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLimitsLimitDefinitionsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional field, filter for a specific resource limit.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The target service name.
        /// </summary>
        [Input("serviceName")]
        public string? ServiceName { get; set; }

        public GetLimitsLimitDefinitionsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLimitsLimitDefinitionsResult
    {
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetLimitsLimitDefinitionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of limit_definitions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLimitsLimitDefinitionsLimitDefinitionResult> LimitDefinitions;
        /// <summary>
        /// The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The service name of the limit.
        /// </summary>
        public readonly string? ServiceName;

        [OutputConstructor]
        private GetLimitsLimitDefinitionsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetLimitsLimitDefinitionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetLimitsLimitDefinitionsLimitDefinitionResult> limitDefinitions,

            string? name,

            string? serviceName)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            LimitDefinitions = limitDefinitions;
            Name = name;
            ServiceName = serviceName;
        }
    }
}
