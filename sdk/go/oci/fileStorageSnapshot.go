// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Snapshot resource in Oracle Cloud Infrastructure File Storage service.
//
// Creates a new snapshot of the specified file system. You
// can access the snapshot at `.snapshot/<name>`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewFileStorageSnapshot(ctx, "testSnapshot", &oci.FileStorageSnapshotArgs{
// 			FileSystemId: pulumi.Any(oci_file_storage_file_system.Test_file_system.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Snapshots can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/fileStorageSnapshot:FileStorageSnapshot test_snapshot "id"
// ```
type FileStorageSnapshot struct {
	pulumi.CustomResourceState

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system to take a snapshot of.
	FileSystemId pulumi.StringOutput `pulumi:"fileSystemId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	IsCloneSource pulumi.BoolOutput `pulumi:"isCloneSource"`
	// Additional information about the current 'lifecycleState'.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Name of the snapshot. This value is immutable. It must also be unique with respect to all other non-DELETED snapshots on the associated file system.
	Name pulumi.StringOutput `pulumi:"name"`
	// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent's `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	ProvenanceId pulumi.StringOutput `pulumi:"provenanceId"`
	// The current state of the snapshot.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewFileStorageSnapshot registers a new resource with the given unique name, arguments, and options.
func NewFileStorageSnapshot(ctx *pulumi.Context,
	name string, args *FileStorageSnapshotArgs, opts ...pulumi.ResourceOption) (*FileStorageSnapshot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	var resource FileStorageSnapshot
	err := ctx.RegisterResource("oci:index/fileStorageSnapshot:FileStorageSnapshot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileStorageSnapshot gets an existing FileStorageSnapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileStorageSnapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileStorageSnapshotState, opts ...pulumi.ResourceOption) (*FileStorageSnapshot, error) {
	var resource FileStorageSnapshot
	err := ctx.ReadResource("oci:index/fileStorageSnapshot:FileStorageSnapshot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileStorageSnapshot resources.
type fileStorageSnapshotState struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system to take a snapshot of.
	FileSystemId *string `pulumi:"fileSystemId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	IsCloneSource *bool `pulumi:"isCloneSource"`
	// Additional information about the current 'lifecycleState'.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Name of the snapshot. This value is immutable. It must also be unique with respect to all other non-DELETED snapshots on the associated file system.
	Name *string `pulumi:"name"`
	// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent's `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	ProvenanceId *string `pulumi:"provenanceId"`
	// The current state of the snapshot.
	State *string `pulumi:"state"`
	// The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type FileStorageSnapshotState struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system to take a snapshot of.
	FileSystemId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	IsCloneSource pulumi.BoolPtrInput
	// Additional information about the current 'lifecycleState'.
	LifecycleDetails pulumi.StringPtrInput
	// Name of the snapshot. This value is immutable. It must also be unique with respect to all other non-DELETED snapshots on the associated file system.
	Name pulumi.StringPtrInput
	// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent's `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
	ProvenanceId pulumi.StringPtrInput
	// The current state of the snapshot.
	State pulumi.StringPtrInput
	// The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (FileStorageSnapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileStorageSnapshotState)(nil)).Elem()
}

type fileStorageSnapshotArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system to take a snapshot of.
	FileSystemId string `pulumi:"fileSystemId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Name of the snapshot. This value is immutable. It must also be unique with respect to all other non-DELETED snapshots on the associated file system.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a FileStorageSnapshot resource.
type FileStorageSnapshotArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system to take a snapshot of.
	FileSystemId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Name of the snapshot. This value is immutable. It must also be unique with respect to all other non-DELETED snapshots on the associated file system.
	Name pulumi.StringPtrInput
}

func (FileStorageSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileStorageSnapshotArgs)(nil)).Elem()
}

type FileStorageSnapshotInput interface {
	pulumi.Input

	ToFileStorageSnapshotOutput() FileStorageSnapshotOutput
	ToFileStorageSnapshotOutputWithContext(ctx context.Context) FileStorageSnapshotOutput
}

func (*FileStorageSnapshot) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageSnapshot)(nil))
}

func (i *FileStorageSnapshot) ToFileStorageSnapshotOutput() FileStorageSnapshotOutput {
	return i.ToFileStorageSnapshotOutputWithContext(context.Background())
}

func (i *FileStorageSnapshot) ToFileStorageSnapshotOutputWithContext(ctx context.Context) FileStorageSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageSnapshotOutput)
}

func (i *FileStorageSnapshot) ToFileStorageSnapshotPtrOutput() FileStorageSnapshotPtrOutput {
	return i.ToFileStorageSnapshotPtrOutputWithContext(context.Background())
}

func (i *FileStorageSnapshot) ToFileStorageSnapshotPtrOutputWithContext(ctx context.Context) FileStorageSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageSnapshotPtrOutput)
}

type FileStorageSnapshotPtrInput interface {
	pulumi.Input

	ToFileStorageSnapshotPtrOutput() FileStorageSnapshotPtrOutput
	ToFileStorageSnapshotPtrOutputWithContext(ctx context.Context) FileStorageSnapshotPtrOutput
}

type fileStorageSnapshotPtrType FileStorageSnapshotArgs

func (*fileStorageSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageSnapshot)(nil))
}

func (i *fileStorageSnapshotPtrType) ToFileStorageSnapshotPtrOutput() FileStorageSnapshotPtrOutput {
	return i.ToFileStorageSnapshotPtrOutputWithContext(context.Background())
}

func (i *fileStorageSnapshotPtrType) ToFileStorageSnapshotPtrOutputWithContext(ctx context.Context) FileStorageSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageSnapshotPtrOutput)
}

// FileStorageSnapshotArrayInput is an input type that accepts FileStorageSnapshotArray and FileStorageSnapshotArrayOutput values.
// You can construct a concrete instance of `FileStorageSnapshotArrayInput` via:
//
//          FileStorageSnapshotArray{ FileStorageSnapshotArgs{...} }
type FileStorageSnapshotArrayInput interface {
	pulumi.Input

	ToFileStorageSnapshotArrayOutput() FileStorageSnapshotArrayOutput
	ToFileStorageSnapshotArrayOutputWithContext(context.Context) FileStorageSnapshotArrayOutput
}

type FileStorageSnapshotArray []FileStorageSnapshotInput

func (FileStorageSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileStorageSnapshot)(nil)).Elem()
}

func (i FileStorageSnapshotArray) ToFileStorageSnapshotArrayOutput() FileStorageSnapshotArrayOutput {
	return i.ToFileStorageSnapshotArrayOutputWithContext(context.Background())
}

func (i FileStorageSnapshotArray) ToFileStorageSnapshotArrayOutputWithContext(ctx context.Context) FileStorageSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageSnapshotArrayOutput)
}

// FileStorageSnapshotMapInput is an input type that accepts FileStorageSnapshotMap and FileStorageSnapshotMapOutput values.
// You can construct a concrete instance of `FileStorageSnapshotMapInput` via:
//
//          FileStorageSnapshotMap{ "key": FileStorageSnapshotArgs{...} }
type FileStorageSnapshotMapInput interface {
	pulumi.Input

	ToFileStorageSnapshotMapOutput() FileStorageSnapshotMapOutput
	ToFileStorageSnapshotMapOutputWithContext(context.Context) FileStorageSnapshotMapOutput
}

type FileStorageSnapshotMap map[string]FileStorageSnapshotInput

func (FileStorageSnapshotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileStorageSnapshot)(nil)).Elem()
}

func (i FileStorageSnapshotMap) ToFileStorageSnapshotMapOutput() FileStorageSnapshotMapOutput {
	return i.ToFileStorageSnapshotMapOutputWithContext(context.Background())
}

func (i FileStorageSnapshotMap) ToFileStorageSnapshotMapOutputWithContext(ctx context.Context) FileStorageSnapshotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileStorageSnapshotMapOutput)
}

type FileStorageSnapshotOutput struct {
	*pulumi.OutputState
}

func (FileStorageSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileStorageSnapshot)(nil))
}

func (o FileStorageSnapshotOutput) ToFileStorageSnapshotOutput() FileStorageSnapshotOutput {
	return o
}

func (o FileStorageSnapshotOutput) ToFileStorageSnapshotOutputWithContext(ctx context.Context) FileStorageSnapshotOutput {
	return o
}

func (o FileStorageSnapshotOutput) ToFileStorageSnapshotPtrOutput() FileStorageSnapshotPtrOutput {
	return o.ToFileStorageSnapshotPtrOutputWithContext(context.Background())
}

func (o FileStorageSnapshotOutput) ToFileStorageSnapshotPtrOutputWithContext(ctx context.Context) FileStorageSnapshotPtrOutput {
	return o.ApplyT(func(v FileStorageSnapshot) *FileStorageSnapshot {
		return &v
	}).(FileStorageSnapshotPtrOutput)
}

type FileStorageSnapshotPtrOutput struct {
	*pulumi.OutputState
}

func (FileStorageSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileStorageSnapshot)(nil))
}

func (o FileStorageSnapshotPtrOutput) ToFileStorageSnapshotPtrOutput() FileStorageSnapshotPtrOutput {
	return o
}

func (o FileStorageSnapshotPtrOutput) ToFileStorageSnapshotPtrOutputWithContext(ctx context.Context) FileStorageSnapshotPtrOutput {
	return o
}

type FileStorageSnapshotArrayOutput struct{ *pulumi.OutputState }

func (FileStorageSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileStorageSnapshot)(nil))
}

func (o FileStorageSnapshotArrayOutput) ToFileStorageSnapshotArrayOutput() FileStorageSnapshotArrayOutput {
	return o
}

func (o FileStorageSnapshotArrayOutput) ToFileStorageSnapshotArrayOutputWithContext(ctx context.Context) FileStorageSnapshotArrayOutput {
	return o
}

func (o FileStorageSnapshotArrayOutput) Index(i pulumi.IntInput) FileStorageSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileStorageSnapshot {
		return vs[0].([]FileStorageSnapshot)[vs[1].(int)]
	}).(FileStorageSnapshotOutput)
}

type FileStorageSnapshotMapOutput struct{ *pulumi.OutputState }

func (FileStorageSnapshotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FileStorageSnapshot)(nil))
}

func (o FileStorageSnapshotMapOutput) ToFileStorageSnapshotMapOutput() FileStorageSnapshotMapOutput {
	return o
}

func (o FileStorageSnapshotMapOutput) ToFileStorageSnapshotMapOutputWithContext(ctx context.Context) FileStorageSnapshotMapOutput {
	return o
}

func (o FileStorageSnapshotMapOutput) MapIndex(k pulumi.StringInput) FileStorageSnapshotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FileStorageSnapshot {
		return vs[0].(map[string]FileStorageSnapshot)[vs[1].(string)]
	}).(FileStorageSnapshotOutput)
}

func init() {
	pulumi.RegisterOutputType(FileStorageSnapshotOutput{})
	pulumi.RegisterOutputType(FileStorageSnapshotPtrOutput{})
	pulumi.RegisterOutputType(FileStorageSnapshotArrayOutput{})
	pulumi.RegisterOutputType(FileStorageSnapshotMapOutput{})
}
