// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Budget resource in Oracle Cloud Infrastructure Budget service.
//
// Creates a new Budget.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewBudgetBudget(ctx, "testBudget", &oci.BudgetBudgetArgs{
// 			Amount:                            pulumi.Any(_var.Budget_amount),
// 			CompartmentId:                     pulumi.Any(_var.Tenancy_ocid),
// 			ResetPeriod:                       pulumi.Any(_var.Budget_reset_period),
// 			BudgetProcessingPeriodStartOffset: pulumi.Any(_var.Budget_budget_processing_period_start_offset),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Budget_description),
// 			DisplayName: pulumi.Any(_var.Budget_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			TargetCompartmentId: pulumi.Any(oci_identity_compartment.Test_compartment.Id),
// 			TargetType:          pulumi.Any(_var.Budget_target_type),
// 			Targets:             pulumi.Any(_var.Budget_targets),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Budgets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/budgetBudget:BudgetBudget test_budget "id"
// ```
type BudgetBudget struct {
	pulumi.CustomResourceState

	// The actual spend in currency for the current budget cycle
	ActualSpend pulumi.Float64Output `pulumi:"actualSpend"`
	// Total number of alert rules in the budget
	AlertRuleCount pulumi.IntOutput `pulumi:"alertRuleCount"`
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntOutput `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntOutput `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the tenancy
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The displayName of the budget.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The forecasted spend in currency by the end of the current budget cycle
	ForecastedSpend pulumi.Float64Output `pulumi:"forecastedSpend"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringOutput `pulumi:"resetPeriod"`
	// The current state of the budget.
	State pulumi.StringOutput `pulumi:"state"`
	// This is DEPRECTAED. Set the target compartment id in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
	TargetCompartmentId pulumi.StringOutput `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType pulumi.StringOutput `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain EXACT ONE item.
	Targets pulumi.StringArrayOutput `pulumi:"targets"`
	// Time that budget was created
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time that the budget spend was last computed
	TimeSpendComputed pulumi.StringOutput `pulumi:"timeSpendComputed"`
	// Time that budget was updated
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Version of the budget. Starts from 1 and increments by 1.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewBudgetBudget registers a new resource with the given unique name, arguments, and options.
func NewBudgetBudget(ctx *pulumi.Context,
	name string, args *BudgetBudgetArgs, opts ...pulumi.ResourceOption) (*BudgetBudget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Amount == nil {
		return nil, errors.New("invalid value for required argument 'Amount'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ResetPeriod == nil {
		return nil, errors.New("invalid value for required argument 'ResetPeriod'")
	}
	var resource BudgetBudget
	err := ctx.RegisterResource("oci:index/budgetBudget:BudgetBudget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudgetBudget gets an existing BudgetBudget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudgetBudget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetBudgetState, opts ...pulumi.ResourceOption) (*BudgetBudget, error) {
	var resource BudgetBudget
	err := ctx.ReadResource("oci:index/budgetBudget:BudgetBudget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BudgetBudget resources.
type budgetBudgetState struct {
	// The actual spend in currency for the current budget cycle
	ActualSpend *float64 `pulumi:"actualSpend"`
	// Total number of alert rules in the budget
	AlertRuleCount *int `pulumi:"alertRuleCount"`
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount *int `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset *int `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the tenancy
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description *string `pulumi:"description"`
	// (Updatable) The displayName of the budget.
	DisplayName *string `pulumi:"displayName"`
	// The forecasted spend in currency by the end of the current budget cycle
	ForecastedSpend *float64 `pulumi:"forecastedSpend"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod *string `pulumi:"resetPeriod"`
	// The current state of the budget.
	State *string `pulumi:"state"`
	// This is DEPRECTAED. Set the target compartment id in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType *string `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain EXACT ONE item.
	Targets []string `pulumi:"targets"`
	// Time that budget was created
	TimeCreated *string `pulumi:"timeCreated"`
	// The time that the budget spend was last computed
	TimeSpendComputed *string `pulumi:"timeSpendComputed"`
	// Time that budget was updated
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Version of the budget. Starts from 1 and increments by 1.
	Version *int `pulumi:"version"`
}

type BudgetBudgetState struct {
	// The actual spend in currency for the current budget cycle
	ActualSpend pulumi.Float64PtrInput
	// Total number of alert rules in the budget
	AlertRuleCount pulumi.IntPtrInput
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntPtrInput
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntPtrInput
	// The OCID of the tenancy
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the budget.
	Description pulumi.StringPtrInput
	// (Updatable) The displayName of the budget.
	DisplayName pulumi.StringPtrInput
	// The forecasted spend in currency by the end of the current budget cycle
	ForecastedSpend pulumi.Float64PtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringPtrInput
	// The current state of the budget.
	State pulumi.StringPtrInput
	// This is DEPRECTAED. Set the target compartment id in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
	TargetCompartmentId pulumi.StringPtrInput
	// The type of target on which the budget is applied.
	TargetType pulumi.StringPtrInput
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain EXACT ONE item.
	Targets pulumi.StringArrayInput
	// Time that budget was created
	TimeCreated pulumi.StringPtrInput
	// The time that the budget spend was last computed
	TimeSpendComputed pulumi.StringPtrInput
	// Time that budget was updated
	TimeUpdated pulumi.StringPtrInput
	// Version of the budget. Starts from 1 and increments by 1.
	Version pulumi.IntPtrInput
}

func (BudgetBudgetState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetBudgetState)(nil)).Elem()
}

type budgetBudgetArgs struct {
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount int `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset *int `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the tenancy
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description *string `pulumi:"description"`
	// (Updatable) The displayName of the budget.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod string `pulumi:"resetPeriod"`
	// This is DEPRECTAED. Set the target compartment id in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType *string `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain EXACT ONE item.
	Targets []string `pulumi:"targets"`
}

// The set of arguments for constructing a BudgetBudget resource.
type BudgetBudgetArgs struct {
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntInput
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntPtrInput
	// The OCID of the tenancy
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the budget.
	Description pulumi.StringPtrInput
	// (Updatable) The displayName of the budget.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringInput
	// This is DEPRECTAED. Set the target compartment id in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'target_type' instead.
	TargetCompartmentId pulumi.StringPtrInput
	// The type of target on which the budget is applied.
	TargetType pulumi.StringPtrInput
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", targets contains list of compartment OCIDs. If targetType is "TAG", targets contains list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain EXACT ONE item.
	Targets pulumi.StringArrayInput
}

func (BudgetBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetBudgetArgs)(nil)).Elem()
}

type BudgetBudgetInput interface {
	pulumi.Input

	ToBudgetBudgetOutput() BudgetBudgetOutput
	ToBudgetBudgetOutputWithContext(ctx context.Context) BudgetBudgetOutput
}

func (*BudgetBudget) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetBudget)(nil))
}

func (i *BudgetBudget) ToBudgetBudgetOutput() BudgetBudgetOutput {
	return i.ToBudgetBudgetOutputWithContext(context.Background())
}

func (i *BudgetBudget) ToBudgetBudgetOutputWithContext(ctx context.Context) BudgetBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetBudgetOutput)
}

func (i *BudgetBudget) ToBudgetBudgetPtrOutput() BudgetBudgetPtrOutput {
	return i.ToBudgetBudgetPtrOutputWithContext(context.Background())
}

func (i *BudgetBudget) ToBudgetBudgetPtrOutputWithContext(ctx context.Context) BudgetBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetBudgetPtrOutput)
}

type BudgetBudgetPtrInput interface {
	pulumi.Input

	ToBudgetBudgetPtrOutput() BudgetBudgetPtrOutput
	ToBudgetBudgetPtrOutputWithContext(ctx context.Context) BudgetBudgetPtrOutput
}

type budgetBudgetPtrType BudgetBudgetArgs

func (*budgetBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetBudget)(nil))
}

func (i *budgetBudgetPtrType) ToBudgetBudgetPtrOutput() BudgetBudgetPtrOutput {
	return i.ToBudgetBudgetPtrOutputWithContext(context.Background())
}

func (i *budgetBudgetPtrType) ToBudgetBudgetPtrOutputWithContext(ctx context.Context) BudgetBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetBudgetPtrOutput)
}

// BudgetBudgetArrayInput is an input type that accepts BudgetBudgetArray and BudgetBudgetArrayOutput values.
// You can construct a concrete instance of `BudgetBudgetArrayInput` via:
//
//          BudgetBudgetArray{ BudgetBudgetArgs{...} }
type BudgetBudgetArrayInput interface {
	pulumi.Input

	ToBudgetBudgetArrayOutput() BudgetBudgetArrayOutput
	ToBudgetBudgetArrayOutputWithContext(context.Context) BudgetBudgetArrayOutput
}

type BudgetBudgetArray []BudgetBudgetInput

func (BudgetBudgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BudgetBudget)(nil)).Elem()
}

func (i BudgetBudgetArray) ToBudgetBudgetArrayOutput() BudgetBudgetArrayOutput {
	return i.ToBudgetBudgetArrayOutputWithContext(context.Background())
}

func (i BudgetBudgetArray) ToBudgetBudgetArrayOutputWithContext(ctx context.Context) BudgetBudgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetBudgetArrayOutput)
}

// BudgetBudgetMapInput is an input type that accepts BudgetBudgetMap and BudgetBudgetMapOutput values.
// You can construct a concrete instance of `BudgetBudgetMapInput` via:
//
//          BudgetBudgetMap{ "key": BudgetBudgetArgs{...} }
type BudgetBudgetMapInput interface {
	pulumi.Input

	ToBudgetBudgetMapOutput() BudgetBudgetMapOutput
	ToBudgetBudgetMapOutputWithContext(context.Context) BudgetBudgetMapOutput
}

type BudgetBudgetMap map[string]BudgetBudgetInput

func (BudgetBudgetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BudgetBudget)(nil)).Elem()
}

func (i BudgetBudgetMap) ToBudgetBudgetMapOutput() BudgetBudgetMapOutput {
	return i.ToBudgetBudgetMapOutputWithContext(context.Background())
}

func (i BudgetBudgetMap) ToBudgetBudgetMapOutputWithContext(ctx context.Context) BudgetBudgetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetBudgetMapOutput)
}

type BudgetBudgetOutput struct {
	*pulumi.OutputState
}

func (BudgetBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetBudget)(nil))
}

func (o BudgetBudgetOutput) ToBudgetBudgetOutput() BudgetBudgetOutput {
	return o
}

func (o BudgetBudgetOutput) ToBudgetBudgetOutputWithContext(ctx context.Context) BudgetBudgetOutput {
	return o
}

func (o BudgetBudgetOutput) ToBudgetBudgetPtrOutput() BudgetBudgetPtrOutput {
	return o.ToBudgetBudgetPtrOutputWithContext(context.Background())
}

func (o BudgetBudgetOutput) ToBudgetBudgetPtrOutputWithContext(ctx context.Context) BudgetBudgetPtrOutput {
	return o.ApplyT(func(v BudgetBudget) *BudgetBudget {
		return &v
	}).(BudgetBudgetPtrOutput)
}

type BudgetBudgetPtrOutput struct {
	*pulumi.OutputState
}

func (BudgetBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetBudget)(nil))
}

func (o BudgetBudgetPtrOutput) ToBudgetBudgetPtrOutput() BudgetBudgetPtrOutput {
	return o
}

func (o BudgetBudgetPtrOutput) ToBudgetBudgetPtrOutputWithContext(ctx context.Context) BudgetBudgetPtrOutput {
	return o
}

type BudgetBudgetArrayOutput struct{ *pulumi.OutputState }

func (BudgetBudgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetBudget)(nil))
}

func (o BudgetBudgetArrayOutput) ToBudgetBudgetArrayOutput() BudgetBudgetArrayOutput {
	return o
}

func (o BudgetBudgetArrayOutput) ToBudgetBudgetArrayOutputWithContext(ctx context.Context) BudgetBudgetArrayOutput {
	return o
}

func (o BudgetBudgetArrayOutput) Index(i pulumi.IntInput) BudgetBudgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetBudget {
		return vs[0].([]BudgetBudget)[vs[1].(int)]
	}).(BudgetBudgetOutput)
}

type BudgetBudgetMapOutput struct{ *pulumi.OutputState }

func (BudgetBudgetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BudgetBudget)(nil))
}

func (o BudgetBudgetMapOutput) ToBudgetBudgetMapOutput() BudgetBudgetMapOutput {
	return o
}

func (o BudgetBudgetMapOutput) ToBudgetBudgetMapOutputWithContext(ctx context.Context) BudgetBudgetMapOutput {
	return o
}

func (o BudgetBudgetMapOutput) MapIndex(k pulumi.StringInput) BudgetBudgetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BudgetBudget {
		return vs[0].(map[string]BudgetBudget)[vs[1].(string)]
	}).(BudgetBudgetOutput)
}

func init() {
	pulumi.RegisterOutputType(BudgetBudgetOutput{})
	pulumi.RegisterOutputType(BudgetBudgetPtrOutput{})
	pulumi.RegisterOutputType(BudgetBudgetArrayOutput{})
	pulumi.RegisterOutputType(BudgetBudgetMapOutput{})
}
