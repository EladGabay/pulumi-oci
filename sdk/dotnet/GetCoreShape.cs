// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreShape
    {
        public static Task<GetCoreShapeResult> InvokeAsync(GetCoreShapeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreShapeResult>("oci:index/getCoreShape:GetCoreShape", args ?? new GetCoreShapeArgs(), options.WithVersion());
    }


    public sealed class GetCoreShapeArgs : Pulumi.InvokeArgs
    {
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreShapeFilterArgs>? _filters;
        public List<Inputs.GetCoreShapeFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreShapeFilterArgs>());
            set => _filters = value;
        }

        [Input("imageId")]
        public string? ImageId { get; set; }

        public GetCoreShapeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreShapeResult
    {
        public readonly string? AvailabilityDomain;
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCoreShapeFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ImageId;
        public readonly ImmutableArray<Outputs.GetCoreShapeShapeResult> Shapes;

        [OutputConstructor]
        private GetCoreShapeResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetCoreShapeFilterResult> filters,

            string id,

            string? imageId,

            ImmutableArray<Outputs.GetCoreShapeShapeResult> shapes)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ImageId = imageId;
            Shapes = shapes;
        }
    }
}
