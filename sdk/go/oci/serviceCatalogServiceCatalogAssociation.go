// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Service Catalog Association resource in Oracle Cloud Infrastructure Service Catalog service.
//
// Creates an association between service catalog and a resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewServiceCatalogServiceCatalogAssociation(ctx, "testServiceCatalogAssociation", &oci.ServiceCatalogServiceCatalogAssociationArgs{
// 			EntityId:         pulumi.Any(oci_service_catalog_entity.Test_entity.Id),
// 			ServiceCatalogId: pulumi.Any(oci_service_catalog_service_catalog.Test_service_catalog.Id),
// 			EntityType:       pulumi.Any(_var.Service_catalog_association_entity_type),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ServiceCatalogAssociations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/serviceCatalogServiceCatalogAssociation:ServiceCatalogServiceCatalogAssociation test_service_catalog_association "id"
// ```
type ServiceCatalogServiceCatalogAssociation struct {
	pulumi.CustomResourceState

	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringOutput `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringOutput `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringOutput `pulumi:"serviceCatalogId"`
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewServiceCatalogServiceCatalogAssociation registers a new resource with the given unique name, arguments, and options.
func NewServiceCatalogServiceCatalogAssociation(ctx *pulumi.Context,
	name string, args *ServiceCatalogServiceCatalogAssociationArgs, opts ...pulumi.ResourceOption) (*ServiceCatalogServiceCatalogAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntityId == nil {
		return nil, errors.New("invalid value for required argument 'EntityId'")
	}
	if args.ServiceCatalogId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceCatalogId'")
	}
	var resource ServiceCatalogServiceCatalogAssociation
	err := ctx.RegisterResource("oci:index/serviceCatalogServiceCatalogAssociation:ServiceCatalogServiceCatalogAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCatalogServiceCatalogAssociation gets an existing ServiceCatalogServiceCatalogAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCatalogServiceCatalogAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCatalogServiceCatalogAssociationState, opts ...pulumi.ResourceOption) (*ServiceCatalogServiceCatalogAssociation, error) {
	var resource ServiceCatalogServiceCatalogAssociation
	err := ctx.ReadResource("oci:index/serviceCatalogServiceCatalogAssociation:ServiceCatalogServiceCatalogAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCatalogServiceCatalogAssociation resources.
type serviceCatalogServiceCatalogAssociationState struct {
	// Identifier of the entity being associated with service catalog.
	EntityId *string `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType *string `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId *string `pulumi:"serviceCatalogId"`
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated *string `pulumi:"timeCreated"`
}

type ServiceCatalogServiceCatalogAssociationState struct {
	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringPtrInput
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringPtrInput
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringPtrInput
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated pulumi.StringPtrInput
}

func (ServiceCatalogServiceCatalogAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogServiceCatalogAssociationState)(nil)).Elem()
}

type serviceCatalogServiceCatalogAssociationArgs struct {
	// Identifier of the entity being associated with service catalog.
	EntityId string `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType *string `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
}

// The set of arguments for constructing a ServiceCatalogServiceCatalogAssociation resource.
type ServiceCatalogServiceCatalogAssociationArgs struct {
	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringInput
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringPtrInput
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringInput
}

func (ServiceCatalogServiceCatalogAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogServiceCatalogAssociationArgs)(nil)).Elem()
}

type ServiceCatalogServiceCatalogAssociationInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogAssociationOutput() ServiceCatalogServiceCatalogAssociationOutput
	ToServiceCatalogServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationOutput
}

func (*ServiceCatalogServiceCatalogAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogServiceCatalogAssociation)(nil))
}

func (i *ServiceCatalogServiceCatalogAssociation) ToServiceCatalogServiceCatalogAssociationOutput() ServiceCatalogServiceCatalogAssociationOutput {
	return i.ToServiceCatalogServiceCatalogAssociationOutputWithContext(context.Background())
}

func (i *ServiceCatalogServiceCatalogAssociation) ToServiceCatalogServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogAssociationOutput)
}

func (i *ServiceCatalogServiceCatalogAssociation) ToServiceCatalogServiceCatalogAssociationPtrOutput() ServiceCatalogServiceCatalogAssociationPtrOutput {
	return i.ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (i *ServiceCatalogServiceCatalogAssociation) ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogAssociationPtrOutput)
}

type ServiceCatalogServiceCatalogAssociationPtrInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogAssociationPtrOutput() ServiceCatalogServiceCatalogAssociationPtrOutput
	ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationPtrOutput
}

type serviceCatalogServiceCatalogAssociationPtrType ServiceCatalogServiceCatalogAssociationArgs

func (*serviceCatalogServiceCatalogAssociationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogServiceCatalogAssociation)(nil))
}

func (i *serviceCatalogServiceCatalogAssociationPtrType) ToServiceCatalogServiceCatalogAssociationPtrOutput() ServiceCatalogServiceCatalogAssociationPtrOutput {
	return i.ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (i *serviceCatalogServiceCatalogAssociationPtrType) ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogAssociationPtrOutput)
}

// ServiceCatalogServiceCatalogAssociationArrayInput is an input type that accepts ServiceCatalogServiceCatalogAssociationArray and ServiceCatalogServiceCatalogAssociationArrayOutput values.
// You can construct a concrete instance of `ServiceCatalogServiceCatalogAssociationArrayInput` via:
//
//          ServiceCatalogServiceCatalogAssociationArray{ ServiceCatalogServiceCatalogAssociationArgs{...} }
type ServiceCatalogServiceCatalogAssociationArrayInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogAssociationArrayOutput() ServiceCatalogServiceCatalogAssociationArrayOutput
	ToServiceCatalogServiceCatalogAssociationArrayOutputWithContext(context.Context) ServiceCatalogServiceCatalogAssociationArrayOutput
}

type ServiceCatalogServiceCatalogAssociationArray []ServiceCatalogServiceCatalogAssociationInput

func (ServiceCatalogServiceCatalogAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCatalogServiceCatalogAssociation)(nil)).Elem()
}

func (i ServiceCatalogServiceCatalogAssociationArray) ToServiceCatalogServiceCatalogAssociationArrayOutput() ServiceCatalogServiceCatalogAssociationArrayOutput {
	return i.ToServiceCatalogServiceCatalogAssociationArrayOutputWithContext(context.Background())
}

func (i ServiceCatalogServiceCatalogAssociationArray) ToServiceCatalogServiceCatalogAssociationArrayOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogAssociationArrayOutput)
}

// ServiceCatalogServiceCatalogAssociationMapInput is an input type that accepts ServiceCatalogServiceCatalogAssociationMap and ServiceCatalogServiceCatalogAssociationMapOutput values.
// You can construct a concrete instance of `ServiceCatalogServiceCatalogAssociationMapInput` via:
//
//          ServiceCatalogServiceCatalogAssociationMap{ "key": ServiceCatalogServiceCatalogAssociationArgs{...} }
type ServiceCatalogServiceCatalogAssociationMapInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogAssociationMapOutput() ServiceCatalogServiceCatalogAssociationMapOutput
	ToServiceCatalogServiceCatalogAssociationMapOutputWithContext(context.Context) ServiceCatalogServiceCatalogAssociationMapOutput
}

type ServiceCatalogServiceCatalogAssociationMap map[string]ServiceCatalogServiceCatalogAssociationInput

func (ServiceCatalogServiceCatalogAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCatalogServiceCatalogAssociation)(nil)).Elem()
}

func (i ServiceCatalogServiceCatalogAssociationMap) ToServiceCatalogServiceCatalogAssociationMapOutput() ServiceCatalogServiceCatalogAssociationMapOutput {
	return i.ToServiceCatalogServiceCatalogAssociationMapOutputWithContext(context.Background())
}

func (i ServiceCatalogServiceCatalogAssociationMap) ToServiceCatalogServiceCatalogAssociationMapOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogAssociationMapOutput)
}

type ServiceCatalogServiceCatalogAssociationOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogServiceCatalogAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogServiceCatalogAssociationOutput) ToServiceCatalogServiceCatalogAssociationOutput() ServiceCatalogServiceCatalogAssociationOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationOutput) ToServiceCatalogServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationOutput) ToServiceCatalogServiceCatalogAssociationPtrOutput() ServiceCatalogServiceCatalogAssociationPtrOutput {
	return o.ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (o ServiceCatalogServiceCatalogAssociationOutput) ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationPtrOutput {
	return o.ApplyT(func(v ServiceCatalogServiceCatalogAssociation) *ServiceCatalogServiceCatalogAssociation {
		return &v
	}).(ServiceCatalogServiceCatalogAssociationPtrOutput)
}

type ServiceCatalogServiceCatalogAssociationPtrOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogServiceCatalogAssociationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogServiceCatalogAssociationPtrOutput) ToServiceCatalogServiceCatalogAssociationPtrOutput() ServiceCatalogServiceCatalogAssociationPtrOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationPtrOutput) ToServiceCatalogServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationPtrOutput {
	return o
}

type ServiceCatalogServiceCatalogAssociationArrayOutput struct{ *pulumi.OutputState }

func (ServiceCatalogServiceCatalogAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCatalogServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogServiceCatalogAssociationArrayOutput) ToServiceCatalogServiceCatalogAssociationArrayOutput() ServiceCatalogServiceCatalogAssociationArrayOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationArrayOutput) ToServiceCatalogServiceCatalogAssociationArrayOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationArrayOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationArrayOutput) Index(i pulumi.IntInput) ServiceCatalogServiceCatalogAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCatalogServiceCatalogAssociation {
		return vs[0].([]ServiceCatalogServiceCatalogAssociation)[vs[1].(int)]
	}).(ServiceCatalogServiceCatalogAssociationOutput)
}

type ServiceCatalogServiceCatalogAssociationMapOutput struct{ *pulumi.OutputState }

func (ServiceCatalogServiceCatalogAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceCatalogServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogServiceCatalogAssociationMapOutput) ToServiceCatalogServiceCatalogAssociationMapOutput() ServiceCatalogServiceCatalogAssociationMapOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationMapOutput) ToServiceCatalogServiceCatalogAssociationMapOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogAssociationMapOutput {
	return o
}

func (o ServiceCatalogServiceCatalogAssociationMapOutput) MapIndex(k pulumi.StringInput) ServiceCatalogServiceCatalogAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceCatalogServiceCatalogAssociation {
		return vs[0].(map[string]ServiceCatalogServiceCatalogAssociation)[vs[1].(string)]
	}).(ServiceCatalogServiceCatalogAssociationOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogAssociationOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogAssociationPtrOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogAssociationArrayOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogAssociationMapOutput{})
}
