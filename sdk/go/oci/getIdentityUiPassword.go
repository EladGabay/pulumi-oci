// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ui Password resource in Oracle Cloud Infrastructure Identity service.
//
// Gets the specified user's console password information. The returned object contains the user's OCID,
// but not the password itself. The actual password is returned only when created or reset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.GetIdentityUiPassword(ctx, &GetIdentityUiPasswordArgs{
// 			UserId: oci_identity_user.Test_user.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupIdentityUiPassword(ctx *pulumi.Context, args *LookupIdentityUiPasswordArgs, opts ...pulumi.InvokeOption) (*LookupIdentityUiPasswordResult, error) {
	var rv LookupIdentityUiPasswordResult
	err := ctx.Invoke("oci:index/getIdentityUiPassword:GetIdentityUiPassword", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetIdentityUiPassword.
type LookupIdentityUiPasswordArgs struct {
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by GetIdentityUiPassword.
type LookupIdentityUiPasswordResult struct {
	Id             string `pulumi:"id"`
	InactiveStatus string `pulumi:"inactiveStatus"`
	Password       string `pulumi:"password"`
	// The password's current state.
	State string `pulumi:"state"`
	// Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}
