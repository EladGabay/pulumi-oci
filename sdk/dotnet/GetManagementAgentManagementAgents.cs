// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetManagementAgentManagementAgents
    {
        /// <summary>
        /// This data source provides the list of Management Agents in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Returns a list of Management Agent.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testManagementAgents = Output.Create(Oci.GetManagementAgentManagementAgents.InvokeAsync(new Oci.GetManagementAgentManagementAgentsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Management_agent_display_name,
        ///             PlatformType = @var.Management_agent_platform_type,
        ///             PluginName = @var.Management_agent_plugin_name,
        ///             State = @var.Management_agent_state,
        ///             Version = @var.Management_agent_version,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagementAgentManagementAgentsResult> InvokeAsync(GetManagementAgentManagementAgentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentManagementAgentsResult>("oci:index/getManagementAgentManagementAgents:GetManagementAgentManagementAgents", args ?? new GetManagementAgentManagementAgentsArgs(), options.WithVersion());
    }


    public sealed class GetManagementAgentManagementAgentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment from which the Management Agents to be listed.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Filter to return only Management Agents having the particular display name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetManagementAgentManagementAgentsFilterArgs>? _filters;
        public List<Inputs.GetManagementAgentManagementAgentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagementAgentManagementAgentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filter to return only Management Agents having the particular platform type.
        /// </summary>
        [Input("platformType")]
        public string? PlatformType { get; set; }

        /// <summary>
        /// Filter to return only Management Agents having the particular Plugin installed.
        /// </summary>
        [Input("pluginName")]
        public string? PluginName { get; set; }

        /// <summary>
        /// Filter to return only Management Agents in the particular lifecycle state.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// Filter to return only Management Agents having the particular agent version.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetManagementAgentManagementAgentsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagementAgentManagementAgentsResult
    {
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Management Agent Name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetManagementAgentManagementAgentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of management_agents.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentManagementAgentsManagementAgentResult> ManagementAgents;
        /// <summary>
        /// Platform Type
        /// </summary>
        public readonly string? PlatformType;
        /// <summary>
        /// Management Agent Plugin Name
        /// </summary>
        public readonly string? PluginName;
        /// <summary>
        /// The current state of managementAgent
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Management Agent Version
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetManagementAgentManagementAgentsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetManagementAgentManagementAgentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetManagementAgentManagementAgentsManagementAgentResult> managementAgents,

            string? platformType,

            string? pluginName,

            string? state,

            string? version)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ManagementAgents = managementAgents;
            PlatformType = platformType;
            PluginName = pluginName;
            State = state;
            Version = version;
        }
    }
}
