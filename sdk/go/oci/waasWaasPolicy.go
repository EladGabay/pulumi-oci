// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Waas Policy resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Creates a new Web Application Acceleration and Security (WAAS) policy in the specified compartment. A WAAS policy must be established before creating Web Application Firewall (WAF) rules. To use WAF rules, your web application's origin servers must defined in the `WaasPolicy` schema.
//
// A domain name must be specified when creating a WAAS policy. The domain name should be different from the origins specified in your `WaasPolicy`. Once domain name is entered and stored, it is unchangeable.
//
// Use the record data returned in the `cname` field of the `WaasPolicy` object to create a CNAME record in your DNS configuration that will direct your domain's traffic through the WAF.
//
// For the purposes of access control, you must provide the OCID of the compartment where you want the service to reside. For information about access control and compartments, see [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
//
// You must specify a display name and domain for the WAAS policy. The display name does not have to be unique and can be changed. The domain name should be different from every origin specified in `WaasPolicy`.
//
// All Oracle Cloud Infrastructure resources, including WAAS policies, receive a unique, Oracle-assigned ID called an Oracle Cloud Identifier (OCID). When a resource is created, you can find its OCID in the response. You can also retrieve a resource's OCID by using a list API operation for that resource type, or by viewing the resource in the Console. Fore more information, see [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// **Note:** After sending the POST request, the new object's state will temporarily be `CREATING`. Ensure that the resource's state has changed to `ACTIVE` before use.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewWaasWaasPolicy(ctx, "testWaasPolicy", &oci.WaasWaasPolicyArgs{
// 			CompartmentId:     pulumi.Any(_var.Compartment_id),
// 			Domain:            pulumi.Any(_var.Waas_policy_domain),
// 			AdditionalDomains: pulumi.Any(_var.Waas_policy_additional_domains),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Waas_policy_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			OriginGroups: WaasWaasPolicyOriginGroupArray{
// 				&WaasWaasPolicyOriginGroupArgs{
// 					Origins: _var.Waas_policy_origin_groups_origins,
// 				},
// 			},
// 			Origins: WaasWaasPolicyOriginArray{
// 				&WaasWaasPolicyOriginArgs{
// 					Uri: pulumi.Any(_var.Waas_policy_origins_uri),
// 					CustomHeaders: WaasWaasPolicyOriginCustomHeaderArray{
// 						&WaasWaasPolicyOriginCustomHeaderArgs{
// 							Name:  pulumi.Any(_var.Waas_policy_origins_custom_headers_name),
// 							Value: pulumi.Any(_var.Waas_policy_origins_custom_headers_value),
// 						},
// 					},
// 					HttpPort:  pulumi.Any(_var.Waas_policy_origins_http_port),
// 					HttpsPort: pulumi.Any(_var.Waas_policy_origins_https_port),
// 				},
// 			},
// 			PolicyConfig: &WaasWaasPolicyPolicyConfigArgs{
// 				CertificateId:       pulumi.Any(oci_waas_certificate.Test_certificate.Id),
// 				CipherGroup:         pulumi.Any(_var.Waas_policy_policy_config_cipher_group),
// 				ClientAddressHeader: pulumi.Any(_var.Waas_policy_policy_config_client_address_header),
// 				HealthChecks: &WaasWaasPolicyPolicyConfigHealthChecksArgs{
// 					ExpectedResponseCodeGroups: pulumi.Any(_var.Waas_policy_policy_config_health_checks_expected_response_code_group),
// 					ExpectedResponseText:       pulumi.Any(_var.Waas_policy_policy_config_health_checks_expected_response_text),
// 					Headers:                    pulumi.Any(_var.Waas_policy_policy_config_health_checks_headers),
// 					HealthyThreshold:           pulumi.Any(_var.Waas_policy_policy_config_health_checks_healthy_threshold),
// 					IntervalInSeconds:          pulumi.Any(_var.Waas_policy_policy_config_health_checks_interval_in_seconds),
// 					IsEnabled:                  pulumi.Any(_var.Waas_policy_policy_config_health_checks_is_enabled),
// 					IsResponseTextCheckEnabled: pulumi.Any(_var.Waas_policy_policy_config_health_checks_is_response_text_check_enabled),
// 					Method:                     pulumi.Any(_var.Waas_policy_policy_config_health_checks_method),
// 					Path:                       pulumi.Any(_var.Waas_policy_policy_config_health_checks_path),
// 					TimeoutInSeconds:           pulumi.Any(_var.Waas_policy_policy_config_health_checks_timeout_in_seconds),
// 					UnhealthyThreshold:         pulumi.Any(_var.Waas_policy_policy_config_health_checks_unhealthy_threshold),
// 				},
// 				IsBehindCdn:                pulumi.Any(_var.Waas_policy_policy_config_is_behind_cdn),
// 				IsCacheControlRespected:    pulumi.Any(_var.Waas_policy_policy_config_is_cache_control_respected),
// 				IsHttpsEnabled:             pulumi.Any(_var.Waas_policy_policy_config_is_https_enabled),
// 				IsHttpsForced:              pulumi.Any(_var.Waas_policy_policy_config_is_https_forced),
// 				IsOriginCompressionEnabled: pulumi.Any(_var.Waas_policy_policy_config_is_origin_compression_enabled),
// 				IsResponseBufferingEnabled: pulumi.Any(_var.Waas_policy_policy_config_is_response_buffering_enabled),
// 				IsSniEnabled:               pulumi.Any(_var.Waas_policy_policy_config_is_sni_enabled),
// 				LoadBalancingMethod: &WaasWaasPolicyPolicyConfigLoadBalancingMethodArgs{
// 					Method:                  pulumi.Any(_var.Waas_policy_policy_config_load_balancing_method_method),
// 					Domain:                  pulumi.Any(_var.Waas_policy_policy_config_load_balancing_method_domain),
// 					ExpirationTimeInSeconds: pulumi.Any(_var.Waas_policy_policy_config_load_balancing_method_expiration_time_in_seconds),
// 					Name:                    pulumi.Any(_var.Waas_policy_policy_config_load_balancing_method_name),
// 				},
// 				TlsProtocols:          pulumi.Any(_var.Waas_policy_policy_config_tls_protocols),
// 				WebsocketPathPrefixes: pulumi.Any(_var.Waas_policy_policy_config_websocket_path_prefixes),
// 			},
// 			WafConfig: &WaasWaasPolicyWafConfigArgs{
// 				AccessRules: WaasWaasPolicyWafConfigAccessRuleArray{
// 					&WaasWaasPolicyWafConfigAccessRuleArgs{
// 						Action: pulumi.Any(_var.Waas_policy_waf_config_access_rules_action),
// 						Criterias: WaasWaasPolicyWafConfigAccessRuleCriteriaArray{
// 							&WaasWaasPolicyWafConfigAccessRuleCriteriaArgs{
// 								Condition:       pulumi.Any(_var.Waas_policy_waf_config_access_rules_criteria_condition),
// 								Value:           pulumi.Any(_var.Waas_policy_waf_config_access_rules_criteria_value),
// 								IsCaseSensitive: pulumi.Any(_var.Waas_policy_waf_config_access_rules_criteria_is_case_sensitive),
// 							},
// 						},
// 						Name:                      pulumi.Any(_var.Waas_policy_waf_config_access_rules_name),
// 						BlockAction:               pulumi.Any(_var.Waas_policy_waf_config_access_rules_block_action),
// 						BlockErrorPageCode:        pulumi.Any(_var.Waas_policy_waf_config_access_rules_block_error_page_code),
// 						BlockErrorPageDescription: pulumi.Any(_var.Waas_policy_waf_config_access_rules_block_error_page_description),
// 						BlockErrorPageMessage:     pulumi.Any(_var.Waas_policy_waf_config_access_rules_block_error_page_message),
// 						BlockResponseCode:         pulumi.Any(_var.Waas_policy_waf_config_access_rules_block_response_code),
// 						BypassChallenges:          pulumi.Any(_var.Waas_policy_waf_config_access_rules_bypass_challenges),
// 						CaptchaFooter:             pulumi.Any(_var.Waas_policy_waf_config_access_rules_captcha_footer),
// 						CaptchaHeader:             pulumi.Any(_var.Waas_policy_waf_config_access_rules_captcha_header),
// 						CaptchaSubmitLabel:        pulumi.Any(_var.Waas_policy_waf_config_access_rules_captcha_submit_label),
// 						CaptchaTitle:              pulumi.Any(_var.Waas_policy_waf_config_access_rules_captcha_title),
// 						RedirectResponseCode:      pulumi.Any(_var.Waas_policy_waf_config_access_rules_redirect_response_code),
// 						RedirectUrl:               pulumi.Any(_var.Waas_policy_waf_config_access_rules_redirect_url),
// 						ResponseHeaderManipulations: WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulationArray{
// 							&WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulationArgs{
// 								Action: pulumi.Any(_var.Waas_policy_waf_config_access_rules_response_header_manipulation_action),
// 								Header: pulumi.Any(_var.Waas_policy_waf_config_access_rules_response_header_manipulation_header),
// 								Value:  pulumi.Any(_var.Waas_policy_waf_config_access_rules_response_header_manipulation_value),
// 							},
// 						},
// 					},
// 				},
// 				AddressRateLimiting: &WaasWaasPolicyWafConfigAddressRateLimitingArgs{
// 					IsEnabled:                 pulumi.Any(_var.Waas_policy_waf_config_address_rate_limiting_is_enabled),
// 					AllowedRatePerAddress:     pulumi.Any(_var.Waas_policy_waf_config_address_rate_limiting_allowed_rate_per_address),
// 					BlockResponseCode:         pulumi.Any(_var.Waas_policy_waf_config_address_rate_limiting_block_response_code),
// 					MaxDelayedCountPerAddress: pulumi.Any(_var.Waas_policy_waf_config_address_rate_limiting_max_delayed_count_per_address),
// 				},
// 				CachingRules: WaasWaasPolicyWafConfigCachingRuleArray{
// 					&WaasWaasPolicyWafConfigCachingRuleArgs{
// 						Action: pulumi.Any(_var.Waas_policy_waf_config_caching_rules_action),
// 						Criterias: WaasWaasPolicyWafConfigCachingRuleCriteriaArray{
// 							&WaasWaasPolicyWafConfigCachingRuleCriteriaArgs{
// 								Condition: pulumi.Any(_var.Waas_policy_waf_config_caching_rules_criteria_condition),
// 								Value:     pulumi.Any(_var.Waas_policy_waf_config_caching_rules_criteria_value),
// 							},
// 						},
// 						Name:                   pulumi.Any(_var.Waas_policy_waf_config_caching_rules_name),
// 						CachingDuration:        pulumi.Any(_var.Waas_policy_waf_config_caching_rules_caching_duration),
// 						ClientCachingDuration:  pulumi.Any(_var.Waas_policy_waf_config_caching_rules_client_caching_duration),
// 						IsClientCachingEnabled: pulumi.Any(_var.Waas_policy_waf_config_caching_rules_is_client_caching_enabled),
// 						Key:                    pulumi.Any(_var.Waas_policy_waf_config_caching_rules_key),
// 					},
// 				},
// 				Captchas: WaasWaasPolicyWafConfigCaptchaArray{
// 					&WaasWaasPolicyWafConfigCaptchaArgs{
// 						FailureMessage:             pulumi.Any(_var.Waas_policy_waf_config_captchas_failure_message),
// 						SessionExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_captchas_session_expiration_in_seconds),
// 						SubmitLabel:                pulumi.Any(_var.Waas_policy_waf_config_captchas_submit_label),
// 						Title:                      pulumi.Any(_var.Waas_policy_waf_config_captchas_title),
// 						Url:                        pulumi.Any(_var.Waas_policy_waf_config_captchas_url),
// 						FooterText:                 pulumi.Any(_var.Waas_policy_waf_config_captchas_footer_text),
// 						HeaderText:                 pulumi.Any(_var.Waas_policy_waf_config_captchas_header_text),
// 					},
// 				},
// 				CustomProtectionRules: WaasWaasPolicyWafConfigCustomProtectionRuleArray{
// 					&WaasWaasPolicyWafConfigCustomProtectionRuleArgs{
// 						Action: pulumi.Any(_var.Waas_policy_waf_config_custom_protection_rules_action),
// 						Exclusions: WaasWaasPolicyWafConfigCustomProtectionRuleExclusionArray{
// 							&WaasWaasPolicyWafConfigCustomProtectionRuleExclusionArgs{
// 								Exclusions: pulumi.Any(_var.Waas_policy_waf_config_custom_protection_rules_exclusions_exclusions),
// 								Target:     pulumi.Any(_var.Waas_policy_waf_config_custom_protection_rules_exclusions_target),
// 							},
// 						},
// 						Id: pulumi.Any(_var.Waas_policy_waf_config_custom_protection_rules_id),
// 					},
// 				},
// 				DeviceFingerprintChallenge: &WaasWaasPolicyWafConfigDeviceFingerprintChallengeArgs{
// 					IsEnabled:                 pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_is_enabled),
// 					Action:                    pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_action),
// 					ActionExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_action_expiration_in_seconds),
// 					ChallengeSettings: &WaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsArgs{
// 						BlockAction:               pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_action),
// 						BlockErrorPageCode:        pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_code),
// 						BlockErrorPageDescription: pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_description),
// 						BlockErrorPageMessage:     pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_message),
// 						BlockResponseCode:         pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_response_code),
// 						CaptchaFooter:             pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_footer),
// 						CaptchaHeader:             pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_header),
// 						CaptchaSubmitLabel:        pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_submit_label),
// 						CaptchaTitle:              pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_title),
// 					},
// 					FailureThreshold:                    pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_failure_threshold),
// 					FailureThresholdExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_failure_threshold_expiration_in_seconds),
// 					MaxAddressCount:                     pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_max_address_count),
// 					MaxAddressCountExpirationInSeconds:  pulumi.Any(_var.Waas_policy_waf_config_device_fingerprint_challenge_max_address_count_expiration_in_seconds),
// 				},
// 				HumanInteractionChallenge: &WaasWaasPolicyWafConfigHumanInteractionChallengeArgs{
// 					IsEnabled:                 pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_is_enabled),
// 					Action:                    pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_action),
// 					ActionExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_action_expiration_in_seconds),
// 					ChallengeSettings: &WaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs{
// 						BlockAction:               pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_action),
// 						BlockErrorPageCode:        pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_code),
// 						BlockErrorPageDescription: pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_description),
// 						BlockErrorPageMessage:     pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_message),
// 						BlockResponseCode:         pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_response_code),
// 						CaptchaFooter:             pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_footer),
// 						CaptchaHeader:             pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_header),
// 						CaptchaSubmitLabel:        pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_submit_label),
// 						CaptchaTitle:              pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_title),
// 					},
// 					FailureThreshold:                    pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_failure_threshold),
// 					FailureThresholdExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_failure_threshold_expiration_in_seconds),
// 					InteractionThreshold:                pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_interaction_threshold),
// 					IsNatEnabled:                        pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_is_nat_enabled),
// 					RecordingPeriodInSeconds:            pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_recording_period_in_seconds),
// 					SetHttpHeader: &WaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs{
// 						Name:  pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_set_http_header_name),
// 						Value: pulumi.Any(_var.Waas_policy_waf_config_human_interaction_challenge_set_http_header_value),
// 					},
// 				},
// 				JsChallenge: &WaasWaasPolicyWafConfigJsChallengeArgs{
// 					IsEnabled:                 pulumi.Any(_var.Waas_policy_waf_config_js_challenge_is_enabled),
// 					Action:                    pulumi.Any(_var.Waas_policy_waf_config_js_challenge_action),
// 					ActionExpirationInSeconds: pulumi.Any(_var.Waas_policy_waf_config_js_challenge_action_expiration_in_seconds),
// 					AreRedirectsChallenged:    pulumi.Any(_var.Waas_policy_waf_config_js_challenge_are_redirects_challenged),
// 					ChallengeSettings: &WaasWaasPolicyWafConfigJsChallengeChallengeSettingsArgs{
// 						BlockAction:               pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_block_action),
// 						BlockErrorPageCode:        pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_code),
// 						BlockErrorPageDescription: pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_description),
// 						BlockErrorPageMessage:     pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_message),
// 						BlockResponseCode:         pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_block_response_code),
// 						CaptchaFooter:             pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_captcha_footer),
// 						CaptchaHeader:             pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_captcha_header),
// 						CaptchaSubmitLabel:        pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_captcha_submit_label),
// 						CaptchaTitle:              pulumi.Any(_var.Waas_policy_waf_config_js_challenge_challenge_settings_captcha_title),
// 					},
// 					Criterias: WaasWaasPolicyWafConfigJsChallengeCriteriaArray{
// 						&WaasWaasPolicyWafConfigJsChallengeCriteriaArgs{
// 							Condition:       pulumi.Any(_var.Waas_policy_waf_config_js_challenge_criteria_condition),
// 							Value:           pulumi.Any(_var.Waas_policy_waf_config_js_challenge_criteria_value),
// 							IsCaseSensitive: pulumi.Any(_var.Waas_policy_waf_config_js_challenge_criteria_is_case_sensitive),
// 						},
// 					},
// 					FailureThreshold: pulumi.Any(_var.Waas_policy_waf_config_js_challenge_failure_threshold),
// 					IsNatEnabled:     pulumi.Any(_var.Waas_policy_waf_config_js_challenge_is_nat_enabled),
// 					SetHttpHeader: &WaasWaasPolicyWafConfigJsChallengeSetHttpHeaderArgs{
// 						Name:  pulumi.Any(_var.Waas_policy_waf_config_js_challenge_set_http_header_name),
// 						Value: pulumi.Any(_var.Waas_policy_waf_config_js_challenge_set_http_header_value),
// 					},
// 				},
// 				Origin:       pulumi.Any(_var.Waas_policy_waf_config_origin),
// 				OriginGroups: pulumi.Any(_var.Waas_policy_waf_config_origin_groups),
// 				ProtectionSettings: &WaasWaasPolicyWafConfigProtectionSettingsArgs{
// 					AllowedHttpMethods:            pulumi.Any(_var.Waas_policy_waf_config_protection_settings_allowed_http_methods),
// 					BlockAction:                   pulumi.Any(_var.Waas_policy_waf_config_protection_settings_block_action),
// 					BlockErrorPageCode:            pulumi.Any(_var.Waas_policy_waf_config_protection_settings_block_error_page_code),
// 					BlockErrorPageDescription:     pulumi.Any(_var.Waas_policy_waf_config_protection_settings_block_error_page_description),
// 					BlockErrorPageMessage:         pulumi.Any(_var.Waas_policy_waf_config_protection_settings_block_error_page_message),
// 					BlockResponseCode:             pulumi.Any(_var.Waas_policy_waf_config_protection_settings_block_response_code),
// 					IsResponseInspected:           pulumi.Any(_var.Waas_policy_waf_config_protection_settings_is_response_inspected),
// 					MaxArgumentCount:              pulumi.Any(_var.Waas_policy_waf_config_protection_settings_max_argument_count),
// 					MaxNameLengthPerArgument:      pulumi.Any(_var.Waas_policy_waf_config_protection_settings_max_name_length_per_argument),
// 					MaxResponseSizeInKiB:          pulumi.Any(_var.Waas_policy_waf_config_protection_settings_max_response_size_in_ki_b),
// 					MaxTotalNameLengthOfArguments: pulumi.Any(_var.Waas_policy_waf_config_protection_settings_max_total_name_length_of_arguments),
// 					MediaTypes:                    pulumi.Any(_var.Waas_policy_waf_config_protection_settings_media_types),
// 					RecommendationsPeriodInDays:   pulumi.Any(_var.Waas_policy_waf_config_protection_settings_recommendations_period_in_days),
// 				},
// 				Whitelists: WaasWaasPolicyWafConfigWhitelistArray{
// 					&WaasWaasPolicyWafConfigWhitelistArgs{
// 						Name:         pulumi.Any(_var.Waas_policy_waf_config_whitelists_name),
// 						AddressLists: pulumi.Any(_var.Waas_policy_waf_config_whitelists_address_lists),
// 						Addresses:    pulumi.Any(_var.Waas_policy_waf_config_whitelists_addresses),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// WaasPolicies can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/waasWaasPolicy:WaasWaasPolicy test_waas_policy "id"
// ```
type WaasWaasPolicy struct {
	pulumi.CustomResourceState

	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayOutput `pulumi:"additionalDomains"`
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups WaasWaasPolicyOriginGroupArrayOutput `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins WaasWaasPolicyOriginArrayOutput `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig WaasWaasPolicyPolicyConfigOutput `pulumi:"policyConfig"`
	// The current lifecycle state of the WAAS policy.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig WaasWaasPolicyWafConfigOutput `pulumi:"wafConfig"`
}

// NewWaasWaasPolicy registers a new resource with the given unique name, arguments, and options.
func NewWaasWaasPolicy(ctx *pulumi.Context,
	name string, args *WaasWaasPolicyArgs, opts ...pulumi.ResourceOption) (*WaasWaasPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	var resource WaasWaasPolicy
	err := ctx.RegisterResource("oci:index/waasWaasPolicy:WaasWaasPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWaasWaasPolicy gets an existing WaasWaasPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWaasWaasPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WaasWaasPolicyState, opts ...pulumi.ResourceOption) (*WaasWaasPolicy, error) {
	var resource WaasWaasPolicy
	err := ctx.ReadResource("oci:index/waasWaasPolicy:WaasWaasPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WaasWaasPolicy resources.
type waasWaasPolicyState struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains []string `pulumi:"additionalDomains"`
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname *string `pulumi:"cname"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
	Domain *string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups []WaasWaasPolicyOriginGroup `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins []WaasWaasPolicyOrigin `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig *WaasWaasPolicyPolicyConfig `pulumi:"policyConfig"`
	// The current lifecycle state of the WAAS policy.
	State *string `pulumi:"state"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig *WaasWaasPolicyWafConfig `pulumi:"wafConfig"`
}

type WaasWaasPolicyState struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayInput
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
	Domain pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups WaasWaasPolicyOriginGroupArrayInput
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins WaasWaasPolicyOriginArrayInput
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig WaasWaasPolicyPolicyConfigPtrInput
	// The current lifecycle state of the WAAS policy.
	State pulumi.StringPtrInput
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig WaasWaasPolicyWafConfigPtrInput
}

func (WaasWaasPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*waasWaasPolicyState)(nil)).Elem()
}

type waasWaasPolicyArgs struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains []string `pulumi:"additionalDomains"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
	Domain string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups []WaasWaasPolicyOriginGroup `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins []WaasWaasPolicyOrigin `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig *WaasWaasPolicyPolicyConfig `pulumi:"policyConfig"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig *WaasWaasPolicyWafConfig `pulumi:"wafConfig"`
}

// The set of arguments for constructing a WaasWaasPolicy resource.
type WaasWaasPolicyArgs struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The domain for which the cookie is set, defaults to WAAS policy domain.
	Domain pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups WaasWaasPolicyOriginGroupArrayInput
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins WaasWaasPolicyOriginArrayInput
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig WaasWaasPolicyPolicyConfigPtrInput
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig WaasWaasPolicyWafConfigPtrInput
}

func (WaasWaasPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*waasWaasPolicyArgs)(nil)).Elem()
}

type WaasWaasPolicyInput interface {
	pulumi.Input

	ToWaasWaasPolicyOutput() WaasWaasPolicyOutput
	ToWaasWaasPolicyOutputWithContext(ctx context.Context) WaasWaasPolicyOutput
}

func (*WaasWaasPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasWaasPolicy)(nil))
}

func (i *WaasWaasPolicy) ToWaasWaasPolicyOutput() WaasWaasPolicyOutput {
	return i.ToWaasWaasPolicyOutputWithContext(context.Background())
}

func (i *WaasWaasPolicy) ToWaasWaasPolicyOutputWithContext(ctx context.Context) WaasWaasPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasWaasPolicyOutput)
}

func (i *WaasWaasPolicy) ToWaasWaasPolicyPtrOutput() WaasWaasPolicyPtrOutput {
	return i.ToWaasWaasPolicyPtrOutputWithContext(context.Background())
}

func (i *WaasWaasPolicy) ToWaasWaasPolicyPtrOutputWithContext(ctx context.Context) WaasWaasPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasWaasPolicyPtrOutput)
}

type WaasWaasPolicyPtrInput interface {
	pulumi.Input

	ToWaasWaasPolicyPtrOutput() WaasWaasPolicyPtrOutput
	ToWaasWaasPolicyPtrOutputWithContext(ctx context.Context) WaasWaasPolicyPtrOutput
}

type waasWaasPolicyPtrType WaasWaasPolicyArgs

func (*waasWaasPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasWaasPolicy)(nil))
}

func (i *waasWaasPolicyPtrType) ToWaasWaasPolicyPtrOutput() WaasWaasPolicyPtrOutput {
	return i.ToWaasWaasPolicyPtrOutputWithContext(context.Background())
}

func (i *waasWaasPolicyPtrType) ToWaasWaasPolicyPtrOutputWithContext(ctx context.Context) WaasWaasPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasWaasPolicyPtrOutput)
}

// WaasWaasPolicyArrayInput is an input type that accepts WaasWaasPolicyArray and WaasWaasPolicyArrayOutput values.
// You can construct a concrete instance of `WaasWaasPolicyArrayInput` via:
//
//          WaasWaasPolicyArray{ WaasWaasPolicyArgs{...} }
type WaasWaasPolicyArrayInput interface {
	pulumi.Input

	ToWaasWaasPolicyArrayOutput() WaasWaasPolicyArrayOutput
	ToWaasWaasPolicyArrayOutputWithContext(context.Context) WaasWaasPolicyArrayOutput
}

type WaasWaasPolicyArray []WaasWaasPolicyInput

func (WaasWaasPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaasWaasPolicy)(nil)).Elem()
}

func (i WaasWaasPolicyArray) ToWaasWaasPolicyArrayOutput() WaasWaasPolicyArrayOutput {
	return i.ToWaasWaasPolicyArrayOutputWithContext(context.Background())
}

func (i WaasWaasPolicyArray) ToWaasWaasPolicyArrayOutputWithContext(ctx context.Context) WaasWaasPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasWaasPolicyArrayOutput)
}

// WaasWaasPolicyMapInput is an input type that accepts WaasWaasPolicyMap and WaasWaasPolicyMapOutput values.
// You can construct a concrete instance of `WaasWaasPolicyMapInput` via:
//
//          WaasWaasPolicyMap{ "key": WaasWaasPolicyArgs{...} }
type WaasWaasPolicyMapInput interface {
	pulumi.Input

	ToWaasWaasPolicyMapOutput() WaasWaasPolicyMapOutput
	ToWaasWaasPolicyMapOutputWithContext(context.Context) WaasWaasPolicyMapOutput
}

type WaasWaasPolicyMap map[string]WaasWaasPolicyInput

func (WaasWaasPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaasWaasPolicy)(nil)).Elem()
}

func (i WaasWaasPolicyMap) ToWaasWaasPolicyMapOutput() WaasWaasPolicyMapOutput {
	return i.ToWaasWaasPolicyMapOutputWithContext(context.Background())
}

func (i WaasWaasPolicyMap) ToWaasWaasPolicyMapOutputWithContext(ctx context.Context) WaasWaasPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasWaasPolicyMapOutput)
}

type WaasWaasPolicyOutput struct {
	*pulumi.OutputState
}

func (WaasWaasPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasWaasPolicy)(nil))
}

func (o WaasWaasPolicyOutput) ToWaasWaasPolicyOutput() WaasWaasPolicyOutput {
	return o
}

func (o WaasWaasPolicyOutput) ToWaasWaasPolicyOutputWithContext(ctx context.Context) WaasWaasPolicyOutput {
	return o
}

func (o WaasWaasPolicyOutput) ToWaasWaasPolicyPtrOutput() WaasWaasPolicyPtrOutput {
	return o.ToWaasWaasPolicyPtrOutputWithContext(context.Background())
}

func (o WaasWaasPolicyOutput) ToWaasWaasPolicyPtrOutputWithContext(ctx context.Context) WaasWaasPolicyPtrOutput {
	return o.ApplyT(func(v WaasWaasPolicy) *WaasWaasPolicy {
		return &v
	}).(WaasWaasPolicyPtrOutput)
}

type WaasWaasPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (WaasWaasPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasWaasPolicy)(nil))
}

func (o WaasWaasPolicyPtrOutput) ToWaasWaasPolicyPtrOutput() WaasWaasPolicyPtrOutput {
	return o
}

func (o WaasWaasPolicyPtrOutput) ToWaasWaasPolicyPtrOutputWithContext(ctx context.Context) WaasWaasPolicyPtrOutput {
	return o
}

type WaasWaasPolicyArrayOutput struct{ *pulumi.OutputState }

func (WaasWaasPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WaasWaasPolicy)(nil))
}

func (o WaasWaasPolicyArrayOutput) ToWaasWaasPolicyArrayOutput() WaasWaasPolicyArrayOutput {
	return o
}

func (o WaasWaasPolicyArrayOutput) ToWaasWaasPolicyArrayOutputWithContext(ctx context.Context) WaasWaasPolicyArrayOutput {
	return o
}

func (o WaasWaasPolicyArrayOutput) Index(i pulumi.IntInput) WaasWaasPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WaasWaasPolicy {
		return vs[0].([]WaasWaasPolicy)[vs[1].(int)]
	}).(WaasWaasPolicyOutput)
}

type WaasWaasPolicyMapOutput struct{ *pulumi.OutputState }

func (WaasWaasPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaasWaasPolicy)(nil))
}

func (o WaasWaasPolicyMapOutput) ToWaasWaasPolicyMapOutput() WaasWaasPolicyMapOutput {
	return o
}

func (o WaasWaasPolicyMapOutput) ToWaasWaasPolicyMapOutputWithContext(ctx context.Context) WaasWaasPolicyMapOutput {
	return o
}

func (o WaasWaasPolicyMapOutput) MapIndex(k pulumi.StringInput) WaasWaasPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WaasWaasPolicy {
		return vs[0].(map[string]WaasWaasPolicy)[vs[1].(string)]
	}).(WaasWaasPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(WaasWaasPolicyOutput{})
	pulumi.RegisterOutputType(WaasWaasPolicyPtrOutput{})
	pulumi.RegisterOutputType(WaasWaasPolicyArrayOutput{})
	pulumi.RegisterOutputType(WaasWaasPolicyMapOutput{})
}
