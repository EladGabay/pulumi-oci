// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetServiceCatalogPrivateApplicationPackages
    {
        /// <summary>
        /// This data source provides the list of Private Application Packages in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Lists the packages in the specified private application.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testPrivateApplicationPackages = Output.Create(Oci.GetServiceCatalogPrivateApplicationPackages.InvokeAsync(new Oci.GetServiceCatalogPrivateApplicationPackagesArgs
        ///         {
        ///             PrivateApplicationId = oci_service_catalog_private_application.Test_private_application.Id,
        ///             DisplayName = @var.Private_application_package_display_name,
        ///             PackageTypes = @var.Private_application_package_package_type,
        ///             PrivateApplicationPackageId = oci_service_catalog_private_application_package.Test_private_application_package.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceCatalogPrivateApplicationPackagesResult> InvokeAsync(GetServiceCatalogPrivateApplicationPackagesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceCatalogPrivateApplicationPackagesResult>("oci:index/getServiceCatalogPrivateApplicationPackages:GetServiceCatalogPrivateApplicationPackages", args ?? new GetServiceCatalogPrivateApplicationPackagesArgs(), options.WithVersion());
    }


    public sealed class GetServiceCatalogPrivateApplicationPackagesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Exact match name filter.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetServiceCatalogPrivateApplicationPackagesFilterArgs>? _filters;
        public List<Inputs.GetServiceCatalogPrivateApplicationPackagesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServiceCatalogPrivateApplicationPackagesFilterArgs>());
            set => _filters = value;
        }

        [Input("packageTypes")]
        private List<string>? _packageTypes;

        /// <summary>
        /// Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
        /// </summary>
        public List<string> PackageTypes
        {
            get => _packageTypes ?? (_packageTypes = new List<string>());
            set => _packageTypes = value;
        }

        /// <summary>
        /// The unique identifier for the private application.
        /// </summary>
        [Input("privateApplicationId", required: true)]
        public string PrivateApplicationId { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the private application package.
        /// </summary>
        [Input("privateApplicationPackageId")]
        public string? PrivateApplicationPackageId { get; set; }

        public GetServiceCatalogPrivateApplicationPackagesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceCatalogPrivateApplicationPackagesResult
    {
        /// <summary>
        /// The display name of the package.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetServiceCatalogPrivateApplicationPackagesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The specified package's type.
        /// </summary>
        public readonly ImmutableArray<string> PackageTypes;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application where the package is hosted.
        /// </summary>
        public readonly string PrivateApplicationId;
        /// <summary>
        /// The list of private_application_package_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceCatalogPrivateApplicationPackagesPrivateApplicationPackageCollectionResult> PrivateApplicationPackageCollections;
        public readonly string? PrivateApplicationPackageId;

        [OutputConstructor]
        private GetServiceCatalogPrivateApplicationPackagesResult(
            string? displayName,

            ImmutableArray<Outputs.GetServiceCatalogPrivateApplicationPackagesFilterResult> filters,

            string id,

            ImmutableArray<string> packageTypes,

            string privateApplicationId,

            ImmutableArray<Outputs.GetServiceCatalogPrivateApplicationPackagesPrivateApplicationPackageCollectionResult> privateApplicationPackageCollections,

            string? privateApplicationPackageId)
        {
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            PackageTypes = packageTypes;
            PrivateApplicationId = privateApplicationId;
            PrivateApplicationPackageCollections = privateApplicationPackageCollections;
            PrivateApplicationPackageId = privateApplicationPackageId;
        }
    }
}
