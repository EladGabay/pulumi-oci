// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetBudgetAlertRules
    {
        /// <summary>
        /// This data source provides the list of Alert Rules in Oracle Cloud Infrastructure Budget service.
        /// 
        /// Returns a list of Alert Rules for a specified Budget.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAlertRules = Output.Create(Oci.GetBudgetAlertRules.InvokeAsync(new Oci.GetBudgetAlertRulesArgs
        ///         {
        ///             BudgetId = oci_budget_budget.Test_budget.Id,
        ///             DisplayName = @var.Alert_rule_display_name,
        ///             State = @var.Alert_rule_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBudgetAlertRulesResult> InvokeAsync(GetBudgetAlertRulesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBudgetAlertRulesResult>("oci:index/getBudgetAlertRules:GetBudgetAlertRules", args ?? new GetBudgetAlertRulesArgs(), options.WithVersion());
    }


    public sealed class GetBudgetAlertRulesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique Budget OCID
        /// </summary>
        [Input("budgetId", required: true)]
        public string BudgetId { get; set; } = null!;

        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetBudgetAlertRulesFilterArgs>? _filters;
        public List<Inputs.GetBudgetAlertRulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBudgetAlertRulesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the resource to filter by.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetBudgetAlertRulesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBudgetAlertRulesResult
    {
        /// <summary>
        /// The list of alert_rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBudgetAlertRulesAlertRuleResult> AlertRules;
        /// <summary>
        /// The OCID of the budget
        /// </summary>
        public readonly string BudgetId;
        /// <summary>
        /// The name of the alert rule.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetBudgetAlertRulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the alert rule.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetBudgetAlertRulesResult(
            ImmutableArray<Outputs.GetBudgetAlertRulesAlertRuleResult> alertRules,

            string budgetId,

            string? displayName,

            ImmutableArray<Outputs.GetBudgetAlertRulesFilterResult> filters,

            string id,

            string? state)
        {
            AlertRules = alertRules;
            BudgetId = budgetId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
