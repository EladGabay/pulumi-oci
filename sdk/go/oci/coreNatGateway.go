// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Nat Gateway resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new NAT gateway for the specified VCN. You must also set up a route rule with the
// NAT gateway as the rule's target. See [Route Table](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/RouteTable/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreNatGateway(ctx, "testNatGateway", &oci.CoreNatGatewayArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			VcnId:         pulumi.Any(oci_core_vcn.Test_vcn.Id),
// 			BlockTraffic:  pulumi.Any(_var.Nat_gateway_block_traffic),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Nat_gateway_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			PublicIpId: pulumi.Any(oci_core_public_ip.Test_public_ip.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NatGateways can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreNatGateway:CoreNatGateway test_nat_gateway "id"
// ```
type CoreNatGateway struct {
	pulumi.CustomResourceState

	// (Updatable) Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
	BlockTraffic pulumi.BoolOutput `pulumi:"blockTraffic"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the NAT gateway.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The IP address associated with the NAT gateway.
	NatIp pulumi.StringOutput `pulumi:"natIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
	PublicIpId pulumi.StringOutput `pulumi:"publicIpId"`
	// The NAT gateway's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the NAT gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the gateway belongs to.
	VcnId pulumi.StringOutput `pulumi:"vcnId"`
}

// NewCoreNatGateway registers a new resource with the given unique name, arguments, and options.
func NewCoreNatGateway(ctx *pulumi.Context,
	name string, args *CoreNatGatewayArgs, opts ...pulumi.ResourceOption) (*CoreNatGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.VcnId == nil {
		return nil, errors.New("invalid value for required argument 'VcnId'")
	}
	var resource CoreNatGateway
	err := ctx.RegisterResource("oci:index/coreNatGateway:CoreNatGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreNatGateway gets an existing CoreNatGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreNatGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreNatGatewayState, opts ...pulumi.ResourceOption) (*CoreNatGateway, error) {
	var resource CoreNatGateway
	err := ctx.ReadResource("oci:index/coreNatGateway:CoreNatGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreNatGateway resources.
type coreNatGatewayState struct {
	// (Updatable) Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
	BlockTraffic *bool `pulumi:"blockTraffic"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the NAT gateway.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The IP address associated with the NAT gateway.
	NatIp *string `pulumi:"natIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
	PublicIpId *string `pulumi:"publicIpId"`
	// The NAT gateway's current state.
	State *string `pulumi:"state"`
	// The date and time the NAT gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the gateway belongs to.
	VcnId *string `pulumi:"vcnId"`
}

type CoreNatGatewayState struct {
	// (Updatable) Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
	BlockTraffic pulumi.BoolPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the NAT gateway.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The IP address associated with the NAT gateway.
	NatIp pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
	PublicIpId pulumi.StringPtrInput
	// The NAT gateway's current state.
	State pulumi.StringPtrInput
	// The date and time the NAT gateway was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the gateway belongs to.
	VcnId pulumi.StringPtrInput
}

func (CoreNatGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreNatGatewayState)(nil)).Elem()
}

type coreNatGatewayArgs struct {
	// (Updatable) Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
	BlockTraffic *bool `pulumi:"blockTraffic"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the NAT gateway.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
	PublicIpId *string `pulumi:"publicIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the gateway belongs to.
	VcnId string `pulumi:"vcnId"`
}

// The set of arguments for constructing a CoreNatGateway resource.
type CoreNatGatewayArgs struct {
	// (Updatable) Whether the NAT gateway blocks traffic through it. The default is `false`.  Example: `true`
	BlockTraffic pulumi.BoolPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the NAT gateway.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the public IP address associated with the NAT gateway.
	PublicIpId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the gateway belongs to.
	VcnId pulumi.StringInput
}

func (CoreNatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreNatGatewayArgs)(nil)).Elem()
}

type CoreNatGatewayInput interface {
	pulumi.Input

	ToCoreNatGatewayOutput() CoreNatGatewayOutput
	ToCoreNatGatewayOutputWithContext(ctx context.Context) CoreNatGatewayOutput
}

func (*CoreNatGateway) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNatGateway)(nil))
}

func (i *CoreNatGateway) ToCoreNatGatewayOutput() CoreNatGatewayOutput {
	return i.ToCoreNatGatewayOutputWithContext(context.Background())
}

func (i *CoreNatGateway) ToCoreNatGatewayOutputWithContext(ctx context.Context) CoreNatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreNatGatewayOutput)
}

func (i *CoreNatGateway) ToCoreNatGatewayPtrOutput() CoreNatGatewayPtrOutput {
	return i.ToCoreNatGatewayPtrOutputWithContext(context.Background())
}

func (i *CoreNatGateway) ToCoreNatGatewayPtrOutputWithContext(ctx context.Context) CoreNatGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreNatGatewayPtrOutput)
}

type CoreNatGatewayPtrInput interface {
	pulumi.Input

	ToCoreNatGatewayPtrOutput() CoreNatGatewayPtrOutput
	ToCoreNatGatewayPtrOutputWithContext(ctx context.Context) CoreNatGatewayPtrOutput
}

type coreNatGatewayPtrType CoreNatGatewayArgs

func (*coreNatGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreNatGateway)(nil))
}

func (i *coreNatGatewayPtrType) ToCoreNatGatewayPtrOutput() CoreNatGatewayPtrOutput {
	return i.ToCoreNatGatewayPtrOutputWithContext(context.Background())
}

func (i *coreNatGatewayPtrType) ToCoreNatGatewayPtrOutputWithContext(ctx context.Context) CoreNatGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreNatGatewayPtrOutput)
}

// CoreNatGatewayArrayInput is an input type that accepts CoreNatGatewayArray and CoreNatGatewayArrayOutput values.
// You can construct a concrete instance of `CoreNatGatewayArrayInput` via:
//
//          CoreNatGatewayArray{ CoreNatGatewayArgs{...} }
type CoreNatGatewayArrayInput interface {
	pulumi.Input

	ToCoreNatGatewayArrayOutput() CoreNatGatewayArrayOutput
	ToCoreNatGatewayArrayOutputWithContext(context.Context) CoreNatGatewayArrayOutput
}

type CoreNatGatewayArray []CoreNatGatewayInput

func (CoreNatGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreNatGateway)(nil)).Elem()
}

func (i CoreNatGatewayArray) ToCoreNatGatewayArrayOutput() CoreNatGatewayArrayOutput {
	return i.ToCoreNatGatewayArrayOutputWithContext(context.Background())
}

func (i CoreNatGatewayArray) ToCoreNatGatewayArrayOutputWithContext(ctx context.Context) CoreNatGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreNatGatewayArrayOutput)
}

// CoreNatGatewayMapInput is an input type that accepts CoreNatGatewayMap and CoreNatGatewayMapOutput values.
// You can construct a concrete instance of `CoreNatGatewayMapInput` via:
//
//          CoreNatGatewayMap{ "key": CoreNatGatewayArgs{...} }
type CoreNatGatewayMapInput interface {
	pulumi.Input

	ToCoreNatGatewayMapOutput() CoreNatGatewayMapOutput
	ToCoreNatGatewayMapOutputWithContext(context.Context) CoreNatGatewayMapOutput
}

type CoreNatGatewayMap map[string]CoreNatGatewayInput

func (CoreNatGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreNatGateway)(nil)).Elem()
}

func (i CoreNatGatewayMap) ToCoreNatGatewayMapOutput() CoreNatGatewayMapOutput {
	return i.ToCoreNatGatewayMapOutputWithContext(context.Background())
}

func (i CoreNatGatewayMap) ToCoreNatGatewayMapOutputWithContext(ctx context.Context) CoreNatGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreNatGatewayMapOutput)
}

type CoreNatGatewayOutput struct {
	*pulumi.OutputState
}

func (CoreNatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNatGateway)(nil))
}

func (o CoreNatGatewayOutput) ToCoreNatGatewayOutput() CoreNatGatewayOutput {
	return o
}

func (o CoreNatGatewayOutput) ToCoreNatGatewayOutputWithContext(ctx context.Context) CoreNatGatewayOutput {
	return o
}

func (o CoreNatGatewayOutput) ToCoreNatGatewayPtrOutput() CoreNatGatewayPtrOutput {
	return o.ToCoreNatGatewayPtrOutputWithContext(context.Background())
}

func (o CoreNatGatewayOutput) ToCoreNatGatewayPtrOutputWithContext(ctx context.Context) CoreNatGatewayPtrOutput {
	return o.ApplyT(func(v CoreNatGateway) *CoreNatGateway {
		return &v
	}).(CoreNatGatewayPtrOutput)
}

type CoreNatGatewayPtrOutput struct {
	*pulumi.OutputState
}

func (CoreNatGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreNatGateway)(nil))
}

func (o CoreNatGatewayPtrOutput) ToCoreNatGatewayPtrOutput() CoreNatGatewayPtrOutput {
	return o
}

func (o CoreNatGatewayPtrOutput) ToCoreNatGatewayPtrOutputWithContext(ctx context.Context) CoreNatGatewayPtrOutput {
	return o
}

type CoreNatGatewayArrayOutput struct{ *pulumi.OutputState }

func (CoreNatGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreNatGateway)(nil))
}

func (o CoreNatGatewayArrayOutput) ToCoreNatGatewayArrayOutput() CoreNatGatewayArrayOutput {
	return o
}

func (o CoreNatGatewayArrayOutput) ToCoreNatGatewayArrayOutputWithContext(ctx context.Context) CoreNatGatewayArrayOutput {
	return o
}

func (o CoreNatGatewayArrayOutput) Index(i pulumi.IntInput) CoreNatGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreNatGateway {
		return vs[0].([]CoreNatGateway)[vs[1].(int)]
	}).(CoreNatGatewayOutput)
}

type CoreNatGatewayMapOutput struct{ *pulumi.OutputState }

func (CoreNatGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreNatGateway)(nil))
}

func (o CoreNatGatewayMapOutput) ToCoreNatGatewayMapOutput() CoreNatGatewayMapOutput {
	return o
}

func (o CoreNatGatewayMapOutput) ToCoreNatGatewayMapOutputWithContext(ctx context.Context) CoreNatGatewayMapOutput {
	return o
}

func (o CoreNatGatewayMapOutput) MapIndex(k pulumi.StringInput) CoreNatGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreNatGateway {
		return vs[0].(map[string]CoreNatGateway)[vs[1].(string)]
	}).(CoreNatGatewayOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreNatGatewayOutput{})
	pulumi.RegisterOutputType(CoreNatGatewayPtrOutput{})
	pulumi.RegisterOutputType(CoreNatGatewayArrayOutput{})
	pulumi.RegisterOutputType(CoreNatGatewayMapOutput{})
}
