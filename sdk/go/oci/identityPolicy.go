// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Policy resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new policy in the specified compartment (either the tenancy or another of your compartments).
// If you're new to policies, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
//
// You must specify a *name* for the policy, which must be unique across all policies in your tenancy
// and cannot be changed.
//
// You must also specify a *description* for the policy (although it can be an empty string). It does not
// have to be unique, and you can change it anytime with [UpdatePolicy](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Policy/UpdatePolicy).
//
// You must specify one or more policy statements in the statements array. For information about writing
// policies, see [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and
// [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
// New policies take effect typically within 10 seconds.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityPolicy(ctx, "testPolicy", &oci.IdentityPolicyArgs{
// 			CompartmentId: pulumi.Any(_var.Tenancy_ocid),
// 			Description:   pulumi.Any(_var.Policy_description),
// 			Statements:    pulumi.Any(_var.Policy_statements),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			VersionDate: pulumi.Any(_var.Policy_version_date),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Policies can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityPolicy:IdentityPolicy test_policy "id"
// ```
type IdentityPolicy struct {
	pulumi.CustomResourceState

	// Deprecated: The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field.
	ETag pulumi.StringOutput `pulumi:"ETag"`
	// The OCID of the compartment containing the policy (either the tenancy or another compartment).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the policy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// Deprecated: The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field.
	LastUpdateETag pulumi.StringOutput `pulumi:"lastUpdateETag"`
	// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// Deprecated: The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field.
	PolicyHash pulumi.StringOutput `pulumi:"policyHash"`
	// The policy's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) An array of policy statements written in the policy language. See [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
	Statements pulumi.StringArrayOutput `pulumi:"statements"`
	// Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
	VersionDate pulumi.StringOutput `pulumi:"versionDate"`
}

// NewIdentityPolicy registers a new resource with the given unique name, arguments, and options.
func NewIdentityPolicy(ctx *pulumi.Context,
	name string, args *IdentityPolicyArgs, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Statements == nil {
		return nil, errors.New("invalid value for required argument 'Statements'")
	}
	var resource IdentityPolicy
	err := ctx.RegisterResource("oci:index/identityPolicy:IdentityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPolicy gets an existing IdentityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPolicyState, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	var resource IdentityPolicy
	err := ctx.ReadResource("oci:index/identityPolicy:IdentityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPolicy resources.
type identityPolicyState struct {
	// Deprecated: The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field.
	ETag *string `pulumi:"ETag"`
	// The OCID of the compartment containing the policy (either the tenancy or another compartment).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the policy during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// Deprecated: The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field.
	LastUpdateETag *string `pulumi:"lastUpdateETag"`
	// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// Deprecated: The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field.
	PolicyHash *string `pulumi:"policyHash"`
	// The policy's current state.
	State *string `pulumi:"state"`
	// (Updatable) An array of policy statements written in the policy language. See [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
	Statements []string `pulumi:"statements"`
	// Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
	VersionDate *string `pulumi:"versionDate"`
}

type IdentityPolicyState struct {
	// Deprecated: The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field.
	ETag pulumi.StringPtrInput
	// The OCID of the compartment containing the policy (either the tenancy or another compartment).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the policy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// Deprecated: The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field.
	LastUpdateETag pulumi.StringPtrInput
	// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// Deprecated: The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field.
	PolicyHash pulumi.StringPtrInput
	// The policy's current state.
	State pulumi.StringPtrInput
	// (Updatable) An array of policy statements written in the policy language. See [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
	Statements pulumi.StringArrayInput
	// Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
	VersionDate pulumi.StringPtrInput
}

func (IdentityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyState)(nil)).Elem()
}

type identityPolicyArgs struct {
	// The OCID of the compartment containing the policy (either the tenancy or another compartment).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the policy during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) An array of policy statements written in the policy language. See [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
	Statements []string `pulumi:"statements"`
	// (Updatable) The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
	VersionDate *string `pulumi:"versionDate"`
}

// The set of arguments for constructing a IdentityPolicy resource.
type IdentityPolicyArgs struct {
	// The OCID of the compartment containing the policy (either the tenancy or another compartment).
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the policy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name you assign to the policy during creation. The name must be unique across all policies in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) An array of policy statements written in the policy language. See [How Policies Work](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policies.htm) and [Common Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/commonpolicies.htm).
	Statements pulumi.StringArrayInput
	// (Updatable) The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
	VersionDate pulumi.StringPtrInput
}

func (IdentityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyArgs)(nil)).Elem()
}

type IdentityPolicyInput interface {
	pulumi.Input

	ToIdentityPolicyOutput() IdentityPolicyOutput
	ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput
}

func (*IdentityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPolicy)(nil))
}

func (i *IdentityPolicy) ToIdentityPolicyOutput() IdentityPolicyOutput {
	return i.ToIdentityPolicyOutputWithContext(context.Background())
}

func (i *IdentityPolicy) ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyOutput)
}

func (i *IdentityPolicy) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return i.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (i *IdentityPolicy) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyPtrOutput)
}

type IdentityPolicyPtrInput interface {
	pulumi.Input

	ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput
	ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput
}

type identityPolicyPtrType IdentityPolicyArgs

func (*identityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPolicy)(nil))
}

func (i *identityPolicyPtrType) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return i.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (i *identityPolicyPtrType) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyPtrOutput)
}

// IdentityPolicyArrayInput is an input type that accepts IdentityPolicyArray and IdentityPolicyArrayOutput values.
// You can construct a concrete instance of `IdentityPolicyArrayInput` via:
//
//          IdentityPolicyArray{ IdentityPolicyArgs{...} }
type IdentityPolicyArrayInput interface {
	pulumi.Input

	ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput
	ToIdentityPolicyArrayOutputWithContext(context.Context) IdentityPolicyArrayOutput
}

type IdentityPolicyArray []IdentityPolicyInput

func (IdentityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityPolicy)(nil)).Elem()
}

func (i IdentityPolicyArray) ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput {
	return i.ToIdentityPolicyArrayOutputWithContext(context.Background())
}

func (i IdentityPolicyArray) ToIdentityPolicyArrayOutputWithContext(ctx context.Context) IdentityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyArrayOutput)
}

// IdentityPolicyMapInput is an input type that accepts IdentityPolicyMap and IdentityPolicyMapOutput values.
// You can construct a concrete instance of `IdentityPolicyMapInput` via:
//
//          IdentityPolicyMap{ "key": IdentityPolicyArgs{...} }
type IdentityPolicyMapInput interface {
	pulumi.Input

	ToIdentityPolicyMapOutput() IdentityPolicyMapOutput
	ToIdentityPolicyMapOutputWithContext(context.Context) IdentityPolicyMapOutput
}

type IdentityPolicyMap map[string]IdentityPolicyInput

func (IdentityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityPolicy)(nil)).Elem()
}

func (i IdentityPolicyMap) ToIdentityPolicyMapOutput() IdentityPolicyMapOutput {
	return i.ToIdentityPolicyMapOutputWithContext(context.Background())
}

func (i IdentityPolicyMap) ToIdentityPolicyMapOutputWithContext(ctx context.Context) IdentityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyMapOutput)
}

type IdentityPolicyOutput struct {
	*pulumi.OutputState
}

func (IdentityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPolicy)(nil))
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutput() IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return o.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityPolicyOutput) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return o.ApplyT(func(v IdentityPolicy) *IdentityPolicy {
		return &v
	}).(IdentityPolicyPtrOutput)
}

type IdentityPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPolicy)(nil))
}

func (o IdentityPolicyPtrOutput) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return o
}

func (o IdentityPolicyPtrOutput) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return o
}

type IdentityPolicyArrayOutput struct{ *pulumi.OutputState }

func (IdentityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPolicy)(nil))
}

func (o IdentityPolicyArrayOutput) ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput {
	return o
}

func (o IdentityPolicyArrayOutput) ToIdentityPolicyArrayOutputWithContext(ctx context.Context) IdentityPolicyArrayOutput {
	return o
}

func (o IdentityPolicyArrayOutput) Index(i pulumi.IntInput) IdentityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPolicy {
		return vs[0].([]IdentityPolicy)[vs[1].(int)]
	}).(IdentityPolicyOutput)
}

type IdentityPolicyMapOutput struct{ *pulumi.OutputState }

func (IdentityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityPolicy)(nil))
}

func (o IdentityPolicyMapOutput) ToIdentityPolicyMapOutput() IdentityPolicyMapOutput {
	return o
}

func (o IdentityPolicyMapOutput) ToIdentityPolicyMapOutputWithContext(ctx context.Context) IdentityPolicyMapOutput {
	return o
}

func (o IdentityPolicyMapOutput) MapIndex(k pulumi.StringInput) IdentityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityPolicy {
		return vs[0].(map[string]IdentityPolicy)[vs[1].(string)]
	}).(IdentityPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityPolicyOutput{})
	pulumi.RegisterOutputType(IdentityPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityPolicyArrayOutput{})
	pulumi.RegisterOutputType(IdentityPolicyMapOutput{})
}
