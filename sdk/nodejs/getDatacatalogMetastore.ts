// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides details about a specific Metastore resource in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Gets a metastore by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMetastore = oci.GetDatacatalogMetastore({
 *     metastoreId: oci_datacatalog_metastore.test_metastore.id,
 * });
 * ```
 */
export function getDatacatalogMetastore(args: GetDatacatalogMetastoreArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacatalogMetastoreResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getDatacatalogMetastore:GetDatacatalogMetastore", {
        "metastoreId": args.metastoreId,
    }, opts);
}

/**
 * A collection of arguments for invoking GetDatacatalogMetastore.
 */
export interface GetDatacatalogMetastoreArgs {
    /**
     * The metastore's OCID.
     */
    metastoreId: string;
}

/**
 * A collection of values returned by GetDatacatalogMetastore.
 */
export interface GetDatacatalogMetastoreResult {
    /**
     * OCID of the compartment which holds the metastore.
     */
    readonly compartmentId: string;
    /**
     * Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
     */
    readonly defaultExternalTableLocation: string;
    /**
     * Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
     */
    readonly defaultManagedTableLocation: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Mutable name of the metastore.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The metastore's OCID.
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    readonly metastoreId: string;
    /**
     * The current state of the metastore.
     */
    readonly state: string;
    /**
     * Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeUpdated: string;
}
