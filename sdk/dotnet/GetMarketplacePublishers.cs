// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMarketplacePublishers
    {
        /// <summary>
        /// This data source provides the list of Publishers in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Gets the list of all the publishers of listings available in Oracle Cloud Infrastructure Marketplace.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testPublishers = Output.Create(Oci.GetMarketplacePublishers.InvokeAsync(new Oci.GetMarketplacePublishersArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             PublisherId = oci_marketplace_publisher.Test_publisher.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMarketplacePublishersResult> InvokeAsync(GetMarketplacePublishersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMarketplacePublishersResult>("oci:index/getMarketplacePublishers:GetMarketplacePublishers", args ?? new GetMarketplacePublishersArgs(), options.WithVersion());
    }


    public sealed class GetMarketplacePublishersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetMarketplacePublishersFilterArgs>? _filters;
        public List<Inputs.GetMarketplacePublishersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMarketplacePublishersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Limit results to just this publisher.
        /// </summary>
        [Input("publisherId")]
        public string? PublisherId { get; set; }

        public GetMarketplacePublishersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMarketplacePublishersResult
    {
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetMarketplacePublishersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? PublisherId;
        /// <summary>
        /// The list of publishers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplacePublishersPublisherResult> Publishers;

        [OutputConstructor]
        private GetMarketplacePublishersResult(
            string? compartmentId,

            ImmutableArray<Outputs.GetMarketplacePublishersFilterResult> filters,

            string id,

            string? publisherId,

            ImmutableArray<Outputs.GetMarketplacePublishersPublisherResult> publishers)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            PublisherId = publisherId;
            Publishers = publishers;
        }
    }
}
