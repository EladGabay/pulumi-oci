// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Tag Namespace resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a new tag namespace in the specified compartment.
//
// You must specify the compartment ID in the request object (remember that the tenancy is simply the root
// compartment).
//
// You must also specify a *name* for the namespace, which must be unique across all namespaces in your tenancy
// and cannot be changed. The name can contain any ASCII character except the space (_) or period (.).
// Names are case insensitive. That means, for example, "myNamespace" and "mynamespace" are not allowed
// in the same tenancy. Once you created a namespace, you cannot change the name.
// If you specify a name that's already in use in the tenancy, a 409 error is returned.
//
// You must also specify a *description* for the namespace.
// It does not have to be unique, and you can change it with
// [UpdateTagNamespace](https://docs.cloud.oracle.com/iaas/api/#/en/identity/latest/TagNamespace/UpdateTagNamespace).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityTagNamespace(ctx, "testTagNamespace", &oci.IdentityTagNamespaceArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Description:   pulumi.Any(_var.Tag_namespace_description),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsRetired: pulumi.Bool(false),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// TagNamespaces can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityTagNamespace:IdentityTagNamespace test_tag_namespace "id"
// ```
type IdentityTagNamespace struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolOutput `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewIdentityTagNamespace registers a new resource with the given unique name, arguments, and options.
func NewIdentityTagNamespace(ctx *pulumi.Context,
	name string, args *IdentityTagNamespaceArgs, opts ...pulumi.ResourceOption) (*IdentityTagNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	var resource IdentityTagNamespace
	err := ctx.RegisterResource("oci:index/identityTagNamespace:IdentityTagNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityTagNamespace gets an existing IdentityTagNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityTagNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityTagNamespaceState, opts ...pulumi.ResourceOption) (*IdentityTagNamespace, error) {
	var resource IdentityTagNamespace
	err := ctx.ReadResource("oci:index/identityTagNamespace:IdentityTagNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityTagNamespace resources.
type identityTagNamespaceState struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State *string `pulumi:"state"`
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type IdentityTagNamespaceState struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
	// The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
	State pulumi.StringPtrInput
	// Date and time the tag namespace was created, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (IdentityTagNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagNamespaceState)(nil)).Elem()
}

type identityTagNamespaceArgs struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description you assign to the tag namespace during creation.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired *bool `pulumi:"isRetired"`
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a IdentityTagNamespace resource.
type IdentityTagNamespaceArgs struct {
	// (Updatable) The OCID of the tenancy containing the tag namespace.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description you assign to the tag namespace during creation.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Whether the tag namespace is retired. For more information, see [Retiring Key Definitions and Namespace Definitions](https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
	IsRetired pulumi.BoolPtrInput
	// The name you assign to the tag namespace during creation. It must be unique across all tag namespaces in the tenancy and cannot be changed.
	Name pulumi.StringPtrInput
}

func (IdentityTagNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityTagNamespaceArgs)(nil)).Elem()
}

type IdentityTagNamespaceInput interface {
	pulumi.Input

	ToIdentityTagNamespaceOutput() IdentityTagNamespaceOutput
	ToIdentityTagNamespaceOutputWithContext(ctx context.Context) IdentityTagNamespaceOutput
}

func (*IdentityTagNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTagNamespace)(nil))
}

func (i *IdentityTagNamespace) ToIdentityTagNamespaceOutput() IdentityTagNamespaceOutput {
	return i.ToIdentityTagNamespaceOutputWithContext(context.Background())
}

func (i *IdentityTagNamespace) ToIdentityTagNamespaceOutputWithContext(ctx context.Context) IdentityTagNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagNamespaceOutput)
}

func (i *IdentityTagNamespace) ToIdentityTagNamespacePtrOutput() IdentityTagNamespacePtrOutput {
	return i.ToIdentityTagNamespacePtrOutputWithContext(context.Background())
}

func (i *IdentityTagNamespace) ToIdentityTagNamespacePtrOutputWithContext(ctx context.Context) IdentityTagNamespacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagNamespacePtrOutput)
}

type IdentityTagNamespacePtrInput interface {
	pulumi.Input

	ToIdentityTagNamespacePtrOutput() IdentityTagNamespacePtrOutput
	ToIdentityTagNamespacePtrOutputWithContext(ctx context.Context) IdentityTagNamespacePtrOutput
}

type identityTagNamespacePtrType IdentityTagNamespaceArgs

func (*identityTagNamespacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTagNamespace)(nil))
}

func (i *identityTagNamespacePtrType) ToIdentityTagNamespacePtrOutput() IdentityTagNamespacePtrOutput {
	return i.ToIdentityTagNamespacePtrOutputWithContext(context.Background())
}

func (i *identityTagNamespacePtrType) ToIdentityTagNamespacePtrOutputWithContext(ctx context.Context) IdentityTagNamespacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagNamespacePtrOutput)
}

// IdentityTagNamespaceArrayInput is an input type that accepts IdentityTagNamespaceArray and IdentityTagNamespaceArrayOutput values.
// You can construct a concrete instance of `IdentityTagNamespaceArrayInput` via:
//
//          IdentityTagNamespaceArray{ IdentityTagNamespaceArgs{...} }
type IdentityTagNamespaceArrayInput interface {
	pulumi.Input

	ToIdentityTagNamespaceArrayOutput() IdentityTagNamespaceArrayOutput
	ToIdentityTagNamespaceArrayOutputWithContext(context.Context) IdentityTagNamespaceArrayOutput
}

type IdentityTagNamespaceArray []IdentityTagNamespaceInput

func (IdentityTagNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityTagNamespace)(nil)).Elem()
}

func (i IdentityTagNamespaceArray) ToIdentityTagNamespaceArrayOutput() IdentityTagNamespaceArrayOutput {
	return i.ToIdentityTagNamespaceArrayOutputWithContext(context.Background())
}

func (i IdentityTagNamespaceArray) ToIdentityTagNamespaceArrayOutputWithContext(ctx context.Context) IdentityTagNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagNamespaceArrayOutput)
}

// IdentityTagNamespaceMapInput is an input type that accepts IdentityTagNamespaceMap and IdentityTagNamespaceMapOutput values.
// You can construct a concrete instance of `IdentityTagNamespaceMapInput` via:
//
//          IdentityTagNamespaceMap{ "key": IdentityTagNamespaceArgs{...} }
type IdentityTagNamespaceMapInput interface {
	pulumi.Input

	ToIdentityTagNamespaceMapOutput() IdentityTagNamespaceMapOutput
	ToIdentityTagNamespaceMapOutputWithContext(context.Context) IdentityTagNamespaceMapOutput
}

type IdentityTagNamespaceMap map[string]IdentityTagNamespaceInput

func (IdentityTagNamespaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityTagNamespace)(nil)).Elem()
}

func (i IdentityTagNamespaceMap) ToIdentityTagNamespaceMapOutput() IdentityTagNamespaceMapOutput {
	return i.ToIdentityTagNamespaceMapOutputWithContext(context.Background())
}

func (i IdentityTagNamespaceMap) ToIdentityTagNamespaceMapOutputWithContext(ctx context.Context) IdentityTagNamespaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityTagNamespaceMapOutput)
}

type IdentityTagNamespaceOutput struct {
	*pulumi.OutputState
}

func (IdentityTagNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityTagNamespace)(nil))
}

func (o IdentityTagNamespaceOutput) ToIdentityTagNamespaceOutput() IdentityTagNamespaceOutput {
	return o
}

func (o IdentityTagNamespaceOutput) ToIdentityTagNamespaceOutputWithContext(ctx context.Context) IdentityTagNamespaceOutput {
	return o
}

func (o IdentityTagNamespaceOutput) ToIdentityTagNamespacePtrOutput() IdentityTagNamespacePtrOutput {
	return o.ToIdentityTagNamespacePtrOutputWithContext(context.Background())
}

func (o IdentityTagNamespaceOutput) ToIdentityTagNamespacePtrOutputWithContext(ctx context.Context) IdentityTagNamespacePtrOutput {
	return o.ApplyT(func(v IdentityTagNamespace) *IdentityTagNamespace {
		return &v
	}).(IdentityTagNamespacePtrOutput)
}

type IdentityTagNamespacePtrOutput struct {
	*pulumi.OutputState
}

func (IdentityTagNamespacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityTagNamespace)(nil))
}

func (o IdentityTagNamespacePtrOutput) ToIdentityTagNamespacePtrOutput() IdentityTagNamespacePtrOutput {
	return o
}

func (o IdentityTagNamespacePtrOutput) ToIdentityTagNamespacePtrOutputWithContext(ctx context.Context) IdentityTagNamespacePtrOutput {
	return o
}

type IdentityTagNamespaceArrayOutput struct{ *pulumi.OutputState }

func (IdentityTagNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityTagNamespace)(nil))
}

func (o IdentityTagNamespaceArrayOutput) ToIdentityTagNamespaceArrayOutput() IdentityTagNamespaceArrayOutput {
	return o
}

func (o IdentityTagNamespaceArrayOutput) ToIdentityTagNamespaceArrayOutputWithContext(ctx context.Context) IdentityTagNamespaceArrayOutput {
	return o
}

func (o IdentityTagNamespaceArrayOutput) Index(i pulumi.IntInput) IdentityTagNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityTagNamespace {
		return vs[0].([]IdentityTagNamespace)[vs[1].(int)]
	}).(IdentityTagNamespaceOutput)
}

type IdentityTagNamespaceMapOutput struct{ *pulumi.OutputState }

func (IdentityTagNamespaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityTagNamespace)(nil))
}

func (o IdentityTagNamespaceMapOutput) ToIdentityTagNamespaceMapOutput() IdentityTagNamespaceMapOutput {
	return o
}

func (o IdentityTagNamespaceMapOutput) ToIdentityTagNamespaceMapOutputWithContext(ctx context.Context) IdentityTagNamespaceMapOutput {
	return o
}

func (o IdentityTagNamespaceMapOutput) MapIndex(k pulumi.StringInput) IdentityTagNamespaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityTagNamespace {
		return vs[0].(map[string]IdentityTagNamespace)[vs[1].(string)]
	}).(IdentityTagNamespaceOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityTagNamespaceOutput{})
	pulumi.RegisterOutputType(IdentityTagNamespacePtrOutput{})
	pulumi.RegisterOutputType(IdentityTagNamespaceArrayOutput{})
	pulumi.RegisterOutputType(IdentityTagNamespaceMapOutput{})
}
