// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMarketplaceCategories
    {
        /// <summary>
        /// This data source provides the list of Categories in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Gets the list of all the categories for listings published to Oracle Cloud Infrastructure Marketplace. Categories apply
        /// to the software product provided by the listing.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCategories = Output.Create(Oci.GetMarketplaceCategories.InvokeAsync(new Oci.GetMarketplaceCategoriesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMarketplaceCategoriesResult> InvokeAsync(GetMarketplaceCategoriesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMarketplaceCategoriesResult>("oci:index/getMarketplaceCategories:GetMarketplaceCategories", args ?? new GetMarketplaceCategoriesArgs(), options.WithVersion());
    }


    public sealed class GetMarketplaceCategoriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetMarketplaceCategoriesFilterArgs>? _filters;
        public List<Inputs.GetMarketplaceCategoriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMarketplaceCategoriesFilterArgs>());
            set => _filters = value;
        }

        public GetMarketplaceCategoriesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMarketplaceCategoriesResult
    {
        /// <summary>
        /// The list of categories.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplaceCategoriesCategoryResult> Categories;
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetMarketplaceCategoriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetMarketplaceCategoriesResult(
            ImmutableArray<Outputs.GetMarketplaceCategoriesCategoryResult> categories,

            string? compartmentId,

            ImmutableArray<Outputs.GetMarketplaceCategoriesFilterResult> filters,

            string id)
        {
            Categories = categories;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
        }
    }
}
