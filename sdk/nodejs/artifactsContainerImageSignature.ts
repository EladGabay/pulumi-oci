// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource provides the Container Image Signature resource in Oracle Cloud Infrastructure Artifacts service.
 *
 * Upload a signature to an image.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerImageSignature = new oci.ArtifactsContainerImageSignature("testContainerImageSignature", {
 *     compartmentId: _var.compartment_id,
 *     imageId: oci_core_image.test_image.id,
 *     kmsKeyId: oci_kms_key.test_key.id,
 *     kmsKeyVersionId: oci_kms_key_version.test_key_version.id,
 *     message: _var.container_image_signature_message,
 *     signature: _var.container_image_signature_signature,
 *     signingAlgorithm: _var.container_image_signature_signing_algorithm,
 * });
 * ```
 *
 * ## Import
 *
 * ContainerImageSignatures can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature test_container_image_signature "container/imageSignatures/{imageSignatureId}"
 * ```
 */
export class ArtifactsContainerImageSignature extends pulumi.CustomResource {
    /**
     * Get an existing ArtifactsContainerImageSignature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArtifactsContainerImageSignatureState, opts?: pulumi.CustomResourceOptions): ArtifactsContainerImageSignature {
        return new ArtifactsContainerImageSignature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature';

    /**
     * Returns true if the given object is an instance of ArtifactsContainerImageSignature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArtifactsContainerImageSignature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArtifactsContainerImageSignature.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The id of the user or principal that created the resource.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
     */
    public readonly kmsKeyVersionId!: pulumi.Output<string>;
    /**
     * The base64 encoded signature payload that was signed.
     */
    public readonly message!: pulumi.Output<string>;
    /**
     * The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
     */
    public readonly signature!: pulumi.Output<string>;
    /**
     * The algorithm to be used for signing. These are the only supported signing algorithms for container images.
     */
    public readonly signingAlgorithm!: pulumi.Output<string>;
    /**
     * An RFC 3339 timestamp indicating when the image was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;

    /**
     * Create a ArtifactsContainerImageSignature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArtifactsContainerImageSignatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArtifactsContainerImageSignatureArgs | ArtifactsContainerImageSignatureState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArtifactsContainerImageSignatureState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["createdBy"] = state ? state.createdBy : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            inputs["kmsKeyVersionId"] = state ? state.kmsKeyVersionId : undefined;
            inputs["message"] = state ? state.message : undefined;
            inputs["signature"] = state ? state.signature : undefined;
            inputs["signingAlgorithm"] = state ? state.signingAlgorithm : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as ArtifactsContainerImageSignatureArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.kmsKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyId'");
            }
            if ((!args || args.kmsKeyVersionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyVersionId'");
            }
            if ((!args || args.message === undefined) && !opts.urn) {
                throw new Error("Missing required property 'message'");
            }
            if ((!args || args.signature === undefined) && !opts.urn) {
                throw new Error("Missing required property 'signature'");
            }
            if ((!args || args.signingAlgorithm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'signingAlgorithm'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["kmsKeyVersionId"] = args ? args.kmsKeyVersionId : undefined;
            inputs["message"] = args ? args.message : undefined;
            inputs["signature"] = args ? args.signature : undefined;
            inputs["signingAlgorithm"] = args ? args.signingAlgorithm : undefined;
            inputs["createdBy"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ArtifactsContainerImageSignature.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ArtifactsContainerImageSignature resources.
 */
export interface ArtifactsContainerImageSignatureState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The id of the user or principal that created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
     */
    imageId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
     */
    kmsKeyVersionId?: pulumi.Input<string>;
    /**
     * The base64 encoded signature payload that was signed.
     */
    message?: pulumi.Input<string>;
    /**
     * The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
     */
    signature?: pulumi.Input<string>;
    /**
     * The algorithm to be used for signing. These are the only supported signing algorithms for container images.
     */
    signingAlgorithm?: pulumi.Input<string>;
    /**
     * An RFC 3339 timestamp indicating when the image was created.
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ArtifactsContainerImageSignature resource.
 */
export interface ArtifactsContainerImageSignatureArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
     */
    imageId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
     */
    kmsKeyId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
     */
    kmsKeyVersionId: pulumi.Input<string>;
    /**
     * The base64 encoded signature payload that was signed.
     */
    message: pulumi.Input<string>;
    /**
     * The signature of the message field using the kmsKeyId, the kmsKeyVersionId, and the signingAlgorithm.
     */
    signature: pulumi.Input<string>;
    /**
     * The algorithm to be used for signing. These are the only supported signing algorithms for container images.
     */
    signingAlgorithm: pulumi.Input<string>;
}
