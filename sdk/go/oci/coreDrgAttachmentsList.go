// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Drg Attachments List resource in Oracle Cloud Infrastructure Core service.
//
// Returns a complete list of DRG attachments that belong to a particular DRG.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreDrgAttachmentsList(ctx, "testDrgAttachmentsList", &oci.CoreDrgAttachmentsListArgs{
// 			DrgId:          pulumi.Any(oci_core_drg.Test_drg.Id),
// 			AttachmentType: pulumi.Any(_var.Drg_attachments_list_attachment_type),
// 			IsCrossTenancy: pulumi.Any(_var.Drg_attachments_list_is_cross_tenancy),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type CoreDrgAttachmentsList struct {
	pulumi.CustomResourceState

	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrOutput `pulumi:"attachmentType"`
	// The list of drg_attachments.
	DrgAllAttachments CoreDrgAttachmentsListDrgAllAttachmentArrayOutput `pulumi:"drgAllAttachments"`
	// The [[OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringOutput `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	IsCrossTenancy pulumi.BoolPtrOutput `pulumi:"isCrossTenancy"`
}

// NewCoreDrgAttachmentsList registers a new resource with the given unique name, arguments, and options.
func NewCoreDrgAttachmentsList(ctx *pulumi.Context,
	name string, args *CoreDrgAttachmentsListArgs, opts ...pulumi.ResourceOption) (*CoreDrgAttachmentsList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DrgId == nil {
		return nil, errors.New("invalid value for required argument 'DrgId'")
	}
	var resource CoreDrgAttachmentsList
	err := ctx.RegisterResource("oci:index/coreDrgAttachmentsList:CoreDrgAttachmentsList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreDrgAttachmentsList gets an existing CoreDrgAttachmentsList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreDrgAttachmentsList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreDrgAttachmentsListState, opts ...pulumi.ResourceOption) (*CoreDrgAttachmentsList, error) {
	var resource CoreDrgAttachmentsList
	err := ctx.ReadResource("oci:index/coreDrgAttachmentsList:CoreDrgAttachmentsList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreDrgAttachmentsList resources.
type coreDrgAttachmentsListState struct {
	// The type for the network resource attached to the DRG.
	AttachmentType *string `pulumi:"attachmentType"`
	// The list of drg_attachments.
	DrgAllAttachments []CoreDrgAttachmentsListDrgAllAttachment `pulumi:"drgAllAttachments"`
	// The [[OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId *string `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	IsCrossTenancy *bool `pulumi:"isCrossTenancy"`
}

type CoreDrgAttachmentsListState struct {
	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrInput
	// The list of drg_attachments.
	DrgAllAttachments CoreDrgAttachmentsListDrgAllAttachmentArrayInput
	// The [[OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringPtrInput
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	IsCrossTenancy pulumi.BoolPtrInput
}

func (CoreDrgAttachmentsListState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreDrgAttachmentsListState)(nil)).Elem()
}

type coreDrgAttachmentsListArgs struct {
	// The type for the network resource attached to the DRG.
	AttachmentType *string `pulumi:"attachmentType"`
	// The [[OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId string `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	IsCrossTenancy *bool `pulumi:"isCrossTenancy"`
}

// The set of arguments for constructing a CoreDrgAttachmentsList resource.
type CoreDrgAttachmentsListArgs struct {
	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrInput
	// The [[OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringInput
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	IsCrossTenancy pulumi.BoolPtrInput
}

func (CoreDrgAttachmentsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreDrgAttachmentsListArgs)(nil)).Elem()
}

type CoreDrgAttachmentsListInput interface {
	pulumi.Input

	ToCoreDrgAttachmentsListOutput() CoreDrgAttachmentsListOutput
	ToCoreDrgAttachmentsListOutputWithContext(ctx context.Context) CoreDrgAttachmentsListOutput
}

func (*CoreDrgAttachmentsList) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreDrgAttachmentsList)(nil))
}

func (i *CoreDrgAttachmentsList) ToCoreDrgAttachmentsListOutput() CoreDrgAttachmentsListOutput {
	return i.ToCoreDrgAttachmentsListOutputWithContext(context.Background())
}

func (i *CoreDrgAttachmentsList) ToCoreDrgAttachmentsListOutputWithContext(ctx context.Context) CoreDrgAttachmentsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDrgAttachmentsListOutput)
}

func (i *CoreDrgAttachmentsList) ToCoreDrgAttachmentsListPtrOutput() CoreDrgAttachmentsListPtrOutput {
	return i.ToCoreDrgAttachmentsListPtrOutputWithContext(context.Background())
}

func (i *CoreDrgAttachmentsList) ToCoreDrgAttachmentsListPtrOutputWithContext(ctx context.Context) CoreDrgAttachmentsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDrgAttachmentsListPtrOutput)
}

type CoreDrgAttachmentsListPtrInput interface {
	pulumi.Input

	ToCoreDrgAttachmentsListPtrOutput() CoreDrgAttachmentsListPtrOutput
	ToCoreDrgAttachmentsListPtrOutputWithContext(ctx context.Context) CoreDrgAttachmentsListPtrOutput
}

type coreDrgAttachmentsListPtrType CoreDrgAttachmentsListArgs

func (*coreDrgAttachmentsListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreDrgAttachmentsList)(nil))
}

func (i *coreDrgAttachmentsListPtrType) ToCoreDrgAttachmentsListPtrOutput() CoreDrgAttachmentsListPtrOutput {
	return i.ToCoreDrgAttachmentsListPtrOutputWithContext(context.Background())
}

func (i *coreDrgAttachmentsListPtrType) ToCoreDrgAttachmentsListPtrOutputWithContext(ctx context.Context) CoreDrgAttachmentsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDrgAttachmentsListPtrOutput)
}

// CoreDrgAttachmentsListArrayInput is an input type that accepts CoreDrgAttachmentsListArray and CoreDrgAttachmentsListArrayOutput values.
// You can construct a concrete instance of `CoreDrgAttachmentsListArrayInput` via:
//
//          CoreDrgAttachmentsListArray{ CoreDrgAttachmentsListArgs{...} }
type CoreDrgAttachmentsListArrayInput interface {
	pulumi.Input

	ToCoreDrgAttachmentsListArrayOutput() CoreDrgAttachmentsListArrayOutput
	ToCoreDrgAttachmentsListArrayOutputWithContext(context.Context) CoreDrgAttachmentsListArrayOutput
}

type CoreDrgAttachmentsListArray []CoreDrgAttachmentsListInput

func (CoreDrgAttachmentsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreDrgAttachmentsList)(nil)).Elem()
}

func (i CoreDrgAttachmentsListArray) ToCoreDrgAttachmentsListArrayOutput() CoreDrgAttachmentsListArrayOutput {
	return i.ToCoreDrgAttachmentsListArrayOutputWithContext(context.Background())
}

func (i CoreDrgAttachmentsListArray) ToCoreDrgAttachmentsListArrayOutputWithContext(ctx context.Context) CoreDrgAttachmentsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDrgAttachmentsListArrayOutput)
}

// CoreDrgAttachmentsListMapInput is an input type that accepts CoreDrgAttachmentsListMap and CoreDrgAttachmentsListMapOutput values.
// You can construct a concrete instance of `CoreDrgAttachmentsListMapInput` via:
//
//          CoreDrgAttachmentsListMap{ "key": CoreDrgAttachmentsListArgs{...} }
type CoreDrgAttachmentsListMapInput interface {
	pulumi.Input

	ToCoreDrgAttachmentsListMapOutput() CoreDrgAttachmentsListMapOutput
	ToCoreDrgAttachmentsListMapOutputWithContext(context.Context) CoreDrgAttachmentsListMapOutput
}

type CoreDrgAttachmentsListMap map[string]CoreDrgAttachmentsListInput

func (CoreDrgAttachmentsListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreDrgAttachmentsList)(nil)).Elem()
}

func (i CoreDrgAttachmentsListMap) ToCoreDrgAttachmentsListMapOutput() CoreDrgAttachmentsListMapOutput {
	return i.ToCoreDrgAttachmentsListMapOutputWithContext(context.Background())
}

func (i CoreDrgAttachmentsListMap) ToCoreDrgAttachmentsListMapOutputWithContext(ctx context.Context) CoreDrgAttachmentsListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreDrgAttachmentsListMapOutput)
}

type CoreDrgAttachmentsListOutput struct {
	*pulumi.OutputState
}

func (CoreDrgAttachmentsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreDrgAttachmentsList)(nil))
}

func (o CoreDrgAttachmentsListOutput) ToCoreDrgAttachmentsListOutput() CoreDrgAttachmentsListOutput {
	return o
}

func (o CoreDrgAttachmentsListOutput) ToCoreDrgAttachmentsListOutputWithContext(ctx context.Context) CoreDrgAttachmentsListOutput {
	return o
}

func (o CoreDrgAttachmentsListOutput) ToCoreDrgAttachmentsListPtrOutput() CoreDrgAttachmentsListPtrOutput {
	return o.ToCoreDrgAttachmentsListPtrOutputWithContext(context.Background())
}

func (o CoreDrgAttachmentsListOutput) ToCoreDrgAttachmentsListPtrOutputWithContext(ctx context.Context) CoreDrgAttachmentsListPtrOutput {
	return o.ApplyT(func(v CoreDrgAttachmentsList) *CoreDrgAttachmentsList {
		return &v
	}).(CoreDrgAttachmentsListPtrOutput)
}

type CoreDrgAttachmentsListPtrOutput struct {
	*pulumi.OutputState
}

func (CoreDrgAttachmentsListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreDrgAttachmentsList)(nil))
}

func (o CoreDrgAttachmentsListPtrOutput) ToCoreDrgAttachmentsListPtrOutput() CoreDrgAttachmentsListPtrOutput {
	return o
}

func (o CoreDrgAttachmentsListPtrOutput) ToCoreDrgAttachmentsListPtrOutputWithContext(ctx context.Context) CoreDrgAttachmentsListPtrOutput {
	return o
}

type CoreDrgAttachmentsListArrayOutput struct{ *pulumi.OutputState }

func (CoreDrgAttachmentsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreDrgAttachmentsList)(nil))
}

func (o CoreDrgAttachmentsListArrayOutput) ToCoreDrgAttachmentsListArrayOutput() CoreDrgAttachmentsListArrayOutput {
	return o
}

func (o CoreDrgAttachmentsListArrayOutput) ToCoreDrgAttachmentsListArrayOutputWithContext(ctx context.Context) CoreDrgAttachmentsListArrayOutput {
	return o
}

func (o CoreDrgAttachmentsListArrayOutput) Index(i pulumi.IntInput) CoreDrgAttachmentsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreDrgAttachmentsList {
		return vs[0].([]CoreDrgAttachmentsList)[vs[1].(int)]
	}).(CoreDrgAttachmentsListOutput)
}

type CoreDrgAttachmentsListMapOutput struct{ *pulumi.OutputState }

func (CoreDrgAttachmentsListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreDrgAttachmentsList)(nil))
}

func (o CoreDrgAttachmentsListMapOutput) ToCoreDrgAttachmentsListMapOutput() CoreDrgAttachmentsListMapOutput {
	return o
}

func (o CoreDrgAttachmentsListMapOutput) ToCoreDrgAttachmentsListMapOutputWithContext(ctx context.Context) CoreDrgAttachmentsListMapOutput {
	return o
}

func (o CoreDrgAttachmentsListMapOutput) MapIndex(k pulumi.StringInput) CoreDrgAttachmentsListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreDrgAttachmentsList {
		return vs[0].(map[string]CoreDrgAttachmentsList)[vs[1].(string)]
	}).(CoreDrgAttachmentsListOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreDrgAttachmentsListOutput{})
	pulumi.RegisterOutputType(CoreDrgAttachmentsListPtrOutput{})
	pulumi.RegisterOutputType(CoreDrgAttachmentsListArrayOutput{})
	pulumi.RegisterOutputType(CoreDrgAttachmentsListMapOutput{})
}
