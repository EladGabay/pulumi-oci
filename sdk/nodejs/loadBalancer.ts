// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/loadBalancer:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    public /*out*/ readonly ipAddressDetails!: pulumi.Output<outputs.LoadBalancerIpAddressDetail[]>;
    /**
     * @deprecated The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
     */
    public /*out*/ readonly ipAddresses!: pulumi.Output<string[]>;
    public readonly ipMode!: pulumi.Output<string>;
    public readonly isPrivate!: pulumi.Output<boolean>;
    public readonly networkSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly reservedIps!: pulumi.Output<outputs.LoadBalancerReservedIp[] | undefined>;
    public readonly shape!: pulumi.Output<string>;
    public readonly shapeDetails!: pulumi.Output<outputs.LoadBalancerShapeDetails>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerArgs | LoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["ipAddressDetails"] = state ? state.ipAddressDetails : undefined;
            inputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            inputs["ipMode"] = state ? state.ipMode : undefined;
            inputs["isPrivate"] = state ? state.isPrivate : undefined;
            inputs["networkSecurityGroupIds"] = state ? state.networkSecurityGroupIds : undefined;
            inputs["reservedIps"] = state ? state.reservedIps : undefined;
            inputs["shape"] = state ? state.shape : undefined;
            inputs["shapeDetails"] = state ? state.shapeDetails : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["subnetIds"] = state ? state.subnetIds : undefined;
            inputs["systemTags"] = state ? state.systemTags : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as LoadBalancerArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["ipMode"] = args ? args.ipMode : undefined;
            inputs["isPrivate"] = args ? args.isPrivate : undefined;
            inputs["networkSecurityGroupIds"] = args ? args.networkSecurityGroupIds : undefined;
            inputs["reservedIps"] = args ? args.reservedIps : undefined;
            inputs["shape"] = args ? args.shape : undefined;
            inputs["shapeDetails"] = args ? args.shapeDetails : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["ipAddressDetails"] = undefined /*out*/;
            inputs["ipAddresses"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemTags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(LoadBalancer.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: any}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    ipAddressDetails?: pulumi.Input<pulumi.Input<inputs.LoadBalancerIpAddressDetail>[]>;
    /**
     * @deprecated The 'ip_addresses' field has been deprecated. Please use 'ip_address_details' instead.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipMode?: pulumi.Input<string>;
    isPrivate?: pulumi.Input<boolean>;
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    reservedIps?: pulumi.Input<pulumi.Input<inputs.LoadBalancerReservedIp>[]>;
    shape?: pulumi.Input<string>;
    shapeDetails?: pulumi.Input<inputs.LoadBalancerShapeDetails>;
    state?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemTags?: pulumi.Input<{[key: string]: any}>;
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: any}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    ipMode?: pulumi.Input<string>;
    isPrivate?: pulumi.Input<boolean>;
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    reservedIps?: pulumi.Input<pulumi.Input<inputs.LoadBalancerReservedIp>[]>;
    shape: pulumi.Input<string>;
    shapeDetails?: pulumi.Input<inputs.LoadBalancerShapeDetails>;
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
