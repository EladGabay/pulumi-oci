# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetMarketplaceCategoriesResult',
    'AwaitableGetMarketplaceCategoriesResult',
    'get_marketplace_categories',
]

@pulumi.output_type
class GetMarketplaceCategoriesResult:
    """
    A collection of values returned by GetMarketplaceCategories.
    """
    def __init__(__self__, categories=None, compartment_id=None, filters=None, id=None):
        if categories and not isinstance(categories, list):
            raise TypeError("Expected argument 'categories' to be a list")
        pulumi.set(__self__, "categories", categories)
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def categories(self) -> Sequence['outputs.GetMarketplaceCategoriesCategoryResult']:
        """
        The list of categories.
        """
        return pulumi.get(self, "categories")

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[str]:
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetMarketplaceCategoriesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetMarketplaceCategoriesResult(GetMarketplaceCategoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMarketplaceCategoriesResult(
            categories=self.categories,
            compartment_id=self.compartment_id,
            filters=self.filters,
            id=self.id)


def get_marketplace_categories(compartment_id: Optional[str] = None,
                               filters: Optional[Sequence[pulumi.InputType['GetMarketplaceCategoriesFilterArgs']]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMarketplaceCategoriesResult:
    """
    This data source provides the list of Categories in Oracle Cloud Infrastructure Marketplace service.

    Gets the list of all the categories for listings published to Oracle Cloud Infrastructure Marketplace. Categories apply
    to the software product provided by the listing.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_categories = oci.get_marketplace_categories(compartment_id=var["compartment_id"])
    ```


    :param str compartment_id: The unique identifier for the compartment.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['filters'] = filters
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('oci:index/getMarketplaceCategories:GetMarketplaceCategories', __args__, opts=opts, typ=GetMarketplaceCategoriesResult).value

    return AwaitableGetMarketplaceCategoriesResult(
        categories=__ret__.categories,
        compartment_id=__ret__.compartment_id,
        filters=__ret__.filters,
        id=__ret__.id)
