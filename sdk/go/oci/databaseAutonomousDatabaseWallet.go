// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Import is not supported for this resource.
type DatabaseAutonomousDatabaseWallet struct {
	pulumi.CustomResourceState

	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringOutput  `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  pulumi.BoolPtrOutput `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringOutput `pulumi:"content"`
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrOutput `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringOutput `pulumi:"password"`
}

// NewDatabaseAutonomousDatabaseWallet registers a new resource with the given unique name, arguments, and options.
func NewDatabaseAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, args *DatabaseAutonomousDatabaseWalletArgs, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseWallet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	var resource DatabaseAutonomousDatabaseWallet
	err := ctx.RegisterResource("oci:index/databaseAutonomousDatabaseWallet:DatabaseAutonomousDatabaseWallet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseAutonomousDatabaseWallet gets an existing DatabaseAutonomousDatabaseWallet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseAutonomousDatabaseWalletState, opts ...pulumi.ResourceOption) (*DatabaseAutonomousDatabaseWallet, error) {
	var resource DatabaseAutonomousDatabaseWallet
	err := ctx.ReadResource("oci:index/databaseAutonomousDatabaseWallet:DatabaseAutonomousDatabaseWallet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseAutonomousDatabaseWallet resources.
type databaseAutonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool   `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content *string `pulumi:"content"`
	// The type of wallet to generate.
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password *string `pulumi:"password"`
}

type DatabaseAutonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringPtrInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringPtrInput
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringPtrInput
}

func (DatabaseAutonomousDatabaseWalletState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseWalletState)(nil)).Elem()
}

type databaseAutonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool  `pulumi:"base64EncodeContent"`
	// The type of wallet to generate.
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password string `pulumi:"password"`
}

// The set of arguments for constructing a DatabaseAutonomousDatabaseWallet resource.
type DatabaseAutonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringInput
}

func (DatabaseAutonomousDatabaseWalletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAutonomousDatabaseWalletArgs)(nil)).Elem()
}

type DatabaseAutonomousDatabaseWalletInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseWalletOutput() DatabaseAutonomousDatabaseWalletOutput
	ToDatabaseAutonomousDatabaseWalletOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletOutput
}

func (*DatabaseAutonomousDatabaseWallet) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseWallet)(nil))
}

func (i *DatabaseAutonomousDatabaseWallet) ToDatabaseAutonomousDatabaseWalletOutput() DatabaseAutonomousDatabaseWalletOutput {
	return i.ToDatabaseAutonomousDatabaseWalletOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseWallet) ToDatabaseAutonomousDatabaseWalletOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseWalletOutput)
}

func (i *DatabaseAutonomousDatabaseWallet) ToDatabaseAutonomousDatabaseWalletPtrOutput() DatabaseAutonomousDatabaseWalletPtrOutput {
	return i.ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (i *DatabaseAutonomousDatabaseWallet) ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseWalletPtrOutput)
}

type DatabaseAutonomousDatabaseWalletPtrInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseWalletPtrOutput() DatabaseAutonomousDatabaseWalletPtrOutput
	ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletPtrOutput
}

type databaseAutonomousDatabaseWalletPtrType DatabaseAutonomousDatabaseWalletArgs

func (*databaseAutonomousDatabaseWalletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseWallet)(nil))
}

func (i *databaseAutonomousDatabaseWalletPtrType) ToDatabaseAutonomousDatabaseWalletPtrOutput() DatabaseAutonomousDatabaseWalletPtrOutput {
	return i.ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (i *databaseAutonomousDatabaseWalletPtrType) ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseWalletPtrOutput)
}

// DatabaseAutonomousDatabaseWalletArrayInput is an input type that accepts DatabaseAutonomousDatabaseWalletArray and DatabaseAutonomousDatabaseWalletArrayOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseWalletArrayInput` via:
//
//          DatabaseAutonomousDatabaseWalletArray{ DatabaseAutonomousDatabaseWalletArgs{...} }
type DatabaseAutonomousDatabaseWalletArrayInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseWalletArrayOutput() DatabaseAutonomousDatabaseWalletArrayOutput
	ToDatabaseAutonomousDatabaseWalletArrayOutputWithContext(context.Context) DatabaseAutonomousDatabaseWalletArrayOutput
}

type DatabaseAutonomousDatabaseWalletArray []DatabaseAutonomousDatabaseWalletInput

func (DatabaseAutonomousDatabaseWalletArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseAutonomousDatabaseWallet)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseWalletArray) ToDatabaseAutonomousDatabaseWalletArrayOutput() DatabaseAutonomousDatabaseWalletArrayOutput {
	return i.ToDatabaseAutonomousDatabaseWalletArrayOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseWalletArray) ToDatabaseAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseWalletArrayOutput)
}

// DatabaseAutonomousDatabaseWalletMapInput is an input type that accepts DatabaseAutonomousDatabaseWalletMap and DatabaseAutonomousDatabaseWalletMapOutput values.
// You can construct a concrete instance of `DatabaseAutonomousDatabaseWalletMapInput` via:
//
//          DatabaseAutonomousDatabaseWalletMap{ "key": DatabaseAutonomousDatabaseWalletArgs{...} }
type DatabaseAutonomousDatabaseWalletMapInput interface {
	pulumi.Input

	ToDatabaseAutonomousDatabaseWalletMapOutput() DatabaseAutonomousDatabaseWalletMapOutput
	ToDatabaseAutonomousDatabaseWalletMapOutputWithContext(context.Context) DatabaseAutonomousDatabaseWalletMapOutput
}

type DatabaseAutonomousDatabaseWalletMap map[string]DatabaseAutonomousDatabaseWalletInput

func (DatabaseAutonomousDatabaseWalletMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseAutonomousDatabaseWallet)(nil)).Elem()
}

func (i DatabaseAutonomousDatabaseWalletMap) ToDatabaseAutonomousDatabaseWalletMapOutput() DatabaseAutonomousDatabaseWalletMapOutput {
	return i.ToDatabaseAutonomousDatabaseWalletMapOutputWithContext(context.Background())
}

func (i DatabaseAutonomousDatabaseWalletMap) ToDatabaseAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAutonomousDatabaseWalletMapOutput)
}

type DatabaseAutonomousDatabaseWalletOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseWalletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAutonomousDatabaseWallet)(nil))
}

func (o DatabaseAutonomousDatabaseWalletOutput) ToDatabaseAutonomousDatabaseWalletOutput() DatabaseAutonomousDatabaseWalletOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletOutput) ToDatabaseAutonomousDatabaseWalletOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletOutput) ToDatabaseAutonomousDatabaseWalletPtrOutput() DatabaseAutonomousDatabaseWalletPtrOutput {
	return o.ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (o DatabaseAutonomousDatabaseWalletOutput) ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletPtrOutput {
	return o.ApplyT(func(v DatabaseAutonomousDatabaseWallet) *DatabaseAutonomousDatabaseWallet {
		return &v
	}).(DatabaseAutonomousDatabaseWalletPtrOutput)
}

type DatabaseAutonomousDatabaseWalletPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseAutonomousDatabaseWalletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseAutonomousDatabaseWallet)(nil))
}

func (o DatabaseAutonomousDatabaseWalletPtrOutput) ToDatabaseAutonomousDatabaseWalletPtrOutput() DatabaseAutonomousDatabaseWalletPtrOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletPtrOutput) ToDatabaseAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletPtrOutput {
	return o
}

type DatabaseAutonomousDatabaseWalletArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseWalletArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAutonomousDatabaseWallet)(nil))
}

func (o DatabaseAutonomousDatabaseWalletArrayOutput) ToDatabaseAutonomousDatabaseWalletArrayOutput() DatabaseAutonomousDatabaseWalletArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletArrayOutput) ToDatabaseAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletArrayOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletArrayOutput) Index(i pulumi.IntInput) DatabaseAutonomousDatabaseWalletOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseWallet {
		return vs[0].([]DatabaseAutonomousDatabaseWallet)[vs[1].(int)]
	}).(DatabaseAutonomousDatabaseWalletOutput)
}

type DatabaseAutonomousDatabaseWalletMapOutput struct{ *pulumi.OutputState }

func (DatabaseAutonomousDatabaseWalletMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseAutonomousDatabaseWallet)(nil))
}

func (o DatabaseAutonomousDatabaseWalletMapOutput) ToDatabaseAutonomousDatabaseWalletMapOutput() DatabaseAutonomousDatabaseWalletMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletMapOutput) ToDatabaseAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) DatabaseAutonomousDatabaseWalletMapOutput {
	return o
}

func (o DatabaseAutonomousDatabaseWalletMapOutput) MapIndex(k pulumi.StringInput) DatabaseAutonomousDatabaseWalletOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseAutonomousDatabaseWallet {
		return vs[0].(map[string]DatabaseAutonomousDatabaseWallet)[vs[1].(string)]
	}).(DatabaseAutonomousDatabaseWalletOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseWalletOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseWalletPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseWalletArrayOutput{})
	pulumi.RegisterOutputType(DatabaseAutonomousDatabaseWalletMapOutput{})
}
