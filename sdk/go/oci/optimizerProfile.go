// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Profile resource in Oracle Cloud Infrastructure Optimizer service.
//
// Creates a new profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewOptimizerProfile(ctx, "testProfile", &oci.OptimizerProfileArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Description:   pulumi.Any(_var.Profile_description),
// 			LevelsConfiguration: &OptimizerProfileLevelsConfigurationArgs{
// 				Items: OptimizerProfileLevelsConfigurationItemArray{
// 					&OptimizerProfileLevelsConfigurationItemArgs{
// 						Level:            pulumi.Any(_var.Profile_levels_configuration_items_level),
// 						RecommendationId: pulumi.Any(oci_optimizer_recommendation.Test_recommendation.Id),
// 					},
// 				},
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			TargetCompartments: &OptimizerProfileTargetCompartmentsArgs{
// 				Items: pulumi.Any(_var.Profile_target_compartments_items),
// 			},
// 			TargetTags: &OptimizerProfileTargetTagsArgs{
// 				Items: OptimizerProfileTargetTagsItemArray{
// 					&OptimizerProfileTargetTagsItemArgs{
// 						TagDefinitionName: pulumi.Any(_var.Profile_target_tags_items_tag_definition_name),
// 						TagNamespaceName:  pulumi.Any(oci_identity_tag_namespace.Test_tag_namespace.Name),
// 						TagValueType:      pulumi.Any(_var.Profile_target_tags_items_tag_value_type),
// 						TagValues:         pulumi.Any(_var.Profile_target_tags_items_tag_values),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Profiles can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/optimizerProfile:OptimizerProfile test_profile "id"
// ```
type OptimizerProfile struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration OptimizerProfileLevelsConfigurationOutput `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringOutput `pulumi:"name"`
	// The profile's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Optional. The target compartments supported by a profile override for a recommendation.
	TargetCompartments OptimizerProfileTargetCompartmentsOutput `pulumi:"targetCompartments"`
	// (Updatable) Optional. The target tags supported by a profile override for a recommendation.
	TargetTags OptimizerProfileTargetTagsOutput `pulumi:"targetTags"`
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOptimizerProfile registers a new resource with the given unique name, arguments, and options.
func NewOptimizerProfile(ctx *pulumi.Context,
	name string, args *OptimizerProfileArgs, opts ...pulumi.ResourceOption) (*OptimizerProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.LevelsConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'LevelsConfiguration'")
	}
	var resource OptimizerProfile
	err := ctx.RegisterResource("oci:index/optimizerProfile:OptimizerProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOptimizerProfile gets an existing OptimizerProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOptimizerProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OptimizerProfileState, opts ...pulumi.ResourceOption) (*OptimizerProfile, error) {
	var resource OptimizerProfile
	err := ctx.ReadResource("oci:index/optimizerProfile:OptimizerProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OptimizerProfile resources.
type optimizerProfileState struct {
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration *OptimizerProfileLevelsConfiguration `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// The profile's current state.
	State *string `pulumi:"state"`
	// (Updatable) Optional. The target compartments supported by a profile override for a recommendation.
	TargetCompartments *OptimizerProfileTargetCompartments `pulumi:"targetCompartments"`
	// (Updatable) Optional. The target tags supported by a profile override for a recommendation.
	TargetTags *OptimizerProfileTargetTags `pulumi:"targetTags"`
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OptimizerProfileState struct {
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration OptimizerProfileLevelsConfigurationPtrInput
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// The profile's current state.
	State pulumi.StringPtrInput
	// (Updatable) Optional. The target compartments supported by a profile override for a recommendation.
	TargetCompartments OptimizerProfileTargetCompartmentsPtrInput
	// (Updatable) Optional. The target tags supported by a profile override for a recommendation.
	TargetTags OptimizerProfileTargetTagsPtrInput
	// The date and time the profile was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the profile was last updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (OptimizerProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*optimizerProfileState)(nil)).Elem()
}

type optimizerProfileArgs struct {
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration OptimizerProfileLevelsConfiguration `pulumi:"levelsConfiguration"`
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) Optional. The target compartments supported by a profile override for a recommendation.
	TargetCompartments *OptimizerProfileTargetCompartments `pulumi:"targetCompartments"`
	// (Updatable) Optional. The target tags supported by a profile override for a recommendation.
	TargetTags *OptimizerProfileTargetTags `pulumi:"targetTags"`
}

// The set of arguments for constructing a OptimizerProfile resource.
type OptimizerProfileArgs struct {
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Text describing the profile. Avoid entering confidential information.
	Description pulumi.StringInput
	// (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A list of configuration levels for each recommendation.
	LevelsConfiguration OptimizerProfileLevelsConfigurationInput
	// (Updatable) The name assigned to the profile. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) Optional. The target compartments supported by a profile override for a recommendation.
	TargetCompartments OptimizerProfileTargetCompartmentsPtrInput
	// (Updatable) Optional. The target tags supported by a profile override for a recommendation.
	TargetTags OptimizerProfileTargetTagsPtrInput
}

func (OptimizerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*optimizerProfileArgs)(nil)).Elem()
}

type OptimizerProfileInput interface {
	pulumi.Input

	ToOptimizerProfileOutput() OptimizerProfileOutput
	ToOptimizerProfileOutputWithContext(ctx context.Context) OptimizerProfileOutput
}

func (*OptimizerProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizerProfile)(nil))
}

func (i *OptimizerProfile) ToOptimizerProfileOutput() OptimizerProfileOutput {
	return i.ToOptimizerProfileOutputWithContext(context.Background())
}

func (i *OptimizerProfile) ToOptimizerProfileOutputWithContext(ctx context.Context) OptimizerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerProfileOutput)
}

func (i *OptimizerProfile) ToOptimizerProfilePtrOutput() OptimizerProfilePtrOutput {
	return i.ToOptimizerProfilePtrOutputWithContext(context.Background())
}

func (i *OptimizerProfile) ToOptimizerProfilePtrOutputWithContext(ctx context.Context) OptimizerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerProfilePtrOutput)
}

type OptimizerProfilePtrInput interface {
	pulumi.Input

	ToOptimizerProfilePtrOutput() OptimizerProfilePtrOutput
	ToOptimizerProfilePtrOutputWithContext(ctx context.Context) OptimizerProfilePtrOutput
}

type optimizerProfilePtrType OptimizerProfileArgs

func (*optimizerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizerProfile)(nil))
}

func (i *optimizerProfilePtrType) ToOptimizerProfilePtrOutput() OptimizerProfilePtrOutput {
	return i.ToOptimizerProfilePtrOutputWithContext(context.Background())
}

func (i *optimizerProfilePtrType) ToOptimizerProfilePtrOutputWithContext(ctx context.Context) OptimizerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerProfilePtrOutput)
}

// OptimizerProfileArrayInput is an input type that accepts OptimizerProfileArray and OptimizerProfileArrayOutput values.
// You can construct a concrete instance of `OptimizerProfileArrayInput` via:
//
//          OptimizerProfileArray{ OptimizerProfileArgs{...} }
type OptimizerProfileArrayInput interface {
	pulumi.Input

	ToOptimizerProfileArrayOutput() OptimizerProfileArrayOutput
	ToOptimizerProfileArrayOutputWithContext(context.Context) OptimizerProfileArrayOutput
}

type OptimizerProfileArray []OptimizerProfileInput

func (OptimizerProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OptimizerProfile)(nil)).Elem()
}

func (i OptimizerProfileArray) ToOptimizerProfileArrayOutput() OptimizerProfileArrayOutput {
	return i.ToOptimizerProfileArrayOutputWithContext(context.Background())
}

func (i OptimizerProfileArray) ToOptimizerProfileArrayOutputWithContext(ctx context.Context) OptimizerProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerProfileArrayOutput)
}

// OptimizerProfileMapInput is an input type that accepts OptimizerProfileMap and OptimizerProfileMapOutput values.
// You can construct a concrete instance of `OptimizerProfileMapInput` via:
//
//          OptimizerProfileMap{ "key": OptimizerProfileArgs{...} }
type OptimizerProfileMapInput interface {
	pulumi.Input

	ToOptimizerProfileMapOutput() OptimizerProfileMapOutput
	ToOptimizerProfileMapOutputWithContext(context.Context) OptimizerProfileMapOutput
}

type OptimizerProfileMap map[string]OptimizerProfileInput

func (OptimizerProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OptimizerProfile)(nil)).Elem()
}

func (i OptimizerProfileMap) ToOptimizerProfileMapOutput() OptimizerProfileMapOutput {
	return i.ToOptimizerProfileMapOutputWithContext(context.Background())
}

func (i OptimizerProfileMap) ToOptimizerProfileMapOutputWithContext(ctx context.Context) OptimizerProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizerProfileMapOutput)
}

type OptimizerProfileOutput struct {
	*pulumi.OutputState
}

func (OptimizerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizerProfile)(nil))
}

func (o OptimizerProfileOutput) ToOptimizerProfileOutput() OptimizerProfileOutput {
	return o
}

func (o OptimizerProfileOutput) ToOptimizerProfileOutputWithContext(ctx context.Context) OptimizerProfileOutput {
	return o
}

func (o OptimizerProfileOutput) ToOptimizerProfilePtrOutput() OptimizerProfilePtrOutput {
	return o.ToOptimizerProfilePtrOutputWithContext(context.Background())
}

func (o OptimizerProfileOutput) ToOptimizerProfilePtrOutputWithContext(ctx context.Context) OptimizerProfilePtrOutput {
	return o.ApplyT(func(v OptimizerProfile) *OptimizerProfile {
		return &v
	}).(OptimizerProfilePtrOutput)
}

type OptimizerProfilePtrOutput struct {
	*pulumi.OutputState
}

func (OptimizerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizerProfile)(nil))
}

func (o OptimizerProfilePtrOutput) ToOptimizerProfilePtrOutput() OptimizerProfilePtrOutput {
	return o
}

func (o OptimizerProfilePtrOutput) ToOptimizerProfilePtrOutputWithContext(ctx context.Context) OptimizerProfilePtrOutput {
	return o
}

type OptimizerProfileArrayOutput struct{ *pulumi.OutputState }

func (OptimizerProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptimizerProfile)(nil))
}

func (o OptimizerProfileArrayOutput) ToOptimizerProfileArrayOutput() OptimizerProfileArrayOutput {
	return o
}

func (o OptimizerProfileArrayOutput) ToOptimizerProfileArrayOutputWithContext(ctx context.Context) OptimizerProfileArrayOutput {
	return o
}

func (o OptimizerProfileArrayOutput) Index(i pulumi.IntInput) OptimizerProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptimizerProfile {
		return vs[0].([]OptimizerProfile)[vs[1].(int)]
	}).(OptimizerProfileOutput)
}

type OptimizerProfileMapOutput struct{ *pulumi.OutputState }

func (OptimizerProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OptimizerProfile)(nil))
}

func (o OptimizerProfileMapOutput) ToOptimizerProfileMapOutput() OptimizerProfileMapOutput {
	return o
}

func (o OptimizerProfileMapOutput) ToOptimizerProfileMapOutputWithContext(ctx context.Context) OptimizerProfileMapOutput {
	return o
}

func (o OptimizerProfileMapOutput) MapIndex(k pulumi.StringInput) OptimizerProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OptimizerProfile {
		return vs[0].(map[string]OptimizerProfile)[vs[1].(string)]
	}).(OptimizerProfileOutput)
}

func init() {
	pulumi.RegisterOutputType(OptimizerProfileOutput{})
	pulumi.RegisterOutputType(OptimizerProfilePtrOutput{})
	pulumi.RegisterOutputType(OptimizerProfileArrayOutput{})
	pulumi.RegisterOutputType(OptimizerProfileMapOutput{})
}
