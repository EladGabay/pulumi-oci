// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Route Table resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new route table for the specified VCN. In the request you must also include at least one route
// rule for the new route table. For information on the number of rules you can have in a route table, see
// [Service Limits](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/servicelimits.htm). For general information about route
// tables in your VCN and the types of targets you can use in route rules,
// see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
//
// For the purposes of access control, you must provide the OCID of the compartment where you want the route
// table to reside. Notice that the route table doesn't have to be in the same compartment as the VCN, subnets,
// or other Networking Service components. If you're not sure which compartment to use, put the route
// table in the same compartment as the VCN. For more information about compartments and access control, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You may optionally specify a *display name* for the route table, otherwise a default is provided.
// It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// For more information on configuring a VCN's default route table, see [Managing Default VCN Resources](https://www.terraform.io/docs/providers/oci/guides/managing_default_resources.html)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreRouteTable(ctx, "testRouteTable", &oci.CoreRouteTableArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			VcnId:         pulumi.Any(oci_core_vcn.Test_vcn.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Route_table_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			RouteRules: CoreRouteTableRouteRuleArray{
// 				&CoreRouteTableRouteRuleArgs{
// 					NetworkEntityId: pulumi.Any(oci_core_internet_gateway.Test_internet_gateway.Id),
// 					CidrBlock:       pulumi.Any(_var.Route_table_route_rules_cidr_block),
// 					Description:     pulumi.Any(_var.Route_table_route_rules_description),
// 					Destination:     pulumi.Any(_var.Route_table_route_rules_destination),
// 					DestinationType: pulumi.Any(_var.Route_table_route_rules_destination_type),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// RouteTables can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreRouteTable:CoreRouteTable test_route_table "id"
// ```
type CoreRouteTable struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to contain the route table.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The collection of rules used for routing destination IPs to network devices.
	RouteRules CoreRouteTableRouteRuleArrayOutput `pulumi:"routeRules"`
	// The route table's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the VCN the route table belongs to.
	VcnId pulumi.StringOutput `pulumi:"vcnId"`
}

// NewCoreRouteTable registers a new resource with the given unique name, arguments, and options.
func NewCoreRouteTable(ctx *pulumi.Context,
	name string, args *CoreRouteTableArgs, opts ...pulumi.ResourceOption) (*CoreRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.VcnId == nil {
		return nil, errors.New("invalid value for required argument 'VcnId'")
	}
	var resource CoreRouteTable
	err := ctx.RegisterResource("oci:index/coreRouteTable:CoreRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreRouteTable gets an existing CoreRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreRouteTableState, opts ...pulumi.ResourceOption) (*CoreRouteTable, error) {
	var resource CoreRouteTable
	err := ctx.ReadResource("oci:index/coreRouteTable:CoreRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreRouteTable resources.
type coreRouteTableState struct {
	// (Updatable) The OCID of the compartment to contain the route table.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The collection of rules used for routing destination IPs to network devices.
	RouteRules []CoreRouteTableRouteRule `pulumi:"routeRules"`
	// The route table's current state.
	State *string `pulumi:"state"`
	// The date and time the route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the VCN the route table belongs to.
	VcnId *string `pulumi:"vcnId"`
}

type CoreRouteTableState struct {
	// (Updatable) The OCID of the compartment to contain the route table.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The collection of rules used for routing destination IPs to network devices.
	RouteRules CoreRouteTableRouteRuleArrayInput
	// The route table's current state.
	State pulumi.StringPtrInput
	// The date and time the route table was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The OCID of the VCN the route table belongs to.
	VcnId pulumi.StringPtrInput
}

func (CoreRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreRouteTableState)(nil)).Elem()
}

type coreRouteTableArgs struct {
	// (Updatable) The OCID of the compartment to contain the route table.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The collection of rules used for routing destination IPs to network devices.
	RouteRules []CoreRouteTableRouteRule `pulumi:"routeRules"`
	// The OCID of the VCN the route table belongs to.
	VcnId string `pulumi:"vcnId"`
}

// The set of arguments for constructing a CoreRouteTable resource.
type CoreRouteTableArgs struct {
	// (Updatable) The OCID of the compartment to contain the route table.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The collection of rules used for routing destination IPs to network devices.
	RouteRules CoreRouteTableRouteRuleArrayInput
	// The OCID of the VCN the route table belongs to.
	VcnId pulumi.StringInput
}

func (CoreRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreRouteTableArgs)(nil)).Elem()
}

type CoreRouteTableInput interface {
	pulumi.Input

	ToCoreRouteTableOutput() CoreRouteTableOutput
	ToCoreRouteTableOutputWithContext(ctx context.Context) CoreRouteTableOutput
}

func (*CoreRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreRouteTable)(nil))
}

func (i *CoreRouteTable) ToCoreRouteTableOutput() CoreRouteTableOutput {
	return i.ToCoreRouteTableOutputWithContext(context.Background())
}

func (i *CoreRouteTable) ToCoreRouteTableOutputWithContext(ctx context.Context) CoreRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreRouteTableOutput)
}

func (i *CoreRouteTable) ToCoreRouteTablePtrOutput() CoreRouteTablePtrOutput {
	return i.ToCoreRouteTablePtrOutputWithContext(context.Background())
}

func (i *CoreRouteTable) ToCoreRouteTablePtrOutputWithContext(ctx context.Context) CoreRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreRouteTablePtrOutput)
}

type CoreRouteTablePtrInput interface {
	pulumi.Input

	ToCoreRouteTablePtrOutput() CoreRouteTablePtrOutput
	ToCoreRouteTablePtrOutputWithContext(ctx context.Context) CoreRouteTablePtrOutput
}

type coreRouteTablePtrType CoreRouteTableArgs

func (*coreRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreRouteTable)(nil))
}

func (i *coreRouteTablePtrType) ToCoreRouteTablePtrOutput() CoreRouteTablePtrOutput {
	return i.ToCoreRouteTablePtrOutputWithContext(context.Background())
}

func (i *coreRouteTablePtrType) ToCoreRouteTablePtrOutputWithContext(ctx context.Context) CoreRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreRouteTablePtrOutput)
}

// CoreRouteTableArrayInput is an input type that accepts CoreRouteTableArray and CoreRouteTableArrayOutput values.
// You can construct a concrete instance of `CoreRouteTableArrayInput` via:
//
//          CoreRouteTableArray{ CoreRouteTableArgs{...} }
type CoreRouteTableArrayInput interface {
	pulumi.Input

	ToCoreRouteTableArrayOutput() CoreRouteTableArrayOutput
	ToCoreRouteTableArrayOutputWithContext(context.Context) CoreRouteTableArrayOutput
}

type CoreRouteTableArray []CoreRouteTableInput

func (CoreRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreRouteTable)(nil)).Elem()
}

func (i CoreRouteTableArray) ToCoreRouteTableArrayOutput() CoreRouteTableArrayOutput {
	return i.ToCoreRouteTableArrayOutputWithContext(context.Background())
}

func (i CoreRouteTableArray) ToCoreRouteTableArrayOutputWithContext(ctx context.Context) CoreRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreRouteTableArrayOutput)
}

// CoreRouteTableMapInput is an input type that accepts CoreRouteTableMap and CoreRouteTableMapOutput values.
// You can construct a concrete instance of `CoreRouteTableMapInput` via:
//
//          CoreRouteTableMap{ "key": CoreRouteTableArgs{...} }
type CoreRouteTableMapInput interface {
	pulumi.Input

	ToCoreRouteTableMapOutput() CoreRouteTableMapOutput
	ToCoreRouteTableMapOutputWithContext(context.Context) CoreRouteTableMapOutput
}

type CoreRouteTableMap map[string]CoreRouteTableInput

func (CoreRouteTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreRouteTable)(nil)).Elem()
}

func (i CoreRouteTableMap) ToCoreRouteTableMapOutput() CoreRouteTableMapOutput {
	return i.ToCoreRouteTableMapOutputWithContext(context.Background())
}

func (i CoreRouteTableMap) ToCoreRouteTableMapOutputWithContext(ctx context.Context) CoreRouteTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreRouteTableMapOutput)
}

type CoreRouteTableOutput struct {
	*pulumi.OutputState
}

func (CoreRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreRouteTable)(nil))
}

func (o CoreRouteTableOutput) ToCoreRouteTableOutput() CoreRouteTableOutput {
	return o
}

func (o CoreRouteTableOutput) ToCoreRouteTableOutputWithContext(ctx context.Context) CoreRouteTableOutput {
	return o
}

func (o CoreRouteTableOutput) ToCoreRouteTablePtrOutput() CoreRouteTablePtrOutput {
	return o.ToCoreRouteTablePtrOutputWithContext(context.Background())
}

func (o CoreRouteTableOutput) ToCoreRouteTablePtrOutputWithContext(ctx context.Context) CoreRouteTablePtrOutput {
	return o.ApplyT(func(v CoreRouteTable) *CoreRouteTable {
		return &v
	}).(CoreRouteTablePtrOutput)
}

type CoreRouteTablePtrOutput struct {
	*pulumi.OutputState
}

func (CoreRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreRouteTable)(nil))
}

func (o CoreRouteTablePtrOutput) ToCoreRouteTablePtrOutput() CoreRouteTablePtrOutput {
	return o
}

func (o CoreRouteTablePtrOutput) ToCoreRouteTablePtrOutputWithContext(ctx context.Context) CoreRouteTablePtrOutput {
	return o
}

type CoreRouteTableArrayOutput struct{ *pulumi.OutputState }

func (CoreRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreRouteTable)(nil))
}

func (o CoreRouteTableArrayOutput) ToCoreRouteTableArrayOutput() CoreRouteTableArrayOutput {
	return o
}

func (o CoreRouteTableArrayOutput) ToCoreRouteTableArrayOutputWithContext(ctx context.Context) CoreRouteTableArrayOutput {
	return o
}

func (o CoreRouteTableArrayOutput) Index(i pulumi.IntInput) CoreRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreRouteTable {
		return vs[0].([]CoreRouteTable)[vs[1].(int)]
	}).(CoreRouteTableOutput)
}

type CoreRouteTableMapOutput struct{ *pulumi.OutputState }

func (CoreRouteTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreRouteTable)(nil))
}

func (o CoreRouteTableMapOutput) ToCoreRouteTableMapOutput() CoreRouteTableMapOutput {
	return o
}

func (o CoreRouteTableMapOutput) ToCoreRouteTableMapOutputWithContext(ctx context.Context) CoreRouteTableMapOutput {
	return o
}

func (o CoreRouteTableMapOutput) MapIndex(k pulumi.StringInput) CoreRouteTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreRouteTable {
		return vs[0].(map[string]CoreRouteTable)[vs[1].(string)]
	}).(CoreRouteTableOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreRouteTableOutput{})
	pulumi.RegisterOutputType(CoreRouteTablePtrOutput{})
	pulumi.RegisterOutputType(CoreRouteTableArrayOutput{})
	pulumi.RegisterOutputType(CoreRouteTableMapOutput{})
}
