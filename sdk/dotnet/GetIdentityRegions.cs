// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetIdentityRegions
    {
        /// <summary>
        /// This data source provides the list of Regions in Oracle Cloud Infrastructure Identity service.
        /// 
        /// Lists all the regions offered by Oracle Cloud Infrastructure.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testRegions = Output.Create(Oci.GetIdentityRegions.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIdentityRegionsResult> InvokeAsync(GetIdentityRegionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIdentityRegionsResult>("oci:index/getIdentityRegions:GetIdentityRegions", args ?? new GetIdentityRegionsArgs(), options.WithVersion());
    }


    public sealed class GetIdentityRegionsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetIdentityRegionsFilterArgs>? _filters;
        public List<Inputs.GetIdentityRegionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIdentityRegionsFilterArgs>());
            set => _filters = value;
        }

        public GetIdentityRegionsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIdentityRegionsResult
    {
        public readonly ImmutableArray<Outputs.GetIdentityRegionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of regions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIdentityRegionsRegionResult> Regions;

        [OutputConstructor]
        private GetIdentityRegionsResult(
            ImmutableArray<Outputs.GetIdentityRegionsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetIdentityRegionsRegionResult> regions)
        {
            Filters = filters;
            Id = id;
            Regions = regions;
        }
    }
}
