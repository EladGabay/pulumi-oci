// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Service Catalog resource in Oracle Cloud Infrastructure Service Catalog service.
//
// Creates a brand new service catalog in a given compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewServiceCatalogServiceCatalog(ctx, "testServiceCatalog", &oci.ServiceCatalogServiceCatalogArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Service_catalog_display_name),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ServiceCatalogs can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/serviceCatalogServiceCatalog:ServiceCatalogServiceCatalog test_service_catalog "id"
// ```
type ServiceCatalogServiceCatalog struct {
	pulumi.CustomResourceState

	// (Updatable) The unique identifier for the compartment where the service catalog will be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The display name of the service catalog.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The lifecycle state of the service catalog.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewServiceCatalogServiceCatalog registers a new resource with the given unique name, arguments, and options.
func NewServiceCatalogServiceCatalog(ctx *pulumi.Context,
	name string, args *ServiceCatalogServiceCatalogArgs, opts ...pulumi.ResourceOption) (*ServiceCatalogServiceCatalog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource ServiceCatalogServiceCatalog
	err := ctx.RegisterResource("oci:index/serviceCatalogServiceCatalog:ServiceCatalogServiceCatalog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCatalogServiceCatalog gets an existing ServiceCatalogServiceCatalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCatalogServiceCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCatalogServiceCatalogState, opts ...pulumi.ResourceOption) (*ServiceCatalogServiceCatalog, error) {
	var resource ServiceCatalogServiceCatalog
	err := ctx.ReadResource("oci:index/serviceCatalogServiceCatalog:ServiceCatalogServiceCatalog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCatalogServiceCatalog resources.
type serviceCatalogServiceCatalogState struct {
	// (Updatable) The unique identifier for the compartment where the service catalog will be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The display name of the service catalog.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The lifecycle state of the service catalog.
	State *string `pulumi:"state"`
	// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ServiceCatalogServiceCatalogState struct {
	// (Updatable) The unique identifier for the compartment where the service catalog will be created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The display name of the service catalog.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The lifecycle state of the service catalog.
	State pulumi.StringPtrInput
	// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated pulumi.StringPtrInput
}

func (ServiceCatalogServiceCatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogServiceCatalogState)(nil)).Elem()
}

type serviceCatalogServiceCatalogArgs struct {
	// (Updatable) The unique identifier for the compartment where the service catalog will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The display name of the service catalog.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a ServiceCatalogServiceCatalog resource.
type ServiceCatalogServiceCatalogArgs struct {
	// (Updatable) The unique identifier for the compartment where the service catalog will be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The display name of the service catalog.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
}

func (ServiceCatalogServiceCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogServiceCatalogArgs)(nil)).Elem()
}

type ServiceCatalogServiceCatalogInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogOutput() ServiceCatalogServiceCatalogOutput
	ToServiceCatalogServiceCatalogOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogOutput
}

func (*ServiceCatalogServiceCatalog) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogServiceCatalog)(nil))
}

func (i *ServiceCatalogServiceCatalog) ToServiceCatalogServiceCatalogOutput() ServiceCatalogServiceCatalogOutput {
	return i.ToServiceCatalogServiceCatalogOutputWithContext(context.Background())
}

func (i *ServiceCatalogServiceCatalog) ToServiceCatalogServiceCatalogOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogOutput)
}

func (i *ServiceCatalogServiceCatalog) ToServiceCatalogServiceCatalogPtrOutput() ServiceCatalogServiceCatalogPtrOutput {
	return i.ToServiceCatalogServiceCatalogPtrOutputWithContext(context.Background())
}

func (i *ServiceCatalogServiceCatalog) ToServiceCatalogServiceCatalogPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogPtrOutput)
}

type ServiceCatalogServiceCatalogPtrInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogPtrOutput() ServiceCatalogServiceCatalogPtrOutput
	ToServiceCatalogServiceCatalogPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogPtrOutput
}

type serviceCatalogServiceCatalogPtrType ServiceCatalogServiceCatalogArgs

func (*serviceCatalogServiceCatalogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogServiceCatalog)(nil))
}

func (i *serviceCatalogServiceCatalogPtrType) ToServiceCatalogServiceCatalogPtrOutput() ServiceCatalogServiceCatalogPtrOutput {
	return i.ToServiceCatalogServiceCatalogPtrOutputWithContext(context.Background())
}

func (i *serviceCatalogServiceCatalogPtrType) ToServiceCatalogServiceCatalogPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogPtrOutput)
}

// ServiceCatalogServiceCatalogArrayInput is an input type that accepts ServiceCatalogServiceCatalogArray and ServiceCatalogServiceCatalogArrayOutput values.
// You can construct a concrete instance of `ServiceCatalogServiceCatalogArrayInput` via:
//
//          ServiceCatalogServiceCatalogArray{ ServiceCatalogServiceCatalogArgs{...} }
type ServiceCatalogServiceCatalogArrayInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogArrayOutput() ServiceCatalogServiceCatalogArrayOutput
	ToServiceCatalogServiceCatalogArrayOutputWithContext(context.Context) ServiceCatalogServiceCatalogArrayOutput
}

type ServiceCatalogServiceCatalogArray []ServiceCatalogServiceCatalogInput

func (ServiceCatalogServiceCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCatalogServiceCatalog)(nil)).Elem()
}

func (i ServiceCatalogServiceCatalogArray) ToServiceCatalogServiceCatalogArrayOutput() ServiceCatalogServiceCatalogArrayOutput {
	return i.ToServiceCatalogServiceCatalogArrayOutputWithContext(context.Background())
}

func (i ServiceCatalogServiceCatalogArray) ToServiceCatalogServiceCatalogArrayOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogArrayOutput)
}

// ServiceCatalogServiceCatalogMapInput is an input type that accepts ServiceCatalogServiceCatalogMap and ServiceCatalogServiceCatalogMapOutput values.
// You can construct a concrete instance of `ServiceCatalogServiceCatalogMapInput` via:
//
//          ServiceCatalogServiceCatalogMap{ "key": ServiceCatalogServiceCatalogArgs{...} }
type ServiceCatalogServiceCatalogMapInput interface {
	pulumi.Input

	ToServiceCatalogServiceCatalogMapOutput() ServiceCatalogServiceCatalogMapOutput
	ToServiceCatalogServiceCatalogMapOutputWithContext(context.Context) ServiceCatalogServiceCatalogMapOutput
}

type ServiceCatalogServiceCatalogMap map[string]ServiceCatalogServiceCatalogInput

func (ServiceCatalogServiceCatalogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCatalogServiceCatalog)(nil)).Elem()
}

func (i ServiceCatalogServiceCatalogMap) ToServiceCatalogServiceCatalogMapOutput() ServiceCatalogServiceCatalogMapOutput {
	return i.ToServiceCatalogServiceCatalogMapOutputWithContext(context.Background())
}

func (i ServiceCatalogServiceCatalogMap) ToServiceCatalogServiceCatalogMapOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogServiceCatalogMapOutput)
}

type ServiceCatalogServiceCatalogOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogServiceCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogServiceCatalog)(nil))
}

func (o ServiceCatalogServiceCatalogOutput) ToServiceCatalogServiceCatalogOutput() ServiceCatalogServiceCatalogOutput {
	return o
}

func (o ServiceCatalogServiceCatalogOutput) ToServiceCatalogServiceCatalogOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogOutput {
	return o
}

func (o ServiceCatalogServiceCatalogOutput) ToServiceCatalogServiceCatalogPtrOutput() ServiceCatalogServiceCatalogPtrOutput {
	return o.ToServiceCatalogServiceCatalogPtrOutputWithContext(context.Background())
}

func (o ServiceCatalogServiceCatalogOutput) ToServiceCatalogServiceCatalogPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogPtrOutput {
	return o.ApplyT(func(v ServiceCatalogServiceCatalog) *ServiceCatalogServiceCatalog {
		return &v
	}).(ServiceCatalogServiceCatalogPtrOutput)
}

type ServiceCatalogServiceCatalogPtrOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogServiceCatalogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogServiceCatalog)(nil))
}

func (o ServiceCatalogServiceCatalogPtrOutput) ToServiceCatalogServiceCatalogPtrOutput() ServiceCatalogServiceCatalogPtrOutput {
	return o
}

func (o ServiceCatalogServiceCatalogPtrOutput) ToServiceCatalogServiceCatalogPtrOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogPtrOutput {
	return o
}

type ServiceCatalogServiceCatalogArrayOutput struct{ *pulumi.OutputState }

func (ServiceCatalogServiceCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCatalogServiceCatalog)(nil))
}

func (o ServiceCatalogServiceCatalogArrayOutput) ToServiceCatalogServiceCatalogArrayOutput() ServiceCatalogServiceCatalogArrayOutput {
	return o
}

func (o ServiceCatalogServiceCatalogArrayOutput) ToServiceCatalogServiceCatalogArrayOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogArrayOutput {
	return o
}

func (o ServiceCatalogServiceCatalogArrayOutput) Index(i pulumi.IntInput) ServiceCatalogServiceCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCatalogServiceCatalog {
		return vs[0].([]ServiceCatalogServiceCatalog)[vs[1].(int)]
	}).(ServiceCatalogServiceCatalogOutput)
}

type ServiceCatalogServiceCatalogMapOutput struct{ *pulumi.OutputState }

func (ServiceCatalogServiceCatalogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceCatalogServiceCatalog)(nil))
}

func (o ServiceCatalogServiceCatalogMapOutput) ToServiceCatalogServiceCatalogMapOutput() ServiceCatalogServiceCatalogMapOutput {
	return o
}

func (o ServiceCatalogServiceCatalogMapOutput) ToServiceCatalogServiceCatalogMapOutputWithContext(ctx context.Context) ServiceCatalogServiceCatalogMapOutput {
	return o
}

func (o ServiceCatalogServiceCatalogMapOutput) MapIndex(k pulumi.StringInput) ServiceCatalogServiceCatalogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceCatalogServiceCatalog {
		return vs[0].(map[string]ServiceCatalogServiceCatalog)[vs[1].(string)]
	}).(ServiceCatalogServiceCatalogOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogPtrOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogArrayOutput{})
	pulumi.RegisterOutputType(ServiceCatalogServiceCatalogMapOutput{})
}
