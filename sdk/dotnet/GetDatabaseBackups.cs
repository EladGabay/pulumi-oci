// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseBackups
    {
        /// <summary>
        /// This data source provides the list of Backups in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets a list of backups based on the `databaseId` or `compartmentId` specified. Either one of these query parameters must be provided.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testBackups = Output.Create(Oci.GetDatabaseBackups.InvokeAsync(new Oci.GetDatabaseBackupsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DatabaseId = oci_database_database.Test_database.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseBackupsResult> InvokeAsync(GetDatabaseBackupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseBackupsResult>("oci:index/getDatabaseBackups:GetDatabaseBackups", args ?? new GetDatabaseBackupsArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseBackupsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        [Input("databaseId")]
        public string? DatabaseId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabaseBackupsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseBackupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseBackupsFilterArgs>());
            set => _filters = value;
        }

        public GetDatabaseBackupsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseBackupsResult
    {
        /// <summary>
        /// The list of backups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseBackupsBackupResult> Backups;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </summary>
        public readonly string? DatabaseId;
        public readonly ImmutableArray<Outputs.GetDatabaseBackupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDatabaseBackupsResult(
            ImmutableArray<Outputs.GetDatabaseBackupsBackupResult> backups,

            string? compartmentId,

            string? databaseId,

            ImmutableArray<Outputs.GetDatabaseBackupsFilterResult> filters,

            string id)
        {
            Backups = backups;
            CompartmentId = compartmentId;
            DatabaseId = databaseId;
            Filters = filters;
            Id = id;
        }
    }
}
