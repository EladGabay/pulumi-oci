// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Connection resource in Oracle Cloud Infrastructure Database Migration service.
//
// Create a Database Connection resource that contains the details to connect to either a Source or Target Database
// in the migration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseMigrationConnection(ctx, "testConnection", &oci.DatabaseMigrationConnectionArgs{
// 			AdminCredentials: &DatabaseMigrationConnectionAdminCredentialsArgs{
// 				Password: pulumi.Any(_var.Connection_admin_credentials_password),
// 				Username: pulumi.Any(_var.Connection_admin_credentials_username),
// 			},
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DatabaseType:  pulumi.Any(_var.Connection_database_type),
// 			VaultDetails: &DatabaseMigrationConnectionVaultDetailsArgs{
// 				CompartmentId: pulumi.Any(_var.Compartment_id),
// 				KeyId:         pulumi.Any(oci_kms_key.Test_key.Id),
// 				VaultId:       pulumi.Any(oci_kms_vault.Test_vault.Id),
// 			},
// 			CertificateTdn: pulumi.Any(_var.Connection_certificate_tdn),
// 			ConnectDescriptor: &DatabaseMigrationConnectionConnectDescriptorArgs{
// 				ConnectString:       pulumi.Any(_var.Connection_connect_descriptor_connect_string),
// 				DatabaseServiceName: pulumi.Any(oci_core_service.Test_service.Name),
// 				Host:                pulumi.Any(_var.Connection_connect_descriptor_host),
// 				Port:                pulumi.Any(_var.Connection_connect_descriptor_port),
// 			},
// 			DatabaseId: pulumi.Any(oci_database_database.Test_database.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			DisplayName: pulumi.Any(_var.Connection_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			PrivateEndpoint: &DatabaseMigrationConnectionPrivateEndpointArgs{
// 				CompartmentId: pulumi.Any(_var.Compartment_id),
// 				SubnetId:      pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				VcnId:         pulumi.Any(oci_core_vcn.Test_vcn.Id),
// 			},
// 			SshDetails: &DatabaseMigrationConnectionSshDetailsArgs{
// 				Host:         pulumi.Any(_var.Connection_ssh_details_host),
// 				Sshkey:       pulumi.Any(_var.Connection_ssh_details_sshkey),
// 				User:         pulumi.Any(_var.Connection_ssh_details_user),
// 				SudoLocation: pulumi.Any(_var.Connection_ssh_details_sudo_location),
// 			},
// 			TlsKeystore: pulumi.Any(_var.Connection_tls_keystore),
// 			TlsWallet:   pulumi.Any(_var.Connection_tls_wallet),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Connections can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseMigrationConnection:DatabaseMigrationConnection test_connection "id"
// ```
type DatabaseMigrationConnection struct {
	pulumi.CustomResourceState

	// (Updatable) Database Admin Credentials details.
	AdminCredentials DatabaseMigrationConnectionAdminCredentialsOutput `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringOutput `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor DatabaseMigrationConnectionConnectDescriptorOutput `pulumi:"connectDescriptor"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId pulumi.StringOutput `pulumi:"credentialsSecretId"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType pulumi.StringOutput `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint DatabaseMigrationConnectionPrivateEndpointOutput `pulumi:"privateEndpoint"`
	// (Updatable) Details of the ssh key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails DatabaseMigrationConnectionSshDetailsOutput `pulumi:"sshDetails"`
	// The current state of the Connection resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringOutput `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringOutput `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails DatabaseMigrationConnectionVaultDetailsOutput `pulumi:"vaultDetails"`
}

// NewDatabaseMigrationConnection registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigrationConnection(ctx *pulumi.Context,
	name string, args *DatabaseMigrationConnectionArgs, opts ...pulumi.ResourceOption) (*DatabaseMigrationConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminCredentials == nil {
		return nil, errors.New("invalid value for required argument 'AdminCredentials'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DatabaseType == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseType'")
	}
	if args.VaultDetails == nil {
		return nil, errors.New("invalid value for required argument 'VaultDetails'")
	}
	var resource DatabaseMigrationConnection
	err := ctx.RegisterResource("oci:index/databaseMigrationConnection:DatabaseMigrationConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigrationConnection gets an existing DatabaseMigrationConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigrationConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationConnectionState, opts ...pulumi.ResourceOption) (*DatabaseMigrationConnection, error) {
	var resource DatabaseMigrationConnection
	err := ctx.ReadResource("oci:index/databaseMigrationConnection:DatabaseMigrationConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigrationConnection resources.
type databaseMigrationConnectionState struct {
	// (Updatable) Database Admin Credentials details.
	AdminCredentials *DatabaseMigrationConnectionAdminCredentials `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn *string `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor *DatabaseMigrationConnectionConnectDescriptor `pulumi:"connectDescriptor"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId *string `pulumi:"credentialsSecretId"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId *string `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType *string `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint *DatabaseMigrationConnectionPrivateEndpoint `pulumi:"privateEndpoint"`
	// (Updatable) Details of the ssh key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails *DatabaseMigrationConnectionSshDetails `pulumi:"sshDetails"`
	// The current state of the Connection resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore *string `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet *string `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails *DatabaseMigrationConnectionVaultDetails `pulumi:"vaultDetails"`
}

type DatabaseMigrationConnectionState struct {
	// (Updatable) Database Admin Credentials details.
	AdminCredentials DatabaseMigrationConnectionAdminCredentialsPtrInput
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor DatabaseMigrationConnectionConnectDescriptorPtrInput
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId pulumi.StringPtrInput
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringPtrInput
	// Database connection type.
	DatabaseType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint DatabaseMigrationConnectionPrivateEndpointPtrInput
	// (Updatable) Details of the ssh key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails DatabaseMigrationConnectionSshDetailsPtrInput
	// The current state of the Connection resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringPtrInput
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails DatabaseMigrationConnectionVaultDetailsPtrInput
}

func (DatabaseMigrationConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationConnectionState)(nil)).Elem()
}

type databaseMigrationConnectionArgs struct {
	// (Updatable) Database Admin Credentials details.
	AdminCredentials DatabaseMigrationConnectionAdminCredentials `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn *string `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor *DatabaseMigrationConnectionConnectDescriptor `pulumi:"connectDescriptor"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId *string `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType string `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint *DatabaseMigrationConnectionPrivateEndpoint `pulumi:"privateEndpoint"`
	// (Updatable) Details of the ssh key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails *DatabaseMigrationConnectionSshDetails `pulumi:"sshDetails"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore *string `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet *string `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails DatabaseMigrationConnectionVaultDetails `pulumi:"vaultDetails"`
}

// The set of arguments for constructing a DatabaseMigrationConnection resource.
type DatabaseMigrationConnectionArgs struct {
	// (Updatable) Database Admin Credentials details.
	AdminCredentials DatabaseMigrationConnectionAdminCredentialsInput
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor DatabaseMigrationConnectionConnectDescriptorPtrInput
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringPtrInput
	// Database connection type.
	DatabaseType pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint DatabaseMigrationConnectionPrivateEndpointPtrInput
	// (Updatable) Details of the ssh key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails DatabaseMigrationConnectionSshDetailsPtrInput
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringPtrInput
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails DatabaseMigrationConnectionVaultDetailsInput
}

func (DatabaseMigrationConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationConnectionArgs)(nil)).Elem()
}

type DatabaseMigrationConnectionInput interface {
	pulumi.Input

	ToDatabaseMigrationConnectionOutput() DatabaseMigrationConnectionOutput
	ToDatabaseMigrationConnectionOutputWithContext(ctx context.Context) DatabaseMigrationConnectionOutput
}

func (*DatabaseMigrationConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMigrationConnection)(nil))
}

func (i *DatabaseMigrationConnection) ToDatabaseMigrationConnectionOutput() DatabaseMigrationConnectionOutput {
	return i.ToDatabaseMigrationConnectionOutputWithContext(context.Background())
}

func (i *DatabaseMigrationConnection) ToDatabaseMigrationConnectionOutputWithContext(ctx context.Context) DatabaseMigrationConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationConnectionOutput)
}

func (i *DatabaseMigrationConnection) ToDatabaseMigrationConnectionPtrOutput() DatabaseMigrationConnectionPtrOutput {
	return i.ToDatabaseMigrationConnectionPtrOutputWithContext(context.Background())
}

func (i *DatabaseMigrationConnection) ToDatabaseMigrationConnectionPtrOutputWithContext(ctx context.Context) DatabaseMigrationConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationConnectionPtrOutput)
}

type DatabaseMigrationConnectionPtrInput interface {
	pulumi.Input

	ToDatabaseMigrationConnectionPtrOutput() DatabaseMigrationConnectionPtrOutput
	ToDatabaseMigrationConnectionPtrOutputWithContext(ctx context.Context) DatabaseMigrationConnectionPtrOutput
}

type databaseMigrationConnectionPtrType DatabaseMigrationConnectionArgs

func (*databaseMigrationConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationConnection)(nil))
}

func (i *databaseMigrationConnectionPtrType) ToDatabaseMigrationConnectionPtrOutput() DatabaseMigrationConnectionPtrOutput {
	return i.ToDatabaseMigrationConnectionPtrOutputWithContext(context.Background())
}

func (i *databaseMigrationConnectionPtrType) ToDatabaseMigrationConnectionPtrOutputWithContext(ctx context.Context) DatabaseMigrationConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationConnectionPtrOutput)
}

// DatabaseMigrationConnectionArrayInput is an input type that accepts DatabaseMigrationConnectionArray and DatabaseMigrationConnectionArrayOutput values.
// You can construct a concrete instance of `DatabaseMigrationConnectionArrayInput` via:
//
//          DatabaseMigrationConnectionArray{ DatabaseMigrationConnectionArgs{...} }
type DatabaseMigrationConnectionArrayInput interface {
	pulumi.Input

	ToDatabaseMigrationConnectionArrayOutput() DatabaseMigrationConnectionArrayOutput
	ToDatabaseMigrationConnectionArrayOutputWithContext(context.Context) DatabaseMigrationConnectionArrayOutput
}

type DatabaseMigrationConnectionArray []DatabaseMigrationConnectionInput

func (DatabaseMigrationConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseMigrationConnection)(nil)).Elem()
}

func (i DatabaseMigrationConnectionArray) ToDatabaseMigrationConnectionArrayOutput() DatabaseMigrationConnectionArrayOutput {
	return i.ToDatabaseMigrationConnectionArrayOutputWithContext(context.Background())
}

func (i DatabaseMigrationConnectionArray) ToDatabaseMigrationConnectionArrayOutputWithContext(ctx context.Context) DatabaseMigrationConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationConnectionArrayOutput)
}

// DatabaseMigrationConnectionMapInput is an input type that accepts DatabaseMigrationConnectionMap and DatabaseMigrationConnectionMapOutput values.
// You can construct a concrete instance of `DatabaseMigrationConnectionMapInput` via:
//
//          DatabaseMigrationConnectionMap{ "key": DatabaseMigrationConnectionArgs{...} }
type DatabaseMigrationConnectionMapInput interface {
	pulumi.Input

	ToDatabaseMigrationConnectionMapOutput() DatabaseMigrationConnectionMapOutput
	ToDatabaseMigrationConnectionMapOutputWithContext(context.Context) DatabaseMigrationConnectionMapOutput
}

type DatabaseMigrationConnectionMap map[string]DatabaseMigrationConnectionInput

func (DatabaseMigrationConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseMigrationConnection)(nil)).Elem()
}

func (i DatabaseMigrationConnectionMap) ToDatabaseMigrationConnectionMapOutput() DatabaseMigrationConnectionMapOutput {
	return i.ToDatabaseMigrationConnectionMapOutputWithContext(context.Background())
}

func (i DatabaseMigrationConnectionMap) ToDatabaseMigrationConnectionMapOutputWithContext(ctx context.Context) DatabaseMigrationConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationConnectionMapOutput)
}

type DatabaseMigrationConnectionOutput struct {
	*pulumi.OutputState
}

func (DatabaseMigrationConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMigrationConnection)(nil))
}

func (o DatabaseMigrationConnectionOutput) ToDatabaseMigrationConnectionOutput() DatabaseMigrationConnectionOutput {
	return o
}

func (o DatabaseMigrationConnectionOutput) ToDatabaseMigrationConnectionOutputWithContext(ctx context.Context) DatabaseMigrationConnectionOutput {
	return o
}

func (o DatabaseMigrationConnectionOutput) ToDatabaseMigrationConnectionPtrOutput() DatabaseMigrationConnectionPtrOutput {
	return o.ToDatabaseMigrationConnectionPtrOutputWithContext(context.Background())
}

func (o DatabaseMigrationConnectionOutput) ToDatabaseMigrationConnectionPtrOutputWithContext(ctx context.Context) DatabaseMigrationConnectionPtrOutput {
	return o.ApplyT(func(v DatabaseMigrationConnection) *DatabaseMigrationConnection {
		return &v
	}).(DatabaseMigrationConnectionPtrOutput)
}

type DatabaseMigrationConnectionPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseMigrationConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationConnection)(nil))
}

func (o DatabaseMigrationConnectionPtrOutput) ToDatabaseMigrationConnectionPtrOutput() DatabaseMigrationConnectionPtrOutput {
	return o
}

func (o DatabaseMigrationConnectionPtrOutput) ToDatabaseMigrationConnectionPtrOutputWithContext(ctx context.Context) DatabaseMigrationConnectionPtrOutput {
	return o
}

type DatabaseMigrationConnectionArrayOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseMigrationConnection)(nil))
}

func (o DatabaseMigrationConnectionArrayOutput) ToDatabaseMigrationConnectionArrayOutput() DatabaseMigrationConnectionArrayOutput {
	return o
}

func (o DatabaseMigrationConnectionArrayOutput) ToDatabaseMigrationConnectionArrayOutputWithContext(ctx context.Context) DatabaseMigrationConnectionArrayOutput {
	return o
}

func (o DatabaseMigrationConnectionArrayOutput) Index(i pulumi.IntInput) DatabaseMigrationConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseMigrationConnection {
		return vs[0].([]DatabaseMigrationConnection)[vs[1].(int)]
	}).(DatabaseMigrationConnectionOutput)
}

type DatabaseMigrationConnectionMapOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseMigrationConnection)(nil))
}

func (o DatabaseMigrationConnectionMapOutput) ToDatabaseMigrationConnectionMapOutput() DatabaseMigrationConnectionMapOutput {
	return o
}

func (o DatabaseMigrationConnectionMapOutput) ToDatabaseMigrationConnectionMapOutputWithContext(ctx context.Context) DatabaseMigrationConnectionMapOutput {
	return o
}

func (o DatabaseMigrationConnectionMapOutput) MapIndex(k pulumi.StringInput) DatabaseMigrationConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseMigrationConnection {
		return vs[0].(map[string]DatabaseMigrationConnection)[vs[1].(string)]
	}).(DatabaseMigrationConnectionOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseMigrationConnectionOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationConnectionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationConnectionArrayOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationConnectionMapOutput{})
}
