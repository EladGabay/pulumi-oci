// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseMigrationAgents
    {
        /// <summary>
        /// This data source provides the list of Agents in Oracle Cloud Infrastructure Database Migration service.
        /// 
        /// Display the name of all the existing ODMS Agents in the server.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAgents = Output.Create(Oci.GetDatabaseMigrationAgents.InvokeAsync(new Oci.GetDatabaseMigrationAgentsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Agent_display_name,
        ///             State = @var.Agent_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseMigrationAgentsResult> InvokeAsync(GetDatabaseMigrationAgentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseMigrationAgentsResult>("oci:index/getDatabaseMigrationAgents:GetDatabaseMigrationAgents", args ?? new GetDatabaseMigrationAgentsArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseMigrationAgentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDatabaseMigrationAgentsFilterArgs>? _filters;
        public List<Inputs.GetDatabaseMigrationAgentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseMigrationAgentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The current state of the Database Migration Deployment.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDatabaseMigrationAgentsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseMigrationAgentsResult
    {
        /// <summary>
        /// The list of agent_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseMigrationAgentsAgentCollectionResult> AgentCollections;
        /// <summary>
        /// OCID of the compartment
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// ODMS Agent name
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDatabaseMigrationAgentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the ODMS On Prem Agent.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDatabaseMigrationAgentsResult(
            ImmutableArray<Outputs.GetDatabaseMigrationAgentsAgentCollectionResult> agentCollections,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetDatabaseMigrationAgentsFilterResult> filters,

            string id,

            string? state)
        {
            AgentCollections = agentCollections;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
