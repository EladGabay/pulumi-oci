// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreVolumeAttachments
    {
        /// <summary>
        /// This data source provides the list of Volume Attachments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the volume attachments in the specified compartment. You can filter the
        /// list by specifying an instance OCID, volume OCID, or both.
        /// 
        /// Currently, the only supported volume attachment type are [IScsiVolumeAttachment](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IScsiVolumeAttachment/) and
        /// [ParavirtualizedVolumeAttachment](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ParavirtualizedVolumeAttachment/).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVolumeAttachments = Output.Create(Oci.GetCoreVolumeAttachments.InvokeAsync(new Oci.GetCoreVolumeAttachmentsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             AvailabilityDomain = @var.Volume_attachment_availability_domain,
        ///             InstanceId = oci_core_instance.Test_instance.Id,
        ///             VolumeId = oci_core_volume.Test_volume.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreVolumeAttachmentsResult> InvokeAsync(GetCoreVolumeAttachmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreVolumeAttachmentsResult>("oci:index/getCoreVolumeAttachments:GetCoreVolumeAttachments", args ?? new GetCoreVolumeAttachmentsArgs(), options.WithVersion());
    }


    public sealed class GetCoreVolumeAttachmentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        [Input("availabilityDomain")]
        public string? AvailabilityDomain { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreVolumeAttachmentsFilterArgs>? _filters;
        public List<Inputs.GetCoreVolumeAttachmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreVolumeAttachmentsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// The OCID of the volume.
        /// </summary>
        [Input("volumeId")]
        public string? VolumeId { get; set; }

        public GetCoreVolumeAttachmentsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreVolumeAttachmentsResult
    {
        /// <summary>
        /// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
        /// </summary>
        public readonly string? AvailabilityDomain;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCoreVolumeAttachmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The OCID of the instance the volume is attached to.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The list of volume_attachments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreVolumeAttachmentsVolumeAttachmentResult> VolumeAttachments;
        /// <summary>
        /// The OCID of the volume.
        /// </summary>
        public readonly string? VolumeId;

        [OutputConstructor]
        private GetCoreVolumeAttachmentsResult(
            string? availabilityDomain,

            string compartmentId,

            ImmutableArray<Outputs.GetCoreVolumeAttachmentsFilterResult> filters,

            string id,

            string? instanceId,

            ImmutableArray<Outputs.GetCoreVolumeAttachmentsVolumeAttachmentResult> volumeAttachments,

            string? volumeId)
        {
            AvailabilityDomain = availabilityDomain;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            InstanceId = instanceId;
            VolumeAttachments = volumeAttachments;
            VolumeId = volumeId;
        }
    }
}
