// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./analyticsAnalyticsInstance";
export * from "./analyticsAnalyticsInstancePrivateAccessChannel";
export * from "./analyticsAnalyticsInstanceVanityUrl";
export * from "./apigatewayApi";
export * from "./apigatewayCertificate";
export * from "./apigatewayDeployment";
export * from "./apigatewayGateway";
export * from "./apmApmDomain";
export * from "./apmSyntheticsMonitor";
export * from "./apmSyntheticsScript";
export * from "./artifactsContainerConfiguration";
export * from "./artifactsContainerImageSignature";
export * from "./artifactsContainerRepository";
export * from "./artifactsGenericArtifact";
export * from "./artifactsRepository";
export * from "./auditConfiguration";
export * from "./autoscalingAutoScalingConfiguration";
export * from "./bastionBastion";
export * from "./bastionSession";
export * from "./bdsAutoScalingConfiguration";
export * from "./bdsBdsInstance";
export * from "./blockchainBlockchainPlatform";
export * from "./blockchainOsn";
export * from "./blockchainPeer";
export * from "./budgetAlertRule";
export * from "./budgetBudget";
export * from "./cloudGuardCloudGuardConfiguration";
export * from "./cloudGuardDataMaskRule";
export * from "./cloudGuardDetectorRecipe";
export * from "./cloudGuardManagedList";
export * from "./cloudGuardResponderRecipe";
export * from "./cloudGuardTarget";
export * from "./containerengineCluster";
export * from "./containerengineNodePool";
export * from "./coreAppCatalogListingResourceVersionAgreement";
export * from "./coreAppCatalogSubscription";
export * from "./coreBootVolume";
export * from "./coreBootVolumeBackup";
export * from "./coreClusterNetwork";
export * from "./coreComputeCapacityReservation";
export * from "./coreComputeImageCapabilitySchema";
export * from "./coreConsoleHistory";
export * from "./coreCpe";
export * from "./coreCrossConnect";
export * from "./coreCrossConnectGroup";
export * from "./coreDedicatedVmHost";
export * from "./coreDefaultDhcpOptions";
export * from "./coreDefaultRouteTable";
export * from "./coreDefaultSecurityList";
export * from "./coreDhcpOptions";
export * from "./coreDrg";
export * from "./coreDrgAttachment";
export * from "./coreDrgAttachmentManagement";
export * from "./coreDrgAttachmentsList";
export * from "./coreDrgRouteDistribution";
export * from "./coreDrgRouteDistributionStatement";
export * from "./coreDrgRouteTable";
export * from "./coreDrgRouteTableRouteRule";
export * from "./coreImage";
export * from "./coreInstance";
export * from "./coreInstanceConfiguration";
export * from "./coreInstanceConsoleConnection";
export * from "./coreInstancePool";
export * from "./coreInstancePoolInstance";
export * from "./coreInternetGateway";
export * from "./coreIpsec";
export * from "./coreIpsecConnectionTunnelManagement";
export * from "./coreIpv6";
export * from "./coreListingResourceVersionAgreement";
export * from "./coreLocalPeeringGateway";
export * from "./coreNatGateway";
export * from "./coreNetworkSecurityGroup";
export * from "./coreNetworkSecurityGroupSecurityRule";
export * from "./corePrivateIp";
export * from "./corePublicIp";
export * from "./corePublicIpPool";
export * from "./corePublicIpPoolCapacity";
export * from "./coreRemotePeeringConnection";
export * from "./coreRouteTable";
export * from "./coreRouteTableAttachment";
export * from "./coreSecurityList";
export * from "./coreServiceGateway";
export * from "./coreShapeManagement";
export * from "./coreSubnet";
export * from "./coreVcn";
export * from "./coreVirtualCircuit";
export * from "./coreVirtualNetwork";
export * from "./coreVlan";
export * from "./coreVnicAttachment";
export * from "./coreVolume";
export * from "./coreVolumeAttachment";
export * from "./coreVolumeBackup";
export * from "./coreVolumeBackupPolicy";
export * from "./coreVolumeBackupPolicyAssignment";
export * from "./coreVolumeGroup";
export * from "./coreVolumeGroupBackup";
export * from "./dataSafeDataSafeConfiguration";
export * from "./dataSafeDataSafePrivateEndpoint";
export * from "./dataSafeOnPremConnector";
export * from "./dataSafeTargetDatabase";
export * from "./databaseAutonomousContainerDatabase";
export * from "./databaseAutonomousContainerDatabaseDataguardAssociationOperation";
export * from "./databaseAutonomousDatabase";
export * from "./databaseAutonomousDatabaseBackup";
export * from "./databaseAutonomousDatabaseInstanceWalletManagement";
export * from "./databaseAutonomousDatabaseRegionalWalletManagement";
export * from "./databaseAutonomousDatabaseWallet";
export * from "./databaseAutonomousExadataInfrastructure";
export * from "./databaseAutonomousVmCluster";
export * from "./databaseBackup";
export * from "./databaseBackupDestination";
export * from "./databaseCloudExadataInfrastructure";
export * from "./databaseCloudVmCluster";
export * from "./databaseDataGuardAssociation";
export * from "./databaseDatabase";
export * from "./databaseDatabaseSoftwareImage";
export * from "./databaseDatabaseUpgrade";
export * from "./databaseDbHome";
export * from "./databaseDbNodeConsoleConnection";
export * from "./databaseDbSystem";
export * from "./databaseExadataInfrastructure";
export * from "./databaseExadataInfrastructureStorage";
export * from "./databaseExadataIormConfig";
export * from "./databaseExternalContainerDatabase";
export * from "./databaseExternalContainerDatabaseManagement";
export * from "./databaseExternalDatabaseConnector";
export * from "./databaseExternalNonContainerDatabase";
export * from "./databaseExternalNonContainerDatabaseManagement";
export * from "./databaseExternalNonContainerDatabaseOperationsInsightsManagement";
export * from "./databaseExternalPluggableDatabase";
export * from "./databaseExternalPluggableDatabaseManagement";
export * from "./databaseExternalPluggableDatabaseOperationsInsightsManagement";
export * from "./databaseKeyStore";
export * from "./databaseMaintenanceRun";
export * from "./databaseManagementManagedDatabaseGroup";
export * from "./databaseManagementManagedDatabasesChangeDatabaseParameter";
export * from "./databaseManagementManagedDatabasesResetDatabaseParameter";
export * from "./databaseMigration";
export * from "./databaseMigrationAgent";
export * from "./databaseMigrationConnection";
export * from "./databaseMigrationJob";
export * from "./databaseMigrationMigration";
export * from "./databasePluggableDatabase";
export * from "./databasePluggableDatabasesLocalClone";
export * from "./databasePluggableDatabasesRemoteClone";
export * from "./databaseVmCluster";
export * from "./databaseVmClusterNetwork";
export * from "./datacatalogCatalog";
export * from "./datacatalogCatalogPrivateEndpoint";
export * from "./datacatalogConnection";
export * from "./datacatalogDataAsset";
export * from "./datacatalogMetastore";
export * from "./dataflowApplication";
export * from "./dataflowInvokeRun";
export * from "./dataflowPrivateEndpoint";
export * from "./dataintegrationWorkspace";
export * from "./datascienceModel";
export * from "./datascienceModelDeployment";
export * from "./datascienceModelProvenance";
export * from "./datascienceNotebookSession";
export * from "./datascienceProject";
export * from "./devopsDeployArtifact";
export * from "./devopsDeployEnvironment";
export * from "./devopsDeployPipeline";
export * from "./devopsDeployStage";
export * from "./devopsDeployment";
export * from "./devopsProject";
export * from "./dnsRecord";
export * from "./dnsResolver";
export * from "./dnsResolverEndpoint";
export * from "./dnsRrset";
export * from "./dnsSteeringPolicy";
export * from "./dnsSteeringPolicyAttachment";
export * from "./dnsTsigKey";
export * from "./dnsView";
export * from "./dnsZone";
export * from "./emailDkim";
export * from "./emailEmailDomain";
export * from "./emailSender";
export * from "./emailSuppression";
export * from "./eventsRule";
export * from "./fileStorageExport";
export * from "./fileStorageExportSet";
export * from "./fileStorageFileSystem";
export * from "./fileStorageMountTarget";
export * from "./fileStorageSnapshot";
export * from "./functionsApplication";
export * from "./functionsFunction";
export * from "./functionsInvokeFunction";
export * from "./genericArtifactsContentArtifactByPath";
export * from "./getAnalyticsAnalyticsInstance";
export * from "./getAnalyticsAnalyticsInstancePrivateAccessChannel";
export * from "./getAnalyticsAnalyticsInstances";
export * from "./getApigatewayApi";
export * from "./getApigatewayApiContent";
export * from "./getApigatewayApiDeploymentSpecification";
export * from "./getApigatewayApiValidation";
export * from "./getApigatewayApis";
export * from "./getApigatewayCertificate";
export * from "./getApigatewayCertificates";
export * from "./getApigatewayDeployment";
export * from "./getApigatewayDeployments";
export * from "./getApigatewayGateway";
export * from "./getApigatewayGateways";
export * from "./getApmApmDomain";
export * from "./getApmApmDomains";
export * from "./getApmDataKeys";
export * from "./getApmSyntheticsMonitor";
export * from "./getApmSyntheticsMonitors";
export * from "./getApmSyntheticsPublicVantagePoint";
export * from "./getApmSyntheticsPublicVantagePoints";
export * from "./getApmSyntheticsResult";
export * from "./getApmSyntheticsScript";
export * from "./getApmSyntheticsScripts";
export * from "./getArtifactsContainerConfiguration";
export * from "./getArtifactsContainerImage";
export * from "./getArtifactsContainerImageSignature";
export * from "./getArtifactsContainerImageSignatures";
export * from "./getArtifactsContainerImages";
export * from "./getArtifactsContainerRepositories";
export * from "./getArtifactsContainerRepository";
export * from "./getArtifactsGenericArtifact";
export * from "./getArtifactsGenericArtifacts";
export * from "./getArtifactsRepositories";
export * from "./getArtifactsRepository";
export * from "./getAuditConfiguration";
export * from "./getAuditEvents";
export * from "./getAutoscalingAutoScalingConfiguration";
export * from "./getAutoscalingAutoScalingConfigurations";
export * from "./getBastionBastion";
export * from "./getBastionBastions";
export * from "./getBastionSession";
export * from "./getBastionSessions";
export * from "./getBdsAutoScalingConfiguration";
export * from "./getBdsAutoScalingConfigurations";
export * from "./getBdsBdsInstance";
export * from "./getBdsBdsInstances";
export * from "./getBlockchainBlockchainPlatform";
export * from "./getBlockchainBlockchainPlatforms";
export * from "./getBlockchainOsn";
export * from "./getBlockchainOsns";
export * from "./getBlockchainPeer";
export * from "./getBlockchainPeers";
export * from "./getBudgetAlertRule";
export * from "./getBudgetAlertRules";
export * from "./getBudgetBudget";
export * from "./getBudgetBudgets";
export * from "./getCloudGuardCloudGuardConfiguration";
export * from "./getCloudGuardDataMaskRule";
export * from "./getCloudGuardDataMaskRules";
export * from "./getCloudGuardDetectorRecipe";
export * from "./getCloudGuardDetectorRecipes";
export * from "./getCloudGuardManagedList";
export * from "./getCloudGuardManagedLists";
export * from "./getCloudGuardResponderRecipe";
export * from "./getCloudGuardResponderRecipes";
export * from "./getCloudGuardTarget";
export * from "./getCloudGuardTargets";
export * from "./getComputeinstanceagentInstanceAgentPlugin";
export * from "./getComputeinstanceagentInstanceAgentPlugins";
export * from "./getComputeinstanceagentInstanceAvailablePlugins";
export * from "./getContainerengineClusterKubeConfig";
export * from "./getContainerengineClusterOption";
export * from "./getContainerengineClusters";
export * from "./getContainerengineMigrateToNativeVcnStatus";
export * from "./getContainerengineNodePool";
export * from "./getContainerengineNodePoolOption";
export * from "./getContainerengineNodePools";
export * from "./getContainerengineWorkRequestErrors";
export * from "./getContainerengineWorkRequestLogEntries";
export * from "./getContainerengineWorkRequests";
export * from "./getCoreAppCatalogListing";
export * from "./getCoreAppCatalogListingResourceVersion";
export * from "./getCoreAppCatalogListingResourceVersions";
export * from "./getCoreAppCatalogListings";
export * from "./getCoreAppCatalogSubscriptions";
export * from "./getCoreBlockVolumeReplica";
export * from "./getCoreBlockVolumeReplicas";
export * from "./getCoreBootVolume";
export * from "./getCoreBootVolumeAttachments";
export * from "./getCoreBootVolumeBackup";
export * from "./getCoreBootVolumeBackups";
export * from "./getCoreBootVolumeReplica";
export * from "./getCoreBootVolumeReplicas";
export * from "./getCoreBootVolumes";
export * from "./getCoreByoipAllocatedRanges";
export * from "./getCoreByoipRange";
export * from "./getCoreByoipRanges";
export * from "./getCoreClusterNetwork";
export * from "./getCoreClusterNetworkInstances";
export * from "./getCoreClusterNetworks";
export * from "./getCoreComputeCapacityReservation";
export * from "./getCoreComputeCapacityReservationInstanceShapes";
export * from "./getCoreComputeCapacityReservationInstances";
export * from "./getCoreComputeCapacityReservations";
export * from "./getCoreComputeGlobalImageCapabilitySchema";
export * from "./getCoreComputeGlobalImageCapabilitySchemas";
export * from "./getCoreComputeGlobalImageCapabilitySchemasVersion";
export * from "./getCoreComputeGlobalImageCapabilitySchemasVersions";
export * from "./getCoreComputeImageCapabilitySchema";
export * from "./getCoreComputeImageCapabilitySchemas";
export * from "./getCoreConsoleHistories";
export * from "./getCoreConsoleHistoryData";
export * from "./getCoreCpeDeviceShape";
export * from "./getCoreCpeDeviceShapes";
export * from "./getCoreCpes";
export * from "./getCoreCrossConnect";
export * from "./getCoreCrossConnectGroup";
export * from "./getCoreCrossConnectGroups";
export * from "./getCoreCrossConnectLocations";
export * from "./getCoreCrossConnectPortSpeedShapes";
export * from "./getCoreCrossConnectStatus";
export * from "./getCoreCrossConnects";
export * from "./getCoreDedicatedVmHost";
export * from "./getCoreDedicatedVmHostInstanceShapes";
export * from "./getCoreDedicatedVmHostShapes";
export * from "./getCoreDedicatedVmHosts";
export * from "./getCoreDedicatedVmHostsInstances";
export * from "./getCoreDhcpOptions";
export * from "./getCoreDrgAttachments";
export * from "./getCoreDrgRouteDistribution";
export * from "./getCoreDrgRouteDistributionStatements";
export * from "./getCoreDrgRouteDistributions";
export * from "./getCoreDrgRouteTable";
export * from "./getCoreDrgRouteTableRouteRules";
export * from "./getCoreDrgRouteTables";
export * from "./getCoreDrgs";
export * from "./getCoreFastConnectProviderService";
export * from "./getCoreFastConnectProviderServiceKey";
export * from "./getCoreFastConnectProviderServices";
export * from "./getCoreImage";
export * from "./getCoreImageShape";
export * from "./getCoreImageShapes";
export * from "./getCoreImages";
export * from "./getCoreInstance";
export * from "./getCoreInstanceConfiguration";
export * from "./getCoreInstanceConfigurations";
export * from "./getCoreInstanceConsoleConnections";
export * from "./getCoreInstanceCredentials";
export * from "./getCoreInstanceDevices";
export * from "./getCoreInstancePool";
export * from "./getCoreInstancePoolInstances";
export * from "./getCoreInstancePoolLoadBalancerAttachment";
export * from "./getCoreInstancePools";
export * from "./getCoreInstances";
export * from "./getCoreInternetGateways";
export * from "./getCoreIpsecConfig";
export * from "./getCoreIpsecConnectionTunnel";
export * from "./getCoreIpsecConnectionTunnels";
export * from "./getCoreIpsecConnections";
export * from "./getCoreIpsecStatus";
export * from "./getCoreIpv6";
export * from "./getCoreIpv6s";
export * from "./getCoreLetterOfAuthority";
export * from "./getCoreListingResourceVersion";
export * from "./getCoreListingResourceVersions";
export * from "./getCoreLocalPeeringGateways";
export * from "./getCoreNatGateway";
export * from "./getCoreNatGateways";
export * from "./getCoreNetworkSecurityGroup";
export * from "./getCoreNetworkSecurityGroupSecurityRules";
export * from "./getCoreNetworkSecurityGroupVnics";
export * from "./getCoreNetworkSecurityGroups";
export * from "./getCorePeerRegionForRemotePeerings";
export * from "./getCorePrivateIp";
export * from "./getCorePrivateIps";
export * from "./getCorePublicIp";
export * from "./getCorePublicIpPool";
export * from "./getCorePublicIpPools";
export * from "./getCorePublicIps";
export * from "./getCoreRemotePeeringConnections";
export * from "./getCoreRouteTables";
export * from "./getCoreSecurityLists";
export * from "./getCoreServiceGateways";
export * from "./getCoreServices";
export * from "./getCoreShape";
export * from "./getCoreShapes";
export * from "./getCoreSubnet";
export * from "./getCoreSubnets";
export * from "./getCoreVcn";
export * from "./getCoreVcnDnsResolverAssociation";
export * from "./getCoreVcns";
export * from "./getCoreVirtualCircuit";
export * from "./getCoreVirtualCircuitBandwidthShapes";
export * from "./getCoreVirtualCircuitPublicPrefixes";
export * from "./getCoreVirtualCircuits";
export * from "./getCoreVirtualNetworks";
export * from "./getCoreVlan";
export * from "./getCoreVlans";
export * from "./getCoreVnic";
export * from "./getCoreVnicAttachments";
export * from "./getCoreVolume";
export * from "./getCoreVolumeAttachments";
export * from "./getCoreVolumeBackupPolicies";
export * from "./getCoreVolumeBackupPolicyAssignments";
export * from "./getCoreVolumeBackups";
export * from "./getCoreVolumeGroupBackups";
export * from "./getCoreVolumeGroups";
export * from "./getCoreVolumes";
export * from "./getDataSafeDataSafeConfiguration";
export * from "./getDataSafeDataSafePrivateEndpoint";
export * from "./getDataSafeDataSafePrivateEndpoints";
export * from "./getDataSafeOnPremConnector";
export * from "./getDataSafeOnPremConnectors";
export * from "./getDataSafeTargetDatabase";
export * from "./getDataSafeTargetDatabases";
export * from "./getDatabaseAutonomousContainerDatabase";
export * from "./getDatabaseAutonomousContainerDatabaseDataguardAssociation";
export * from "./getDatabaseAutonomousContainerDatabaseDataguardAssociations";
export * from "./getDatabaseAutonomousContainerDatabases";
export * from "./getDatabaseAutonomousContainerPatches";
export * from "./getDatabaseAutonomousDatabase";
export * from "./getDatabaseAutonomousDatabaseBackup";
export * from "./getDatabaseAutonomousDatabaseBackups";
export * from "./getDatabaseAutonomousDatabaseDataguardAssociation";
export * from "./getDatabaseAutonomousDatabaseDataguardAssociations";
export * from "./getDatabaseAutonomousDatabaseInstanceWalletManagement";
export * from "./getDatabaseAutonomousDatabaseRegionalWalletManagement";
export * from "./getDatabaseAutonomousDatabaseWallet";
export * from "./getDatabaseAutonomousDatabases";
export * from "./getDatabaseAutonomousDatabasesClones";
export * from "./getDatabaseAutonomousDbPreviewVersions";
export * from "./getDatabaseAutonomousDbVersions";
export * from "./getDatabaseAutonomousExadataInfrastructure";
export * from "./getDatabaseAutonomousExadataInfrastructureOcpu";
export * from "./getDatabaseAutonomousExadataInfrastructureShapes";
export * from "./getDatabaseAutonomousExadataInfrastructures";
export * from "./getDatabaseAutonomousPatch";
export * from "./getDatabaseAutonomousVmCluster";
export * from "./getDatabaseAutonomousVmClusters";
export * from "./getDatabaseBackupDestination";
export * from "./getDatabaseBackupDestinations";
export * from "./getDatabaseBackups";
export * from "./getDatabaseCloudExadataInfrastructure";
export * from "./getDatabaseCloudExadataInfrastructures";
export * from "./getDatabaseCloudVmCluster";
export * from "./getDatabaseCloudVmClusters";
export * from "./getDatabaseDataGuardAssociation";
export * from "./getDatabaseDataGuardAssociations";
export * from "./getDatabaseDatabase";
export * from "./getDatabaseDatabaseSoftwareImage";
export * from "./getDatabaseDatabaseSoftwareImages";
export * from "./getDatabaseDatabaseUpgradeHistoryEntries";
export * from "./getDatabaseDatabaseUpgradeHistoryEntry";
export * from "./getDatabaseDatabases";
export * from "./getDatabaseDbHome";
export * from "./getDatabaseDbHomePatchHistoryEntries";
export * from "./getDatabaseDbHomePatches";
export * from "./getDatabaseDbHomes";
export * from "./getDatabaseDbNode";
export * from "./getDatabaseDbNodeConsoleConnection";
export * from "./getDatabaseDbNodeConsoleConnections";
export * from "./getDatabaseDbNodes";
export * from "./getDatabaseDbSystemPatchHistoryEntries";
export * from "./getDatabaseDbSystemPatches";
export * from "./getDatabaseDbSystemShapes";
export * from "./getDatabaseDbSystems";
export * from "./getDatabaseDbVersions";
export * from "./getDatabaseExadataInfrastructure";
export * from "./getDatabaseExadataInfrastructureDownloadConfigFile";
export * from "./getDatabaseExadataInfrastructures";
export * from "./getDatabaseExadataIormConfig";
export * from "./getDatabaseExternalContainerDatabase";
export * from "./getDatabaseExternalContainerDatabases";
export * from "./getDatabaseExternalDatabaseConnector";
export * from "./getDatabaseExternalDatabaseConnectors";
export * from "./getDatabaseExternalNonContainerDatabase";
export * from "./getDatabaseExternalNonContainerDatabases";
export * from "./getDatabaseExternalPluggableDatabase";
export * from "./getDatabaseExternalPluggableDatabases";
export * from "./getDatabaseFlexComponents";
export * from "./getDatabaseGiVersions";
export * from "./getDatabaseKeyStore";
export * from "./getDatabaseKeyStores";
export * from "./getDatabaseMaintenanceRun";
export * from "./getDatabaseMaintenanceRuns";
export * from "./getDatabaseManagementManagedDatabase";
export * from "./getDatabaseManagementManagedDatabaseGroup";
export * from "./getDatabaseManagementManagedDatabaseGroups";
export * from "./getDatabaseManagementManagedDatabases";
export * from "./getDatabaseManagementManagedDatabasesDatabaseParameter";
export * from "./getDatabaseManagementManagedDatabasesDatabaseParameters";
export * from "./getDatabaseMigrationAgent";
export * from "./getDatabaseMigrationAgentImages";
export * from "./getDatabaseMigrationAgents";
export * from "./getDatabaseMigrationConnection";
export * from "./getDatabaseMigrationConnections";
export * from "./getDatabaseMigrationJob";
export * from "./getDatabaseMigrationJobs";
export * from "./getDatabaseMigrationMigration";
export * from "./getDatabaseMigrationMigrations";
export * from "./getDatabasePluggableDatabase";
export * from "./getDatabasePluggableDatabases";
export * from "./getDatabaseVmCluster";
export * from "./getDatabaseVmClusterNetwork";
export * from "./getDatabaseVmClusterNetworkDownloadConfigFile";
export * from "./getDatabaseVmClusterNetworks";
export * from "./getDatabaseVmClusterPatch";
export * from "./getDatabaseVmClusterPatchHistoryEntries";
export * from "./getDatabaseVmClusterPatchHistoryEntry";
export * from "./getDatabaseVmClusterPatches";
export * from "./getDatabaseVmClusterRecommendedNetwork";
export * from "./getDatabaseVmClusterUpdate";
export * from "./getDatabaseVmClusterUpdateHistoryEntries";
export * from "./getDatabaseVmClusterUpdateHistoryEntry";
export * from "./getDatabaseVmClusterUpdates";
export * from "./getDatabaseVmClusters";
export * from "./getDatacatalogCatalog";
export * from "./getDatacatalogCatalogPrivateEndpoint";
export * from "./getDatacatalogCatalogPrivateEndpoints";
export * from "./getDatacatalogCatalogType";
export * from "./getDatacatalogCatalogTypes";
export * from "./getDatacatalogCatalogs";
export * from "./getDatacatalogConnection";
export * from "./getDatacatalogConnections";
export * from "./getDatacatalogDataAsset";
export * from "./getDatacatalogDataAssets";
export * from "./getDatacatalogMetastore";
export * from "./getDatacatalogMetastores";
export * from "./getDataflowApplication";
export * from "./getDataflowApplications";
export * from "./getDataflowInvokeRun";
export * from "./getDataflowInvokeRuns";
export * from "./getDataflowPrivateEndpoint";
export * from "./getDataflowPrivateEndpoints";
export * from "./getDataflowRunLog";
export * from "./getDataflowRunLogs";
export * from "./getDataintegrationWorkspace";
export * from "./getDataintegrationWorkspaces";
export * from "./getDatascienceModel";
export * from "./getDatascienceModelDeployment";
export * from "./getDatascienceModelDeploymentShapes";
export * from "./getDatascienceModelDeployments";
export * from "./getDatascienceModelProvenance";
export * from "./getDatascienceModels";
export * from "./getDatascienceNotebookSession";
export * from "./getDatascienceNotebookSessionShapes";
export * from "./getDatascienceNotebookSessions";
export * from "./getDatascienceProject";
export * from "./getDatascienceProjects";
export * from "./getDevopsDeployArtifact";
export * from "./getDevopsDeployArtifacts";
export * from "./getDevopsDeployEnvironment";
export * from "./getDevopsDeployEnvironments";
export * from "./getDevopsDeployPipeline";
export * from "./getDevopsDeployPipelines";
export * from "./getDevopsDeployStage";
export * from "./getDevopsDeployStages";
export * from "./getDevopsDeployment";
export * from "./getDevopsDeployments";
export * from "./getDevopsProject";
export * from "./getDevopsProjects";
export * from "./getDnsRecords";
export * from "./getDnsResolver";
export * from "./getDnsResolverEndpoint";
export * from "./getDnsResolverEndpoints";
export * from "./getDnsResolvers";
export * from "./getDnsRrset";
export * from "./getDnsSteeringPolicies";
export * from "./getDnsSteeringPolicy";
export * from "./getDnsSteeringPolicyAttachment";
export * from "./getDnsSteeringPolicyAttachments";
export * from "./getDnsTsigKey";
export * from "./getDnsTsigKeys";
export * from "./getDnsView";
export * from "./getDnsViews";
export * from "./getDnsZones";
export * from "./getEmailDkim";
export * from "./getEmailDkims";
export * from "./getEmailEmailDomain";
export * from "./getEmailEmailDomains";
export * from "./getEmailSender";
export * from "./getEmailSenders";
export * from "./getEmailSuppression";
export * from "./getEmailSuppressions";
export * from "./getEventsRule";
export * from "./getEventsRules";
export * from "./getFileStorageExportSets";
export * from "./getFileStorageExports";
export * from "./getFileStorageFileSystems";
export * from "./getFileStorageMountTargets";
export * from "./getFileStorageSnapshot";
export * from "./getFileStorageSnapshots";
export * from "./getFunctionsApplication";
export * from "./getFunctionsApplications";
export * from "./getFunctionsFunction";
export * from "./getFunctionsFunctions";
export * from "./getGenericArtifactsContentArtifactByPath";
export * from "./getGenericArtifactsContentGenericArtifactsContent";
export * from "./getGoldenGateDatabaseRegistration";
export * from "./getGoldenGateDatabaseRegistrations";
export * from "./getGoldenGateDeployment";
export * from "./getGoldenGateDeploymentBackup";
export * from "./getGoldenGateDeploymentBackups";
export * from "./getGoldenGateDeployments";
export * from "./getHealthChecksHttpMonitor";
export * from "./getHealthChecksHttpMonitors";
export * from "./getHealthChecksHttpProbeResults";
export * from "./getHealthChecksPingMonitor";
export * from "./getHealthChecksPingMonitors";
export * from "./getHealthChecksPingProbeResults";
export * from "./getHealthChecksVantagePoints";
export * from "./getIdentityApiKeys";
export * from "./getIdentityAuthTokens";
export * from "./getIdentityAuthenticationPolicy";
export * from "./getIdentityAvailabilityDomain";
export * from "./getIdentityAvailabilityDomains";
export * from "./getIdentityCompartment";
export * from "./getIdentityCompartments";
export * from "./getIdentityCostTrackingTags";
export * from "./getIdentityCustomerSecretKeys";
export * from "./getIdentityDynamicGroups";
export * from "./getIdentityFaultDomains";
export * from "./getIdentityGroup";
export * from "./getIdentityGroups";
export * from "./getIdentityIdentityProviderGroups";
export * from "./getIdentityIdentityProviders";
export * from "./getIdentityIdpGroupMappings";
export * from "./getIdentityNetworkSource";
export * from "./getIdentityNetworkSources";
export * from "./getIdentityPolicies";
export * from "./getIdentityRegionSubscriptions";
export * from "./getIdentityRegions";
export * from "./getIdentitySmtpCredentials";
export * from "./getIdentitySwiftPasswords";
export * from "./getIdentityTag";
export * from "./getIdentityTagDefault";
export * from "./getIdentityTagDefaults";
export * from "./getIdentityTagNamespaces";
export * from "./getIdentityTags";
export * from "./getIdentityTenancy";
export * from "./getIdentityUiPassword";
export * from "./getIdentityUser";
export * from "./getIdentityUserGroupMemberships";
export * from "./getIdentityUsers";
export * from "./getIntegrationIntegrationInstance";
export * from "./getIntegrationIntegrationInstances";
export * from "./getJmsFleet";
export * from "./getJmsFleets";
export * from "./getKmsDecryptedData";
export * from "./getKmsEncryptedData";
export * from "./getKmsKey";
export * from "./getKmsKeyVersion";
export * from "./getKmsKeyVersions";
export * from "./getKmsKeys";
export * from "./getKmsReplicationStatus";
export * from "./getKmsVault";
export * from "./getKmsVaultReplicas";
export * from "./getKmsVaultUsage";
export * from "./getKmsVaults";
export * from "./getLimitsLimitDefinitions";
export * from "./getLimitsLimitValues";
export * from "./getLimitsQuota";
export * from "./getLimitsQuotas";
export * from "./getLimitsResourceAvailability";
export * from "./getLimitsServices";
export * from "./getLoadBalancerBackendHealth";
export * from "./getLoadBalancerBackendSetHealth";
export * from "./getLoadBalancerBackendSets";
export * from "./getLoadBalancerBackends";
export * from "./getLoadBalancerCertificates";
export * from "./getLoadBalancerHealth";
export * from "./getLoadBalancerHostnames";
export * from "./getLoadBalancerListenerRules";
export * from "./getLoadBalancerLoadBalancerRoutingPolicies";
export * from "./getLoadBalancerLoadBalancerRoutingPolicy";
export * from "./getLoadBalancerLoadBalancers";
export * from "./getLoadBalancerPathRouteSets";
export * from "./getLoadBalancerPolicies";
export * from "./getLoadBalancerProtocols";
export * from "./getLoadBalancerRuleSet";
export * from "./getLoadBalancerRuleSets";
export * from "./getLoadBalancerShapes";
export * from "./getLoadBalancerSslCipherSuite";
export * from "./getLoadBalancerSslCipherSuites";
export * from "./getLoadBalancers";
export * from "./getLogAnalyticsLogAnalyticsEntities";
export * from "./getLogAnalyticsLogAnalyticsEntitiesSummary";
export * from "./getLogAnalyticsLogAnalyticsEntity";
export * from "./getLogAnalyticsLogAnalyticsLogGroup";
export * from "./getLogAnalyticsLogAnalyticsLogGroups";
export * from "./getLogAnalyticsLogAnalyticsLogGroupsSummary";
export * from "./getLogAnalyticsLogAnalyticsObjectCollectionRule";
export * from "./getLogAnalyticsLogAnalyticsObjectCollectionRules";
export * from "./getLogAnalyticsNamespace";
export * from "./getLogAnalyticsNamespaces";
export * from "./getLoggingLog";
export * from "./getLoggingLogGroup";
export * from "./getLoggingLogGroups";
export * from "./getLoggingLogSavedSearch";
export * from "./getLoggingLogSavedSearches";
export * from "./getLoggingLogs";
export * from "./getLoggingUnifiedAgentConfiguration";
export * from "./getLoggingUnifiedAgentConfigurations";
export * from "./getManagementAgentManagementAgent";
export * from "./getManagementAgentManagementAgentAvailableHistories";
export * from "./getManagementAgentManagementAgentImages";
export * from "./getManagementAgentManagementAgentInstallKey";
export * from "./getManagementAgentManagementAgentInstallKeys";
export * from "./getManagementAgentManagementAgentPlugins";
export * from "./getManagementAgentManagementAgents";
export * from "./getManagementDashboardManagementDashboardsExport";
export * from "./getMarketplaceAcceptedAgreement";
export * from "./getMarketplaceAcceptedAgreements";
export * from "./getMarketplaceCategories";
export * from "./getMarketplaceListing";
export * from "./getMarketplaceListingPackage";
export * from "./getMarketplaceListingPackageAgreements";
export * from "./getMarketplaceListingPackages";
export * from "./getMarketplaceListingTaxes";
export * from "./getMarketplaceListings";
export * from "./getMarketplacePublication";
export * from "./getMarketplacePublicationPackage";
export * from "./getMarketplacePublicationPackages";
export * from "./getMarketplacePublications";
export * from "./getMarketplacePublishers";
export * from "./getMeteringComputationConfiguration";
export * from "./getMeteringComputationCustomTable";
export * from "./getMeteringComputationCustomTables";
export * from "./getMeteringComputationQueries";
export * from "./getMeteringComputationQuery";
export * from "./getMonitoringAlarm";
export * from "./getMonitoringAlarmHistoryCollection";
export * from "./getMonitoringAlarmStatuses";
export * from "./getMonitoringAlarms";
export * from "./getMonitoringMetricData";
export * from "./getMonitoringMetrics";
export * from "./getMysqlAnalyticsCluster";
export * from "./getMysqlChannel";
export * from "./getMysqlChannels";
export * from "./getMysqlHeatWaveCluster";
export * from "./getMysqlMysqlBackup";
export * from "./getMysqlMysqlBackups";
export * from "./getMysqlMysqlConfiguration";
export * from "./getMysqlMysqlConfigurations";
export * from "./getMysqlMysqlDbSystem";
export * from "./getMysqlMysqlDbSystems";
export * from "./getMysqlMysqlVersions";
export * from "./getMysqlShapes";
export * from "./getNetworkLoadBalancerBackendHealth";
export * from "./getNetworkLoadBalancerBackendSet";
export * from "./getNetworkLoadBalancerBackendSetHealth";
export * from "./getNetworkLoadBalancerBackendSets";
export * from "./getNetworkLoadBalancerBackends";
export * from "./getNetworkLoadBalancerListener";
export * from "./getNetworkLoadBalancerListeners";
export * from "./getNetworkLoadBalancerNetworkLoadBalancer";
export * from "./getNetworkLoadBalancerNetworkLoadBalancerHealth";
export * from "./getNetworkLoadBalancerNetworkLoadBalancers";
export * from "./getNetworkLoadBalancerNetworkLoadBalancersPolicies";
export * from "./getNetworkLoadBalancerNetworkLoadBalancersProtocols";
export * from "./getNosqlIndex";
export * from "./getNosqlIndexes";
export * from "./getNosqlTable";
export * from "./getNosqlTables";
export * from "./getObjectstorageBucket";
export * from "./getObjectstorageBucketSummaries";
export * from "./getObjectstorageNamespace";
export * from "./getObjectstorageNamespaceMetadata";
export * from "./getObjectstorageObject";
export * from "./getObjectstorageObjectHead";
export * from "./getObjectstorageObjectLifecyclePolicy";
export * from "./getObjectstorageObjectVersions";
export * from "./getObjectstorageObjects";
export * from "./getObjectstoragePreauthrequest";
export * from "./getObjectstoragePreauthrequests";
export * from "./getObjectstorageReplicationPolicies";
export * from "./getObjectstorageReplicationPolicy";
export * from "./getObjectstorageReplicationSources";
export * from "./getOceOceInstance";
export * from "./getOceOceInstances";
export * from "./getOcvpEsxiHost";
export * from "./getOcvpEsxiHosts";
export * from "./getOcvpSddc";
export * from "./getOcvpSddcs";
export * from "./getOcvpSupportedSkus";
export * from "./getOcvpSupportedVmwareSoftwareVersions";
export * from "./getOdaOdaInstance";
export * from "./getOdaOdaInstances";
export * from "./getOnsNotificationTopic";
export * from "./getOnsNotificationTopics";
export * from "./getOnsSubscription";
export * from "./getOnsSubscriptions";
export * from "./getOpsiDatabaseInsight";
export * from "./getOpsiDatabaseInsights";
export * from "./getOpsiEnterpriseManagerBridge";
export * from "./getOpsiEnterpriseManagerBridges";
export * from "./getOpsiHostInsight";
export * from "./getOpsiHostInsights";
export * from "./getOptimizerCategories";
export * from "./getOptimizerCategory";
export * from "./getOptimizerEnrollmentStatus";
export * from "./getOptimizerEnrollmentStatuses";
export * from "./getOptimizerHistories";
export * from "./getOptimizerProfile";
export * from "./getOptimizerProfiles";
export * from "./getOptimizerRecommendation";
export * from "./getOptimizerRecommendations";
export * from "./getOptimizerResourceAction";
export * from "./getOptimizerResourceActions";
export * from "./getOsmanagementManagedInstance";
export * from "./getOsmanagementManagedInstanceGroup";
export * from "./getOsmanagementManagedInstanceGroups";
export * from "./getOsmanagementManagedInstances";
export * from "./getOsmanagementSoftwareSource";
export * from "./getOsmanagementSoftwareSources";
export * from "./getResourcemanagerStack";
export * from "./getResourcemanagerStackTfState";
export * from "./getResourcemanagerStacks";
export * from "./getSchServiceConnector";
export * from "./getSchServiceConnectors";
export * from "./getServiceCatalogPrivateApplication";
export * from "./getServiceCatalogPrivateApplicationPackage";
export * from "./getServiceCatalogPrivateApplicationPackages";
export * from "./getServiceCatalogPrivateApplications";
export * from "./getServiceCatalogServiceCatalog";
export * from "./getServiceCatalogServiceCatalogAssociation";
export * from "./getServiceCatalogServiceCatalogAssociations";
export * from "./getServiceCatalogServiceCatalogs";
export * from "./getStreamingConnectHarness";
export * from "./getStreamingConnectHarnesses";
export * from "./getStreamingStream";
export * from "./getStreamingStreamPool";
export * from "./getStreamingStreamPools";
export * from "./getStreamingStreams";
export * from "./getVaultSecret";
export * from "./getVaultSecretVersion";
export * from "./getVaultSecrets";
export * from "./getVulnerabilityScanningHostScanRecipe";
export * from "./getVulnerabilityScanningHostScanRecipes";
export * from "./getVulnerabilityScanningHostScanTarget";
export * from "./getVulnerabilityScanningHostScanTargets";
export * from "./getWaasAddressList";
export * from "./getWaasAddressLists";
export * from "./getWaasCertificate";
export * from "./getWaasCertificates";
export * from "./getWaasCustomProtectionRule";
export * from "./getWaasCustomProtectionRules";
export * from "./getWaasEdgeSubnets";
export * from "./getWaasHttpRedirect";
export * from "./getWaasHttpRedirects";
export * from "./getWaasProtectionRule";
export * from "./getWaasProtectionRules";
export * from "./getWaasWaasPolicies";
export * from "./getWaasWaasPolicy";
export * from "./goldenGateDatabaseRegistration";
export * from "./goldenGateDeployment";
export * from "./goldenGateDeploymentBackup";
export * from "./healthChecksHttpMonitor";
export * from "./healthChecksHttpProbe";
export * from "./healthChecksPingMonitor";
export * from "./healthChecksPingProbe";
export * from "./identityApiKey";
export * from "./identityAuthToken";
export * from "./identityAuthenticationPolicy";
export * from "./identityCompartment";
export * from "./identityCustomerSecretKey";
export * from "./identityDynamicGroup";
export * from "./identityGroup";
export * from "./identityIdentityProvider";
export * from "./identityIdpGroupMapping";
export * from "./identityNetworkSource";
export * from "./identityPolicy";
export * from "./identitySmtpCredential";
export * from "./identitySwiftPassword";
export * from "./identityTag";
export * from "./identityTagDefault";
export * from "./identityTagNamespace";
export * from "./identityUiPassword";
export * from "./identityUser";
export * from "./identityUserCapabilitiesManagement";
export * from "./identityUserGroupMembership";
export * from "./integrationIntegrationInstance";
export * from "./jmsFleet";
export * from "./kmsEncryptedData";
export * from "./kmsGeneratedKey";
export * from "./kmsKey";
export * from "./kmsKeyVersion";
export * from "./kmsSign";
export * from "./kmsVault";
export * from "./kmsVaultReplication";
export * from "./kmsVerify";
export * from "./limitsQuota";
export * from "./loadBalancer";
export * from "./loadBalancerBackend";
export * from "./loadBalancerBackendSet";
export * from "./loadBalancerCertificate";
export * from "./loadBalancerHostname";
export * from "./loadBalancerListener";
export * from "./loadBalancerLoadBalancer";
export * from "./loadBalancerLoadBalancerRoutingPolicy";
export * from "./loadBalancerPathRouteSet";
export * from "./loadBalancerRuleSet";
export * from "./loadBalancerSslCipherSuite";
export * from "./logAnalyticsLogAnalyticsEntity";
export * from "./logAnalyticsLogAnalyticsLogGroup";
export * from "./logAnalyticsLogAnalyticsObjectCollectionRule";
export * from "./logAnalyticsNamespace";
export * from "./loggingLog";
export * from "./loggingLogGroup";
export * from "./loggingLogSavedSearch";
export * from "./loggingUnifiedAgentConfiguration";
export * from "./managementAgentManagementAgent";
export * from "./managementAgentManagementAgentInstallKey";
export * from "./managementDashboardManagementDashboardsImport";
export * from "./marketplaceAcceptedAgreement";
export * from "./marketplaceListingPackageAgreement";
export * from "./marketplacePublication";
export * from "./meteringComputationCustomTable";
export * from "./meteringComputationQuery";
export * from "./meteringComputationUsage";
export * from "./monitoringAlarm";
export * from "./mysqlAnalyticsCluster";
export * from "./mysqlChannel";
export * from "./mysqlHeatWaveCluster";
export * from "./mysqlMysqlBackup";
export * from "./mysqlMysqlDbSystem";
export * from "./networkLoadBalancerBackend";
export * from "./networkLoadBalancerBackendSet";
export * from "./networkLoadBalancerListener";
export * from "./networkLoadBalancerNetworkLoadBalancer";
export * from "./nosqlIndex";
export * from "./nosqlTable";
export * from "./objectstorageBucket";
export * from "./objectstorageNamespaceMetadata";
export * from "./objectstorageObject";
export * from "./objectstorageObjectLifecyclePolicy";
export * from "./objectstoragePreauthrequest";
export * from "./objectstorageReplicationPolicy";
export * from "./oceOceInstance";
export * from "./ocvpEsxiHost";
export * from "./ocvpSddc";
export * from "./odaOdaInstance";
export * from "./onsNotificationTopic";
export * from "./onsSubscription";
export * from "./opsiDatabaseInsight";
export * from "./opsiEnterpriseManagerBridge";
export * from "./opsiHostInsight";
export * from "./optimizerEnrollmentStatus";
export * from "./optimizerProfile";
export * from "./optimizerRecommendation";
export * from "./optimizerResourceAction";
export * from "./osmanagementManagedInstanceGroup";
export * from "./osmanagementManagedInstanceManagement";
export * from "./osmanagementSoftwareSource";
export * from "./provider";
export * from "./schServiceConnector";
export * from "./serviceCatalogPrivateApplication";
export * from "./serviceCatalogServiceCatalog";
export * from "./serviceCatalogServiceCatalogAssociation";
export * from "./streamingConnectHarness";
export * from "./streamingStream";
export * from "./streamingStreamPool";
export * from "./vulnerabilityScanningHostScanRecipe";
export * from "./vulnerabilityScanningHostScanTarget";
export * from "./waasAddressList";
export * from "./waasCertificate";
export * from "./waasCustomProtectionRule";
export * from "./waasHttpRedirect";
export * from "./waasProtectionRule";
export * from "./waasPurgeCache";
export * from "./waasWaasPolicy";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { AnalyticsAnalyticsInstance } from "./analyticsAnalyticsInstance";
import { AnalyticsAnalyticsInstancePrivateAccessChannel } from "./analyticsAnalyticsInstancePrivateAccessChannel";
import { AnalyticsAnalyticsInstanceVanityUrl } from "./analyticsAnalyticsInstanceVanityUrl";
import { ApigatewayApi } from "./apigatewayApi";
import { ApigatewayCertificate } from "./apigatewayCertificate";
import { ApigatewayDeployment } from "./apigatewayDeployment";
import { ApigatewayGateway } from "./apigatewayGateway";
import { ApmApmDomain } from "./apmApmDomain";
import { ApmSyntheticsMonitor } from "./apmSyntheticsMonitor";
import { ApmSyntheticsScript } from "./apmSyntheticsScript";
import { ArtifactsContainerConfiguration } from "./artifactsContainerConfiguration";
import { ArtifactsContainerImageSignature } from "./artifactsContainerImageSignature";
import { ArtifactsContainerRepository } from "./artifactsContainerRepository";
import { ArtifactsGenericArtifact } from "./artifactsGenericArtifact";
import { ArtifactsRepository } from "./artifactsRepository";
import { AuditConfiguration } from "./auditConfiguration";
import { AutoscalingAutoScalingConfiguration } from "./autoscalingAutoScalingConfiguration";
import { BastionBastion } from "./bastionBastion";
import { BastionSession } from "./bastionSession";
import { BdsAutoScalingConfiguration } from "./bdsAutoScalingConfiguration";
import { BdsBdsInstance } from "./bdsBdsInstance";
import { BlockchainBlockchainPlatform } from "./blockchainBlockchainPlatform";
import { BlockchainOsn } from "./blockchainOsn";
import { BlockchainPeer } from "./blockchainPeer";
import { BudgetAlertRule } from "./budgetAlertRule";
import { BudgetBudget } from "./budgetBudget";
import { CloudGuardCloudGuardConfiguration } from "./cloudGuardCloudGuardConfiguration";
import { CloudGuardDataMaskRule } from "./cloudGuardDataMaskRule";
import { CloudGuardDetectorRecipe } from "./cloudGuardDetectorRecipe";
import { CloudGuardManagedList } from "./cloudGuardManagedList";
import { CloudGuardResponderRecipe } from "./cloudGuardResponderRecipe";
import { CloudGuardTarget } from "./cloudGuardTarget";
import { ContainerengineCluster } from "./containerengineCluster";
import { ContainerengineNodePool } from "./containerengineNodePool";
import { CoreAppCatalogListingResourceVersionAgreement } from "./coreAppCatalogListingResourceVersionAgreement";
import { CoreAppCatalogSubscription } from "./coreAppCatalogSubscription";
import { CoreBootVolume } from "./coreBootVolume";
import { CoreBootVolumeBackup } from "./coreBootVolumeBackup";
import { CoreClusterNetwork } from "./coreClusterNetwork";
import { CoreComputeCapacityReservation } from "./coreComputeCapacityReservation";
import { CoreComputeImageCapabilitySchema } from "./coreComputeImageCapabilitySchema";
import { CoreConsoleHistory } from "./coreConsoleHistory";
import { CoreCpe } from "./coreCpe";
import { CoreCrossConnect } from "./coreCrossConnect";
import { CoreCrossConnectGroup } from "./coreCrossConnectGroup";
import { CoreDedicatedVmHost } from "./coreDedicatedVmHost";
import { CoreDefaultDhcpOptions } from "./coreDefaultDhcpOptions";
import { CoreDefaultRouteTable } from "./coreDefaultRouteTable";
import { CoreDefaultSecurityList } from "./coreDefaultSecurityList";
import { CoreDhcpOptions } from "./coreDhcpOptions";
import { CoreDrg } from "./coreDrg";
import { CoreDrgAttachment } from "./coreDrgAttachment";
import { CoreDrgAttachmentManagement } from "./coreDrgAttachmentManagement";
import { CoreDrgAttachmentsList } from "./coreDrgAttachmentsList";
import { CoreDrgRouteDistribution } from "./coreDrgRouteDistribution";
import { CoreDrgRouteDistributionStatement } from "./coreDrgRouteDistributionStatement";
import { CoreDrgRouteTable } from "./coreDrgRouteTable";
import { CoreDrgRouteTableRouteRule } from "./coreDrgRouteTableRouteRule";
import { CoreImage } from "./coreImage";
import { CoreInstance } from "./coreInstance";
import { CoreInstanceConfiguration } from "./coreInstanceConfiguration";
import { CoreInstanceConsoleConnection } from "./coreInstanceConsoleConnection";
import { CoreInstancePool } from "./coreInstancePool";
import { CoreInstancePoolInstance } from "./coreInstancePoolInstance";
import { CoreInternetGateway } from "./coreInternetGateway";
import { CoreIpsec } from "./coreIpsec";
import { CoreIpsecConnectionTunnelManagement } from "./coreIpsecConnectionTunnelManagement";
import { CoreIpv6 } from "./coreIpv6";
import { CoreListingResourceVersionAgreement } from "./coreListingResourceVersionAgreement";
import { CoreLocalPeeringGateway } from "./coreLocalPeeringGateway";
import { CoreNatGateway } from "./coreNatGateway";
import { CoreNetworkSecurityGroup } from "./coreNetworkSecurityGroup";
import { CoreNetworkSecurityGroupSecurityRule } from "./coreNetworkSecurityGroupSecurityRule";
import { CorePrivateIp } from "./corePrivateIp";
import { CorePublicIp } from "./corePublicIp";
import { CorePublicIpPool } from "./corePublicIpPool";
import { CorePublicIpPoolCapacity } from "./corePublicIpPoolCapacity";
import { CoreRemotePeeringConnection } from "./coreRemotePeeringConnection";
import { CoreRouteTable } from "./coreRouteTable";
import { CoreRouteTableAttachment } from "./coreRouteTableAttachment";
import { CoreSecurityList } from "./coreSecurityList";
import { CoreServiceGateway } from "./coreServiceGateway";
import { CoreShapeManagement } from "./coreShapeManagement";
import { CoreSubnet } from "./coreSubnet";
import { CoreVcn } from "./coreVcn";
import { CoreVirtualCircuit } from "./coreVirtualCircuit";
import { CoreVirtualNetwork } from "./coreVirtualNetwork";
import { CoreVlan } from "./coreVlan";
import { CoreVnicAttachment } from "./coreVnicAttachment";
import { CoreVolume } from "./coreVolume";
import { CoreVolumeAttachment } from "./coreVolumeAttachment";
import { CoreVolumeBackup } from "./coreVolumeBackup";
import { CoreVolumeBackupPolicy } from "./coreVolumeBackupPolicy";
import { CoreVolumeBackupPolicyAssignment } from "./coreVolumeBackupPolicyAssignment";
import { CoreVolumeGroup } from "./coreVolumeGroup";
import { CoreVolumeGroupBackup } from "./coreVolumeGroupBackup";
import { DataSafeDataSafeConfiguration } from "./dataSafeDataSafeConfiguration";
import { DataSafeDataSafePrivateEndpoint } from "./dataSafeDataSafePrivateEndpoint";
import { DataSafeOnPremConnector } from "./dataSafeOnPremConnector";
import { DataSafeTargetDatabase } from "./dataSafeTargetDatabase";
import { DatabaseAutonomousContainerDatabase } from "./databaseAutonomousContainerDatabase";
import { DatabaseAutonomousContainerDatabaseDataguardAssociationOperation } from "./databaseAutonomousContainerDatabaseDataguardAssociationOperation";
import { DatabaseAutonomousDatabase } from "./databaseAutonomousDatabase";
import { DatabaseAutonomousDatabaseBackup } from "./databaseAutonomousDatabaseBackup";
import { DatabaseAutonomousDatabaseInstanceWalletManagement } from "./databaseAutonomousDatabaseInstanceWalletManagement";
import { DatabaseAutonomousDatabaseRegionalWalletManagement } from "./databaseAutonomousDatabaseRegionalWalletManagement";
import { DatabaseAutonomousDatabaseWallet } from "./databaseAutonomousDatabaseWallet";
import { DatabaseAutonomousExadataInfrastructure } from "./databaseAutonomousExadataInfrastructure";
import { DatabaseAutonomousVmCluster } from "./databaseAutonomousVmCluster";
import { DatabaseBackup } from "./databaseBackup";
import { DatabaseBackupDestination } from "./databaseBackupDestination";
import { DatabaseCloudExadataInfrastructure } from "./databaseCloudExadataInfrastructure";
import { DatabaseCloudVmCluster } from "./databaseCloudVmCluster";
import { DatabaseDataGuardAssociation } from "./databaseDataGuardAssociation";
import { DatabaseDatabase } from "./databaseDatabase";
import { DatabaseDatabaseSoftwareImage } from "./databaseDatabaseSoftwareImage";
import { DatabaseDatabaseUpgrade } from "./databaseDatabaseUpgrade";
import { DatabaseDbHome } from "./databaseDbHome";
import { DatabaseDbNodeConsoleConnection } from "./databaseDbNodeConsoleConnection";
import { DatabaseDbSystem } from "./databaseDbSystem";
import { DatabaseExadataInfrastructure } from "./databaseExadataInfrastructure";
import { DatabaseExadataInfrastructureStorage } from "./databaseExadataInfrastructureStorage";
import { DatabaseExadataIormConfig } from "./databaseExadataIormConfig";
import { DatabaseExternalContainerDatabase } from "./databaseExternalContainerDatabase";
import { DatabaseExternalContainerDatabaseManagement } from "./databaseExternalContainerDatabaseManagement";
import { DatabaseExternalDatabaseConnector } from "./databaseExternalDatabaseConnector";
import { DatabaseExternalNonContainerDatabase } from "./databaseExternalNonContainerDatabase";
import { DatabaseExternalNonContainerDatabaseManagement } from "./databaseExternalNonContainerDatabaseManagement";
import { DatabaseExternalNonContainerDatabaseOperationsInsightsManagement } from "./databaseExternalNonContainerDatabaseOperationsInsightsManagement";
import { DatabaseExternalPluggableDatabase } from "./databaseExternalPluggableDatabase";
import { DatabaseExternalPluggableDatabaseManagement } from "./databaseExternalPluggableDatabaseManagement";
import { DatabaseExternalPluggableDatabaseOperationsInsightsManagement } from "./databaseExternalPluggableDatabaseOperationsInsightsManagement";
import { DatabaseKeyStore } from "./databaseKeyStore";
import { DatabaseMaintenanceRun } from "./databaseMaintenanceRun";
import { DatabaseManagementManagedDatabaseGroup } from "./databaseManagementManagedDatabaseGroup";
import { DatabaseManagementManagedDatabasesChangeDatabaseParameter } from "./databaseManagementManagedDatabasesChangeDatabaseParameter";
import { DatabaseManagementManagedDatabasesResetDatabaseParameter } from "./databaseManagementManagedDatabasesResetDatabaseParameter";
import { DatabaseMigration } from "./databaseMigration";
import { DatabaseMigrationAgent } from "./databaseMigrationAgent";
import { DatabaseMigrationConnection } from "./databaseMigrationConnection";
import { DatabaseMigrationJob } from "./databaseMigrationJob";
import { DatabaseMigrationMigration } from "./databaseMigrationMigration";
import { DatabasePluggableDatabase } from "./databasePluggableDatabase";
import { DatabasePluggableDatabasesLocalClone } from "./databasePluggableDatabasesLocalClone";
import { DatabasePluggableDatabasesRemoteClone } from "./databasePluggableDatabasesRemoteClone";
import { DatabaseVmCluster } from "./databaseVmCluster";
import { DatabaseVmClusterNetwork } from "./databaseVmClusterNetwork";
import { DatacatalogCatalog } from "./datacatalogCatalog";
import { DatacatalogCatalogPrivateEndpoint } from "./datacatalogCatalogPrivateEndpoint";
import { DatacatalogConnection } from "./datacatalogConnection";
import { DatacatalogDataAsset } from "./datacatalogDataAsset";
import { DatacatalogMetastore } from "./datacatalogMetastore";
import { DataflowApplication } from "./dataflowApplication";
import { DataflowInvokeRun } from "./dataflowInvokeRun";
import { DataflowPrivateEndpoint } from "./dataflowPrivateEndpoint";
import { DataintegrationWorkspace } from "./dataintegrationWorkspace";
import { DatascienceModel } from "./datascienceModel";
import { DatascienceModelDeployment } from "./datascienceModelDeployment";
import { DatascienceModelProvenance } from "./datascienceModelProvenance";
import { DatascienceNotebookSession } from "./datascienceNotebookSession";
import { DatascienceProject } from "./datascienceProject";
import { DevopsDeployArtifact } from "./devopsDeployArtifact";
import { DevopsDeployEnvironment } from "./devopsDeployEnvironment";
import { DevopsDeployPipeline } from "./devopsDeployPipeline";
import { DevopsDeployStage } from "./devopsDeployStage";
import { DevopsDeployment } from "./devopsDeployment";
import { DevopsProject } from "./devopsProject";
import { DnsRecord } from "./dnsRecord";
import { DnsResolver } from "./dnsResolver";
import { DnsResolverEndpoint } from "./dnsResolverEndpoint";
import { DnsRrset } from "./dnsRrset";
import { DnsSteeringPolicy } from "./dnsSteeringPolicy";
import { DnsSteeringPolicyAttachment } from "./dnsSteeringPolicyAttachment";
import { DnsTsigKey } from "./dnsTsigKey";
import { DnsView } from "./dnsView";
import { DnsZone } from "./dnsZone";
import { EmailDkim } from "./emailDkim";
import { EmailEmailDomain } from "./emailEmailDomain";
import { EmailSender } from "./emailSender";
import { EmailSuppression } from "./emailSuppression";
import { EventsRule } from "./eventsRule";
import { FileStorageExport } from "./fileStorageExport";
import { FileStorageExportSet } from "./fileStorageExportSet";
import { FileStorageFileSystem } from "./fileStorageFileSystem";
import { FileStorageMountTarget } from "./fileStorageMountTarget";
import { FileStorageSnapshot } from "./fileStorageSnapshot";
import { FunctionsApplication } from "./functionsApplication";
import { FunctionsFunction } from "./functionsFunction";
import { FunctionsInvokeFunction } from "./functionsInvokeFunction";
import { GenericArtifactsContentArtifactByPath } from "./genericArtifactsContentArtifactByPath";
import { GoldenGateDatabaseRegistration } from "./goldenGateDatabaseRegistration";
import { GoldenGateDeployment } from "./goldenGateDeployment";
import { GoldenGateDeploymentBackup } from "./goldenGateDeploymentBackup";
import { HealthChecksHttpMonitor } from "./healthChecksHttpMonitor";
import { HealthChecksHttpProbe } from "./healthChecksHttpProbe";
import { HealthChecksPingMonitor } from "./healthChecksPingMonitor";
import { HealthChecksPingProbe } from "./healthChecksPingProbe";
import { IdentityApiKey } from "./identityApiKey";
import { IdentityAuthToken } from "./identityAuthToken";
import { IdentityAuthenticationPolicy } from "./identityAuthenticationPolicy";
import { IdentityCompartment } from "./identityCompartment";
import { IdentityCustomerSecretKey } from "./identityCustomerSecretKey";
import { IdentityDynamicGroup } from "./identityDynamicGroup";
import { IdentityGroup } from "./identityGroup";
import { IdentityIdentityProvider } from "./identityIdentityProvider";
import { IdentityIdpGroupMapping } from "./identityIdpGroupMapping";
import { IdentityNetworkSource } from "./identityNetworkSource";
import { IdentityPolicy } from "./identityPolicy";
import { IdentitySmtpCredential } from "./identitySmtpCredential";
import { IdentitySwiftPassword } from "./identitySwiftPassword";
import { IdentityTag } from "./identityTag";
import { IdentityTagDefault } from "./identityTagDefault";
import { IdentityTagNamespace } from "./identityTagNamespace";
import { IdentityUiPassword } from "./identityUiPassword";
import { IdentityUser } from "./identityUser";
import { IdentityUserCapabilitiesManagement } from "./identityUserCapabilitiesManagement";
import { IdentityUserGroupMembership } from "./identityUserGroupMembership";
import { IntegrationIntegrationInstance } from "./integrationIntegrationInstance";
import { JmsFleet } from "./jmsFleet";
import { KmsEncryptedData } from "./kmsEncryptedData";
import { KmsGeneratedKey } from "./kmsGeneratedKey";
import { KmsKey } from "./kmsKey";
import { KmsKeyVersion } from "./kmsKeyVersion";
import { KmsSign } from "./kmsSign";
import { KmsVault } from "./kmsVault";
import { KmsVaultReplication } from "./kmsVaultReplication";
import { KmsVerify } from "./kmsVerify";
import { LimitsQuota } from "./limitsQuota";
import { LoadBalancer } from "./loadBalancer";
import { LoadBalancerBackend } from "./loadBalancerBackend";
import { LoadBalancerBackendSet } from "./loadBalancerBackendSet";
import { LoadBalancerCertificate } from "./loadBalancerCertificate";
import { LoadBalancerHostname } from "./loadBalancerHostname";
import { LoadBalancerListener } from "./loadBalancerListener";
import { LoadBalancerLoadBalancer } from "./loadBalancerLoadBalancer";
import { LoadBalancerLoadBalancerRoutingPolicy } from "./loadBalancerLoadBalancerRoutingPolicy";
import { LoadBalancerPathRouteSet } from "./loadBalancerPathRouteSet";
import { LoadBalancerRuleSet } from "./loadBalancerRuleSet";
import { LoadBalancerSslCipherSuite } from "./loadBalancerSslCipherSuite";
import { LogAnalyticsLogAnalyticsEntity } from "./logAnalyticsLogAnalyticsEntity";
import { LogAnalyticsLogAnalyticsLogGroup } from "./logAnalyticsLogAnalyticsLogGroup";
import { LogAnalyticsLogAnalyticsObjectCollectionRule } from "./logAnalyticsLogAnalyticsObjectCollectionRule";
import { LogAnalyticsNamespace } from "./logAnalyticsNamespace";
import { LoggingLog } from "./loggingLog";
import { LoggingLogGroup } from "./loggingLogGroup";
import { LoggingLogSavedSearch } from "./loggingLogSavedSearch";
import { LoggingUnifiedAgentConfiguration } from "./loggingUnifiedAgentConfiguration";
import { ManagementAgentManagementAgent } from "./managementAgentManagementAgent";
import { ManagementAgentManagementAgentInstallKey } from "./managementAgentManagementAgentInstallKey";
import { ManagementDashboardManagementDashboardsImport } from "./managementDashboardManagementDashboardsImport";
import { MarketplaceAcceptedAgreement } from "./marketplaceAcceptedAgreement";
import { MarketplaceListingPackageAgreement } from "./marketplaceListingPackageAgreement";
import { MarketplacePublication } from "./marketplacePublication";
import { MeteringComputationCustomTable } from "./meteringComputationCustomTable";
import { MeteringComputationQuery } from "./meteringComputationQuery";
import { MeteringComputationUsage } from "./meteringComputationUsage";
import { MonitoringAlarm } from "./monitoringAlarm";
import { MysqlAnalyticsCluster } from "./mysqlAnalyticsCluster";
import { MysqlChannel } from "./mysqlChannel";
import { MysqlHeatWaveCluster } from "./mysqlHeatWaveCluster";
import { MysqlMysqlBackup } from "./mysqlMysqlBackup";
import { MysqlMysqlDbSystem } from "./mysqlMysqlDbSystem";
import { NetworkLoadBalancerBackend } from "./networkLoadBalancerBackend";
import { NetworkLoadBalancerBackendSet } from "./networkLoadBalancerBackendSet";
import { NetworkLoadBalancerListener } from "./networkLoadBalancerListener";
import { NetworkLoadBalancerNetworkLoadBalancer } from "./networkLoadBalancerNetworkLoadBalancer";
import { NosqlIndex } from "./nosqlIndex";
import { NosqlTable } from "./nosqlTable";
import { ObjectstorageBucket } from "./objectstorageBucket";
import { ObjectstorageNamespaceMetadata } from "./objectstorageNamespaceMetadata";
import { ObjectstorageObject } from "./objectstorageObject";
import { ObjectstorageObjectLifecyclePolicy } from "./objectstorageObjectLifecyclePolicy";
import { ObjectstoragePreauthrequest } from "./objectstoragePreauthrequest";
import { ObjectstorageReplicationPolicy } from "./objectstorageReplicationPolicy";
import { OceOceInstance } from "./oceOceInstance";
import { OcvpEsxiHost } from "./ocvpEsxiHost";
import { OcvpSddc } from "./ocvpSddc";
import { OdaOdaInstance } from "./odaOdaInstance";
import { OnsNotificationTopic } from "./onsNotificationTopic";
import { OnsSubscription } from "./onsSubscription";
import { OpsiDatabaseInsight } from "./opsiDatabaseInsight";
import { OpsiEnterpriseManagerBridge } from "./opsiEnterpriseManagerBridge";
import { OpsiHostInsight } from "./opsiHostInsight";
import { OptimizerEnrollmentStatus } from "./optimizerEnrollmentStatus";
import { OptimizerProfile } from "./optimizerProfile";
import { OptimizerRecommendation } from "./optimizerRecommendation";
import { OptimizerResourceAction } from "./optimizerResourceAction";
import { OsmanagementManagedInstanceGroup } from "./osmanagementManagedInstanceGroup";
import { OsmanagementManagedInstanceManagement } from "./osmanagementManagedInstanceManagement";
import { OsmanagementSoftwareSource } from "./osmanagementSoftwareSource";
import { SchServiceConnector } from "./schServiceConnector";
import { ServiceCatalogPrivateApplication } from "./serviceCatalogPrivateApplication";
import { ServiceCatalogServiceCatalog } from "./serviceCatalogServiceCatalog";
import { ServiceCatalogServiceCatalogAssociation } from "./serviceCatalogServiceCatalogAssociation";
import { StreamingConnectHarness } from "./streamingConnectHarness";
import { StreamingStream } from "./streamingStream";
import { StreamingStreamPool } from "./streamingStreamPool";
import { VulnerabilityScanningHostScanRecipe } from "./vulnerabilityScanningHostScanRecipe";
import { VulnerabilityScanningHostScanTarget } from "./vulnerabilityScanningHostScanTarget";
import { WaasAddressList } from "./waasAddressList";
import { WaasCertificate } from "./waasCertificate";
import { WaasCustomProtectionRule } from "./waasCustomProtectionRule";
import { WaasHttpRedirect } from "./waasHttpRedirect";
import { WaasProtectionRule } from "./waasProtectionRule";
import { WaasPurgeCache } from "./waasPurgeCache";
import { WaasWaasPolicy } from "./waasWaasPolicy";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:index/analyticsAnalyticsInstance:AnalyticsAnalyticsInstance":
                return new AnalyticsAnalyticsInstance(name, <any>undefined, { urn })
            case "oci:index/analyticsAnalyticsInstancePrivateAccessChannel:AnalyticsAnalyticsInstancePrivateAccessChannel":
                return new AnalyticsAnalyticsInstancePrivateAccessChannel(name, <any>undefined, { urn })
            case "oci:index/analyticsAnalyticsInstanceVanityUrl:AnalyticsAnalyticsInstanceVanityUrl":
                return new AnalyticsAnalyticsInstanceVanityUrl(name, <any>undefined, { urn })
            case "oci:index/apigatewayApi:ApigatewayApi":
                return new ApigatewayApi(name, <any>undefined, { urn })
            case "oci:index/apigatewayCertificate:ApigatewayCertificate":
                return new ApigatewayCertificate(name, <any>undefined, { urn })
            case "oci:index/apigatewayDeployment:ApigatewayDeployment":
                return new ApigatewayDeployment(name, <any>undefined, { urn })
            case "oci:index/apigatewayGateway:ApigatewayGateway":
                return new ApigatewayGateway(name, <any>undefined, { urn })
            case "oci:index/apmApmDomain:ApmApmDomain":
                return new ApmApmDomain(name, <any>undefined, { urn })
            case "oci:index/apmSyntheticsMonitor:ApmSyntheticsMonitor":
                return new ApmSyntheticsMonitor(name, <any>undefined, { urn })
            case "oci:index/apmSyntheticsScript:ApmSyntheticsScript":
                return new ApmSyntheticsScript(name, <any>undefined, { urn })
            case "oci:index/artifactsContainerConfiguration:ArtifactsContainerConfiguration":
                return new ArtifactsContainerConfiguration(name, <any>undefined, { urn })
            case "oci:index/artifactsContainerImageSignature:ArtifactsContainerImageSignature":
                return new ArtifactsContainerImageSignature(name, <any>undefined, { urn })
            case "oci:index/artifactsContainerRepository:ArtifactsContainerRepository":
                return new ArtifactsContainerRepository(name, <any>undefined, { urn })
            case "oci:index/artifactsGenericArtifact:ArtifactsGenericArtifact":
                return new ArtifactsGenericArtifact(name, <any>undefined, { urn })
            case "oci:index/artifactsRepository:ArtifactsRepository":
                return new ArtifactsRepository(name, <any>undefined, { urn })
            case "oci:index/auditConfiguration:AuditConfiguration":
                return new AuditConfiguration(name, <any>undefined, { urn })
            case "oci:index/autoscalingAutoScalingConfiguration:AutoscalingAutoScalingConfiguration":
                return new AutoscalingAutoScalingConfiguration(name, <any>undefined, { urn })
            case "oci:index/bastionBastion:BastionBastion":
                return new BastionBastion(name, <any>undefined, { urn })
            case "oci:index/bastionSession:BastionSession":
                return new BastionSession(name, <any>undefined, { urn })
            case "oci:index/bdsAutoScalingConfiguration:BdsAutoScalingConfiguration":
                return new BdsAutoScalingConfiguration(name, <any>undefined, { urn })
            case "oci:index/bdsBdsInstance:BdsBdsInstance":
                return new BdsBdsInstance(name, <any>undefined, { urn })
            case "oci:index/blockchainBlockchainPlatform:BlockchainBlockchainPlatform":
                return new BlockchainBlockchainPlatform(name, <any>undefined, { urn })
            case "oci:index/blockchainOsn:BlockchainOsn":
                return new BlockchainOsn(name, <any>undefined, { urn })
            case "oci:index/blockchainPeer:BlockchainPeer":
                return new BlockchainPeer(name, <any>undefined, { urn })
            case "oci:index/budgetAlertRule:BudgetAlertRule":
                return new BudgetAlertRule(name, <any>undefined, { urn })
            case "oci:index/budgetBudget:BudgetBudget":
                return new BudgetBudget(name, <any>undefined, { urn })
            case "oci:index/cloudGuardCloudGuardConfiguration:CloudGuardCloudGuardConfiguration":
                return new CloudGuardCloudGuardConfiguration(name, <any>undefined, { urn })
            case "oci:index/cloudGuardDataMaskRule:CloudGuardDataMaskRule":
                return new CloudGuardDataMaskRule(name, <any>undefined, { urn })
            case "oci:index/cloudGuardDetectorRecipe:CloudGuardDetectorRecipe":
                return new CloudGuardDetectorRecipe(name, <any>undefined, { urn })
            case "oci:index/cloudGuardManagedList:CloudGuardManagedList":
                return new CloudGuardManagedList(name, <any>undefined, { urn })
            case "oci:index/cloudGuardResponderRecipe:CloudGuardResponderRecipe":
                return new CloudGuardResponderRecipe(name, <any>undefined, { urn })
            case "oci:index/cloudGuardTarget:CloudGuardTarget":
                return new CloudGuardTarget(name, <any>undefined, { urn })
            case "oci:index/containerengineCluster:ContainerengineCluster":
                return new ContainerengineCluster(name, <any>undefined, { urn })
            case "oci:index/containerengineNodePool:ContainerengineNodePool":
                return new ContainerengineNodePool(name, <any>undefined, { urn })
            case "oci:index/coreAppCatalogListingResourceVersionAgreement:CoreAppCatalogListingResourceVersionAgreement":
                return new CoreAppCatalogListingResourceVersionAgreement(name, <any>undefined, { urn })
            case "oci:index/coreAppCatalogSubscription:CoreAppCatalogSubscription":
                return new CoreAppCatalogSubscription(name, <any>undefined, { urn })
            case "oci:index/coreBootVolume:CoreBootVolume":
                return new CoreBootVolume(name, <any>undefined, { urn })
            case "oci:index/coreBootVolumeBackup:CoreBootVolumeBackup":
                return new CoreBootVolumeBackup(name, <any>undefined, { urn })
            case "oci:index/coreClusterNetwork:CoreClusterNetwork":
                return new CoreClusterNetwork(name, <any>undefined, { urn })
            case "oci:index/coreComputeCapacityReservation:CoreComputeCapacityReservation":
                return new CoreComputeCapacityReservation(name, <any>undefined, { urn })
            case "oci:index/coreComputeImageCapabilitySchema:CoreComputeImageCapabilitySchema":
                return new CoreComputeImageCapabilitySchema(name, <any>undefined, { urn })
            case "oci:index/coreConsoleHistory:CoreConsoleHistory":
                return new CoreConsoleHistory(name, <any>undefined, { urn })
            case "oci:index/coreCpe:CoreCpe":
                return new CoreCpe(name, <any>undefined, { urn })
            case "oci:index/coreCrossConnect:CoreCrossConnect":
                return new CoreCrossConnect(name, <any>undefined, { urn })
            case "oci:index/coreCrossConnectGroup:CoreCrossConnectGroup":
                return new CoreCrossConnectGroup(name, <any>undefined, { urn })
            case "oci:index/coreDedicatedVmHost:CoreDedicatedVmHost":
                return new CoreDedicatedVmHost(name, <any>undefined, { urn })
            case "oci:index/coreDefaultDhcpOptions:CoreDefaultDhcpOptions":
                return new CoreDefaultDhcpOptions(name, <any>undefined, { urn })
            case "oci:index/coreDefaultRouteTable:CoreDefaultRouteTable":
                return new CoreDefaultRouteTable(name, <any>undefined, { urn })
            case "oci:index/coreDefaultSecurityList:CoreDefaultSecurityList":
                return new CoreDefaultSecurityList(name, <any>undefined, { urn })
            case "oci:index/coreDhcpOptions:CoreDhcpOptions":
                return new CoreDhcpOptions(name, <any>undefined, { urn })
            case "oci:index/coreDrg:CoreDrg":
                return new CoreDrg(name, <any>undefined, { urn })
            case "oci:index/coreDrgAttachment:CoreDrgAttachment":
                return new CoreDrgAttachment(name, <any>undefined, { urn })
            case "oci:index/coreDrgAttachmentManagement:CoreDrgAttachmentManagement":
                return new CoreDrgAttachmentManagement(name, <any>undefined, { urn })
            case "oci:index/coreDrgAttachmentsList:CoreDrgAttachmentsList":
                return new CoreDrgAttachmentsList(name, <any>undefined, { urn })
            case "oci:index/coreDrgRouteDistribution:CoreDrgRouteDistribution":
                return new CoreDrgRouteDistribution(name, <any>undefined, { urn })
            case "oci:index/coreDrgRouteDistributionStatement:CoreDrgRouteDistributionStatement":
                return new CoreDrgRouteDistributionStatement(name, <any>undefined, { urn })
            case "oci:index/coreDrgRouteTable:CoreDrgRouteTable":
                return new CoreDrgRouteTable(name, <any>undefined, { urn })
            case "oci:index/coreDrgRouteTableRouteRule:CoreDrgRouteTableRouteRule":
                return new CoreDrgRouteTableRouteRule(name, <any>undefined, { urn })
            case "oci:index/coreImage:CoreImage":
                return new CoreImage(name, <any>undefined, { urn })
            case "oci:index/coreInstance:CoreInstance":
                return new CoreInstance(name, <any>undefined, { urn })
            case "oci:index/coreInstanceConfiguration:CoreInstanceConfiguration":
                return new CoreInstanceConfiguration(name, <any>undefined, { urn })
            case "oci:index/coreInstanceConsoleConnection:CoreInstanceConsoleConnection":
                return new CoreInstanceConsoleConnection(name, <any>undefined, { urn })
            case "oci:index/coreInstancePool:CoreInstancePool":
                return new CoreInstancePool(name, <any>undefined, { urn })
            case "oci:index/coreInstancePoolInstance:CoreInstancePoolInstance":
                return new CoreInstancePoolInstance(name, <any>undefined, { urn })
            case "oci:index/coreInternetGateway:CoreInternetGateway":
                return new CoreInternetGateway(name, <any>undefined, { urn })
            case "oci:index/coreIpsec:CoreIpsec":
                return new CoreIpsec(name, <any>undefined, { urn })
            case "oci:index/coreIpsecConnectionTunnelManagement:CoreIpsecConnectionTunnelManagement":
                return new CoreIpsecConnectionTunnelManagement(name, <any>undefined, { urn })
            case "oci:index/coreIpv6:CoreIpv6":
                return new CoreIpv6(name, <any>undefined, { urn })
            case "oci:index/coreListingResourceVersionAgreement:CoreListingResourceVersionAgreement":
                return new CoreListingResourceVersionAgreement(name, <any>undefined, { urn })
            case "oci:index/coreLocalPeeringGateway:CoreLocalPeeringGateway":
                return new CoreLocalPeeringGateway(name, <any>undefined, { urn })
            case "oci:index/coreNatGateway:CoreNatGateway":
                return new CoreNatGateway(name, <any>undefined, { urn })
            case "oci:index/coreNetworkSecurityGroup:CoreNetworkSecurityGroup":
                return new CoreNetworkSecurityGroup(name, <any>undefined, { urn })
            case "oci:index/coreNetworkSecurityGroupSecurityRule:CoreNetworkSecurityGroupSecurityRule":
                return new CoreNetworkSecurityGroupSecurityRule(name, <any>undefined, { urn })
            case "oci:index/corePrivateIp:CorePrivateIp":
                return new CorePrivateIp(name, <any>undefined, { urn })
            case "oci:index/corePublicIp:CorePublicIp":
                return new CorePublicIp(name, <any>undefined, { urn })
            case "oci:index/corePublicIpPool:CorePublicIpPool":
                return new CorePublicIpPool(name, <any>undefined, { urn })
            case "oci:index/corePublicIpPoolCapacity:CorePublicIpPoolCapacity":
                return new CorePublicIpPoolCapacity(name, <any>undefined, { urn })
            case "oci:index/coreRemotePeeringConnection:CoreRemotePeeringConnection":
                return new CoreRemotePeeringConnection(name, <any>undefined, { urn })
            case "oci:index/coreRouteTable:CoreRouteTable":
                return new CoreRouteTable(name, <any>undefined, { urn })
            case "oci:index/coreRouteTableAttachment:CoreRouteTableAttachment":
                return new CoreRouteTableAttachment(name, <any>undefined, { urn })
            case "oci:index/coreSecurityList:CoreSecurityList":
                return new CoreSecurityList(name, <any>undefined, { urn })
            case "oci:index/coreServiceGateway:CoreServiceGateway":
                return new CoreServiceGateway(name, <any>undefined, { urn })
            case "oci:index/coreShapeManagement:CoreShapeManagement":
                return new CoreShapeManagement(name, <any>undefined, { urn })
            case "oci:index/coreSubnet:CoreSubnet":
                return new CoreSubnet(name, <any>undefined, { urn })
            case "oci:index/coreVcn:CoreVcn":
                return new CoreVcn(name, <any>undefined, { urn })
            case "oci:index/coreVirtualCircuit:CoreVirtualCircuit":
                return new CoreVirtualCircuit(name, <any>undefined, { urn })
            case "oci:index/coreVirtualNetwork:CoreVirtualNetwork":
                return new CoreVirtualNetwork(name, <any>undefined, { urn })
            case "oci:index/coreVlan:CoreVlan":
                return new CoreVlan(name, <any>undefined, { urn })
            case "oci:index/coreVnicAttachment:CoreVnicAttachment":
                return new CoreVnicAttachment(name, <any>undefined, { urn })
            case "oci:index/coreVolume:CoreVolume":
                return new CoreVolume(name, <any>undefined, { urn })
            case "oci:index/coreVolumeAttachment:CoreVolumeAttachment":
                return new CoreVolumeAttachment(name, <any>undefined, { urn })
            case "oci:index/coreVolumeBackup:CoreVolumeBackup":
                return new CoreVolumeBackup(name, <any>undefined, { urn })
            case "oci:index/coreVolumeBackupPolicy:CoreVolumeBackupPolicy":
                return new CoreVolumeBackupPolicy(name, <any>undefined, { urn })
            case "oci:index/coreVolumeBackupPolicyAssignment:CoreVolumeBackupPolicyAssignment":
                return new CoreVolumeBackupPolicyAssignment(name, <any>undefined, { urn })
            case "oci:index/coreVolumeGroup:CoreVolumeGroup":
                return new CoreVolumeGroup(name, <any>undefined, { urn })
            case "oci:index/coreVolumeGroupBackup:CoreVolumeGroupBackup":
                return new CoreVolumeGroupBackup(name, <any>undefined, { urn })
            case "oci:index/dataSafeDataSafeConfiguration:DataSafeDataSafeConfiguration":
                return new DataSafeDataSafeConfiguration(name, <any>undefined, { urn })
            case "oci:index/dataSafeDataSafePrivateEndpoint:DataSafeDataSafePrivateEndpoint":
                return new DataSafeDataSafePrivateEndpoint(name, <any>undefined, { urn })
            case "oci:index/dataSafeOnPremConnector:DataSafeOnPremConnector":
                return new DataSafeOnPremConnector(name, <any>undefined, { urn })
            case "oci:index/dataSafeTargetDatabase:DataSafeTargetDatabase":
                return new DataSafeTargetDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousContainerDatabase:DatabaseAutonomousContainerDatabase":
                return new DatabaseAutonomousContainerDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousContainerDatabaseDataguardAssociationOperation:DatabaseAutonomousContainerDatabaseDataguardAssociationOperation":
                return new DatabaseAutonomousContainerDatabaseDataguardAssociationOperation(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousDatabase:DatabaseAutonomousDatabase":
                return new DatabaseAutonomousDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousDatabaseBackup:DatabaseAutonomousDatabaseBackup":
                return new DatabaseAutonomousDatabaseBackup(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousDatabaseInstanceWalletManagement:DatabaseAutonomousDatabaseInstanceWalletManagement":
                return new DatabaseAutonomousDatabaseInstanceWalletManagement(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousDatabaseRegionalWalletManagement:DatabaseAutonomousDatabaseRegionalWalletManagement":
                return new DatabaseAutonomousDatabaseRegionalWalletManagement(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousDatabaseWallet:DatabaseAutonomousDatabaseWallet":
                return new DatabaseAutonomousDatabaseWallet(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousExadataInfrastructure:DatabaseAutonomousExadataInfrastructure":
                return new DatabaseAutonomousExadataInfrastructure(name, <any>undefined, { urn })
            case "oci:index/databaseAutonomousVmCluster:DatabaseAutonomousVmCluster":
                return new DatabaseAutonomousVmCluster(name, <any>undefined, { urn })
            case "oci:index/databaseBackup:DatabaseBackup":
                return new DatabaseBackup(name, <any>undefined, { urn })
            case "oci:index/databaseBackupDestination:DatabaseBackupDestination":
                return new DatabaseBackupDestination(name, <any>undefined, { urn })
            case "oci:index/databaseCloudExadataInfrastructure:DatabaseCloudExadataInfrastructure":
                return new DatabaseCloudExadataInfrastructure(name, <any>undefined, { urn })
            case "oci:index/databaseCloudVmCluster:DatabaseCloudVmCluster":
                return new DatabaseCloudVmCluster(name, <any>undefined, { urn })
            case "oci:index/databaseDataGuardAssociation:DatabaseDataGuardAssociation":
                return new DatabaseDataGuardAssociation(name, <any>undefined, { urn })
            case "oci:index/databaseDatabase:DatabaseDatabase":
                return new DatabaseDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseDatabaseSoftwareImage:DatabaseDatabaseSoftwareImage":
                return new DatabaseDatabaseSoftwareImage(name, <any>undefined, { urn })
            case "oci:index/databaseDatabaseUpgrade:DatabaseDatabaseUpgrade":
                return new DatabaseDatabaseUpgrade(name, <any>undefined, { urn })
            case "oci:index/databaseDbHome:DatabaseDbHome":
                return new DatabaseDbHome(name, <any>undefined, { urn })
            case "oci:index/databaseDbNodeConsoleConnection:DatabaseDbNodeConsoleConnection":
                return new DatabaseDbNodeConsoleConnection(name, <any>undefined, { urn })
            case "oci:index/databaseDbSystem:DatabaseDbSystem":
                return new DatabaseDbSystem(name, <any>undefined, { urn })
            case "oci:index/databaseExadataInfrastructure:DatabaseExadataInfrastructure":
                return new DatabaseExadataInfrastructure(name, <any>undefined, { urn })
            case "oci:index/databaseExadataInfrastructureStorage:DatabaseExadataInfrastructureStorage":
                return new DatabaseExadataInfrastructureStorage(name, <any>undefined, { urn })
            case "oci:index/databaseExadataIormConfig:DatabaseExadataIormConfig":
                return new DatabaseExadataIormConfig(name, <any>undefined, { urn })
            case "oci:index/databaseExternalContainerDatabase:DatabaseExternalContainerDatabase":
                return new DatabaseExternalContainerDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseExternalContainerDatabaseManagement:DatabaseExternalContainerDatabaseManagement":
                return new DatabaseExternalContainerDatabaseManagement(name, <any>undefined, { urn })
            case "oci:index/databaseExternalDatabaseConnector:DatabaseExternalDatabaseConnector":
                return new DatabaseExternalDatabaseConnector(name, <any>undefined, { urn })
            case "oci:index/databaseExternalNonContainerDatabase:DatabaseExternalNonContainerDatabase":
                return new DatabaseExternalNonContainerDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseExternalNonContainerDatabaseManagement:DatabaseExternalNonContainerDatabaseManagement":
                return new DatabaseExternalNonContainerDatabaseManagement(name, <any>undefined, { urn })
            case "oci:index/databaseExternalNonContainerDatabaseOperationsInsightsManagement:DatabaseExternalNonContainerDatabaseOperationsInsightsManagement":
                return new DatabaseExternalNonContainerDatabaseOperationsInsightsManagement(name, <any>undefined, { urn })
            case "oci:index/databaseExternalPluggableDatabase:DatabaseExternalPluggableDatabase":
                return new DatabaseExternalPluggableDatabase(name, <any>undefined, { urn })
            case "oci:index/databaseExternalPluggableDatabaseManagement:DatabaseExternalPluggableDatabaseManagement":
                return new DatabaseExternalPluggableDatabaseManagement(name, <any>undefined, { urn })
            case "oci:index/databaseExternalPluggableDatabaseOperationsInsightsManagement:DatabaseExternalPluggableDatabaseOperationsInsightsManagement":
                return new DatabaseExternalPluggableDatabaseOperationsInsightsManagement(name, <any>undefined, { urn })
            case "oci:index/databaseKeyStore:DatabaseKeyStore":
                return new DatabaseKeyStore(name, <any>undefined, { urn })
            case "oci:index/databaseMaintenanceRun:DatabaseMaintenanceRun":
                return new DatabaseMaintenanceRun(name, <any>undefined, { urn })
            case "oci:index/databaseManagementManagedDatabaseGroup:DatabaseManagementManagedDatabaseGroup":
                return new DatabaseManagementManagedDatabaseGroup(name, <any>undefined, { urn })
            case "oci:index/databaseManagementManagedDatabasesChangeDatabaseParameter:DatabaseManagementManagedDatabasesChangeDatabaseParameter":
                return new DatabaseManagementManagedDatabasesChangeDatabaseParameter(name, <any>undefined, { urn })
            case "oci:index/databaseManagementManagedDatabasesResetDatabaseParameter:DatabaseManagementManagedDatabasesResetDatabaseParameter":
                return new DatabaseManagementManagedDatabasesResetDatabaseParameter(name, <any>undefined, { urn })
            case "oci:index/databaseMigration:DatabaseMigration":
                return new DatabaseMigration(name, <any>undefined, { urn })
            case "oci:index/databaseMigrationAgent:DatabaseMigrationAgent":
                return new DatabaseMigrationAgent(name, <any>undefined, { urn })
            case "oci:index/databaseMigrationConnection:DatabaseMigrationConnection":
                return new DatabaseMigrationConnection(name, <any>undefined, { urn })
            case "oci:index/databaseMigrationJob:DatabaseMigrationJob":
                return new DatabaseMigrationJob(name, <any>undefined, { urn })
            case "oci:index/databaseMigrationMigration:DatabaseMigrationMigration":
                return new DatabaseMigrationMigration(name, <any>undefined, { urn })
            case "oci:index/databasePluggableDatabase:DatabasePluggableDatabase":
                return new DatabasePluggableDatabase(name, <any>undefined, { urn })
            case "oci:index/databasePluggableDatabasesLocalClone:DatabasePluggableDatabasesLocalClone":
                return new DatabasePluggableDatabasesLocalClone(name, <any>undefined, { urn })
            case "oci:index/databasePluggableDatabasesRemoteClone:DatabasePluggableDatabasesRemoteClone":
                return new DatabasePluggableDatabasesRemoteClone(name, <any>undefined, { urn })
            case "oci:index/databaseVmCluster:DatabaseVmCluster":
                return new DatabaseVmCluster(name, <any>undefined, { urn })
            case "oci:index/databaseVmClusterNetwork:DatabaseVmClusterNetwork":
                return new DatabaseVmClusterNetwork(name, <any>undefined, { urn })
            case "oci:index/datacatalogCatalog:DatacatalogCatalog":
                return new DatacatalogCatalog(name, <any>undefined, { urn })
            case "oci:index/datacatalogCatalogPrivateEndpoint:DatacatalogCatalogPrivateEndpoint":
                return new DatacatalogCatalogPrivateEndpoint(name, <any>undefined, { urn })
            case "oci:index/datacatalogConnection:DatacatalogConnection":
                return new DatacatalogConnection(name, <any>undefined, { urn })
            case "oci:index/datacatalogDataAsset:DatacatalogDataAsset":
                return new DatacatalogDataAsset(name, <any>undefined, { urn })
            case "oci:index/datacatalogMetastore:DatacatalogMetastore":
                return new DatacatalogMetastore(name, <any>undefined, { urn })
            case "oci:index/dataflowApplication:DataflowApplication":
                return new DataflowApplication(name, <any>undefined, { urn })
            case "oci:index/dataflowInvokeRun:DataflowInvokeRun":
                return new DataflowInvokeRun(name, <any>undefined, { urn })
            case "oci:index/dataflowPrivateEndpoint:DataflowPrivateEndpoint":
                return new DataflowPrivateEndpoint(name, <any>undefined, { urn })
            case "oci:index/dataintegrationWorkspace:DataintegrationWorkspace":
                return new DataintegrationWorkspace(name, <any>undefined, { urn })
            case "oci:index/datascienceModel:DatascienceModel":
                return new DatascienceModel(name, <any>undefined, { urn })
            case "oci:index/datascienceModelDeployment:DatascienceModelDeployment":
                return new DatascienceModelDeployment(name, <any>undefined, { urn })
            case "oci:index/datascienceModelProvenance:DatascienceModelProvenance":
                return new DatascienceModelProvenance(name, <any>undefined, { urn })
            case "oci:index/datascienceNotebookSession:DatascienceNotebookSession":
                return new DatascienceNotebookSession(name, <any>undefined, { urn })
            case "oci:index/datascienceProject:DatascienceProject":
                return new DatascienceProject(name, <any>undefined, { urn })
            case "oci:index/devopsDeployArtifact:DevopsDeployArtifact":
                return new DevopsDeployArtifact(name, <any>undefined, { urn })
            case "oci:index/devopsDeployEnvironment:DevopsDeployEnvironment":
                return new DevopsDeployEnvironment(name, <any>undefined, { urn })
            case "oci:index/devopsDeployPipeline:DevopsDeployPipeline":
                return new DevopsDeployPipeline(name, <any>undefined, { urn })
            case "oci:index/devopsDeployStage:DevopsDeployStage":
                return new DevopsDeployStage(name, <any>undefined, { urn })
            case "oci:index/devopsDeployment:DevopsDeployment":
                return new DevopsDeployment(name, <any>undefined, { urn })
            case "oci:index/devopsProject:DevopsProject":
                return new DevopsProject(name, <any>undefined, { urn })
            case "oci:index/dnsRecord:DnsRecord":
                return new DnsRecord(name, <any>undefined, { urn })
            case "oci:index/dnsResolver:DnsResolver":
                return new DnsResolver(name, <any>undefined, { urn })
            case "oci:index/dnsResolverEndpoint:DnsResolverEndpoint":
                return new DnsResolverEndpoint(name, <any>undefined, { urn })
            case "oci:index/dnsRrset:DnsRrset":
                return new DnsRrset(name, <any>undefined, { urn })
            case "oci:index/dnsSteeringPolicy:DnsSteeringPolicy":
                return new DnsSteeringPolicy(name, <any>undefined, { urn })
            case "oci:index/dnsSteeringPolicyAttachment:DnsSteeringPolicyAttachment":
                return new DnsSteeringPolicyAttachment(name, <any>undefined, { urn })
            case "oci:index/dnsTsigKey:DnsTsigKey":
                return new DnsTsigKey(name, <any>undefined, { urn })
            case "oci:index/dnsView:DnsView":
                return new DnsView(name, <any>undefined, { urn })
            case "oci:index/dnsZone:DnsZone":
                return new DnsZone(name, <any>undefined, { urn })
            case "oci:index/emailDkim:EmailDkim":
                return new EmailDkim(name, <any>undefined, { urn })
            case "oci:index/emailEmailDomain:EmailEmailDomain":
                return new EmailEmailDomain(name, <any>undefined, { urn })
            case "oci:index/emailSender:EmailSender":
                return new EmailSender(name, <any>undefined, { urn })
            case "oci:index/emailSuppression:EmailSuppression":
                return new EmailSuppression(name, <any>undefined, { urn })
            case "oci:index/eventsRule:EventsRule":
                return new EventsRule(name, <any>undefined, { urn })
            case "oci:index/fileStorageExport:FileStorageExport":
                return new FileStorageExport(name, <any>undefined, { urn })
            case "oci:index/fileStorageExportSet:FileStorageExportSet":
                return new FileStorageExportSet(name, <any>undefined, { urn })
            case "oci:index/fileStorageFileSystem:FileStorageFileSystem":
                return new FileStorageFileSystem(name, <any>undefined, { urn })
            case "oci:index/fileStorageMountTarget:FileStorageMountTarget":
                return new FileStorageMountTarget(name, <any>undefined, { urn })
            case "oci:index/fileStorageSnapshot:FileStorageSnapshot":
                return new FileStorageSnapshot(name, <any>undefined, { urn })
            case "oci:index/functionsApplication:FunctionsApplication":
                return new FunctionsApplication(name, <any>undefined, { urn })
            case "oci:index/functionsFunction:FunctionsFunction":
                return new FunctionsFunction(name, <any>undefined, { urn })
            case "oci:index/functionsInvokeFunction:FunctionsInvokeFunction":
                return new FunctionsInvokeFunction(name, <any>undefined, { urn })
            case "oci:index/genericArtifactsContentArtifactByPath:GenericArtifactsContentArtifactByPath":
                return new GenericArtifactsContentArtifactByPath(name, <any>undefined, { urn })
            case "oci:index/goldenGateDatabaseRegistration:GoldenGateDatabaseRegistration":
                return new GoldenGateDatabaseRegistration(name, <any>undefined, { urn })
            case "oci:index/goldenGateDeployment:GoldenGateDeployment":
                return new GoldenGateDeployment(name, <any>undefined, { urn })
            case "oci:index/goldenGateDeploymentBackup:GoldenGateDeploymentBackup":
                return new GoldenGateDeploymentBackup(name, <any>undefined, { urn })
            case "oci:index/healthChecksHttpMonitor:HealthChecksHttpMonitor":
                return new HealthChecksHttpMonitor(name, <any>undefined, { urn })
            case "oci:index/healthChecksHttpProbe:HealthChecksHttpProbe":
                return new HealthChecksHttpProbe(name, <any>undefined, { urn })
            case "oci:index/healthChecksPingMonitor:HealthChecksPingMonitor":
                return new HealthChecksPingMonitor(name, <any>undefined, { urn })
            case "oci:index/healthChecksPingProbe:HealthChecksPingProbe":
                return new HealthChecksPingProbe(name, <any>undefined, { urn })
            case "oci:index/identityApiKey:IdentityApiKey":
                return new IdentityApiKey(name, <any>undefined, { urn })
            case "oci:index/identityAuthToken:IdentityAuthToken":
                return new IdentityAuthToken(name, <any>undefined, { urn })
            case "oci:index/identityAuthenticationPolicy:IdentityAuthenticationPolicy":
                return new IdentityAuthenticationPolicy(name, <any>undefined, { urn })
            case "oci:index/identityCompartment:IdentityCompartment":
                return new IdentityCompartment(name, <any>undefined, { urn })
            case "oci:index/identityCustomerSecretKey:IdentityCustomerSecretKey":
                return new IdentityCustomerSecretKey(name, <any>undefined, { urn })
            case "oci:index/identityDynamicGroup:IdentityDynamicGroup":
                return new IdentityDynamicGroup(name, <any>undefined, { urn })
            case "oci:index/identityGroup:IdentityGroup":
                return new IdentityGroup(name, <any>undefined, { urn })
            case "oci:index/identityIdentityProvider:IdentityIdentityProvider":
                return new IdentityIdentityProvider(name, <any>undefined, { urn })
            case "oci:index/identityIdpGroupMapping:IdentityIdpGroupMapping":
                return new IdentityIdpGroupMapping(name, <any>undefined, { urn })
            case "oci:index/identityNetworkSource:IdentityNetworkSource":
                return new IdentityNetworkSource(name, <any>undefined, { urn })
            case "oci:index/identityPolicy:IdentityPolicy":
                return new IdentityPolicy(name, <any>undefined, { urn })
            case "oci:index/identitySmtpCredential:IdentitySmtpCredential":
                return new IdentitySmtpCredential(name, <any>undefined, { urn })
            case "oci:index/identitySwiftPassword:IdentitySwiftPassword":
                return new IdentitySwiftPassword(name, <any>undefined, { urn })
            case "oci:index/identityTag:IdentityTag":
                return new IdentityTag(name, <any>undefined, { urn })
            case "oci:index/identityTagDefault:IdentityTagDefault":
                return new IdentityTagDefault(name, <any>undefined, { urn })
            case "oci:index/identityTagNamespace:IdentityTagNamespace":
                return new IdentityTagNamespace(name, <any>undefined, { urn })
            case "oci:index/identityUiPassword:IdentityUiPassword":
                return new IdentityUiPassword(name, <any>undefined, { urn })
            case "oci:index/identityUser:IdentityUser":
                return new IdentityUser(name, <any>undefined, { urn })
            case "oci:index/identityUserCapabilitiesManagement:IdentityUserCapabilitiesManagement":
                return new IdentityUserCapabilitiesManagement(name, <any>undefined, { urn })
            case "oci:index/identityUserGroupMembership:IdentityUserGroupMembership":
                return new IdentityUserGroupMembership(name, <any>undefined, { urn })
            case "oci:index/integrationIntegrationInstance:IntegrationIntegrationInstance":
                return new IntegrationIntegrationInstance(name, <any>undefined, { urn })
            case "oci:index/jmsFleet:JmsFleet":
                return new JmsFleet(name, <any>undefined, { urn })
            case "oci:index/kmsEncryptedData:KmsEncryptedData":
                return new KmsEncryptedData(name, <any>undefined, { urn })
            case "oci:index/kmsGeneratedKey:KmsGeneratedKey":
                return new KmsGeneratedKey(name, <any>undefined, { urn })
            case "oci:index/kmsKey:KmsKey":
                return new KmsKey(name, <any>undefined, { urn })
            case "oci:index/kmsKeyVersion:KmsKeyVersion":
                return new KmsKeyVersion(name, <any>undefined, { urn })
            case "oci:index/kmsSign:KmsSign":
                return new KmsSign(name, <any>undefined, { urn })
            case "oci:index/kmsVault:KmsVault":
                return new KmsVault(name, <any>undefined, { urn })
            case "oci:index/kmsVaultReplication:KmsVaultReplication":
                return new KmsVaultReplication(name, <any>undefined, { urn })
            case "oci:index/kmsVerify:KmsVerify":
                return new KmsVerify(name, <any>undefined, { urn })
            case "oci:index/limitsQuota:LimitsQuota":
                return new LimitsQuota(name, <any>undefined, { urn })
            case "oci:index/loadBalancer:LoadBalancer":
                return new LoadBalancer(name, <any>undefined, { urn })
            case "oci:index/loadBalancerBackend:LoadBalancerBackend":
                return new LoadBalancerBackend(name, <any>undefined, { urn })
            case "oci:index/loadBalancerBackendSet:LoadBalancerBackendSet":
                return new LoadBalancerBackendSet(name, <any>undefined, { urn })
            case "oci:index/loadBalancerCertificate:LoadBalancerCertificate":
                return new LoadBalancerCertificate(name, <any>undefined, { urn })
            case "oci:index/loadBalancerHostname:LoadBalancerHostname":
                return new LoadBalancerHostname(name, <any>undefined, { urn })
            case "oci:index/loadBalancerListener:LoadBalancerListener":
                return new LoadBalancerListener(name, <any>undefined, { urn })
            case "oci:index/loadBalancerLoadBalancer:LoadBalancerLoadBalancer":
                return new LoadBalancerLoadBalancer(name, <any>undefined, { urn })
            case "oci:index/loadBalancerLoadBalancerRoutingPolicy:LoadBalancerLoadBalancerRoutingPolicy":
                return new LoadBalancerLoadBalancerRoutingPolicy(name, <any>undefined, { urn })
            case "oci:index/loadBalancerPathRouteSet:LoadBalancerPathRouteSet":
                return new LoadBalancerPathRouteSet(name, <any>undefined, { urn })
            case "oci:index/loadBalancerRuleSet:LoadBalancerRuleSet":
                return new LoadBalancerRuleSet(name, <any>undefined, { urn })
            case "oci:index/loadBalancerSslCipherSuite:LoadBalancerSslCipherSuite":
                return new LoadBalancerSslCipherSuite(name, <any>undefined, { urn })
            case "oci:index/logAnalyticsLogAnalyticsEntity:LogAnalyticsLogAnalyticsEntity":
                return new LogAnalyticsLogAnalyticsEntity(name, <any>undefined, { urn })
            case "oci:index/logAnalyticsLogAnalyticsLogGroup:LogAnalyticsLogAnalyticsLogGroup":
                return new LogAnalyticsLogAnalyticsLogGroup(name, <any>undefined, { urn })
            case "oci:index/logAnalyticsLogAnalyticsObjectCollectionRule:LogAnalyticsLogAnalyticsObjectCollectionRule":
                return new LogAnalyticsLogAnalyticsObjectCollectionRule(name, <any>undefined, { urn })
            case "oci:index/logAnalyticsNamespace:LogAnalyticsNamespace":
                return new LogAnalyticsNamespace(name, <any>undefined, { urn })
            case "oci:index/loggingLog:LoggingLog":
                return new LoggingLog(name, <any>undefined, { urn })
            case "oci:index/loggingLogGroup:LoggingLogGroup":
                return new LoggingLogGroup(name, <any>undefined, { urn })
            case "oci:index/loggingLogSavedSearch:LoggingLogSavedSearch":
                return new LoggingLogSavedSearch(name, <any>undefined, { urn })
            case "oci:index/loggingUnifiedAgentConfiguration:LoggingUnifiedAgentConfiguration":
                return new LoggingUnifiedAgentConfiguration(name, <any>undefined, { urn })
            case "oci:index/managementAgentManagementAgent:ManagementAgentManagementAgent":
                return new ManagementAgentManagementAgent(name, <any>undefined, { urn })
            case "oci:index/managementAgentManagementAgentInstallKey:ManagementAgentManagementAgentInstallKey":
                return new ManagementAgentManagementAgentInstallKey(name, <any>undefined, { urn })
            case "oci:index/managementDashboardManagementDashboardsImport:ManagementDashboardManagementDashboardsImport":
                return new ManagementDashboardManagementDashboardsImport(name, <any>undefined, { urn })
            case "oci:index/marketplaceAcceptedAgreement:MarketplaceAcceptedAgreement":
                return new MarketplaceAcceptedAgreement(name, <any>undefined, { urn })
            case "oci:index/marketplaceListingPackageAgreement:MarketplaceListingPackageAgreement":
                return new MarketplaceListingPackageAgreement(name, <any>undefined, { urn })
            case "oci:index/marketplacePublication:MarketplacePublication":
                return new MarketplacePublication(name, <any>undefined, { urn })
            case "oci:index/meteringComputationCustomTable:MeteringComputationCustomTable":
                return new MeteringComputationCustomTable(name, <any>undefined, { urn })
            case "oci:index/meteringComputationQuery:MeteringComputationQuery":
                return new MeteringComputationQuery(name, <any>undefined, { urn })
            case "oci:index/meteringComputationUsage:MeteringComputationUsage":
                return new MeteringComputationUsage(name, <any>undefined, { urn })
            case "oci:index/monitoringAlarm:MonitoringAlarm":
                return new MonitoringAlarm(name, <any>undefined, { urn })
            case "oci:index/mysqlAnalyticsCluster:MysqlAnalyticsCluster":
                return new MysqlAnalyticsCluster(name, <any>undefined, { urn })
            case "oci:index/mysqlChannel:MysqlChannel":
                return new MysqlChannel(name, <any>undefined, { urn })
            case "oci:index/mysqlHeatWaveCluster:MysqlHeatWaveCluster":
                return new MysqlHeatWaveCluster(name, <any>undefined, { urn })
            case "oci:index/mysqlMysqlBackup:MysqlMysqlBackup":
                return new MysqlMysqlBackup(name, <any>undefined, { urn })
            case "oci:index/mysqlMysqlDbSystem:MysqlMysqlDbSystem":
                return new MysqlMysqlDbSystem(name, <any>undefined, { urn })
            case "oci:index/networkLoadBalancerBackend:NetworkLoadBalancerBackend":
                return new NetworkLoadBalancerBackend(name, <any>undefined, { urn })
            case "oci:index/networkLoadBalancerBackendSet:NetworkLoadBalancerBackendSet":
                return new NetworkLoadBalancerBackendSet(name, <any>undefined, { urn })
            case "oci:index/networkLoadBalancerListener:NetworkLoadBalancerListener":
                return new NetworkLoadBalancerListener(name, <any>undefined, { urn })
            case "oci:index/networkLoadBalancerNetworkLoadBalancer:NetworkLoadBalancerNetworkLoadBalancer":
                return new NetworkLoadBalancerNetworkLoadBalancer(name, <any>undefined, { urn })
            case "oci:index/nosqlIndex:NosqlIndex":
                return new NosqlIndex(name, <any>undefined, { urn })
            case "oci:index/nosqlTable:NosqlTable":
                return new NosqlTable(name, <any>undefined, { urn })
            case "oci:index/objectstorageBucket:ObjectstorageBucket":
                return new ObjectstorageBucket(name, <any>undefined, { urn })
            case "oci:index/objectstorageNamespaceMetadata:ObjectstorageNamespaceMetadata":
                return new ObjectstorageNamespaceMetadata(name, <any>undefined, { urn })
            case "oci:index/objectstorageObject:ObjectstorageObject":
                return new ObjectstorageObject(name, <any>undefined, { urn })
            case "oci:index/objectstorageObjectLifecyclePolicy:ObjectstorageObjectLifecyclePolicy":
                return new ObjectstorageObjectLifecyclePolicy(name, <any>undefined, { urn })
            case "oci:index/objectstoragePreauthrequest:ObjectstoragePreauthrequest":
                return new ObjectstoragePreauthrequest(name, <any>undefined, { urn })
            case "oci:index/objectstorageReplicationPolicy:ObjectstorageReplicationPolicy":
                return new ObjectstorageReplicationPolicy(name, <any>undefined, { urn })
            case "oci:index/oceOceInstance:OceOceInstance":
                return new OceOceInstance(name, <any>undefined, { urn })
            case "oci:index/ocvpEsxiHost:OcvpEsxiHost":
                return new OcvpEsxiHost(name, <any>undefined, { urn })
            case "oci:index/ocvpSddc:OcvpSddc":
                return new OcvpSddc(name, <any>undefined, { urn })
            case "oci:index/odaOdaInstance:OdaOdaInstance":
                return new OdaOdaInstance(name, <any>undefined, { urn })
            case "oci:index/onsNotificationTopic:OnsNotificationTopic":
                return new OnsNotificationTopic(name, <any>undefined, { urn })
            case "oci:index/onsSubscription:OnsSubscription":
                return new OnsSubscription(name, <any>undefined, { urn })
            case "oci:index/opsiDatabaseInsight:OpsiDatabaseInsight":
                return new OpsiDatabaseInsight(name, <any>undefined, { urn })
            case "oci:index/opsiEnterpriseManagerBridge:OpsiEnterpriseManagerBridge":
                return new OpsiEnterpriseManagerBridge(name, <any>undefined, { urn })
            case "oci:index/opsiHostInsight:OpsiHostInsight":
                return new OpsiHostInsight(name, <any>undefined, { urn })
            case "oci:index/optimizerEnrollmentStatus:OptimizerEnrollmentStatus":
                return new OptimizerEnrollmentStatus(name, <any>undefined, { urn })
            case "oci:index/optimizerProfile:OptimizerProfile":
                return new OptimizerProfile(name, <any>undefined, { urn })
            case "oci:index/optimizerRecommendation:OptimizerRecommendation":
                return new OptimizerRecommendation(name, <any>undefined, { urn })
            case "oci:index/optimizerResourceAction:OptimizerResourceAction":
                return new OptimizerResourceAction(name, <any>undefined, { urn })
            case "oci:index/osmanagementManagedInstanceGroup:OsmanagementManagedInstanceGroup":
                return new OsmanagementManagedInstanceGroup(name, <any>undefined, { urn })
            case "oci:index/osmanagementManagedInstanceManagement:OsmanagementManagedInstanceManagement":
                return new OsmanagementManagedInstanceManagement(name, <any>undefined, { urn })
            case "oci:index/osmanagementSoftwareSource:OsmanagementSoftwareSource":
                return new OsmanagementSoftwareSource(name, <any>undefined, { urn })
            case "oci:index/schServiceConnector:SchServiceConnector":
                return new SchServiceConnector(name, <any>undefined, { urn })
            case "oci:index/serviceCatalogPrivateApplication:ServiceCatalogPrivateApplication":
                return new ServiceCatalogPrivateApplication(name, <any>undefined, { urn })
            case "oci:index/serviceCatalogServiceCatalog:ServiceCatalogServiceCatalog":
                return new ServiceCatalogServiceCatalog(name, <any>undefined, { urn })
            case "oci:index/serviceCatalogServiceCatalogAssociation:ServiceCatalogServiceCatalogAssociation":
                return new ServiceCatalogServiceCatalogAssociation(name, <any>undefined, { urn })
            case "oci:index/streamingConnectHarness:StreamingConnectHarness":
                return new StreamingConnectHarness(name, <any>undefined, { urn })
            case "oci:index/streamingStream:StreamingStream":
                return new StreamingStream(name, <any>undefined, { urn })
            case "oci:index/streamingStreamPool:StreamingStreamPool":
                return new StreamingStreamPool(name, <any>undefined, { urn })
            case "oci:index/vulnerabilityScanningHostScanRecipe:VulnerabilityScanningHostScanRecipe":
                return new VulnerabilityScanningHostScanRecipe(name, <any>undefined, { urn })
            case "oci:index/vulnerabilityScanningHostScanTarget:VulnerabilityScanningHostScanTarget":
                return new VulnerabilityScanningHostScanTarget(name, <any>undefined, { urn })
            case "oci:index/waasAddressList:WaasAddressList":
                return new WaasAddressList(name, <any>undefined, { urn })
            case "oci:index/waasCertificate:WaasCertificate":
                return new WaasCertificate(name, <any>undefined, { urn })
            case "oci:index/waasCustomProtectionRule:WaasCustomProtectionRule":
                return new WaasCustomProtectionRule(name, <any>undefined, { urn })
            case "oci:index/waasHttpRedirect:WaasHttpRedirect":
                return new WaasHttpRedirect(name, <any>undefined, { urn })
            case "oci:index/waasProtectionRule:WaasProtectionRule":
                return new WaasProtectionRule(name, <any>undefined, { urn })
            case "oci:index/waasPurgeCache:WaasPurgeCache":
                return new WaasPurgeCache(name, <any>undefined, { urn })
            case "oci:index/waasWaasPolicy:WaasWaasPolicy":
                return new WaasWaasPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "index/analyticsAnalyticsInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/analyticsAnalyticsInstancePrivateAccessChannel", _module)
pulumi.runtime.registerResourceModule("oci", "index/analyticsAnalyticsInstanceVanityUrl", _module)
pulumi.runtime.registerResourceModule("oci", "index/apigatewayApi", _module)
pulumi.runtime.registerResourceModule("oci", "index/apigatewayCertificate", _module)
pulumi.runtime.registerResourceModule("oci", "index/apigatewayDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "index/apigatewayGateway", _module)
pulumi.runtime.registerResourceModule("oci", "index/apmApmDomain", _module)
pulumi.runtime.registerResourceModule("oci", "index/apmSyntheticsMonitor", _module)
pulumi.runtime.registerResourceModule("oci", "index/apmSyntheticsScript", _module)
pulumi.runtime.registerResourceModule("oci", "index/artifactsContainerConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/artifactsContainerImageSignature", _module)
pulumi.runtime.registerResourceModule("oci", "index/artifactsContainerRepository", _module)
pulumi.runtime.registerResourceModule("oci", "index/artifactsGenericArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "index/artifactsRepository", _module)
pulumi.runtime.registerResourceModule("oci", "index/auditConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/autoscalingAutoScalingConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/bastionBastion", _module)
pulumi.runtime.registerResourceModule("oci", "index/bastionSession", _module)
pulumi.runtime.registerResourceModule("oci", "index/bdsAutoScalingConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/bdsBdsInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/blockchainBlockchainPlatform", _module)
pulumi.runtime.registerResourceModule("oci", "index/blockchainOsn", _module)
pulumi.runtime.registerResourceModule("oci", "index/blockchainPeer", _module)
pulumi.runtime.registerResourceModule("oci", "index/budgetAlertRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/budgetBudget", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardCloudGuardConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardDataMaskRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardDetectorRecipe", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardManagedList", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardResponderRecipe", _module)
pulumi.runtime.registerResourceModule("oci", "index/cloudGuardTarget", _module)
pulumi.runtime.registerResourceModule("oci", "index/containerengineCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/containerengineNodePool", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreAppCatalogListingResourceVersionAgreement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreAppCatalogSubscription", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreBootVolume", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreBootVolumeBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreClusterNetwork", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreComputeCapacityReservation", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreComputeImageCapabilitySchema", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreConsoleHistory", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreCpe", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreCrossConnect", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreCrossConnectGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDedicatedVmHost", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDefaultDhcpOptions", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDefaultRouteTable", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDefaultSecurityList", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDhcpOptions", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrg", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgAttachment", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgAttachmentManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgAttachmentsList", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgRouteDistribution", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgRouteDistributionStatement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgRouteTable", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreDrgRouteTableRouteRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreImage", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInstanceConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInstanceConsoleConnection", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInstancePool", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInstancePoolInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreInternetGateway", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreIpsec", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreIpsecConnectionTunnelManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreIpv6", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreListingResourceVersionAgreement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreLocalPeeringGateway", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreNatGateway", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreNetworkSecurityGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreNetworkSecurityGroupSecurityRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/corePrivateIp", _module)
pulumi.runtime.registerResourceModule("oci", "index/corePublicIp", _module)
pulumi.runtime.registerResourceModule("oci", "index/corePublicIpPool", _module)
pulumi.runtime.registerResourceModule("oci", "index/corePublicIpPoolCapacity", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreRemotePeeringConnection", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreRouteTable", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreRouteTableAttachment", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreSecurityList", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreServiceGateway", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreShapeManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreSubnet", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVcn", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVirtualCircuit", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVirtualNetwork", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVlan", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVnicAttachment", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolume", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeAttachment", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeBackupPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeBackupPolicyAssignment", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/coreVolumeGroupBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataSafeDataSafeConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataSafeDataSafePrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataSafeOnPremConnector", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataSafeTargetDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousContainerDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousContainerDatabaseDataguardAssociationOperation", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousDatabaseBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousDatabaseInstanceWalletManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousDatabaseRegionalWalletManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousDatabaseWallet", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseAutonomousVmCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseBackupDestination", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseCloudExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseCloudVmCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDataGuardAssociation", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDatabaseSoftwareImage", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDatabaseUpgrade", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDbHome", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDbNodeConsoleConnection", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseDbSystem", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExadataInfrastructureStorage", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExadataIormConfig", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalContainerDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalContainerDatabaseManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalDatabaseConnector", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalNonContainerDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalNonContainerDatabaseManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalNonContainerDatabaseOperationsInsightsManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalPluggableDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalPluggableDatabaseManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseExternalPluggableDatabaseOperationsInsightsManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseKeyStore", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMaintenanceRun", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseManagementManagedDatabaseGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseManagementManagedDatabasesChangeDatabaseParameter", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseManagementManagedDatabasesResetDatabaseParameter", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMigration", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMigrationAgent", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMigrationConnection", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMigrationJob", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseMigrationMigration", _module)
pulumi.runtime.registerResourceModule("oci", "index/databasePluggableDatabase", _module)
pulumi.runtime.registerResourceModule("oci", "index/databasePluggableDatabasesLocalClone", _module)
pulumi.runtime.registerResourceModule("oci", "index/databasePluggableDatabasesRemoteClone", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseVmCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/databaseVmClusterNetwork", _module)
pulumi.runtime.registerResourceModule("oci", "index/datacatalogCatalog", _module)
pulumi.runtime.registerResourceModule("oci", "index/datacatalogCatalogPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "index/datacatalogConnection", _module)
pulumi.runtime.registerResourceModule("oci", "index/datacatalogDataAsset", _module)
pulumi.runtime.registerResourceModule("oci", "index/datacatalogMetastore", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataflowApplication", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataflowInvokeRun", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataflowPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "index/dataintegrationWorkspace", _module)
pulumi.runtime.registerResourceModule("oci", "index/datascienceModel", _module)
pulumi.runtime.registerResourceModule("oci", "index/datascienceModelDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "index/datascienceModelProvenance", _module)
pulumi.runtime.registerResourceModule("oci", "index/datascienceNotebookSession", _module)
pulumi.runtime.registerResourceModule("oci", "index/datascienceProject", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsDeployArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsDeployEnvironment", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsDeployPipeline", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsDeployStage", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "index/devopsProject", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsRecord", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsResolver", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsResolverEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsRrset", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsSteeringPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsSteeringPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsTsigKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsView", _module)
pulumi.runtime.registerResourceModule("oci", "index/dnsZone", _module)
pulumi.runtime.registerResourceModule("oci", "index/emailDkim", _module)
pulumi.runtime.registerResourceModule("oci", "index/emailEmailDomain", _module)
pulumi.runtime.registerResourceModule("oci", "index/emailSender", _module)
pulumi.runtime.registerResourceModule("oci", "index/emailSuppression", _module)
pulumi.runtime.registerResourceModule("oci", "index/eventsRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/fileStorageExport", _module)
pulumi.runtime.registerResourceModule("oci", "index/fileStorageExportSet", _module)
pulumi.runtime.registerResourceModule("oci", "index/fileStorageFileSystem", _module)
pulumi.runtime.registerResourceModule("oci", "index/fileStorageMountTarget", _module)
pulumi.runtime.registerResourceModule("oci", "index/fileStorageSnapshot", _module)
pulumi.runtime.registerResourceModule("oci", "index/functionsApplication", _module)
pulumi.runtime.registerResourceModule("oci", "index/functionsFunction", _module)
pulumi.runtime.registerResourceModule("oci", "index/functionsInvokeFunction", _module)
pulumi.runtime.registerResourceModule("oci", "index/genericArtifactsContentArtifactByPath", _module)
pulumi.runtime.registerResourceModule("oci", "index/goldenGateDatabaseRegistration", _module)
pulumi.runtime.registerResourceModule("oci", "index/goldenGateDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "index/goldenGateDeploymentBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/healthChecksHttpMonitor", _module)
pulumi.runtime.registerResourceModule("oci", "index/healthChecksHttpProbe", _module)
pulumi.runtime.registerResourceModule("oci", "index/healthChecksPingMonitor", _module)
pulumi.runtime.registerResourceModule("oci", "index/healthChecksPingProbe", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityApiKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityAuthToken", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityAuthenticationPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityCompartment", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityCustomerSecretKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityDynamicGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityIdentityProvider", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityIdpGroupMapping", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityNetworkSource", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/identitySmtpCredential", _module)
pulumi.runtime.registerResourceModule("oci", "index/identitySwiftPassword", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityTag", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityTagDefault", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityTagNamespace", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityUiPassword", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityUser", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityUserCapabilitiesManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/identityUserGroupMembership", _module)
pulumi.runtime.registerResourceModule("oci", "index/integrationIntegrationInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/jmsFleet", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsEncryptedData", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsGeneratedKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsKeyVersion", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsSign", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsVault", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsVaultReplication", _module)
pulumi.runtime.registerResourceModule("oci", "index/kmsVerify", _module)
pulumi.runtime.registerResourceModule("oci", "index/limitsQuota", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancer", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerBackend", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerBackendSet", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerCertificate", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerHostname", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerListener", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerLoadBalancer", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerLoadBalancerRoutingPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerPathRouteSet", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerRuleSet", _module)
pulumi.runtime.registerResourceModule("oci", "index/loadBalancerSslCipherSuite", _module)
pulumi.runtime.registerResourceModule("oci", "index/logAnalyticsLogAnalyticsEntity", _module)
pulumi.runtime.registerResourceModule("oci", "index/logAnalyticsLogAnalyticsLogGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/logAnalyticsLogAnalyticsObjectCollectionRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/logAnalyticsNamespace", _module)
pulumi.runtime.registerResourceModule("oci", "index/loggingLog", _module)
pulumi.runtime.registerResourceModule("oci", "index/loggingLogGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/loggingLogSavedSearch", _module)
pulumi.runtime.registerResourceModule("oci", "index/loggingUnifiedAgentConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "index/managementAgentManagementAgent", _module)
pulumi.runtime.registerResourceModule("oci", "index/managementAgentManagementAgentInstallKey", _module)
pulumi.runtime.registerResourceModule("oci", "index/managementDashboardManagementDashboardsImport", _module)
pulumi.runtime.registerResourceModule("oci", "index/marketplaceAcceptedAgreement", _module)
pulumi.runtime.registerResourceModule("oci", "index/marketplaceListingPackageAgreement", _module)
pulumi.runtime.registerResourceModule("oci", "index/marketplacePublication", _module)
pulumi.runtime.registerResourceModule("oci", "index/meteringComputationCustomTable", _module)
pulumi.runtime.registerResourceModule("oci", "index/meteringComputationQuery", _module)
pulumi.runtime.registerResourceModule("oci", "index/meteringComputationUsage", _module)
pulumi.runtime.registerResourceModule("oci", "index/monitoringAlarm", _module)
pulumi.runtime.registerResourceModule("oci", "index/mysqlAnalyticsCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/mysqlChannel", _module)
pulumi.runtime.registerResourceModule("oci", "index/mysqlHeatWaveCluster", _module)
pulumi.runtime.registerResourceModule("oci", "index/mysqlMysqlBackup", _module)
pulumi.runtime.registerResourceModule("oci", "index/mysqlMysqlDbSystem", _module)
pulumi.runtime.registerResourceModule("oci", "index/networkLoadBalancerBackend", _module)
pulumi.runtime.registerResourceModule("oci", "index/networkLoadBalancerBackendSet", _module)
pulumi.runtime.registerResourceModule("oci", "index/networkLoadBalancerListener", _module)
pulumi.runtime.registerResourceModule("oci", "index/networkLoadBalancerNetworkLoadBalancer", _module)
pulumi.runtime.registerResourceModule("oci", "index/nosqlIndex", _module)
pulumi.runtime.registerResourceModule("oci", "index/nosqlTable", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstorageBucket", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstorageNamespaceMetadata", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstorageObject", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstorageObjectLifecyclePolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstoragePreauthrequest", _module)
pulumi.runtime.registerResourceModule("oci", "index/objectstorageReplicationPolicy", _module)
pulumi.runtime.registerResourceModule("oci", "index/oceOceInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/ocvpEsxiHost", _module)
pulumi.runtime.registerResourceModule("oci", "index/ocvpSddc", _module)
pulumi.runtime.registerResourceModule("oci", "index/odaOdaInstance", _module)
pulumi.runtime.registerResourceModule("oci", "index/onsNotificationTopic", _module)
pulumi.runtime.registerResourceModule("oci", "index/onsSubscription", _module)
pulumi.runtime.registerResourceModule("oci", "index/opsiDatabaseInsight", _module)
pulumi.runtime.registerResourceModule("oci", "index/opsiEnterpriseManagerBridge", _module)
pulumi.runtime.registerResourceModule("oci", "index/opsiHostInsight", _module)
pulumi.runtime.registerResourceModule("oci", "index/optimizerEnrollmentStatus", _module)
pulumi.runtime.registerResourceModule("oci", "index/optimizerProfile", _module)
pulumi.runtime.registerResourceModule("oci", "index/optimizerRecommendation", _module)
pulumi.runtime.registerResourceModule("oci", "index/optimizerResourceAction", _module)
pulumi.runtime.registerResourceModule("oci", "index/osmanagementManagedInstanceGroup", _module)
pulumi.runtime.registerResourceModule("oci", "index/osmanagementManagedInstanceManagement", _module)
pulumi.runtime.registerResourceModule("oci", "index/osmanagementSoftwareSource", _module)
pulumi.runtime.registerResourceModule("oci", "index/schServiceConnector", _module)
pulumi.runtime.registerResourceModule("oci", "index/serviceCatalogPrivateApplication", _module)
pulumi.runtime.registerResourceModule("oci", "index/serviceCatalogServiceCatalog", _module)
pulumi.runtime.registerResourceModule("oci", "index/serviceCatalogServiceCatalogAssociation", _module)
pulumi.runtime.registerResourceModule("oci", "index/streamingConnectHarness", _module)
pulumi.runtime.registerResourceModule("oci", "index/streamingStream", _module)
pulumi.runtime.registerResourceModule("oci", "index/streamingStreamPool", _module)
pulumi.runtime.registerResourceModule("oci", "index/vulnerabilityScanningHostScanRecipe", _module)
pulumi.runtime.registerResourceModule("oci", "index/vulnerabilityScanningHostScanTarget", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasAddressList", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasCertificate", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasCustomProtectionRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasHttpRedirect", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasProtectionRule", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasPurgeCache", _module)
pulumi.runtime.registerResourceModule("oci", "index/waasWaasPolicy", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("oci", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:oci") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
