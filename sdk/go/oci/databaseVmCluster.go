// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vm Cluster resource in Oracle Cloud Infrastructure Database service.
//
// Creates an Exadata Cloud@Customer VM cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseVmCluster(ctx, "testVmCluster", &oci.DatabaseVmClusterArgs{
// 			CompartmentId:           pulumi.Any(_var.Compartment_id),
// 			CpuCoreCount:            pulumi.Any(_var.Vm_cluster_cpu_core_count),
// 			DisplayName:             pulumi.Any(_var.Vm_cluster_display_name),
// 			ExadataInfrastructureId: pulumi.Any(oci_database_exadata_infrastructure.Test_exadata_infrastructure.Id),
// 			GiVersion:               pulumi.Any(_var.Vm_cluster_gi_version),
// 			SshPublicKeys:           pulumi.Any(_var.Vm_cluster_ssh_public_keys),
// 			VmClusterNetworkId:      pulumi.Any(oci_database_vm_cluster_network.Test_vm_cluster_network.Id),
// 			DataStorageSizeInTbs:    pulumi.Any(_var.Vm_cluster_data_storage_size_in_tbs),
// 			DbNodeStorageSizeInGbs:  pulumi.Any(_var.Vm_cluster_db_node_storage_size_in_gbs),
// 			DefinedTags:             pulumi.Any(_var.Vm_cluster_defined_tags),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsLocalBackupEnabled:     pulumi.Any(_var.Vm_cluster_is_local_backup_enabled),
// 			IsSparseDiskgroupEnabled: pulumi.Any(_var.Vm_cluster_is_sparse_diskgroup_enabled),
// 			LicenseModel:             pulumi.Any(_var.Vm_cluster_license_model),
// 			MemorySizeInGbs:          pulumi.Any(_var.Vm_cluster_memory_size_in_gbs),
// 			TimeZone:                 pulumi.Any(_var.Vm_cluster_time_zone),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VmClusters can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseVmCluster:DatabaseVmCluster test_vm_cluster "id"
// ```
type DatabaseVmCluster struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	CpuCoreCount  pulumi.IntOutput    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntOutput `pulumi:"cpusEnabled"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringOutput `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringOutput `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolOutput `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolOutput `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringOutput `pulumi:"lastPatchHistoryEntryId"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayOutput `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion pulumi.StringOutput `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringOutput `pulumi:"vmClusterNetworkId"`
}

// NewDatabaseVmCluster registers a new resource with the given unique name, arguments, and options.
func NewDatabaseVmCluster(ctx *pulumi.Context,
	name string, args *DatabaseVmClusterArgs, opts ...pulumi.ResourceOption) (*DatabaseVmCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.CpuCoreCount == nil {
		return nil, errors.New("invalid value for required argument 'CpuCoreCount'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'ExadataInfrastructureId'")
	}
	if args.GiVersion == nil {
		return nil, errors.New("invalid value for required argument 'GiVersion'")
	}
	if args.SshPublicKeys == nil {
		return nil, errors.New("invalid value for required argument 'SshPublicKeys'")
	}
	if args.VmClusterNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'VmClusterNetworkId'")
	}
	var resource DatabaseVmCluster
	err := ctx.RegisterResource("oci:index/databaseVmCluster:DatabaseVmCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseVmCluster gets an existing DatabaseVmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseVmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseVmClusterState, opts ...pulumi.ResourceOption) (*DatabaseVmCluster, error) {
	var resource DatabaseVmCluster
	err := ctx.ReadResource("oci:index/databaseVmCluster:DatabaseVmCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseVmCluster resources.
type databaseVmClusterState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	CpuCoreCount  *int    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled *int `pulumi:"cpusEnabled"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId *string `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion *string `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId *string `pulumi:"lastPatchHistoryEntryId"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel *string `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape *string `pulumi:"shape"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State *string `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion *string `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId *string `pulumi:"vmClusterNetworkId"`
}

type DatabaseVmClusterState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	CpuCoreCount  pulumi.IntPtrInput
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntPtrInput
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringPtrInput
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringPtrInput
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringPtrInput
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput
	// The current state of the VM cluster.
	State pulumi.StringPtrInput
	// Operating system version of the image.
	SystemVersion pulumi.StringPtrInput
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringPtrInput
}

func (DatabaseVmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseVmClusterState)(nil)).Elem()
}

type databaseVmClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	CpuCoreCount  int    `pulumi:"cpuCoreCount"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion string `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel *string `pulumi:"licenseModel"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId string `pulumi:"vmClusterNetworkId"`
}

// The set of arguments for constructing a DatabaseVmCluster resource.
type DatabaseVmClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	CpuCoreCount  pulumi.IntInput
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringInput
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringPtrInput
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringInput
}

func (DatabaseVmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseVmClusterArgs)(nil)).Elem()
}

type DatabaseVmClusterInput interface {
	pulumi.Input

	ToDatabaseVmClusterOutput() DatabaseVmClusterOutput
	ToDatabaseVmClusterOutputWithContext(ctx context.Context) DatabaseVmClusterOutput
}

func (*DatabaseVmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVmCluster)(nil))
}

func (i *DatabaseVmCluster) ToDatabaseVmClusterOutput() DatabaseVmClusterOutput {
	return i.ToDatabaseVmClusterOutputWithContext(context.Background())
}

func (i *DatabaseVmCluster) ToDatabaseVmClusterOutputWithContext(ctx context.Context) DatabaseVmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVmClusterOutput)
}

func (i *DatabaseVmCluster) ToDatabaseVmClusterPtrOutput() DatabaseVmClusterPtrOutput {
	return i.ToDatabaseVmClusterPtrOutputWithContext(context.Background())
}

func (i *DatabaseVmCluster) ToDatabaseVmClusterPtrOutputWithContext(ctx context.Context) DatabaseVmClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVmClusterPtrOutput)
}

type DatabaseVmClusterPtrInput interface {
	pulumi.Input

	ToDatabaseVmClusterPtrOutput() DatabaseVmClusterPtrOutput
	ToDatabaseVmClusterPtrOutputWithContext(ctx context.Context) DatabaseVmClusterPtrOutput
}

type databaseVmClusterPtrType DatabaseVmClusterArgs

func (*databaseVmClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseVmCluster)(nil))
}

func (i *databaseVmClusterPtrType) ToDatabaseVmClusterPtrOutput() DatabaseVmClusterPtrOutput {
	return i.ToDatabaseVmClusterPtrOutputWithContext(context.Background())
}

func (i *databaseVmClusterPtrType) ToDatabaseVmClusterPtrOutputWithContext(ctx context.Context) DatabaseVmClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVmClusterPtrOutput)
}

// DatabaseVmClusterArrayInput is an input type that accepts DatabaseVmClusterArray and DatabaseVmClusterArrayOutput values.
// You can construct a concrete instance of `DatabaseVmClusterArrayInput` via:
//
//          DatabaseVmClusterArray{ DatabaseVmClusterArgs{...} }
type DatabaseVmClusterArrayInput interface {
	pulumi.Input

	ToDatabaseVmClusterArrayOutput() DatabaseVmClusterArrayOutput
	ToDatabaseVmClusterArrayOutputWithContext(context.Context) DatabaseVmClusterArrayOutput
}

type DatabaseVmClusterArray []DatabaseVmClusterInput

func (DatabaseVmClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseVmCluster)(nil)).Elem()
}

func (i DatabaseVmClusterArray) ToDatabaseVmClusterArrayOutput() DatabaseVmClusterArrayOutput {
	return i.ToDatabaseVmClusterArrayOutputWithContext(context.Background())
}

func (i DatabaseVmClusterArray) ToDatabaseVmClusterArrayOutputWithContext(ctx context.Context) DatabaseVmClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVmClusterArrayOutput)
}

// DatabaseVmClusterMapInput is an input type that accepts DatabaseVmClusterMap and DatabaseVmClusterMapOutput values.
// You can construct a concrete instance of `DatabaseVmClusterMapInput` via:
//
//          DatabaseVmClusterMap{ "key": DatabaseVmClusterArgs{...} }
type DatabaseVmClusterMapInput interface {
	pulumi.Input

	ToDatabaseVmClusterMapOutput() DatabaseVmClusterMapOutput
	ToDatabaseVmClusterMapOutputWithContext(context.Context) DatabaseVmClusterMapOutput
}

type DatabaseVmClusterMap map[string]DatabaseVmClusterInput

func (DatabaseVmClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseVmCluster)(nil)).Elem()
}

func (i DatabaseVmClusterMap) ToDatabaseVmClusterMapOutput() DatabaseVmClusterMapOutput {
	return i.ToDatabaseVmClusterMapOutputWithContext(context.Background())
}

func (i DatabaseVmClusterMap) ToDatabaseVmClusterMapOutputWithContext(ctx context.Context) DatabaseVmClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVmClusterMapOutput)
}

type DatabaseVmClusterOutput struct {
	*pulumi.OutputState
}

func (DatabaseVmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVmCluster)(nil))
}

func (o DatabaseVmClusterOutput) ToDatabaseVmClusterOutput() DatabaseVmClusterOutput {
	return o
}

func (o DatabaseVmClusterOutput) ToDatabaseVmClusterOutputWithContext(ctx context.Context) DatabaseVmClusterOutput {
	return o
}

func (o DatabaseVmClusterOutput) ToDatabaseVmClusterPtrOutput() DatabaseVmClusterPtrOutput {
	return o.ToDatabaseVmClusterPtrOutputWithContext(context.Background())
}

func (o DatabaseVmClusterOutput) ToDatabaseVmClusterPtrOutputWithContext(ctx context.Context) DatabaseVmClusterPtrOutput {
	return o.ApplyT(func(v DatabaseVmCluster) *DatabaseVmCluster {
		return &v
	}).(DatabaseVmClusterPtrOutput)
}

type DatabaseVmClusterPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseVmClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseVmCluster)(nil))
}

func (o DatabaseVmClusterPtrOutput) ToDatabaseVmClusterPtrOutput() DatabaseVmClusterPtrOutput {
	return o
}

func (o DatabaseVmClusterPtrOutput) ToDatabaseVmClusterPtrOutputWithContext(ctx context.Context) DatabaseVmClusterPtrOutput {
	return o
}

type DatabaseVmClusterArrayOutput struct{ *pulumi.OutputState }

func (DatabaseVmClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVmCluster)(nil))
}

func (o DatabaseVmClusterArrayOutput) ToDatabaseVmClusterArrayOutput() DatabaseVmClusterArrayOutput {
	return o
}

func (o DatabaseVmClusterArrayOutput) ToDatabaseVmClusterArrayOutputWithContext(ctx context.Context) DatabaseVmClusterArrayOutput {
	return o
}

func (o DatabaseVmClusterArrayOutput) Index(i pulumi.IntInput) DatabaseVmClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseVmCluster {
		return vs[0].([]DatabaseVmCluster)[vs[1].(int)]
	}).(DatabaseVmClusterOutput)
}

type DatabaseVmClusterMapOutput struct{ *pulumi.OutputState }

func (DatabaseVmClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseVmCluster)(nil))
}

func (o DatabaseVmClusterMapOutput) ToDatabaseVmClusterMapOutput() DatabaseVmClusterMapOutput {
	return o
}

func (o DatabaseVmClusterMapOutput) ToDatabaseVmClusterMapOutputWithContext(ctx context.Context) DatabaseVmClusterMapOutput {
	return o
}

func (o DatabaseVmClusterMapOutput) MapIndex(k pulumi.StringInput) DatabaseVmClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseVmCluster {
		return vs[0].(map[string]DatabaseVmCluster)[vs[1].(string)]
	}).(DatabaseVmClusterOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseVmClusterOutput{})
	pulumi.RegisterOutputType(DatabaseVmClusterPtrOutput{})
	pulumi.RegisterOutputType(DatabaseVmClusterArrayOutput{})
	pulumi.RegisterOutputType(DatabaseVmClusterMapOutput{})
}
