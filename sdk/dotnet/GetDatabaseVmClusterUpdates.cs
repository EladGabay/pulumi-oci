// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseVmClusterUpdates
    {
        /// <summary>
        /// This data source provides the list of Vm Cluster Updates in Oracle Cloud Infrastructure Database service.
        /// 
        /// Lists the maintenance updates that can be applied to the specified VM cluster. Applies to Exadata Cloud@Customer instances only.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVmClusterUpdates = Output.Create(Oci.GetDatabaseVmClusterUpdates.InvokeAsync(new Oci.GetDatabaseVmClusterUpdatesArgs
        ///         {
        ///             VmClusterId = oci_database_vm_cluster.Test_vm_cluster.Id,
        ///             State = @var.Vm_cluster_update_state,
        ///             UpdateType = @var.Vm_cluster_update_update_type,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseVmClusterUpdatesResult> InvokeAsync(GetDatabaseVmClusterUpdatesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseVmClusterUpdatesResult>("oci:index/getDatabaseVmClusterUpdates:GetDatabaseVmClusterUpdates", args ?? new GetDatabaseVmClusterUpdatesArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseVmClusterUpdatesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetDatabaseVmClusterUpdatesFilterArgs>? _filters;
        public List<Inputs.GetDatabaseVmClusterUpdatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseVmClusterUpdatesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        /// <summary>
        /// A filter to return only resources that match the given update type exactly.
        /// </summary>
        [Input("updateType")]
        public string? UpdateType { get; set; }

        /// <summary>
        /// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("vmClusterId", required: true)]
        public string VmClusterId { get; set; } = null!;

        public GetDatabaseVmClusterUpdatesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseVmClusterUpdatesResult
    {
        public readonly ImmutableArray<Outputs.GetDatabaseVmClusterUpdatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The current state of the maintenance update. Dependent on value of `lastAction`.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The type of VM cluster maintenance update.
        /// </summary>
        public readonly string? UpdateType;
        public readonly string VmClusterId;
        /// <summary>
        /// The list of vm_cluster_updates.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseVmClusterUpdatesVmClusterUpdateResult> VmClusterUpdates;

        [OutputConstructor]
        private GetDatabaseVmClusterUpdatesResult(
            ImmutableArray<Outputs.GetDatabaseVmClusterUpdatesFilterResult> filters,

            string id,

            string? state,

            string? updateType,

            string vmClusterId,

            ImmutableArray<Outputs.GetDatabaseVmClusterUpdatesVmClusterUpdateResult> vmClusterUpdates)
        {
            Filters = filters;
            Id = id;
            State = state;
            UpdateType = updateType;
            VmClusterId = vmClusterId;
            VmClusterUpdates = vmClusterUpdates;
        }
    }
}
