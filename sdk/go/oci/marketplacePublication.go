// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Publication resource in Oracle Cloud Infrastructure Marketplace service.
//
// Creates a publication of the given type with an optional default package
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewMarketplacePublication(ctx, "testPublication", &oci.MarketplacePublicationArgs{
// 			CompartmentId:           pulumi.Any(_var.Compartment_id),
// 			IsAgreementAcknowledged: pulumi.Any(_var.Publication_is_agreement_acknowledged),
// 			ListingType:             pulumi.Any(_var.Publication_listing_type),
// 			PackageDetails: &MarketplacePublicationPackageDetailsArgs{
// 				Eulas: MarketplacePublicationPackageDetailsEulaArray{
// 					&MarketplacePublicationPackageDetailsEulaArgs{
// 						EulaType:    pulumi.Any(_var.Publication_package_details_eula_eula_type),
// 						LicenseText: pulumi.Any(_var.Publication_package_details_eula_license_text),
// 					},
// 				},
// 				OperatingSystem: &MarketplacePublicationPackageDetailsOperatingSystemArgs{
// 					Name: pulumi.Any(_var.Publication_package_details_operating_system_name),
// 				},
// 				PackageType:    pulumi.Any(_var.Publication_package_details_package_type),
// 				PackageVersion: pulumi.Any(_var.Publication_package_details_package_version),
// 				ImageId:        pulumi.Any(oci_core_image.Test_image.Id),
// 			},
// 			ShortDescription: pulumi.Any(_var.Publication_short_description),
// 			SupportContacts: MarketplacePublicationSupportContactArray{
// 				&MarketplacePublicationSupportContactArgs{
// 					Email:   pulumi.Any(_var.Publication_support_contacts_email),
// 					Name:    pulumi.Any(_var.Publication_support_contacts_name),
// 					Phone:   pulumi.Any(_var.Publication_support_contacts_phone),
// 					Subject: pulumi.Any(_var.Publication_support_contacts_subject),
// 				},
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			LongDescription: pulumi.Any(_var.Publication_long_description),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Publications can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/marketplacePublication:MarketplacePublication test_publication "id"
// ```
type MarketplacePublication struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icon MarketplacePublicationIconOutput `pulumi:"icon"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolOutput `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType pulumi.StringOutput `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringOutput `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name pulumi.StringOutput `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails MarketplacePublicationPackageDetailsOutput `pulumi:"packageDetails"`
	// Type of the artifact of the listing
	PackageType pulumi.StringOutput `pulumi:"packageType"`
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringOutput `pulumi:"shortDescription"`
	// The state of the listing in its lifecycle
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts MarketplacePublicationSupportContactArrayOutput `pulumi:"supportContacts"`
	// List of operating systems supprted.
	SupportedOperatingSystems MarketplacePublicationSupportedOperatingSystemArrayOutput `pulumi:"supportedOperatingSystems"`
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewMarketplacePublication registers a new resource with the given unique name, arguments, and options.
func NewMarketplacePublication(ctx *pulumi.Context,
	name string, args *MarketplacePublicationArgs, opts ...pulumi.ResourceOption) (*MarketplacePublication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.IsAgreementAcknowledged == nil {
		return nil, errors.New("invalid value for required argument 'IsAgreementAcknowledged'")
	}
	if args.ListingType == nil {
		return nil, errors.New("invalid value for required argument 'ListingType'")
	}
	if args.PackageDetails == nil {
		return nil, errors.New("invalid value for required argument 'PackageDetails'")
	}
	if args.ShortDescription == nil {
		return nil, errors.New("invalid value for required argument 'ShortDescription'")
	}
	if args.SupportContacts == nil {
		return nil, errors.New("invalid value for required argument 'SupportContacts'")
	}
	var resource MarketplacePublication
	err := ctx.RegisterResource("oci:index/marketplacePublication:MarketplacePublication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMarketplacePublication gets an existing MarketplacePublication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMarketplacePublication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MarketplacePublicationState, opts ...pulumi.ResourceOption) (*MarketplacePublication, error) {
	var resource MarketplacePublication
	err := ctx.ReadResource("oci:index/marketplacePublication:MarketplacePublication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MarketplacePublication resources.
type marketplacePublicationState struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icon *MarketplacePublicationIcon `pulumi:"icon"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged *bool `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType *string `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails *MarketplacePublicationPackageDetails `pulumi:"packageDetails"`
	// Type of the artifact of the listing
	PackageType *string `pulumi:"packageType"`
	// (Updatable) short description of the catalog listing
	ShortDescription *string `pulumi:"shortDescription"`
	// The state of the listing in its lifecycle
	State *string `pulumi:"state"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts []MarketplacePublicationSupportContact `pulumi:"supportContacts"`
	// List of operating systems supprted.
	SupportedOperatingSystems []MarketplacePublicationSupportedOperatingSystem `pulumi:"supportedOperatingSystems"`
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type MarketplacePublicationState struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The model for upload data for images and icons.
	Icon MarketplacePublicationIconPtrInput
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolPtrInput
	// In which catalog the listing should exist.
	ListingType pulumi.StringPtrInput
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for the properties of the package
	PackageDetails MarketplacePublicationPackageDetailsPtrInput
	// Type of the artifact of the listing
	PackageType pulumi.StringPtrInput
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringPtrInput
	// The state of the listing in its lifecycle
	State pulumi.StringPtrInput
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts MarketplacePublicationSupportContactArrayInput
	// List of operating systems supprted.
	SupportedOperatingSystems MarketplacePublicationSupportedOperatingSystemArrayInput
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (MarketplacePublicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*marketplacePublicationState)(nil)).Elem()
}

type marketplacePublicationArgs struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged bool `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType string `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails MarketplacePublicationPackageDetails `pulumi:"packageDetails"`
	// (Updatable) short description of the catalog listing
	ShortDescription string `pulumi:"shortDescription"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts []MarketplacePublicationSupportContact `pulumi:"supportContacts"`
}

// The set of arguments for constructing a MarketplacePublication resource.
type MarketplacePublicationArgs struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolInput
	// In which catalog the listing should exist.
	ListingType pulumi.StringInput
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for the properties of the package
	PackageDetails MarketplacePublicationPackageDetailsInput
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringInput
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts MarketplacePublicationSupportContactArrayInput
}

func (MarketplacePublicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*marketplacePublicationArgs)(nil)).Elem()
}

type MarketplacePublicationInput interface {
	pulumi.Input

	ToMarketplacePublicationOutput() MarketplacePublicationOutput
	ToMarketplacePublicationOutputWithContext(ctx context.Context) MarketplacePublicationOutput
}

func (*MarketplacePublication) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplacePublication)(nil))
}

func (i *MarketplacePublication) ToMarketplacePublicationOutput() MarketplacePublicationOutput {
	return i.ToMarketplacePublicationOutputWithContext(context.Background())
}

func (i *MarketplacePublication) ToMarketplacePublicationOutputWithContext(ctx context.Context) MarketplacePublicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplacePublicationOutput)
}

func (i *MarketplacePublication) ToMarketplacePublicationPtrOutput() MarketplacePublicationPtrOutput {
	return i.ToMarketplacePublicationPtrOutputWithContext(context.Background())
}

func (i *MarketplacePublication) ToMarketplacePublicationPtrOutputWithContext(ctx context.Context) MarketplacePublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplacePublicationPtrOutput)
}

type MarketplacePublicationPtrInput interface {
	pulumi.Input

	ToMarketplacePublicationPtrOutput() MarketplacePublicationPtrOutput
	ToMarketplacePublicationPtrOutputWithContext(ctx context.Context) MarketplacePublicationPtrOutput
}

type marketplacePublicationPtrType MarketplacePublicationArgs

func (*marketplacePublicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplacePublication)(nil))
}

func (i *marketplacePublicationPtrType) ToMarketplacePublicationPtrOutput() MarketplacePublicationPtrOutput {
	return i.ToMarketplacePublicationPtrOutputWithContext(context.Background())
}

func (i *marketplacePublicationPtrType) ToMarketplacePublicationPtrOutputWithContext(ctx context.Context) MarketplacePublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplacePublicationPtrOutput)
}

// MarketplacePublicationArrayInput is an input type that accepts MarketplacePublicationArray and MarketplacePublicationArrayOutput values.
// You can construct a concrete instance of `MarketplacePublicationArrayInput` via:
//
//          MarketplacePublicationArray{ MarketplacePublicationArgs{...} }
type MarketplacePublicationArrayInput interface {
	pulumi.Input

	ToMarketplacePublicationArrayOutput() MarketplacePublicationArrayOutput
	ToMarketplacePublicationArrayOutputWithContext(context.Context) MarketplacePublicationArrayOutput
}

type MarketplacePublicationArray []MarketplacePublicationInput

func (MarketplacePublicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MarketplacePublication)(nil)).Elem()
}

func (i MarketplacePublicationArray) ToMarketplacePublicationArrayOutput() MarketplacePublicationArrayOutput {
	return i.ToMarketplacePublicationArrayOutputWithContext(context.Background())
}

func (i MarketplacePublicationArray) ToMarketplacePublicationArrayOutputWithContext(ctx context.Context) MarketplacePublicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplacePublicationArrayOutput)
}

// MarketplacePublicationMapInput is an input type that accepts MarketplacePublicationMap and MarketplacePublicationMapOutput values.
// You can construct a concrete instance of `MarketplacePublicationMapInput` via:
//
//          MarketplacePublicationMap{ "key": MarketplacePublicationArgs{...} }
type MarketplacePublicationMapInput interface {
	pulumi.Input

	ToMarketplacePublicationMapOutput() MarketplacePublicationMapOutput
	ToMarketplacePublicationMapOutputWithContext(context.Context) MarketplacePublicationMapOutput
}

type MarketplacePublicationMap map[string]MarketplacePublicationInput

func (MarketplacePublicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MarketplacePublication)(nil)).Elem()
}

func (i MarketplacePublicationMap) ToMarketplacePublicationMapOutput() MarketplacePublicationMapOutput {
	return i.ToMarketplacePublicationMapOutputWithContext(context.Background())
}

func (i MarketplacePublicationMap) ToMarketplacePublicationMapOutputWithContext(ctx context.Context) MarketplacePublicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplacePublicationMapOutput)
}

type MarketplacePublicationOutput struct {
	*pulumi.OutputState
}

func (MarketplacePublicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplacePublication)(nil))
}

func (o MarketplacePublicationOutput) ToMarketplacePublicationOutput() MarketplacePublicationOutput {
	return o
}

func (o MarketplacePublicationOutput) ToMarketplacePublicationOutputWithContext(ctx context.Context) MarketplacePublicationOutput {
	return o
}

func (o MarketplacePublicationOutput) ToMarketplacePublicationPtrOutput() MarketplacePublicationPtrOutput {
	return o.ToMarketplacePublicationPtrOutputWithContext(context.Background())
}

func (o MarketplacePublicationOutput) ToMarketplacePublicationPtrOutputWithContext(ctx context.Context) MarketplacePublicationPtrOutput {
	return o.ApplyT(func(v MarketplacePublication) *MarketplacePublication {
		return &v
	}).(MarketplacePublicationPtrOutput)
}

type MarketplacePublicationPtrOutput struct {
	*pulumi.OutputState
}

func (MarketplacePublicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplacePublication)(nil))
}

func (o MarketplacePublicationPtrOutput) ToMarketplacePublicationPtrOutput() MarketplacePublicationPtrOutput {
	return o
}

func (o MarketplacePublicationPtrOutput) ToMarketplacePublicationPtrOutputWithContext(ctx context.Context) MarketplacePublicationPtrOutput {
	return o
}

type MarketplacePublicationArrayOutput struct{ *pulumi.OutputState }

func (MarketplacePublicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MarketplacePublication)(nil))
}

func (o MarketplacePublicationArrayOutput) ToMarketplacePublicationArrayOutput() MarketplacePublicationArrayOutput {
	return o
}

func (o MarketplacePublicationArrayOutput) ToMarketplacePublicationArrayOutputWithContext(ctx context.Context) MarketplacePublicationArrayOutput {
	return o
}

func (o MarketplacePublicationArrayOutput) Index(i pulumi.IntInput) MarketplacePublicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MarketplacePublication {
		return vs[0].([]MarketplacePublication)[vs[1].(int)]
	}).(MarketplacePublicationOutput)
}

type MarketplacePublicationMapOutput struct{ *pulumi.OutputState }

func (MarketplacePublicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MarketplacePublication)(nil))
}

func (o MarketplacePublicationMapOutput) ToMarketplacePublicationMapOutput() MarketplacePublicationMapOutput {
	return o
}

func (o MarketplacePublicationMapOutput) ToMarketplacePublicationMapOutputWithContext(ctx context.Context) MarketplacePublicationMapOutput {
	return o
}

func (o MarketplacePublicationMapOutput) MapIndex(k pulumi.StringInput) MarketplacePublicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MarketplacePublication {
		return vs[0].(map[string]MarketplacePublication)[vs[1].(string)]
	}).(MarketplacePublicationOutput)
}

func init() {
	pulumi.RegisterOutputType(MarketplacePublicationOutput{})
	pulumi.RegisterOutputType(MarketplacePublicationPtrOutput{})
	pulumi.RegisterOutputType(MarketplacePublicationArrayOutput{})
	pulumi.RegisterOutputType(MarketplacePublicationMapOutput{})
}
