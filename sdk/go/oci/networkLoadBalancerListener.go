// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Listener resource in Oracle Cloud Infrastructure Network Load Balancer service.
//
// Adds a listener to a network load balancer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewNetworkLoadBalancerListener(ctx, "testListener", &oci.NetworkLoadBalancerListenerArgs{
// 			DefaultBackendSetName: pulumi.Any(oci_network_load_balancer_backend_set.Test_backend_set.Name),
// 			NetworkLoadBalancerId: pulumi.Any(oci_network_load_balancer_network_load_balancer.Test_network_load_balancer.Id),
// 			Port:                  pulumi.Any(_var.Listener_port),
// 			Protocol:              pulumi.Any(_var.Listener_protocol),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Listeners can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/networkLoadBalancerListener:NetworkLoadBalancerListener test_listener "networkLoadBalancers/{networkLoadBalancerId}/listeners/{listenerName}"
// ```
type NetworkLoadBalancerListener struct {
	pulumi.CustomResourceState

	// (Updatable) The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName pulumi.StringOutput `pulumi:"defaultBackendSetName"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name pulumi.StringOutput `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringOutput `pulumi:"networkLoadBalancerId"`
	// (Updatable) The communication port for the listener.  Example: `80`
	Port pulumi.IntOutput `pulumi:"port"`
	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
	Protocol pulumi.StringOutput `pulumi:"protocol"`
}

// NewNetworkLoadBalancerListener registers a new resource with the given unique name, arguments, and options.
func NewNetworkLoadBalancerListener(ctx *pulumi.Context,
	name string, args *NetworkLoadBalancerListenerArgs, opts ...pulumi.ResourceOption) (*NetworkLoadBalancerListener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultBackendSetName == nil {
		return nil, errors.New("invalid value for required argument 'DefaultBackendSetName'")
	}
	if args.NetworkLoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkLoadBalancerId'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	var resource NetworkLoadBalancerListener
	err := ctx.RegisterResource("oci:index/networkLoadBalancerListener:NetworkLoadBalancerListener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkLoadBalancerListener gets an existing NetworkLoadBalancerListener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkLoadBalancerListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkLoadBalancerListenerState, opts ...pulumi.ResourceOption) (*NetworkLoadBalancerListener, error) {
	var resource NetworkLoadBalancerListener
	err := ctx.ReadResource("oci:index/networkLoadBalancerListener:NetworkLoadBalancerListener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkLoadBalancerListener resources.
type networkLoadBalancerListenerState struct {
	// (Updatable) The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName *string `pulumi:"defaultBackendSetName"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name *string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId *string `pulumi:"networkLoadBalancerId"`
	// (Updatable) The communication port for the listener.  Example: `80`
	Port *int `pulumi:"port"`
	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
	Protocol *string `pulumi:"protocol"`
}

type NetworkLoadBalancerListenerState struct {
	// (Updatable) The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName pulumi.StringPtrInput
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringPtrInput
	// (Updatable) The communication port for the listener.  Example: `80`
	Port pulumi.IntPtrInput
	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
	Protocol pulumi.StringPtrInput
}

func (NetworkLoadBalancerListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkLoadBalancerListenerState)(nil)).Elem()
}

type networkLoadBalancerListenerArgs struct {
	// (Updatable) The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName string `pulumi:"defaultBackendSetName"`
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name *string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId string `pulumi:"networkLoadBalancerId"`
	// (Updatable) The communication port for the listener.  Example: `80`
	Port int `pulumi:"port"`
	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
	Protocol string `pulumi:"protocol"`
}

// The set of arguments for constructing a NetworkLoadBalancerListener resource.
type NetworkLoadBalancerListenerArgs struct {
	// (Updatable) The name of the associated backend set.  Example: `exampleBackendSet`
	DefaultBackendSetName pulumi.StringInput
	// A friendly name for the listener. It must be unique and it cannot be changed.  Example: `exampleListener`
	Name pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
	NetworkLoadBalancerId pulumi.StringInput
	// (Updatable) The communication port for the listener.  Example: `80`
	Port pulumi.IntInput
	// (Updatable) The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
	Protocol pulumi.StringInput
}

func (NetworkLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkLoadBalancerListenerArgs)(nil)).Elem()
}

type NetworkLoadBalancerListenerInput interface {
	pulumi.Input

	ToNetworkLoadBalancerListenerOutput() NetworkLoadBalancerListenerOutput
	ToNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerOutput
}

func (*NetworkLoadBalancerListener) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerListener)(nil))
}

func (i *NetworkLoadBalancerListener) ToNetworkLoadBalancerListenerOutput() NetworkLoadBalancerListenerOutput {
	return i.ToNetworkLoadBalancerListenerOutputWithContext(context.Background())
}

func (i *NetworkLoadBalancerListener) ToNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerListenerOutput)
}

func (i *NetworkLoadBalancerListener) ToNetworkLoadBalancerListenerPtrOutput() NetworkLoadBalancerListenerPtrOutput {
	return i.ToNetworkLoadBalancerListenerPtrOutputWithContext(context.Background())
}

func (i *NetworkLoadBalancerListener) ToNetworkLoadBalancerListenerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerListenerPtrOutput)
}

type NetworkLoadBalancerListenerPtrInput interface {
	pulumi.Input

	ToNetworkLoadBalancerListenerPtrOutput() NetworkLoadBalancerListenerPtrOutput
	ToNetworkLoadBalancerListenerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerPtrOutput
}

type networkLoadBalancerListenerPtrType NetworkLoadBalancerListenerArgs

func (*networkLoadBalancerListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancerListener)(nil))
}

func (i *networkLoadBalancerListenerPtrType) ToNetworkLoadBalancerListenerPtrOutput() NetworkLoadBalancerListenerPtrOutput {
	return i.ToNetworkLoadBalancerListenerPtrOutputWithContext(context.Background())
}

func (i *networkLoadBalancerListenerPtrType) ToNetworkLoadBalancerListenerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerListenerPtrOutput)
}

// NetworkLoadBalancerListenerArrayInput is an input type that accepts NetworkLoadBalancerListenerArray and NetworkLoadBalancerListenerArrayOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerListenerArrayInput` via:
//
//          NetworkLoadBalancerListenerArray{ NetworkLoadBalancerListenerArgs{...} }
type NetworkLoadBalancerListenerArrayInput interface {
	pulumi.Input

	ToNetworkLoadBalancerListenerArrayOutput() NetworkLoadBalancerListenerArrayOutput
	ToNetworkLoadBalancerListenerArrayOutputWithContext(context.Context) NetworkLoadBalancerListenerArrayOutput
}

type NetworkLoadBalancerListenerArray []NetworkLoadBalancerListenerInput

func (NetworkLoadBalancerListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkLoadBalancerListener)(nil)).Elem()
}

func (i NetworkLoadBalancerListenerArray) ToNetworkLoadBalancerListenerArrayOutput() NetworkLoadBalancerListenerArrayOutput {
	return i.ToNetworkLoadBalancerListenerArrayOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerListenerArray) ToNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerListenerArrayOutput)
}

// NetworkLoadBalancerListenerMapInput is an input type that accepts NetworkLoadBalancerListenerMap and NetworkLoadBalancerListenerMapOutput values.
// You can construct a concrete instance of `NetworkLoadBalancerListenerMapInput` via:
//
//          NetworkLoadBalancerListenerMap{ "key": NetworkLoadBalancerListenerArgs{...} }
type NetworkLoadBalancerListenerMapInput interface {
	pulumi.Input

	ToNetworkLoadBalancerListenerMapOutput() NetworkLoadBalancerListenerMapOutput
	ToNetworkLoadBalancerListenerMapOutputWithContext(context.Context) NetworkLoadBalancerListenerMapOutput
}

type NetworkLoadBalancerListenerMap map[string]NetworkLoadBalancerListenerInput

func (NetworkLoadBalancerListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkLoadBalancerListener)(nil)).Elem()
}

func (i NetworkLoadBalancerListenerMap) ToNetworkLoadBalancerListenerMapOutput() NetworkLoadBalancerListenerMapOutput {
	return i.ToNetworkLoadBalancerListenerMapOutputWithContext(context.Background())
}

func (i NetworkLoadBalancerListenerMap) ToNetworkLoadBalancerListenerMapOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLoadBalancerListenerMapOutput)
}

type NetworkLoadBalancerListenerOutput struct {
	*pulumi.OutputState
}

func (NetworkLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLoadBalancerListener)(nil))
}

func (o NetworkLoadBalancerListenerOutput) ToNetworkLoadBalancerListenerOutput() NetworkLoadBalancerListenerOutput {
	return o
}

func (o NetworkLoadBalancerListenerOutput) ToNetworkLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerOutput {
	return o
}

func (o NetworkLoadBalancerListenerOutput) ToNetworkLoadBalancerListenerPtrOutput() NetworkLoadBalancerListenerPtrOutput {
	return o.ToNetworkLoadBalancerListenerPtrOutputWithContext(context.Background())
}

func (o NetworkLoadBalancerListenerOutput) ToNetworkLoadBalancerListenerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerPtrOutput {
	return o.ApplyT(func(v NetworkLoadBalancerListener) *NetworkLoadBalancerListener {
		return &v
	}).(NetworkLoadBalancerListenerPtrOutput)
}

type NetworkLoadBalancerListenerPtrOutput struct {
	*pulumi.OutputState
}

func (NetworkLoadBalancerListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLoadBalancerListener)(nil))
}

func (o NetworkLoadBalancerListenerPtrOutput) ToNetworkLoadBalancerListenerPtrOutput() NetworkLoadBalancerListenerPtrOutput {
	return o
}

func (o NetworkLoadBalancerListenerPtrOutput) ToNetworkLoadBalancerListenerPtrOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerPtrOutput {
	return o
}

type NetworkLoadBalancerListenerArrayOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkLoadBalancerListener)(nil))
}

func (o NetworkLoadBalancerListenerArrayOutput) ToNetworkLoadBalancerListenerArrayOutput() NetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o NetworkLoadBalancerListenerArrayOutput) ToNetworkLoadBalancerListenerArrayOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerArrayOutput {
	return o
}

func (o NetworkLoadBalancerListenerArrayOutput) Index(i pulumi.IntInput) NetworkLoadBalancerListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkLoadBalancerListener {
		return vs[0].([]NetworkLoadBalancerListener)[vs[1].(int)]
	}).(NetworkLoadBalancerListenerOutput)
}

type NetworkLoadBalancerListenerMapOutput struct{ *pulumi.OutputState }

func (NetworkLoadBalancerListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]NetworkLoadBalancerListener)(nil))
}

func (o NetworkLoadBalancerListenerMapOutput) ToNetworkLoadBalancerListenerMapOutput() NetworkLoadBalancerListenerMapOutput {
	return o
}

func (o NetworkLoadBalancerListenerMapOutput) ToNetworkLoadBalancerListenerMapOutputWithContext(ctx context.Context) NetworkLoadBalancerListenerMapOutput {
	return o
}

func (o NetworkLoadBalancerListenerMapOutput) MapIndex(k pulumi.StringInput) NetworkLoadBalancerListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) NetworkLoadBalancerListener {
		return vs[0].(map[string]NetworkLoadBalancerListener)[vs[1].(string)]
	}).(NetworkLoadBalancerListenerOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerListenerPtrOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerListenerArrayOutput{})
	pulumi.RegisterOutputType(NetworkLoadBalancerListenerMapOutput{})
}
