// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Target resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Creates a new Target
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCloudGuardTarget(ctx, "testTarget", &oci.CloudGuardTargetArgs{
// 			CompartmentId:      pulumi.Any(_var.Compartment_id),
// 			DisplayName:        pulumi.Any(_var.Target_display_name),
// 			TargetResourceId:   pulumi.Any(oci_cloud_guard_target_resource.Test_target_resource.Id),
// 			TargetResourceType: pulumi.Any(_var.Target_target_resource_type),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Target_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			State: pulumi.Any(_var.Target_state),
// 			TargetDetectorRecipes: CloudGuardTargetTargetDetectorRecipeArray{
// 				&CloudGuardTargetTargetDetectorRecipeArgs{
// 					DetectorRecipeId: pulumi.Any(oci_cloud_guard_detector_recipe.Test_detector_recipe.Id),
// 					DetectorRules: CloudGuardTargetTargetDetectorRecipeDetectorRuleArray{
// 						&CloudGuardTargetTargetDetectorRecipeDetectorRuleArgs{
// 							Details: &CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsArgs{
// 								ConditionGroups: CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{
// 									&CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{
// 										CompartmentId: pulumi.Any(_var.Compartment_id),
// 										Condition:     pulumi.Any(_var.Target_target_detector_recipes_detector_rules_details_condition_groups_condition),
// 									},
// 								},
// 							},
// 							DetectorRuleId: pulumi.Any(oci_events_rule.Test_rule.Id),
// 						},
// 					},
// 				},
// 			},
// 			TargetResponderRecipes: CloudGuardTargetTargetResponderRecipeArray{
// 				&CloudGuardTargetTargetResponderRecipeArgs{
// 					ResponderRecipeId: pulumi.Any(oci_cloud_guard_responder_recipe.Test_responder_recipe.Id),
// 					ResponderRules: CloudGuardTargetTargetResponderRecipeResponderRuleArray{
// 						&CloudGuardTargetTargetResponderRecipeResponderRuleArgs{
// 							Details: &CloudGuardTargetTargetResponderRecipeResponderRuleDetailsArgs{
// 								Condition: pulumi.Any(_var.Target_target_responder_recipes_responder_rules_details_condition),
// 								Configurations: CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray{
// 									&CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{
// 										ConfigKey: pulumi.Any(_var.Target_target_responder_recipes_responder_rules_details_configurations_config_key),
// 										Name:      pulumi.Any(_var.Target_target_responder_recipes_responder_rules_details_configurations_name),
// 										Value:     pulumi.Any(_var.Target_target_responder_recipes_responder_rules_details_configurations_value),
// 									},
// 								},
// 								Mode: pulumi.Any(_var.Target_target_responder_recipes_responder_rules_details_mode),
// 							},
// 							ResponderRuleId: pulumi.Any(oci_events_rule.Test_rule.Id),
// 						},
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Targets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/cloudGuardTarget:CloudGuardTarget test_target "id"
// ```
type CloudGuardTarget struct {
	pulumi.CustomResourceState

	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The target description.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// List of inherited compartments
	InheritedByCompartments pulumi.StringArrayOutput `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringOutput `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount pulumi.IntOutput `pulumi:"recipeCount"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// (Updatable) List of detector recipes to associate with target
	TargetDetectorRecipes CloudGuardTargetTargetDetectorRecipeArrayOutput `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId pulumi.StringOutput `pulumi:"targetResourceId"`
	// possible type of targets(compartment/HCMCloud/ERPCloud)
	TargetResourceType pulumi.StringOutput `pulumi:"targetResourceType"`
	// (Updatable) List of responder recipes to associate with target
	TargetResponderRecipes CloudGuardTargetTargetResponderRecipeArrayOutput `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewCloudGuardTarget registers a new resource with the given unique name, arguments, and options.
func NewCloudGuardTarget(ctx *pulumi.Context,
	name string, args *CloudGuardTargetArgs, opts ...pulumi.ResourceOption) (*CloudGuardTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.TargetResourceId == nil {
		return nil, errors.New("invalid value for required argument 'TargetResourceId'")
	}
	if args.TargetResourceType == nil {
		return nil, errors.New("invalid value for required argument 'TargetResourceType'")
	}
	var resource CloudGuardTarget
	err := ctx.RegisterResource("oci:index/cloudGuardTarget:CloudGuardTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudGuardTarget gets an existing CloudGuardTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudGuardTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudGuardTargetState, opts ...pulumi.ResourceOption) (*CloudGuardTarget, error) {
	var resource CloudGuardTarget
	err := ctx.ReadResource("oci:index/cloudGuardTarget:CloudGuardTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudGuardTarget resources.
type cloudGuardTargetState struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// List of inherited compartments
	InheritedByCompartments []string `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails *string `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount *int `pulumi:"recipeCount"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// (Updatable) List of detector recipes to associate with target
	TargetDetectorRecipes []CloudGuardTargetTargetDetectorRecipe `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId *string `pulumi:"targetResourceId"`
	// possible type of targets(compartment/HCMCloud/ERPCloud)
	TargetResourceType *string `pulumi:"targetResourceType"`
	// (Updatable) List of responder recipes to associate with target
	TargetResponderRecipes []CloudGuardTargetTargetResponderRecipe `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type CloudGuardTargetState struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// The target description.
	Description pulumi.StringPtrInput
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// List of inherited compartments
	InheritedByCompartments pulumi.StringArrayInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringPtrInput
	// Total number of recipes attached to target
	RecipeCount pulumi.IntPtrInput
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// (Updatable) List of detector recipes to associate with target
	TargetDetectorRecipes CloudGuardTargetTargetDetectorRecipeArrayInput
	// Resource ID which the target uses to monitor
	TargetResourceId pulumi.StringPtrInput
	// possible type of targets(compartment/HCMCloud/ERPCloud)
	TargetResourceType pulumi.StringPtrInput
	// (Updatable) List of responder recipes to associate with target
	TargetResponderRecipes CloudGuardTargetTargetResponderRecipeArrayInput
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (CloudGuardTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudGuardTargetState)(nil)).Elem()
}

type cloudGuardTargetArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// (Updatable) List of detector recipes to associate with target
	TargetDetectorRecipes []CloudGuardTargetTargetDetectorRecipe `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId string `pulumi:"targetResourceId"`
	// possible type of targets(compartment/HCMCloud/ERPCloud)
	TargetResourceType string `pulumi:"targetResourceType"`
	// (Updatable) List of responder recipes to associate with target
	TargetResponderRecipes []CloudGuardTargetTargetResponderRecipe `pulumi:"targetResponderRecipes"`
}

// The set of arguments for constructing a CloudGuardTarget resource.
type CloudGuardTargetArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// The target description.
	Description pulumi.StringPtrInput
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput
	// (Updatable) List of detector recipes to associate with target
	TargetDetectorRecipes CloudGuardTargetTargetDetectorRecipeArrayInput
	// Resource ID which the target uses to monitor
	TargetResourceId pulumi.StringInput
	// possible type of targets(compartment/HCMCloud/ERPCloud)
	TargetResourceType pulumi.StringInput
	// (Updatable) List of responder recipes to associate with target
	TargetResponderRecipes CloudGuardTargetTargetResponderRecipeArrayInput
}

func (CloudGuardTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudGuardTargetArgs)(nil)).Elem()
}

type CloudGuardTargetInput interface {
	pulumi.Input

	ToCloudGuardTargetOutput() CloudGuardTargetOutput
	ToCloudGuardTargetOutputWithContext(ctx context.Context) CloudGuardTargetOutput
}

func (*CloudGuardTarget) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardTarget)(nil))
}

func (i *CloudGuardTarget) ToCloudGuardTargetOutput() CloudGuardTargetOutput {
	return i.ToCloudGuardTargetOutputWithContext(context.Background())
}

func (i *CloudGuardTarget) ToCloudGuardTargetOutputWithContext(ctx context.Context) CloudGuardTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardTargetOutput)
}

func (i *CloudGuardTarget) ToCloudGuardTargetPtrOutput() CloudGuardTargetPtrOutput {
	return i.ToCloudGuardTargetPtrOutputWithContext(context.Background())
}

func (i *CloudGuardTarget) ToCloudGuardTargetPtrOutputWithContext(ctx context.Context) CloudGuardTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardTargetPtrOutput)
}

type CloudGuardTargetPtrInput interface {
	pulumi.Input

	ToCloudGuardTargetPtrOutput() CloudGuardTargetPtrOutput
	ToCloudGuardTargetPtrOutputWithContext(ctx context.Context) CloudGuardTargetPtrOutput
}

type cloudGuardTargetPtrType CloudGuardTargetArgs

func (*cloudGuardTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardTarget)(nil))
}

func (i *cloudGuardTargetPtrType) ToCloudGuardTargetPtrOutput() CloudGuardTargetPtrOutput {
	return i.ToCloudGuardTargetPtrOutputWithContext(context.Background())
}

func (i *cloudGuardTargetPtrType) ToCloudGuardTargetPtrOutputWithContext(ctx context.Context) CloudGuardTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardTargetPtrOutput)
}

// CloudGuardTargetArrayInput is an input type that accepts CloudGuardTargetArray and CloudGuardTargetArrayOutput values.
// You can construct a concrete instance of `CloudGuardTargetArrayInput` via:
//
//          CloudGuardTargetArray{ CloudGuardTargetArgs{...} }
type CloudGuardTargetArrayInput interface {
	pulumi.Input

	ToCloudGuardTargetArrayOutput() CloudGuardTargetArrayOutput
	ToCloudGuardTargetArrayOutputWithContext(context.Context) CloudGuardTargetArrayOutput
}

type CloudGuardTargetArray []CloudGuardTargetInput

func (CloudGuardTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudGuardTarget)(nil)).Elem()
}

func (i CloudGuardTargetArray) ToCloudGuardTargetArrayOutput() CloudGuardTargetArrayOutput {
	return i.ToCloudGuardTargetArrayOutputWithContext(context.Background())
}

func (i CloudGuardTargetArray) ToCloudGuardTargetArrayOutputWithContext(ctx context.Context) CloudGuardTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardTargetArrayOutput)
}

// CloudGuardTargetMapInput is an input type that accepts CloudGuardTargetMap and CloudGuardTargetMapOutput values.
// You can construct a concrete instance of `CloudGuardTargetMapInput` via:
//
//          CloudGuardTargetMap{ "key": CloudGuardTargetArgs{...} }
type CloudGuardTargetMapInput interface {
	pulumi.Input

	ToCloudGuardTargetMapOutput() CloudGuardTargetMapOutput
	ToCloudGuardTargetMapOutputWithContext(context.Context) CloudGuardTargetMapOutput
}

type CloudGuardTargetMap map[string]CloudGuardTargetInput

func (CloudGuardTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudGuardTarget)(nil)).Elem()
}

func (i CloudGuardTargetMap) ToCloudGuardTargetMapOutput() CloudGuardTargetMapOutput {
	return i.ToCloudGuardTargetMapOutputWithContext(context.Background())
}

func (i CloudGuardTargetMap) ToCloudGuardTargetMapOutputWithContext(ctx context.Context) CloudGuardTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardTargetMapOutput)
}

type CloudGuardTargetOutput struct {
	*pulumi.OutputState
}

func (CloudGuardTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardTarget)(nil))
}

func (o CloudGuardTargetOutput) ToCloudGuardTargetOutput() CloudGuardTargetOutput {
	return o
}

func (o CloudGuardTargetOutput) ToCloudGuardTargetOutputWithContext(ctx context.Context) CloudGuardTargetOutput {
	return o
}

func (o CloudGuardTargetOutput) ToCloudGuardTargetPtrOutput() CloudGuardTargetPtrOutput {
	return o.ToCloudGuardTargetPtrOutputWithContext(context.Background())
}

func (o CloudGuardTargetOutput) ToCloudGuardTargetPtrOutputWithContext(ctx context.Context) CloudGuardTargetPtrOutput {
	return o.ApplyT(func(v CloudGuardTarget) *CloudGuardTarget {
		return &v
	}).(CloudGuardTargetPtrOutput)
}

type CloudGuardTargetPtrOutput struct {
	*pulumi.OutputState
}

func (CloudGuardTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardTarget)(nil))
}

func (o CloudGuardTargetPtrOutput) ToCloudGuardTargetPtrOutput() CloudGuardTargetPtrOutput {
	return o
}

func (o CloudGuardTargetPtrOutput) ToCloudGuardTargetPtrOutputWithContext(ctx context.Context) CloudGuardTargetPtrOutput {
	return o
}

type CloudGuardTargetArrayOutput struct{ *pulumi.OutputState }

func (CloudGuardTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudGuardTarget)(nil))
}

func (o CloudGuardTargetArrayOutput) ToCloudGuardTargetArrayOutput() CloudGuardTargetArrayOutput {
	return o
}

func (o CloudGuardTargetArrayOutput) ToCloudGuardTargetArrayOutputWithContext(ctx context.Context) CloudGuardTargetArrayOutput {
	return o
}

func (o CloudGuardTargetArrayOutput) Index(i pulumi.IntInput) CloudGuardTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudGuardTarget {
		return vs[0].([]CloudGuardTarget)[vs[1].(int)]
	}).(CloudGuardTargetOutput)
}

type CloudGuardTargetMapOutput struct{ *pulumi.OutputState }

func (CloudGuardTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CloudGuardTarget)(nil))
}

func (o CloudGuardTargetMapOutput) ToCloudGuardTargetMapOutput() CloudGuardTargetMapOutput {
	return o
}

func (o CloudGuardTargetMapOutput) ToCloudGuardTargetMapOutputWithContext(ctx context.Context) CloudGuardTargetMapOutput {
	return o
}

func (o CloudGuardTargetMapOutput) MapIndex(k pulumi.StringInput) CloudGuardTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CloudGuardTarget {
		return vs[0].(map[string]CloudGuardTarget)[vs[1].(string)]
	}).(CloudGuardTargetOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudGuardTargetOutput{})
	pulumi.RegisterOutputType(CloudGuardTargetPtrOutput{})
	pulumi.RegisterOutputType(CloudGuardTargetArrayOutput{})
	pulumi.RegisterOutputType(CloudGuardTargetMapOutput{})
}
