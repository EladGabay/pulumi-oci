// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseExadataIormConfig
    {
        /// <summary>
        /// This data source provides details about a specific Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets the IORM configuration settings for the specified cloud Exadata DB system.
        /// All Exadata service instances have default IORM settings.
        /// 
        /// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
        /// 
        /// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
        /// 
        /// The [GetCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/GetCloudVmClusterIormConfig/) API is used for this operation with Exadata systems using the
        /// new resource model.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testExadataIormConfig = Output.Create(Oci.GetDatabaseExadataIormConfig.InvokeAsync(new Oci.GetDatabaseExadataIormConfigArgs
        ///         {
        ///             DbSystemId = oci_database_db_system.Test_db_system.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseExadataIormConfigResult> InvokeAsync(GetDatabaseExadataIormConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseExadataIormConfigResult>("oci:index/getDatabaseExadataIormConfig:GetDatabaseExadataIormConfig", args ?? new GetDatabaseExadataIormConfigArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseExadataIormConfigArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("dbSystemId", required: true)]
        public string DbSystemId { get; set; } = null!;

        public GetDatabaseExadataIormConfigArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseExadataIormConfigResult
    {
        /// <summary>
        /// An array of IORM settings for all the database in the Exadata DB system.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseExadataIormConfigDbPlanResult> DbPlans;
        public readonly string DbSystemId;
        public readonly string Id;
        /// <summary>
        /// Additional information about the current `lifecycleState`.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The current value for the IORM objective. The default is `AUTO`.
        /// </summary>
        public readonly string Objective;
        /// <summary>
        /// The current state of IORM configuration for the Exadata DB system.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetDatabaseExadataIormConfigResult(
            ImmutableArray<Outputs.GetDatabaseExadataIormConfigDbPlanResult> dbPlans,

            string dbSystemId,

            string id,

            string lifecycleDetails,

            string objective,

            string state)
        {
            DbPlans = dbPlans;
            DbSystemId = dbSystemId;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            Objective = objective;
            State = state;
        }
    }
}
