// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetServiceCatalogServiceCatalogs
    {
        /// <summary>
        /// This data source provides the list of Service Catalogs in Oracle Cloud Infrastructure Service Catalog service.
        /// 
        /// Lists all the service catalogs in the given compartment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testServiceCatalogs = Output.Create(Oci.GetServiceCatalogServiceCatalogs.InvokeAsync(new Oci.GetServiceCatalogServiceCatalogsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Service_catalog_display_name,
        ///             ServiceCatalogId = oci_service_catalog_service_catalog.Test_service_catalog.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceCatalogServiceCatalogsResult> InvokeAsync(GetServiceCatalogServiceCatalogsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceCatalogServiceCatalogsResult>("oci:index/getServiceCatalogServiceCatalogs:GetServiceCatalogServiceCatalogs", args ?? new GetServiceCatalogServiceCatalogsArgs(), options.WithVersion());
    }


    public sealed class GetServiceCatalogServiceCatalogsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// Exact match name filter.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetServiceCatalogServiceCatalogsFilterArgs>? _filters;
        public List<Inputs.GetServiceCatalogServiceCatalogsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServiceCatalogServiceCatalogsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier for the service catalog.
        /// </summary>
        [Input("serviceCatalogId")]
        public string? ServiceCatalogId { get; set; }

        public GetServiceCatalogServiceCatalogsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceCatalogServiceCatalogsResult
    {
        /// <summary>
        /// The Compartment id where the service catalog exists
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The name of the service catalog.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetServiceCatalogServiceCatalogsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of service_catalog_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceCatalogServiceCatalogsServiceCatalogCollectionResult> ServiceCatalogCollections;
        public readonly string? ServiceCatalogId;

        [OutputConstructor]
        private GetServiceCatalogServiceCatalogsResult(
            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetServiceCatalogServiceCatalogsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetServiceCatalogServiceCatalogsServiceCatalogCollectionResult> serviceCatalogCollections,

            string? serviceCatalogId)
        {
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ServiceCatalogCollections = serviceCatalogCollections;
            ServiceCatalogId = serviceCatalogId;
        }
    }
}
