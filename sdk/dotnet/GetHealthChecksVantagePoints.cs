// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetHealthChecksVantagePoints
    {
        /// <summary>
        /// This data source provides the list of Vantage Points in Oracle Cloud Infrastructure Health Checks service.
        /// 
        /// Gets information about all vantage points available to the user.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVantagePoints = Output.Create(Oci.GetHealthChecksVantagePoints.InvokeAsync(new Oci.GetHealthChecksVantagePointsArgs
        ///         {
        ///             DisplayName = @var.Vantage_point_display_name,
        ///             Name = @var.Vantage_point_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetHealthChecksVantagePointsResult> InvokeAsync(GetHealthChecksVantagePointsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHealthChecksVantagePointsResult>("oci:index/getHealthChecksVantagePoints:GetHealthChecksVantagePoints", args ?? new GetHealthChecksVantagePointsArgs(), options.WithVersion());
    }


    public sealed class GetHealthChecksVantagePointsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters results that exactly match the `displayName` field.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetHealthChecksVantagePointsFilterArgs>? _filters;
        public List<Inputs.GetHealthChecksVantagePointsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetHealthChecksVantagePointsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Filters results that exactly match the `name` field.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetHealthChecksVantagePointsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHealthChecksVantagePointsResult
    {
        /// <summary>
        /// The display name for the vantage point. Display names are determined by the best information available and may change over time.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetHealthChecksVantagePointsFilterResult> Filters;
        /// <summary>
        /// The list of health_checks_vantage_points.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHealthChecksVantagePointsHealthChecksVantagePointResult> HealthChecksVantagePoints;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique, permanent name for the vantage point.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetHealthChecksVantagePointsResult(
            string? displayName,

            ImmutableArray<Outputs.GetHealthChecksVantagePointsFilterResult> filters,

            ImmutableArray<Outputs.GetHealthChecksVantagePointsHealthChecksVantagePointResult> healthChecksVantagePoints,

            string id,

            string? name)
        {
            DisplayName = displayName;
            Filters = filters;
            HealthChecksVantagePoints = healthChecksVantagePoints;
            Id = id;
            Name = name;
        }
    }
}
