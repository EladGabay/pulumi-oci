// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    /// <summary>
    /// This resource provides the Osn resource in Oracle Cloud Infrastructure Blockchain service.
    /// 
    /// Create Blockchain Platform Osn
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testOsn = new Oci.BlockchainOsn("testOsn", new Oci.BlockchainOsnArgs
    ///         {
    ///             Ad = @var.Osn_ad,
    ///             BlockchainPlatformId = oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
    ///             OcpuAllocationParam = new Oci.Inputs.BlockchainOsnOcpuAllocationParamArgs
    ///             {
    ///                 OcpuAllocationNumber = @var.Osn_ocpu_allocation_param_ocpu_allocation_number,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Osns can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:index/blockchainOsn:BlockchainOsn test_osn "blockchainPlatforms/{blockchainPlatformId}/osns/{osnId}"
    /// ```
    /// </summary>
    [OciResourceType("oci:index/blockchainOsn:BlockchainOsn")]
    public partial class BlockchainOsn : Pulumi.CustomResource
    {
        /// <summary>
        /// Availability Domain to place new OSN
        /// </summary>
        [Output("ad")]
        public Output<string> Ad { get; private set; } = null!;

        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Output("blockchainPlatformId")]
        public Output<string> BlockchainPlatformId { get; private set; } = null!;

        /// <summary>
        /// (Updatable) OCPU allocation parameter
        /// </summary>
        [Output("ocpuAllocationParam")]
        public Output<Outputs.BlockchainOsnOcpuAllocationParam> OcpuAllocationParam { get; private set; } = null!;

        /// <summary>
        /// OSN identifier
        /// </summary>
        [Output("osnKey")]
        public Output<string> OsnKey { get; private set; } = null!;

        /// <summary>
        /// The current state of the OSN.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a BlockchainOsn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BlockchainOsn(string name, BlockchainOsnArgs args, CustomResourceOptions? options = null)
            : base("oci:index/blockchainOsn:BlockchainOsn", name, args ?? new BlockchainOsnArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BlockchainOsn(string name, Input<string> id, BlockchainOsnState? state = null, CustomResourceOptions? options = null)
            : base("oci:index/blockchainOsn:BlockchainOsn", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BlockchainOsn resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BlockchainOsn Get(string name, Input<string> id, BlockchainOsnState? state = null, CustomResourceOptions? options = null)
        {
            return new BlockchainOsn(name, id, state, options);
        }
    }

    public sealed class BlockchainOsnArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Availability Domain to place new OSN
        /// </summary>
        [Input("ad", required: true)]
        public Input<string> Ad { get; set; } = null!;

        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId", required: true)]
        public Input<string> BlockchainPlatformId { get; set; } = null!;

        /// <summary>
        /// (Updatable) OCPU allocation parameter
        /// </summary>
        [Input("ocpuAllocationParam")]
        public Input<Inputs.BlockchainOsnOcpuAllocationParamArgs>? OcpuAllocationParam { get; set; }

        public BlockchainOsnArgs()
        {
        }
    }

    public sealed class BlockchainOsnState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Availability Domain to place new OSN
        /// </summary>
        [Input("ad")]
        public Input<string>? Ad { get; set; }

        /// <summary>
        /// Unique service identifier.
        /// </summary>
        [Input("blockchainPlatformId")]
        public Input<string>? BlockchainPlatformId { get; set; }

        /// <summary>
        /// (Updatable) OCPU allocation parameter
        /// </summary>
        [Input("ocpuAllocationParam")]
        public Input<Inputs.BlockchainOsnOcpuAllocationParamGetArgs>? OcpuAllocationParam { get; set; }

        /// <summary>
        /// OSN identifier
        /// </summary>
        [Input("osnKey")]
        public Input<string>? OsnKey { get; set; }

        /// <summary>
        /// The current state of the OSN.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public BlockchainOsnState()
        {
        }
    }
}
