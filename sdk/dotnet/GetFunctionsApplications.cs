// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetFunctionsApplications
    {
        /// <summary>
        /// This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
        /// 
        /// Lists applications for a compartment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testApplications = Output.Create(Oci.GetFunctionsApplications.InvokeAsync(new Oci.GetFunctionsApplicationsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Application_display_name,
        ///             Id = @var.Application_id,
        ///             State = @var.Application_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFunctionsApplicationsResult> InvokeAsync(GetFunctionsApplicationsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFunctionsApplicationsResult>("oci:index/getFunctionsApplications:GetFunctionsApplications", args ?? new GetFunctionsApplicationsArgs(), options.WithVersion());
    }


    public sealed class GetFunctionsApplicationsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only applications with display names that match the display name string. Matching is exact.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetFunctionsApplicationsFilterArgs>? _filters;
        public List<Inputs.GetFunctionsApplicationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFunctionsApplicationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only applications with the specified OCID.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetFunctionsApplicationsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFunctionsApplicationsResult
    {
        /// <summary>
        /// The list of applications.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFunctionsApplicationsApplicationResult> Applications;
        /// <summary>
        /// The OCID of the compartment that contains the application.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The display name of the application. The display name is unique within the compartment containing the application.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetFunctionsApplicationsFilterResult> Filters;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The current state of the application.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetFunctionsApplicationsResult(
            ImmutableArray<Outputs.GetFunctionsApplicationsApplicationResult> applications,

            string compartmentId,

            string? displayName,

            ImmutableArray<Outputs.GetFunctionsApplicationsFilterResult> filters,

            string? id,

            string? state)
        {
            Applications = applications;
            CompartmentId = compartmentId;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            State = state;
        }
    }
}
