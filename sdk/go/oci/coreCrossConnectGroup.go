// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cross Connect Group resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new cross-connect group to use with Oracle Cloud Infrastructure
// FastConnect. For more information, see
// [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
//
// For the purposes of access control, you must provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
// compartment where you want the cross-connect group to reside. If you're
// not sure which compartment to use, put the cross-connect group in the
// same compartment with your VCN. For more information about
// compartments and access control, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
// For information about OCIDs, see
// [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// You may optionally specify a *display name* for the cross-connect group.
// It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreCrossConnectGroup(ctx, "testCrossConnectGroup", &oci.CoreCrossConnectGroupArgs{
// 			CompartmentId:         pulumi.Any(_var.Compartment_id),
// 			CustomerReferenceName: pulumi.Any(_var.Cross_connect_group_customer_reference_name),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Cross_connect_group_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CrossConnectGroups can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreCrossConnectGroup:CoreCrossConnectGroup test_cross_connect_group "id"
// ```
type CoreCrossConnectGroup struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to contain the cross-connect group.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect group uses.
	CustomerReferenceName pulumi.StringOutput `pulumi:"customerReferenceName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The cross-connect group's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCoreCrossConnectGroup registers a new resource with the given unique name, arguments, and options.
func NewCoreCrossConnectGroup(ctx *pulumi.Context,
	name string, args *CoreCrossConnectGroupArgs, opts ...pulumi.ResourceOption) (*CoreCrossConnectGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource CoreCrossConnectGroup
	err := ctx.RegisterResource("oci:index/coreCrossConnectGroup:CoreCrossConnectGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreCrossConnectGroup gets an existing CoreCrossConnectGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreCrossConnectGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreCrossConnectGroupState, opts ...pulumi.ResourceOption) (*CoreCrossConnectGroup, error) {
	var resource CoreCrossConnectGroup
	err := ctx.ReadResource("oci:index/coreCrossConnectGroup:CoreCrossConnectGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreCrossConnectGroup resources.
type coreCrossConnectGroupState struct {
	// (Updatable) The OCID of the compartment to contain the cross-connect group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect group uses.
	CustomerReferenceName *string `pulumi:"customerReferenceName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The cross-connect group's current state.
	State *string `pulumi:"state"`
	// The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CoreCrossConnectGroupState struct {
	// (Updatable) The OCID of the compartment to contain the cross-connect group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect group uses.
	CustomerReferenceName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The cross-connect group's current state.
	State pulumi.StringPtrInput
	// The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CoreCrossConnectGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreCrossConnectGroupState)(nil)).Elem()
}

type coreCrossConnectGroupArgs struct {
	// (Updatable) The OCID of the compartment to contain the cross-connect group.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect group uses.
	CustomerReferenceName *string `pulumi:"customerReferenceName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a CoreCrossConnectGroup resource.
type CoreCrossConnectGroupArgs struct {
	// (Updatable) The OCID of the compartment to contain the cross-connect group.
	CompartmentId pulumi.StringInput
	// (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect group uses.
	CustomerReferenceName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
}

func (CoreCrossConnectGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreCrossConnectGroupArgs)(nil)).Elem()
}

type CoreCrossConnectGroupInput interface {
	pulumi.Input

	ToCoreCrossConnectGroupOutput() CoreCrossConnectGroupOutput
	ToCoreCrossConnectGroupOutputWithContext(ctx context.Context) CoreCrossConnectGroupOutput
}

func (*CoreCrossConnectGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreCrossConnectGroup)(nil))
}

func (i *CoreCrossConnectGroup) ToCoreCrossConnectGroupOutput() CoreCrossConnectGroupOutput {
	return i.ToCoreCrossConnectGroupOutputWithContext(context.Background())
}

func (i *CoreCrossConnectGroup) ToCoreCrossConnectGroupOutputWithContext(ctx context.Context) CoreCrossConnectGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreCrossConnectGroupOutput)
}

func (i *CoreCrossConnectGroup) ToCoreCrossConnectGroupPtrOutput() CoreCrossConnectGroupPtrOutput {
	return i.ToCoreCrossConnectGroupPtrOutputWithContext(context.Background())
}

func (i *CoreCrossConnectGroup) ToCoreCrossConnectGroupPtrOutputWithContext(ctx context.Context) CoreCrossConnectGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreCrossConnectGroupPtrOutput)
}

type CoreCrossConnectGroupPtrInput interface {
	pulumi.Input

	ToCoreCrossConnectGroupPtrOutput() CoreCrossConnectGroupPtrOutput
	ToCoreCrossConnectGroupPtrOutputWithContext(ctx context.Context) CoreCrossConnectGroupPtrOutput
}

type coreCrossConnectGroupPtrType CoreCrossConnectGroupArgs

func (*coreCrossConnectGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreCrossConnectGroup)(nil))
}

func (i *coreCrossConnectGroupPtrType) ToCoreCrossConnectGroupPtrOutput() CoreCrossConnectGroupPtrOutput {
	return i.ToCoreCrossConnectGroupPtrOutputWithContext(context.Background())
}

func (i *coreCrossConnectGroupPtrType) ToCoreCrossConnectGroupPtrOutputWithContext(ctx context.Context) CoreCrossConnectGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreCrossConnectGroupPtrOutput)
}

// CoreCrossConnectGroupArrayInput is an input type that accepts CoreCrossConnectGroupArray and CoreCrossConnectGroupArrayOutput values.
// You can construct a concrete instance of `CoreCrossConnectGroupArrayInput` via:
//
//          CoreCrossConnectGroupArray{ CoreCrossConnectGroupArgs{...} }
type CoreCrossConnectGroupArrayInput interface {
	pulumi.Input

	ToCoreCrossConnectGroupArrayOutput() CoreCrossConnectGroupArrayOutput
	ToCoreCrossConnectGroupArrayOutputWithContext(context.Context) CoreCrossConnectGroupArrayOutput
}

type CoreCrossConnectGroupArray []CoreCrossConnectGroupInput

func (CoreCrossConnectGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreCrossConnectGroup)(nil)).Elem()
}

func (i CoreCrossConnectGroupArray) ToCoreCrossConnectGroupArrayOutput() CoreCrossConnectGroupArrayOutput {
	return i.ToCoreCrossConnectGroupArrayOutputWithContext(context.Background())
}

func (i CoreCrossConnectGroupArray) ToCoreCrossConnectGroupArrayOutputWithContext(ctx context.Context) CoreCrossConnectGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreCrossConnectGroupArrayOutput)
}

// CoreCrossConnectGroupMapInput is an input type that accepts CoreCrossConnectGroupMap and CoreCrossConnectGroupMapOutput values.
// You can construct a concrete instance of `CoreCrossConnectGroupMapInput` via:
//
//          CoreCrossConnectGroupMap{ "key": CoreCrossConnectGroupArgs{...} }
type CoreCrossConnectGroupMapInput interface {
	pulumi.Input

	ToCoreCrossConnectGroupMapOutput() CoreCrossConnectGroupMapOutput
	ToCoreCrossConnectGroupMapOutputWithContext(context.Context) CoreCrossConnectGroupMapOutput
}

type CoreCrossConnectGroupMap map[string]CoreCrossConnectGroupInput

func (CoreCrossConnectGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreCrossConnectGroup)(nil)).Elem()
}

func (i CoreCrossConnectGroupMap) ToCoreCrossConnectGroupMapOutput() CoreCrossConnectGroupMapOutput {
	return i.ToCoreCrossConnectGroupMapOutputWithContext(context.Background())
}

func (i CoreCrossConnectGroupMap) ToCoreCrossConnectGroupMapOutputWithContext(ctx context.Context) CoreCrossConnectGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreCrossConnectGroupMapOutput)
}

type CoreCrossConnectGroupOutput struct {
	*pulumi.OutputState
}

func (CoreCrossConnectGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreCrossConnectGroup)(nil))
}

func (o CoreCrossConnectGroupOutput) ToCoreCrossConnectGroupOutput() CoreCrossConnectGroupOutput {
	return o
}

func (o CoreCrossConnectGroupOutput) ToCoreCrossConnectGroupOutputWithContext(ctx context.Context) CoreCrossConnectGroupOutput {
	return o
}

func (o CoreCrossConnectGroupOutput) ToCoreCrossConnectGroupPtrOutput() CoreCrossConnectGroupPtrOutput {
	return o.ToCoreCrossConnectGroupPtrOutputWithContext(context.Background())
}

func (o CoreCrossConnectGroupOutput) ToCoreCrossConnectGroupPtrOutputWithContext(ctx context.Context) CoreCrossConnectGroupPtrOutput {
	return o.ApplyT(func(v CoreCrossConnectGroup) *CoreCrossConnectGroup {
		return &v
	}).(CoreCrossConnectGroupPtrOutput)
}

type CoreCrossConnectGroupPtrOutput struct {
	*pulumi.OutputState
}

func (CoreCrossConnectGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreCrossConnectGroup)(nil))
}

func (o CoreCrossConnectGroupPtrOutput) ToCoreCrossConnectGroupPtrOutput() CoreCrossConnectGroupPtrOutput {
	return o
}

func (o CoreCrossConnectGroupPtrOutput) ToCoreCrossConnectGroupPtrOutputWithContext(ctx context.Context) CoreCrossConnectGroupPtrOutput {
	return o
}

type CoreCrossConnectGroupArrayOutput struct{ *pulumi.OutputState }

func (CoreCrossConnectGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreCrossConnectGroup)(nil))
}

func (o CoreCrossConnectGroupArrayOutput) ToCoreCrossConnectGroupArrayOutput() CoreCrossConnectGroupArrayOutput {
	return o
}

func (o CoreCrossConnectGroupArrayOutput) ToCoreCrossConnectGroupArrayOutputWithContext(ctx context.Context) CoreCrossConnectGroupArrayOutput {
	return o
}

func (o CoreCrossConnectGroupArrayOutput) Index(i pulumi.IntInput) CoreCrossConnectGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreCrossConnectGroup {
		return vs[0].([]CoreCrossConnectGroup)[vs[1].(int)]
	}).(CoreCrossConnectGroupOutput)
}

type CoreCrossConnectGroupMapOutput struct{ *pulumi.OutputState }

func (CoreCrossConnectGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreCrossConnectGroup)(nil))
}

func (o CoreCrossConnectGroupMapOutput) ToCoreCrossConnectGroupMapOutput() CoreCrossConnectGroupMapOutput {
	return o
}

func (o CoreCrossConnectGroupMapOutput) ToCoreCrossConnectGroupMapOutputWithContext(ctx context.Context) CoreCrossConnectGroupMapOutput {
	return o
}

func (o CoreCrossConnectGroupMapOutput) MapIndex(k pulumi.StringInput) CoreCrossConnectGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreCrossConnectGroup {
		return vs[0].(map[string]CoreCrossConnectGroup)[vs[1].(string)]
	}).(CoreCrossConnectGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreCrossConnectGroupOutput{})
	pulumi.RegisterOutputType(CoreCrossConnectGroupPtrOutput{})
	pulumi.RegisterOutputType(CoreCrossConnectGroupArrayOutput{})
	pulumi.RegisterOutputType(CoreCrossConnectGroupMapOutput{})
}
