// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `CoreAppCatalogListingResourceVersionAgreement` resource creates AppCatalogListingResourceVersionAgreement for a particular resource version of a listing.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreAppCatalogListingResourceVersionAgreement(ctx, "testAppCatalogListingResourceVersionAgreement", &oci.CoreAppCatalogListingResourceVersionAgreementArgs{
// 			ListingId:              pulumi.Any(data.Oci_core_app_catalog_listing.Test_listing.Id),
// 			ListingResourceVersion: pulumi.Any(_var.App_catalog_listing_resource_version_agreement_listing_resource_version),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type CoreAppCatalogListingResourceVersionAgreement struct {
	pulumi.CustomResourceState

	// EULA link
	EulaLink pulumi.StringOutput `pulumi:"eulaLink"`
	// The OCID of the listing.
	ListingId pulumi.StringOutput `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringOutput `pulumi:"listingResourceVersion"`
	// Oracle TOU link
	OracleTermsOfUseLink pulumi.StringOutput `pulumi:"oracleTermsOfUseLink"`
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature pulumi.StringOutput `pulumi:"signature"`
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved pulumi.StringOutput `pulumi:"timeRetrieved"`
}

// NewCoreAppCatalogListingResourceVersionAgreement registers a new resource with the given unique name, arguments, and options.
func NewCoreAppCatalogListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, args *CoreAppCatalogListingResourceVersionAgreementArgs, opts ...pulumi.ResourceOption) (*CoreAppCatalogListingResourceVersionAgreement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.ListingResourceVersion == nil {
		return nil, errors.New("invalid value for required argument 'ListingResourceVersion'")
	}
	var resource CoreAppCatalogListingResourceVersionAgreement
	err := ctx.RegisterResource("oci:index/coreAppCatalogListingResourceVersionAgreement:CoreAppCatalogListingResourceVersionAgreement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreAppCatalogListingResourceVersionAgreement gets an existing CoreAppCatalogListingResourceVersionAgreement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreAppCatalogListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreAppCatalogListingResourceVersionAgreementState, opts ...pulumi.ResourceOption) (*CoreAppCatalogListingResourceVersionAgreement, error) {
	var resource CoreAppCatalogListingResourceVersionAgreement
	err := ctx.ReadResource("oci:index/coreAppCatalogListingResourceVersionAgreement:CoreAppCatalogListingResourceVersionAgreement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreAppCatalogListingResourceVersionAgreement resources.
type coreAppCatalogListingResourceVersionAgreementState struct {
	// EULA link
	EulaLink *string `pulumi:"eulaLink"`
	// The OCID of the listing.
	ListingId *string `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion *string `pulumi:"listingResourceVersion"`
	// Oracle TOU link
	OracleTermsOfUseLink *string `pulumi:"oracleTermsOfUseLink"`
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature *string `pulumi:"signature"`
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved *string `pulumi:"timeRetrieved"`
}

type CoreAppCatalogListingResourceVersionAgreementState struct {
	// EULA link
	EulaLink pulumi.StringPtrInput
	// The OCID of the listing.
	ListingId pulumi.StringPtrInput
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringPtrInput
	// Oracle TOU link
	OracleTermsOfUseLink pulumi.StringPtrInput
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature pulumi.StringPtrInput
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved pulumi.StringPtrInput
}

func (CoreAppCatalogListingResourceVersionAgreementState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreAppCatalogListingResourceVersionAgreementState)(nil)).Elem()
}

type coreAppCatalogListingResourceVersionAgreementArgs struct {
	// The OCID of the listing.
	ListingId string `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion string `pulumi:"listingResourceVersion"`
}

// The set of arguments for constructing a CoreAppCatalogListingResourceVersionAgreement resource.
type CoreAppCatalogListingResourceVersionAgreementArgs struct {
	// The OCID of the listing.
	ListingId pulumi.StringInput
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringInput
}

func (CoreAppCatalogListingResourceVersionAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreAppCatalogListingResourceVersionAgreementArgs)(nil)).Elem()
}

type CoreAppCatalogListingResourceVersionAgreementInput interface {
	pulumi.Input

	ToCoreAppCatalogListingResourceVersionAgreementOutput() CoreAppCatalogListingResourceVersionAgreementOutput
	ToCoreAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementOutput
}

func (*CoreAppCatalogListingResourceVersionAgreement) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (i *CoreAppCatalogListingResourceVersionAgreement) ToCoreAppCatalogListingResourceVersionAgreementOutput() CoreAppCatalogListingResourceVersionAgreementOutput {
	return i.ToCoreAppCatalogListingResourceVersionAgreementOutputWithContext(context.Background())
}

func (i *CoreAppCatalogListingResourceVersionAgreement) ToCoreAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreAppCatalogListingResourceVersionAgreementOutput)
}

func (i *CoreAppCatalogListingResourceVersionAgreement) ToCoreAppCatalogListingResourceVersionAgreementPtrOutput() CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return i.ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *CoreAppCatalogListingResourceVersionAgreement) ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreAppCatalogListingResourceVersionAgreementPtrOutput)
}

type CoreAppCatalogListingResourceVersionAgreementPtrInput interface {
	pulumi.Input

	ToCoreAppCatalogListingResourceVersionAgreementPtrOutput() CoreAppCatalogListingResourceVersionAgreementPtrOutput
	ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementPtrOutput
}

type coreAppCatalogListingResourceVersionAgreementPtrType CoreAppCatalogListingResourceVersionAgreementArgs

func (*coreAppCatalogListingResourceVersionAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (i *coreAppCatalogListingResourceVersionAgreementPtrType) ToCoreAppCatalogListingResourceVersionAgreementPtrOutput() CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return i.ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *coreAppCatalogListingResourceVersionAgreementPtrType) ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreAppCatalogListingResourceVersionAgreementPtrOutput)
}

// CoreAppCatalogListingResourceVersionAgreementArrayInput is an input type that accepts CoreAppCatalogListingResourceVersionAgreementArray and CoreAppCatalogListingResourceVersionAgreementArrayOutput values.
// You can construct a concrete instance of `CoreAppCatalogListingResourceVersionAgreementArrayInput` via:
//
//          CoreAppCatalogListingResourceVersionAgreementArray{ CoreAppCatalogListingResourceVersionAgreementArgs{...} }
type CoreAppCatalogListingResourceVersionAgreementArrayInput interface {
	pulumi.Input

	ToCoreAppCatalogListingResourceVersionAgreementArrayOutput() CoreAppCatalogListingResourceVersionAgreementArrayOutput
	ToCoreAppCatalogListingResourceVersionAgreementArrayOutputWithContext(context.Context) CoreAppCatalogListingResourceVersionAgreementArrayOutput
}

type CoreAppCatalogListingResourceVersionAgreementArray []CoreAppCatalogListingResourceVersionAgreementInput

func (CoreAppCatalogListingResourceVersionAgreementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreAppCatalogListingResourceVersionAgreement)(nil)).Elem()
}

func (i CoreAppCatalogListingResourceVersionAgreementArray) ToCoreAppCatalogListingResourceVersionAgreementArrayOutput() CoreAppCatalogListingResourceVersionAgreementArrayOutput {
	return i.ToCoreAppCatalogListingResourceVersionAgreementArrayOutputWithContext(context.Background())
}

func (i CoreAppCatalogListingResourceVersionAgreementArray) ToCoreAppCatalogListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreAppCatalogListingResourceVersionAgreementArrayOutput)
}

// CoreAppCatalogListingResourceVersionAgreementMapInput is an input type that accepts CoreAppCatalogListingResourceVersionAgreementMap and CoreAppCatalogListingResourceVersionAgreementMapOutput values.
// You can construct a concrete instance of `CoreAppCatalogListingResourceVersionAgreementMapInput` via:
//
//          CoreAppCatalogListingResourceVersionAgreementMap{ "key": CoreAppCatalogListingResourceVersionAgreementArgs{...} }
type CoreAppCatalogListingResourceVersionAgreementMapInput interface {
	pulumi.Input

	ToCoreAppCatalogListingResourceVersionAgreementMapOutput() CoreAppCatalogListingResourceVersionAgreementMapOutput
	ToCoreAppCatalogListingResourceVersionAgreementMapOutputWithContext(context.Context) CoreAppCatalogListingResourceVersionAgreementMapOutput
}

type CoreAppCatalogListingResourceVersionAgreementMap map[string]CoreAppCatalogListingResourceVersionAgreementInput

func (CoreAppCatalogListingResourceVersionAgreementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreAppCatalogListingResourceVersionAgreement)(nil)).Elem()
}

func (i CoreAppCatalogListingResourceVersionAgreementMap) ToCoreAppCatalogListingResourceVersionAgreementMapOutput() CoreAppCatalogListingResourceVersionAgreementMapOutput {
	return i.ToCoreAppCatalogListingResourceVersionAgreementMapOutputWithContext(context.Background())
}

func (i CoreAppCatalogListingResourceVersionAgreementMap) ToCoreAppCatalogListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreAppCatalogListingResourceVersionAgreementMapOutput)
}

type CoreAppCatalogListingResourceVersionAgreementOutput struct {
	*pulumi.OutputState
}

func (CoreAppCatalogListingResourceVersionAgreementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (o CoreAppCatalogListingResourceVersionAgreementOutput) ToCoreAppCatalogListingResourceVersionAgreementOutput() CoreAppCatalogListingResourceVersionAgreementOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementOutput) ToCoreAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementOutput) ToCoreAppCatalogListingResourceVersionAgreementPtrOutput() CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return o.ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (o CoreAppCatalogListingResourceVersionAgreementOutput) ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return o.ApplyT(func(v CoreAppCatalogListingResourceVersionAgreement) *CoreAppCatalogListingResourceVersionAgreement {
		return &v
	}).(CoreAppCatalogListingResourceVersionAgreementPtrOutput)
}

type CoreAppCatalogListingResourceVersionAgreementPtrOutput struct {
	*pulumi.OutputState
}

func (CoreAppCatalogListingResourceVersionAgreementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (o CoreAppCatalogListingResourceVersionAgreementPtrOutput) ToCoreAppCatalogListingResourceVersionAgreementPtrOutput() CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementPtrOutput) ToCoreAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementPtrOutput {
	return o
}

type CoreAppCatalogListingResourceVersionAgreementArrayOutput struct{ *pulumi.OutputState }

func (CoreAppCatalogListingResourceVersionAgreementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (o CoreAppCatalogListingResourceVersionAgreementArrayOutput) ToCoreAppCatalogListingResourceVersionAgreementArrayOutput() CoreAppCatalogListingResourceVersionAgreementArrayOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementArrayOutput) ToCoreAppCatalogListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementArrayOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementArrayOutput) Index(i pulumi.IntInput) CoreAppCatalogListingResourceVersionAgreementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreAppCatalogListingResourceVersionAgreement {
		return vs[0].([]CoreAppCatalogListingResourceVersionAgreement)[vs[1].(int)]
	}).(CoreAppCatalogListingResourceVersionAgreementOutput)
}

type CoreAppCatalogListingResourceVersionAgreementMapOutput struct{ *pulumi.OutputState }

func (CoreAppCatalogListingResourceVersionAgreementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreAppCatalogListingResourceVersionAgreement)(nil))
}

func (o CoreAppCatalogListingResourceVersionAgreementMapOutput) ToCoreAppCatalogListingResourceVersionAgreementMapOutput() CoreAppCatalogListingResourceVersionAgreementMapOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementMapOutput) ToCoreAppCatalogListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) CoreAppCatalogListingResourceVersionAgreementMapOutput {
	return o
}

func (o CoreAppCatalogListingResourceVersionAgreementMapOutput) MapIndex(k pulumi.StringInput) CoreAppCatalogListingResourceVersionAgreementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreAppCatalogListingResourceVersionAgreement {
		return vs[0].(map[string]CoreAppCatalogListingResourceVersionAgreement)[vs[1].(string)]
	}).(CoreAppCatalogListingResourceVersionAgreementOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreAppCatalogListingResourceVersionAgreementOutput{})
	pulumi.RegisterOutputType(CoreAppCatalogListingResourceVersionAgreementPtrOutput{})
	pulumi.RegisterOutputType(CoreAppCatalogListingResourceVersionAgreementArrayOutput{})
	pulumi.RegisterOutputType(CoreAppCatalogListingResourceVersionAgreementMapOutput{})
}
