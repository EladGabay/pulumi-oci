// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreVirtualCircuitBandwidthShapes
    {
        /// <summary>
        /// This data source provides the list of Virtual Circuit Bandwidth Shapes in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the list of available virtual circuit bandwidth levels for a provider.
        /// You need this information so you can specify your desired bandwidth level (shape) when you create a virtual circuit.
        /// 
        /// For more information about virtual circuits, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVirtualCircuitBandwidthShapes = Output.Create(Oci.GetCoreVirtualCircuitBandwidthShapes.InvokeAsync(new Oci.GetCoreVirtualCircuitBandwidthShapesArgs
        ///         {
        ///             ProviderServiceId = data.Oci_core_fast_connect_provider_services.Test_fast_connect_provider_services.Fast_connect_provider_services[0].Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreVirtualCircuitBandwidthShapesResult> InvokeAsync(GetCoreVirtualCircuitBandwidthShapesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreVirtualCircuitBandwidthShapesResult>("oci:index/getCoreVirtualCircuitBandwidthShapes:GetCoreVirtualCircuitBandwidthShapes", args ?? new GetCoreVirtualCircuitBandwidthShapesArgs(), options.WithVersion());
    }


    public sealed class GetCoreVirtualCircuitBandwidthShapesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCoreVirtualCircuitBandwidthShapesFilterArgs>? _filters;
        public List<Inputs.GetCoreVirtualCircuitBandwidthShapesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreVirtualCircuitBandwidthShapesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the provider service.
        /// </summary>
        [Input("providerServiceId", required: true)]
        public string ProviderServiceId { get; set; } = null!;

        public GetCoreVirtualCircuitBandwidthShapesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreVirtualCircuitBandwidthShapesResult
    {
        public readonly ImmutableArray<Outputs.GetCoreVirtualCircuitBandwidthShapesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ProviderServiceId;
        /// <summary>
        /// The list of virtual_circuit_bandwidth_shapes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreVirtualCircuitBandwidthShapesVirtualCircuitBandwidthShapeResult> VirtualCircuitBandwidthShapes;

        [OutputConstructor]
        private GetCoreVirtualCircuitBandwidthShapesResult(
            ImmutableArray<Outputs.GetCoreVirtualCircuitBandwidthShapesFilterResult> filters,

            string id,

            string providerServiceId,

            ImmutableArray<Outputs.GetCoreVirtualCircuitBandwidthShapesVirtualCircuitBandwidthShapeResult> virtualCircuitBandwidthShapes)
        {
            Filters = filters;
            Id = id;
            ProviderServiceId = providerServiceId;
            VirtualCircuitBandwidthShapes = virtualCircuitBandwidthShapes;
        }
    }
}
