// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the User Group Membership resource in Oracle Cloud Infrastructure Identity service.
//
// Adds the specified user to the specified group and returns a `UserGroupMembership` object with its own OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityUserGroupMembership(ctx, "testUserGroupMembership", &oci.IdentityUserGroupMembershipArgs{
// 			GroupId: pulumi.Any(oci_identity_group.Test_group.Id),
// 			UserId:  pulumi.Any(oci_identity_user.Test_user.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// UserGroupMemberships can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityUserGroupMembership:IdentityUserGroupMembership test_user_group_membership "id"
// ```
type IdentityUserGroupMembership struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The OCID of the group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The membership's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the user.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewIdentityUserGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewIdentityUserGroupMembership(ctx *pulumi.Context,
	name string, args *IdentityUserGroupMembershipArgs, opts ...pulumi.ResourceOption) (*IdentityUserGroupMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	var resource IdentityUserGroupMembership
	err := ctx.RegisterResource("oci:index/identityUserGroupMembership:IdentityUserGroupMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityUserGroupMembership gets an existing IdentityUserGroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityUserGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityUserGroupMembershipState, opts ...pulumi.ResourceOption) (*IdentityUserGroupMembership, error) {
	var resource IdentityUserGroupMembership
	err := ctx.ReadResource("oci:index/identityUserGroupMembership:IdentityUserGroupMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityUserGroupMembership resources.
type identityUserGroupMembershipState struct {
	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the group.
	GroupId *string `pulumi:"groupId"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The membership's current state.
	State *string `pulumi:"state"`
	// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the user.
	UserId *string `pulumi:"userId"`
}

type IdentityUserGroupMembershipState struct {
	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId pulumi.StringPtrInput
	// The OCID of the group.
	GroupId pulumi.StringPtrInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The membership's current state.
	State pulumi.StringPtrInput
	// Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The OCID of the user.
	UserId pulumi.StringPtrInput
}

func (IdentityUserGroupMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserGroupMembershipState)(nil)).Elem()
}

type identityUserGroupMembershipArgs struct {
	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the group.
	GroupId string `pulumi:"groupId"`
	// The OCID of the user.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a IdentityUserGroupMembership resource.
type IdentityUserGroupMembershipArgs struct {
	// The OCID of the tenancy containing the user, group, and membership object.
	CompartmentId pulumi.StringPtrInput
	// The OCID of the group.
	GroupId pulumi.StringInput
	// The OCID of the user.
	UserId pulumi.StringInput
}

func (IdentityUserGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserGroupMembershipArgs)(nil)).Elem()
}

type IdentityUserGroupMembershipInput interface {
	pulumi.Input

	ToIdentityUserGroupMembershipOutput() IdentityUserGroupMembershipOutput
	ToIdentityUserGroupMembershipOutputWithContext(ctx context.Context) IdentityUserGroupMembershipOutput
}

func (*IdentityUserGroupMembership) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUserGroupMembership)(nil))
}

func (i *IdentityUserGroupMembership) ToIdentityUserGroupMembershipOutput() IdentityUserGroupMembershipOutput {
	return i.ToIdentityUserGroupMembershipOutputWithContext(context.Background())
}

func (i *IdentityUserGroupMembership) ToIdentityUserGroupMembershipOutputWithContext(ctx context.Context) IdentityUserGroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserGroupMembershipOutput)
}

func (i *IdentityUserGroupMembership) ToIdentityUserGroupMembershipPtrOutput() IdentityUserGroupMembershipPtrOutput {
	return i.ToIdentityUserGroupMembershipPtrOutputWithContext(context.Background())
}

func (i *IdentityUserGroupMembership) ToIdentityUserGroupMembershipPtrOutputWithContext(ctx context.Context) IdentityUserGroupMembershipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserGroupMembershipPtrOutput)
}

type IdentityUserGroupMembershipPtrInput interface {
	pulumi.Input

	ToIdentityUserGroupMembershipPtrOutput() IdentityUserGroupMembershipPtrOutput
	ToIdentityUserGroupMembershipPtrOutputWithContext(ctx context.Context) IdentityUserGroupMembershipPtrOutput
}

type identityUserGroupMembershipPtrType IdentityUserGroupMembershipArgs

func (*identityUserGroupMembershipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUserGroupMembership)(nil))
}

func (i *identityUserGroupMembershipPtrType) ToIdentityUserGroupMembershipPtrOutput() IdentityUserGroupMembershipPtrOutput {
	return i.ToIdentityUserGroupMembershipPtrOutputWithContext(context.Background())
}

func (i *identityUserGroupMembershipPtrType) ToIdentityUserGroupMembershipPtrOutputWithContext(ctx context.Context) IdentityUserGroupMembershipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserGroupMembershipPtrOutput)
}

// IdentityUserGroupMembershipArrayInput is an input type that accepts IdentityUserGroupMembershipArray and IdentityUserGroupMembershipArrayOutput values.
// You can construct a concrete instance of `IdentityUserGroupMembershipArrayInput` via:
//
//          IdentityUserGroupMembershipArray{ IdentityUserGroupMembershipArgs{...} }
type IdentityUserGroupMembershipArrayInput interface {
	pulumi.Input

	ToIdentityUserGroupMembershipArrayOutput() IdentityUserGroupMembershipArrayOutput
	ToIdentityUserGroupMembershipArrayOutputWithContext(context.Context) IdentityUserGroupMembershipArrayOutput
}

type IdentityUserGroupMembershipArray []IdentityUserGroupMembershipInput

func (IdentityUserGroupMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUserGroupMembership)(nil)).Elem()
}

func (i IdentityUserGroupMembershipArray) ToIdentityUserGroupMembershipArrayOutput() IdentityUserGroupMembershipArrayOutput {
	return i.ToIdentityUserGroupMembershipArrayOutputWithContext(context.Background())
}

func (i IdentityUserGroupMembershipArray) ToIdentityUserGroupMembershipArrayOutputWithContext(ctx context.Context) IdentityUserGroupMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserGroupMembershipArrayOutput)
}

// IdentityUserGroupMembershipMapInput is an input type that accepts IdentityUserGroupMembershipMap and IdentityUserGroupMembershipMapOutput values.
// You can construct a concrete instance of `IdentityUserGroupMembershipMapInput` via:
//
//          IdentityUserGroupMembershipMap{ "key": IdentityUserGroupMembershipArgs{...} }
type IdentityUserGroupMembershipMapInput interface {
	pulumi.Input

	ToIdentityUserGroupMembershipMapOutput() IdentityUserGroupMembershipMapOutput
	ToIdentityUserGroupMembershipMapOutputWithContext(context.Context) IdentityUserGroupMembershipMapOutput
}

type IdentityUserGroupMembershipMap map[string]IdentityUserGroupMembershipInput

func (IdentityUserGroupMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUserGroupMembership)(nil)).Elem()
}

func (i IdentityUserGroupMembershipMap) ToIdentityUserGroupMembershipMapOutput() IdentityUserGroupMembershipMapOutput {
	return i.ToIdentityUserGroupMembershipMapOutputWithContext(context.Background())
}

func (i IdentityUserGroupMembershipMap) ToIdentityUserGroupMembershipMapOutputWithContext(ctx context.Context) IdentityUserGroupMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserGroupMembershipMapOutput)
}

type IdentityUserGroupMembershipOutput struct {
	*pulumi.OutputState
}

func (IdentityUserGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUserGroupMembership)(nil))
}

func (o IdentityUserGroupMembershipOutput) ToIdentityUserGroupMembershipOutput() IdentityUserGroupMembershipOutput {
	return o
}

func (o IdentityUserGroupMembershipOutput) ToIdentityUserGroupMembershipOutputWithContext(ctx context.Context) IdentityUserGroupMembershipOutput {
	return o
}

func (o IdentityUserGroupMembershipOutput) ToIdentityUserGroupMembershipPtrOutput() IdentityUserGroupMembershipPtrOutput {
	return o.ToIdentityUserGroupMembershipPtrOutputWithContext(context.Background())
}

func (o IdentityUserGroupMembershipOutput) ToIdentityUserGroupMembershipPtrOutputWithContext(ctx context.Context) IdentityUserGroupMembershipPtrOutput {
	return o.ApplyT(func(v IdentityUserGroupMembership) *IdentityUserGroupMembership {
		return &v
	}).(IdentityUserGroupMembershipPtrOutput)
}

type IdentityUserGroupMembershipPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityUserGroupMembershipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUserGroupMembership)(nil))
}

func (o IdentityUserGroupMembershipPtrOutput) ToIdentityUserGroupMembershipPtrOutput() IdentityUserGroupMembershipPtrOutput {
	return o
}

func (o IdentityUserGroupMembershipPtrOutput) ToIdentityUserGroupMembershipPtrOutputWithContext(ctx context.Context) IdentityUserGroupMembershipPtrOutput {
	return o
}

type IdentityUserGroupMembershipArrayOutput struct{ *pulumi.OutputState }

func (IdentityUserGroupMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityUserGroupMembership)(nil))
}

func (o IdentityUserGroupMembershipArrayOutput) ToIdentityUserGroupMembershipArrayOutput() IdentityUserGroupMembershipArrayOutput {
	return o
}

func (o IdentityUserGroupMembershipArrayOutput) ToIdentityUserGroupMembershipArrayOutputWithContext(ctx context.Context) IdentityUserGroupMembershipArrayOutput {
	return o
}

func (o IdentityUserGroupMembershipArrayOutput) Index(i pulumi.IntInput) IdentityUserGroupMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityUserGroupMembership {
		return vs[0].([]IdentityUserGroupMembership)[vs[1].(int)]
	}).(IdentityUserGroupMembershipOutput)
}

type IdentityUserGroupMembershipMapOutput struct{ *pulumi.OutputState }

func (IdentityUserGroupMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityUserGroupMembership)(nil))
}

func (o IdentityUserGroupMembershipMapOutput) ToIdentityUserGroupMembershipMapOutput() IdentityUserGroupMembershipMapOutput {
	return o
}

func (o IdentityUserGroupMembershipMapOutput) ToIdentityUserGroupMembershipMapOutputWithContext(ctx context.Context) IdentityUserGroupMembershipMapOutput {
	return o
}

func (o IdentityUserGroupMembershipMapOutput) MapIndex(k pulumi.StringInput) IdentityUserGroupMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityUserGroupMembership {
		return vs[0].(map[string]IdentityUserGroupMembership)[vs[1].(string)]
	}).(IdentityUserGroupMembershipOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityUserGroupMembershipOutput{})
	pulumi.RegisterOutputType(IdentityUserGroupMembershipPtrOutput{})
	pulumi.RegisterOutputType(IdentityUserGroupMembershipArrayOutput{})
	pulumi.RegisterOutputType(IdentityUserGroupMembershipMapOutput{})
}
