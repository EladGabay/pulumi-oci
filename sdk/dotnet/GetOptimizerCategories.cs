// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetOptimizerCategories
    {
        /// <summary>
        /// This data source provides the list of Categories in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Lists the supported Cloud Advisor categories.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testCategories = Output.Create(Oci.GetOptimizerCategories.InvokeAsync(new Oci.GetOptimizerCategoriesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             CompartmentIdInSubtree = @var.Category_compartment_id_in_subtree,
        ///             Name = @var.Category_name,
        ///             State = @var.Category_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOptimizerCategoriesResult> InvokeAsync(GetOptimizerCategoriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOptimizerCategoriesResult>("oci:index/getOptimizerCategories:GetOptimizerCategories", args ?? new GetOptimizerCategoriesArgs(), options.WithVersion());
    }


    public sealed class GetOptimizerCategoriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
        /// </summary>
        [Input("compartmentIdInSubtree", required: true)]
        public bool CompartmentIdInSubtree { get; set; }

        [Input("filters")]
        private List<Inputs.GetOptimizerCategoriesFilterArgs>? _filters;
        public List<Inputs.GetOptimizerCategoriesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOptimizerCategoriesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Optional. A filter that returns results that match the name specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter that returns results that match the lifecycle state specified.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetOptimizerCategoriesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOptimizerCategoriesResult
    {
        /// <summary>
        /// The list of category_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOptimizerCategoriesCategoryCollectionResult> CategoryCollections;
        /// <summary>
        /// The OCID of the tenancy. The tenancy is the root compartment.
        /// </summary>
        public readonly string CompartmentId;
        public readonly bool CompartmentIdInSubtree;
        public readonly ImmutableArray<Outputs.GetOptimizerCategoriesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name assigned to the category. Avoid entering confidential information.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The category's current state.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetOptimizerCategoriesResult(
            ImmutableArray<Outputs.GetOptimizerCategoriesCategoryCollectionResult> categoryCollections,

            string compartmentId,

            bool compartmentIdInSubtree,

            ImmutableArray<Outputs.GetOptimizerCategoriesFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            CategoryCollections = categoryCollections;
            CompartmentId = compartmentId;
            CompartmentIdInSubtree = compartmentIdInSubtree;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
