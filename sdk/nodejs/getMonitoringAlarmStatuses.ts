// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides the list of Alarm Statuses in Oracle Cloud Infrastructure Monitoring service.
 *
 * List the status of each alarm in the specified compartment.
 * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
 *
 * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
 * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
 * or transactions, per second (TPS) for a given tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAlarmStatuses = oci.GetMonitoringAlarmStatuses({
 *     compartmentId: _var.compartment_id,
 *     compartmentIdInSubtree: _var.alarm_status_compartment_id_in_subtree,
 *     displayName: _var.alarm_status_display_name,
 * });
 * ```
 */
export function getMonitoringAlarmStatuses(args: GetMonitoringAlarmStatusesArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringAlarmStatusesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getMonitoringAlarmStatuses:GetMonitoringAlarmStatuses", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking GetMonitoringAlarmStatuses.
 */
export interface GetMonitoringAlarmStatusesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
     */
    compartmentId: string;
    /**
     * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the given display name exactly. Use this filter to list an alarm by name. Alternatively, when you know the alarm OCID, use the GetAlarm operation.
     */
    displayName?: string;
    filters?: inputs.GetMonitoringAlarmStatusesFilter[];
}

/**
 * A collection of values returned by GetMonitoringAlarmStatuses.
 */
export interface GetMonitoringAlarmStatusesResult {
    /**
     * The list of alarm_statuses.
     */
    readonly alarmStatuses: outputs.GetMonitoringAlarmStatusesAlarmStatus[];
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The configured name of the alarm.  Example: `High CPU Utilization`
     */
    readonly displayName?: string;
    readonly filters?: outputs.GetMonitoringAlarmStatusesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
