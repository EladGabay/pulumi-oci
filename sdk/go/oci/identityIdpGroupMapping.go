// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Idp Group Mapping resource in Oracle Cloud Infrastructure Identity service.
//
// Creates a single mapping between an IdP group and an IAM Service
// [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewIdentityIdpGroupMapping(ctx, "testIdpGroupMapping", &oci.IdentityIdpGroupMappingArgs{
// 			GroupId:            pulumi.Any(oci_identity_group.Test_group.Id),
// 			IdentityProviderId: pulumi.Any(oci_identity_identity_provider.Test_identity_provider.Id),
// 			IdpGroupName:       pulumi.Any(_var.Idp_group_mapping_idp_group_name),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// IdpGroupMappings can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/identityIdpGroupMapping:IdentityIdpGroupMapping test_idp_group_mapping "identityProviders/{identityProviderId}/groupMappings/{mappingId}"
// ```
type IdentityIdpGroupMapping struct {
	pulumi.CustomResourceState

	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringOutput `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	IdpGroupName pulumi.StringOutput `pulumi:"idpGroupName"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringOutput `pulumi:"inactiveState"`
	// The mapping's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewIdentityIdpGroupMapping registers a new resource with the given unique name, arguments, and options.
func NewIdentityIdpGroupMapping(ctx *pulumi.Context,
	name string, args *IdentityIdpGroupMappingArgs, opts ...pulumi.ResourceOption) (*IdentityIdpGroupMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.IdentityProviderId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderId'")
	}
	if args.IdpGroupName == nil {
		return nil, errors.New("invalid value for required argument 'IdpGroupName'")
	}
	var resource IdentityIdpGroupMapping
	err := ctx.RegisterResource("oci:index/identityIdpGroupMapping:IdentityIdpGroupMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityIdpGroupMapping gets an existing IdentityIdpGroupMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityIdpGroupMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityIdpGroupMappingState, opts ...pulumi.ResourceOption) (*IdentityIdpGroupMapping, error) {
	var resource IdentityIdpGroupMapping
	err := ctx.ReadResource("oci:index/identityIdpGroupMapping:IdentityIdpGroupMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityIdpGroupMapping resources.
type identityIdpGroupMappingState struct {
	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId *string `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId *string `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	IdpGroupName *string `pulumi:"idpGroupName"`
	// The detailed status of INACTIVE lifecycleState.
	InactiveState *string `pulumi:"inactiveState"`
	// The mapping's current state.
	State *string `pulumi:"state"`
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type IdentityIdpGroupMappingState struct {
	// The OCID of the tenancy containing the `IdentityProvider`.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringPtrInput
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringPtrInput
	// (Updatable) The name of the IdP group you want to map.
	IdpGroupName pulumi.StringPtrInput
	// The detailed status of INACTIVE lifecycleState.
	InactiveState pulumi.StringPtrInput
	// The mapping's current state.
	State pulumi.StringPtrInput
	// Date and time the mapping was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (IdentityIdpGroupMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityIdpGroupMappingState)(nil)).Elem()
}

type identityIdpGroupMappingArgs struct {
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId string `pulumi:"groupId"`
	// The OCID of the identity provider.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// (Updatable) The name of the IdP group you want to map.
	IdpGroupName string `pulumi:"idpGroupName"`
}

// The set of arguments for constructing a IdentityIdpGroupMapping resource.
type IdentityIdpGroupMappingArgs struct {
	// (Updatable) The OCID of the IAM Service [group](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/Group/) you want to map to the IdP group.
	GroupId pulumi.StringInput
	// The OCID of the identity provider.
	IdentityProviderId pulumi.StringInput
	// (Updatable) The name of the IdP group you want to map.
	IdpGroupName pulumi.StringInput
}

func (IdentityIdpGroupMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityIdpGroupMappingArgs)(nil)).Elem()
}

type IdentityIdpGroupMappingInput interface {
	pulumi.Input

	ToIdentityIdpGroupMappingOutput() IdentityIdpGroupMappingOutput
	ToIdentityIdpGroupMappingOutputWithContext(ctx context.Context) IdentityIdpGroupMappingOutput
}

func (*IdentityIdpGroupMapping) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityIdpGroupMapping)(nil))
}

func (i *IdentityIdpGroupMapping) ToIdentityIdpGroupMappingOutput() IdentityIdpGroupMappingOutput {
	return i.ToIdentityIdpGroupMappingOutputWithContext(context.Background())
}

func (i *IdentityIdpGroupMapping) ToIdentityIdpGroupMappingOutputWithContext(ctx context.Context) IdentityIdpGroupMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdpGroupMappingOutput)
}

func (i *IdentityIdpGroupMapping) ToIdentityIdpGroupMappingPtrOutput() IdentityIdpGroupMappingPtrOutput {
	return i.ToIdentityIdpGroupMappingPtrOutputWithContext(context.Background())
}

func (i *IdentityIdpGroupMapping) ToIdentityIdpGroupMappingPtrOutputWithContext(ctx context.Context) IdentityIdpGroupMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdpGroupMappingPtrOutput)
}

type IdentityIdpGroupMappingPtrInput interface {
	pulumi.Input

	ToIdentityIdpGroupMappingPtrOutput() IdentityIdpGroupMappingPtrOutput
	ToIdentityIdpGroupMappingPtrOutputWithContext(ctx context.Context) IdentityIdpGroupMappingPtrOutput
}

type identityIdpGroupMappingPtrType IdentityIdpGroupMappingArgs

func (*identityIdpGroupMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityIdpGroupMapping)(nil))
}

func (i *identityIdpGroupMappingPtrType) ToIdentityIdpGroupMappingPtrOutput() IdentityIdpGroupMappingPtrOutput {
	return i.ToIdentityIdpGroupMappingPtrOutputWithContext(context.Background())
}

func (i *identityIdpGroupMappingPtrType) ToIdentityIdpGroupMappingPtrOutputWithContext(ctx context.Context) IdentityIdpGroupMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdpGroupMappingPtrOutput)
}

// IdentityIdpGroupMappingArrayInput is an input type that accepts IdentityIdpGroupMappingArray and IdentityIdpGroupMappingArrayOutput values.
// You can construct a concrete instance of `IdentityIdpGroupMappingArrayInput` via:
//
//          IdentityIdpGroupMappingArray{ IdentityIdpGroupMappingArgs{...} }
type IdentityIdpGroupMappingArrayInput interface {
	pulumi.Input

	ToIdentityIdpGroupMappingArrayOutput() IdentityIdpGroupMappingArrayOutput
	ToIdentityIdpGroupMappingArrayOutputWithContext(context.Context) IdentityIdpGroupMappingArrayOutput
}

type IdentityIdpGroupMappingArray []IdentityIdpGroupMappingInput

func (IdentityIdpGroupMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityIdpGroupMapping)(nil)).Elem()
}

func (i IdentityIdpGroupMappingArray) ToIdentityIdpGroupMappingArrayOutput() IdentityIdpGroupMappingArrayOutput {
	return i.ToIdentityIdpGroupMappingArrayOutputWithContext(context.Background())
}

func (i IdentityIdpGroupMappingArray) ToIdentityIdpGroupMappingArrayOutputWithContext(ctx context.Context) IdentityIdpGroupMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdpGroupMappingArrayOutput)
}

// IdentityIdpGroupMappingMapInput is an input type that accepts IdentityIdpGroupMappingMap and IdentityIdpGroupMappingMapOutput values.
// You can construct a concrete instance of `IdentityIdpGroupMappingMapInput` via:
//
//          IdentityIdpGroupMappingMap{ "key": IdentityIdpGroupMappingArgs{...} }
type IdentityIdpGroupMappingMapInput interface {
	pulumi.Input

	ToIdentityIdpGroupMappingMapOutput() IdentityIdpGroupMappingMapOutput
	ToIdentityIdpGroupMappingMapOutputWithContext(context.Context) IdentityIdpGroupMappingMapOutput
}

type IdentityIdpGroupMappingMap map[string]IdentityIdpGroupMappingInput

func (IdentityIdpGroupMappingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityIdpGroupMapping)(nil)).Elem()
}

func (i IdentityIdpGroupMappingMap) ToIdentityIdpGroupMappingMapOutput() IdentityIdpGroupMappingMapOutput {
	return i.ToIdentityIdpGroupMappingMapOutputWithContext(context.Background())
}

func (i IdentityIdpGroupMappingMap) ToIdentityIdpGroupMappingMapOutputWithContext(ctx context.Context) IdentityIdpGroupMappingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityIdpGroupMappingMapOutput)
}

type IdentityIdpGroupMappingOutput struct {
	*pulumi.OutputState
}

func (IdentityIdpGroupMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityIdpGroupMapping)(nil))
}

func (o IdentityIdpGroupMappingOutput) ToIdentityIdpGroupMappingOutput() IdentityIdpGroupMappingOutput {
	return o
}

func (o IdentityIdpGroupMappingOutput) ToIdentityIdpGroupMappingOutputWithContext(ctx context.Context) IdentityIdpGroupMappingOutput {
	return o
}

func (o IdentityIdpGroupMappingOutput) ToIdentityIdpGroupMappingPtrOutput() IdentityIdpGroupMappingPtrOutput {
	return o.ToIdentityIdpGroupMappingPtrOutputWithContext(context.Background())
}

func (o IdentityIdpGroupMappingOutput) ToIdentityIdpGroupMappingPtrOutputWithContext(ctx context.Context) IdentityIdpGroupMappingPtrOutput {
	return o.ApplyT(func(v IdentityIdpGroupMapping) *IdentityIdpGroupMapping {
		return &v
	}).(IdentityIdpGroupMappingPtrOutput)
}

type IdentityIdpGroupMappingPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityIdpGroupMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityIdpGroupMapping)(nil))
}

func (o IdentityIdpGroupMappingPtrOutput) ToIdentityIdpGroupMappingPtrOutput() IdentityIdpGroupMappingPtrOutput {
	return o
}

func (o IdentityIdpGroupMappingPtrOutput) ToIdentityIdpGroupMappingPtrOutputWithContext(ctx context.Context) IdentityIdpGroupMappingPtrOutput {
	return o
}

type IdentityIdpGroupMappingArrayOutput struct{ *pulumi.OutputState }

func (IdentityIdpGroupMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityIdpGroupMapping)(nil))
}

func (o IdentityIdpGroupMappingArrayOutput) ToIdentityIdpGroupMappingArrayOutput() IdentityIdpGroupMappingArrayOutput {
	return o
}

func (o IdentityIdpGroupMappingArrayOutput) ToIdentityIdpGroupMappingArrayOutputWithContext(ctx context.Context) IdentityIdpGroupMappingArrayOutput {
	return o
}

func (o IdentityIdpGroupMappingArrayOutput) Index(i pulumi.IntInput) IdentityIdpGroupMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityIdpGroupMapping {
		return vs[0].([]IdentityIdpGroupMapping)[vs[1].(int)]
	}).(IdentityIdpGroupMappingOutput)
}

type IdentityIdpGroupMappingMapOutput struct{ *pulumi.OutputState }

func (IdentityIdpGroupMappingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityIdpGroupMapping)(nil))
}

func (o IdentityIdpGroupMappingMapOutput) ToIdentityIdpGroupMappingMapOutput() IdentityIdpGroupMappingMapOutput {
	return o
}

func (o IdentityIdpGroupMappingMapOutput) ToIdentityIdpGroupMappingMapOutputWithContext(ctx context.Context) IdentityIdpGroupMappingMapOutput {
	return o
}

func (o IdentityIdpGroupMappingMapOutput) MapIndex(k pulumi.StringInput) IdentityIdpGroupMappingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityIdpGroupMapping {
		return vs[0].(map[string]IdentityIdpGroupMapping)[vs[1].(string)]
	}).(IdentityIdpGroupMappingOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityIdpGroupMappingOutput{})
	pulumi.RegisterOutputType(IdentityIdpGroupMappingPtrOutput{})
	pulumi.RegisterOutputType(IdentityIdpGroupMappingArrayOutput{})
	pulumi.RegisterOutputType(IdentityIdpGroupMappingMapOutput{})
}
