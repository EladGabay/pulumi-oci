// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseVmClusterRecommendedNetwork
    {
        /// <summary>
        /// This data source provides details about a specific Vm Cluster Recommended Network resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Generates a recommended Cloud@Customer VM cluster network configuration.
        /// </summary>
        public static Task<GetDatabaseVmClusterRecommendedNetworkResult> InvokeAsync(GetDatabaseVmClusterRecommendedNetworkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseVmClusterRecommendedNetworkResult>("oci:index/getDatabaseVmClusterRecommendedNetwork:GetDatabaseVmClusterRecommendedNetwork", args ?? new GetDatabaseVmClusterRecommendedNetworkArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseVmClusterRecommendedNetworkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("definedTags")]
        private Dictionary<string, object>? _definedTags;

        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public Dictionary<string, object> DefinedTags
        {
            get => _definedTags ?? (_definedTags = new Dictionary<string, object>());
            set => _definedTags = value;
        }

        /// <summary>
        /// The user-friendly name for the VM cluster network. The name does not need to be unique.
        /// </summary>
        [Input("displayName", required: true)]
        public string DisplayName { get; set; } = null!;

        [Input("dns")]
        private List<string>? _dns;

        /// <summary>
        /// The list of DNS server IP addresses. Maximum of 3 allowed.
        /// </summary>
        public List<string> Dns
        {
            get => _dns ?? (_dns = new List<string>());
            set => _dns = value;
        }

        /// <summary>
        /// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        [Input("exadataInfrastructureId", required: true)]
        public string ExadataInfrastructureId { get; set; } = null!;

        [Input("freeformTags")]
        private Dictionary<string, object>? _freeformTags;

        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public Dictionary<string, object> FreeformTags
        {
            get => _freeformTags ?? (_freeformTags = new Dictionary<string, object>());
            set => _freeformTags = value;
        }

        [Input("networks", required: true)]
        private List<Inputs.GetDatabaseVmClusterRecommendedNetworkNetworkArgs>? _networks;

        /// <summary>
        /// List of parameters for generation of the client and backup networks.
        /// </summary>
        public List<Inputs.GetDatabaseVmClusterRecommendedNetworkNetworkArgs> Networks
        {
            get => _networks ?? (_networks = new List<Inputs.GetDatabaseVmClusterRecommendedNetworkNetworkArgs>());
            set => _networks = value;
        }

        [Input("ntps")]
        private List<string>? _ntps;

        /// <summary>
        /// The list of NTP server IP addresses. Maximum of 3 allowed.
        /// </summary>
        public List<string> Ntps
        {
            get => _ntps ?? (_ntps = new List<string>());
            set => _ntps = value;
        }

        public GetDatabaseVmClusterRecommendedNetworkArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseVmClusterRecommendedNetworkResult
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// The user-friendly name for the Exadata Cloud@Customer VM cluster network. The name does not need to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The list of DNS server IP addresses. Maximum of 3 allowed.
        /// </summary>
        public readonly ImmutableArray<string> Dns;
        public readonly string ExadataInfrastructureId;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkNetworkResult> Networks;
        /// <summary>
        /// The list of NTP server IP addresses. Maximum of 3 allowed.
        /// </summary>
        public readonly ImmutableArray<string> Ntps;
        /// <summary>
        /// The SCAN details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkScanResult> Scans;
        /// <summary>
        /// Details of the client and backup networks.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkVmNetworkResult> VmNetworks;

        [OutputConstructor]
        private GetDatabaseVmClusterRecommendedNetworkResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableArray<string> dns,

            string exadataInfrastructureId,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkNetworkResult> networks,

            ImmutableArray<string> ntps,

            ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkScanResult> scans,

            ImmutableArray<Outputs.GetDatabaseVmClusterRecommendedNetworkVmNetworkResult> vmNetworks)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DisplayName = displayName;
            Dns = dns;
            ExadataInfrastructureId = exadataInfrastructureId;
            FreeformTags = freeformTags;
            Id = id;
            Networks = networks;
            Ntps = ntps;
            Scans = scans;
            VmNetworks = vmNetworks;
        }
    }
}
