// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
//
// Creates a new Managed Instance Group on the management system.
// This will not contain any managed instances after it is first created,
// and they must be added later.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewOsmanagementManagedInstanceGroup(ctx, "testManagedInstanceGroup", &oci.OsmanagementManagedInstanceGroupArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Managed_instance_group_display_name),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Managed_instance_group_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			OsFamily: pulumi.Any(_var.Managed_instance_group_os_family),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ManagedInstanceGroups can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/osmanagementManagedInstanceGroup:OsmanagementManagedInstanceGroup test_managed_instance_group "id"
// ```
type OsmanagementManagedInstanceGroup struct {
	pulumi.CustomResourceState

	// (Updatable) OCID for the Compartment
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Information specified by the user about the managed instance group
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Managed Instance Group identifier
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags         pulumi.MapOutput `pulumi:"freeformTags"`
	ManagedInstanceCount pulumi.IntOutput `pulumi:"managedInstanceCount"`
	// list of Managed Instances in the group
	ManagedInstances OsmanagementManagedInstanceGroupManagedInstanceArrayOutput `pulumi:"managedInstances"`
	// The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
	OsFamily pulumi.StringOutput `pulumi:"osFamily"`
	// The current state of the Software Source.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewOsmanagementManagedInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewOsmanagementManagedInstanceGroup(ctx *pulumi.Context,
	name string, args *OsmanagementManagedInstanceGroupArgs, opts ...pulumi.ResourceOption) (*OsmanagementManagedInstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource OsmanagementManagedInstanceGroup
	err := ctx.RegisterResource("oci:index/osmanagementManagedInstanceGroup:OsmanagementManagedInstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOsmanagementManagedInstanceGroup gets an existing OsmanagementManagedInstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOsmanagementManagedInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OsmanagementManagedInstanceGroupState, opts ...pulumi.ResourceOption) (*OsmanagementManagedInstanceGroup, error) {
	var resource OsmanagementManagedInstanceGroup
	err := ctx.ReadResource("oci:index/osmanagementManagedInstanceGroup:OsmanagementManagedInstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OsmanagementManagedInstanceGroup resources.
type osmanagementManagedInstanceGroupState struct {
	// (Updatable) OCID for the Compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Information specified by the user about the managed instance group
	Description *string `pulumi:"description"`
	// (Updatable) Managed Instance Group identifier
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags         map[string]interface{} `pulumi:"freeformTags"`
	ManagedInstanceCount *int                   `pulumi:"managedInstanceCount"`
	// list of Managed Instances in the group
	ManagedInstances []OsmanagementManagedInstanceGroupManagedInstance `pulumi:"managedInstances"`
	// The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
	OsFamily *string `pulumi:"osFamily"`
	// The current state of the Software Source.
	State *string `pulumi:"state"`
}

type OsmanagementManagedInstanceGroupState struct {
	// (Updatable) OCID for the Compartment
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Information specified by the user about the managed instance group
	Description pulumi.StringPtrInput
	// (Updatable) Managed Instance Group identifier
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags         pulumi.MapInput
	ManagedInstanceCount pulumi.IntPtrInput
	// list of Managed Instances in the group
	ManagedInstances OsmanagementManagedInstanceGroupManagedInstanceArrayInput
	// The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
	OsFamily pulumi.StringPtrInput
	// The current state of the Software Source.
	State pulumi.StringPtrInput
}

func (OsmanagementManagedInstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*osmanagementManagedInstanceGroupState)(nil)).Elem()
}

type osmanagementManagedInstanceGroupArgs struct {
	// (Updatable) OCID for the Compartment
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Information specified by the user about the managed instance group
	Description *string `pulumi:"description"`
	// (Updatable) Managed Instance Group identifier
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
	OsFamily *string `pulumi:"osFamily"`
}

// The set of arguments for constructing a OsmanagementManagedInstanceGroup resource.
type OsmanagementManagedInstanceGroupArgs struct {
	// (Updatable) OCID for the Compartment
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Information specified by the user about the managed instance group
	Description pulumi.StringPtrInput
	// (Updatable) Managed Instance Group identifier
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
	OsFamily pulumi.StringPtrInput
}

func (OsmanagementManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*osmanagementManagedInstanceGroupArgs)(nil)).Elem()
}

type OsmanagementManagedInstanceGroupInput interface {
	pulumi.Input

	ToOsmanagementManagedInstanceGroupOutput() OsmanagementManagedInstanceGroupOutput
	ToOsmanagementManagedInstanceGroupOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupOutput
}

func (*OsmanagementManagedInstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*OsmanagementManagedInstanceGroup)(nil))
}

func (i *OsmanagementManagedInstanceGroup) ToOsmanagementManagedInstanceGroupOutput() OsmanagementManagedInstanceGroupOutput {
	return i.ToOsmanagementManagedInstanceGroupOutputWithContext(context.Background())
}

func (i *OsmanagementManagedInstanceGroup) ToOsmanagementManagedInstanceGroupOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsmanagementManagedInstanceGroupOutput)
}

func (i *OsmanagementManagedInstanceGroup) ToOsmanagementManagedInstanceGroupPtrOutput() OsmanagementManagedInstanceGroupPtrOutput {
	return i.ToOsmanagementManagedInstanceGroupPtrOutputWithContext(context.Background())
}

func (i *OsmanagementManagedInstanceGroup) ToOsmanagementManagedInstanceGroupPtrOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsmanagementManagedInstanceGroupPtrOutput)
}

type OsmanagementManagedInstanceGroupPtrInput interface {
	pulumi.Input

	ToOsmanagementManagedInstanceGroupPtrOutput() OsmanagementManagedInstanceGroupPtrOutput
	ToOsmanagementManagedInstanceGroupPtrOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupPtrOutput
}

type osmanagementManagedInstanceGroupPtrType OsmanagementManagedInstanceGroupArgs

func (*osmanagementManagedInstanceGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsmanagementManagedInstanceGroup)(nil))
}

func (i *osmanagementManagedInstanceGroupPtrType) ToOsmanagementManagedInstanceGroupPtrOutput() OsmanagementManagedInstanceGroupPtrOutput {
	return i.ToOsmanagementManagedInstanceGroupPtrOutputWithContext(context.Background())
}

func (i *osmanagementManagedInstanceGroupPtrType) ToOsmanagementManagedInstanceGroupPtrOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsmanagementManagedInstanceGroupPtrOutput)
}

// OsmanagementManagedInstanceGroupArrayInput is an input type that accepts OsmanagementManagedInstanceGroupArray and OsmanagementManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `OsmanagementManagedInstanceGroupArrayInput` via:
//
//          OsmanagementManagedInstanceGroupArray{ OsmanagementManagedInstanceGroupArgs{...} }
type OsmanagementManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToOsmanagementManagedInstanceGroupArrayOutput() OsmanagementManagedInstanceGroupArrayOutput
	ToOsmanagementManagedInstanceGroupArrayOutputWithContext(context.Context) OsmanagementManagedInstanceGroupArrayOutput
}

type OsmanagementManagedInstanceGroupArray []OsmanagementManagedInstanceGroupInput

func (OsmanagementManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OsmanagementManagedInstanceGroup)(nil)).Elem()
}

func (i OsmanagementManagedInstanceGroupArray) ToOsmanagementManagedInstanceGroupArrayOutput() OsmanagementManagedInstanceGroupArrayOutput {
	return i.ToOsmanagementManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i OsmanagementManagedInstanceGroupArray) ToOsmanagementManagedInstanceGroupArrayOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsmanagementManagedInstanceGroupArrayOutput)
}

// OsmanagementManagedInstanceGroupMapInput is an input type that accepts OsmanagementManagedInstanceGroupMap and OsmanagementManagedInstanceGroupMapOutput values.
// You can construct a concrete instance of `OsmanagementManagedInstanceGroupMapInput` via:
//
//          OsmanagementManagedInstanceGroupMap{ "key": OsmanagementManagedInstanceGroupArgs{...} }
type OsmanagementManagedInstanceGroupMapInput interface {
	pulumi.Input

	ToOsmanagementManagedInstanceGroupMapOutput() OsmanagementManagedInstanceGroupMapOutput
	ToOsmanagementManagedInstanceGroupMapOutputWithContext(context.Context) OsmanagementManagedInstanceGroupMapOutput
}

type OsmanagementManagedInstanceGroupMap map[string]OsmanagementManagedInstanceGroupInput

func (OsmanagementManagedInstanceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OsmanagementManagedInstanceGroup)(nil)).Elem()
}

func (i OsmanagementManagedInstanceGroupMap) ToOsmanagementManagedInstanceGroupMapOutput() OsmanagementManagedInstanceGroupMapOutput {
	return i.ToOsmanagementManagedInstanceGroupMapOutputWithContext(context.Background())
}

func (i OsmanagementManagedInstanceGroupMap) ToOsmanagementManagedInstanceGroupMapOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsmanagementManagedInstanceGroupMapOutput)
}

type OsmanagementManagedInstanceGroupOutput struct {
	*pulumi.OutputState
}

func (OsmanagementManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsmanagementManagedInstanceGroup)(nil))
}

func (o OsmanagementManagedInstanceGroupOutput) ToOsmanagementManagedInstanceGroupOutput() OsmanagementManagedInstanceGroupOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupOutput) ToOsmanagementManagedInstanceGroupOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupOutput) ToOsmanagementManagedInstanceGroupPtrOutput() OsmanagementManagedInstanceGroupPtrOutput {
	return o.ToOsmanagementManagedInstanceGroupPtrOutputWithContext(context.Background())
}

func (o OsmanagementManagedInstanceGroupOutput) ToOsmanagementManagedInstanceGroupPtrOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupPtrOutput {
	return o.ApplyT(func(v OsmanagementManagedInstanceGroup) *OsmanagementManagedInstanceGroup {
		return &v
	}).(OsmanagementManagedInstanceGroupPtrOutput)
}

type OsmanagementManagedInstanceGroupPtrOutput struct {
	*pulumi.OutputState
}

func (OsmanagementManagedInstanceGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsmanagementManagedInstanceGroup)(nil))
}

func (o OsmanagementManagedInstanceGroupPtrOutput) ToOsmanagementManagedInstanceGroupPtrOutput() OsmanagementManagedInstanceGroupPtrOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupPtrOutput) ToOsmanagementManagedInstanceGroupPtrOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupPtrOutput {
	return o
}

type OsmanagementManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (OsmanagementManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsmanagementManagedInstanceGroup)(nil))
}

func (o OsmanagementManagedInstanceGroupArrayOutput) ToOsmanagementManagedInstanceGroupArrayOutput() OsmanagementManagedInstanceGroupArrayOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupArrayOutput) ToOsmanagementManagedInstanceGroupArrayOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupArrayOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) OsmanagementManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsmanagementManagedInstanceGroup {
		return vs[0].([]OsmanagementManagedInstanceGroup)[vs[1].(int)]
	}).(OsmanagementManagedInstanceGroupOutput)
}

type OsmanagementManagedInstanceGroupMapOutput struct{ *pulumi.OutputState }

func (OsmanagementManagedInstanceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OsmanagementManagedInstanceGroup)(nil))
}

func (o OsmanagementManagedInstanceGroupMapOutput) ToOsmanagementManagedInstanceGroupMapOutput() OsmanagementManagedInstanceGroupMapOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupMapOutput) ToOsmanagementManagedInstanceGroupMapOutputWithContext(ctx context.Context) OsmanagementManagedInstanceGroupMapOutput {
	return o
}

func (o OsmanagementManagedInstanceGroupMapOutput) MapIndex(k pulumi.StringInput) OsmanagementManagedInstanceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OsmanagementManagedInstanceGroup {
		return vs[0].(map[string]OsmanagementManagedInstanceGroup)[vs[1].(string)]
	}).(OsmanagementManagedInstanceGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(OsmanagementManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(OsmanagementManagedInstanceGroupPtrOutput{})
	pulumi.RegisterOutputType(OsmanagementManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(OsmanagementManagedInstanceGroupMapOutput{})
}
