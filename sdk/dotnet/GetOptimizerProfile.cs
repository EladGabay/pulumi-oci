// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetOptimizerProfile
    {
        /// <summary>
        /// This data source provides details about a specific Profile resource in Oracle Cloud Infrastructure Optimizer service.
        /// 
        /// Gets the specified profile's information. Uses the profile's OCID to determine which profile to retrieve.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testProfile = Output.Create(Oci.GetOptimizerProfile.InvokeAsync(new Oci.GetOptimizerProfileArgs
        ///         {
        ///             ProfileId = oci_optimizer_profile.Test_profile.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOptimizerProfileResult> InvokeAsync(GetOptimizerProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOptimizerProfileResult>("oci:index/getOptimizerProfile:GetOptimizerProfile", args ?? new GetOptimizerProfileArgs(), options.WithVersion());
    }


    public sealed class GetOptimizerProfileArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        public GetOptimizerProfileArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOptimizerProfileResult
    {
        /// <summary>
        /// The OCID of the tenancy. The tenancy is the root compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Text describing the profile. Avoid entering confidential information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The unique OCID of the profile.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of configuration levels for each recommendation.
        /// </summary>
        public readonly Outputs.GetOptimizerProfileLevelsConfigurationResult LevelsConfiguration;
        /// <summary>
        /// The name assigned to the profile. Avoid entering confidential information.
        /// </summary>
        public readonly string Name;
        public readonly string ProfileId;
        /// <summary>
        /// The profile's current state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Optional. The target compartments supported by a profile override for a recommendation.
        /// </summary>
        public readonly Outputs.GetOptimizerProfileTargetCompartmentsResult TargetCompartments;
        /// <summary>
        /// Optional. The target tags supported by a profile override for a recommendation.
        /// </summary>
        public readonly Outputs.GetOptimizerProfileTargetTagsResult TargetTags;
        /// <summary>
        /// The date and time the profile was created, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the profile was last updated, in the format defined by RFC3339.
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetOptimizerProfileResult(
            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            string description,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            Outputs.GetOptimizerProfileLevelsConfigurationResult levelsConfiguration,

            string name,

            string profileId,

            string state,

            Outputs.GetOptimizerProfileTargetCompartmentsResult targetCompartments,

            Outputs.GetOptimizerProfileTargetTagsResult targetTags,

            string timeCreated,

            string timeUpdated)
        {
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            Description = description;
            FreeformTags = freeformTags;
            Id = id;
            LevelsConfiguration = levelsConfiguration;
            Name = name;
            ProfileId = profileId;
            State = state;
            TargetCompartments = targetCompartments;
            TargetTags = targetTags;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
