// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetApigatewayApi
    {
        /// <summary>
        /// This data source provides details about a specific Api resource in Oracle Cloud Infrastructure API Gateway service.
        /// 
        /// Gets an API by identifier.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testApi = Output.Create(Oci.GetApigatewayApi.InvokeAsync(new Oci.GetApigatewayApiArgs
        ///         {
        ///             ApiId = oci_apigateway_api.Test_api.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApigatewayApiResult> InvokeAsync(GetApigatewayApiArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApigatewayApiResult>("oci:index/getApigatewayApi:GetApigatewayApi", args ?? new GetApigatewayApiArgs(), options.WithVersion());
    }


    public sealed class GetApigatewayApiArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ocid of the API.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        public GetApigatewayApiArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApigatewayApiResult
    {
        public readonly string ApiId;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
        /// </summary>
        public readonly string CompartmentId;
        public readonly string Content;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
        /// * 'New' for just updated API Specifications
        /// * 'Validating' for a document which is being validated.
        /// * 'Valid' the document has been validated without any errors or warnings
        /// * 'Warning' the document has been validated and contains warnings
        /// * 'Error' the document has been validated and contains errors
        /// * 'Failed' the document validation failed
        /// * 'Canceled' the document validation was canceled
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Type of API Specification file.
        /// </summary>
        public readonly string SpecificationType;
        /// <summary>
        /// The current state of the API.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Status of each feature available from the API.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApigatewayApiValidationResultResult> ValidationResults;

        [OutputConstructor]
        private GetApigatewayApiResult(
            string apiId,

            string compartmentId,

            string content,

            ImmutableDictionary<string, object> definedTags,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            string lifecycleDetails,

            string specificationType,

            string state,

            string timeCreated,

            string timeUpdated,

            ImmutableArray<Outputs.GetApigatewayApiValidationResultResult> validationResults)
        {
            ApiId = apiId;
            CompartmentId = compartmentId;
            Content = content;
            DefinedTags = definedTags;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            SpecificationType = specificationType;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
            ValidationResults = validationResults;
        }
    }
}
