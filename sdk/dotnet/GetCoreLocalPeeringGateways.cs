// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreLocalPeeringGateways
    {
        /// <summary>
        /// This data source provides the list of Local Peering Gateways in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the local peering gateways (LPGs) for the specified VCN and specified compartment.
        /// If the VCN ID is not provided, then the list includes the LPGs from all VCNs in the specified compartment.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testLocalPeeringGateways = Output.Create(Oci.GetCoreLocalPeeringGateways.InvokeAsync(new Oci.GetCoreLocalPeeringGatewaysArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             VcnId = oci_core_vcn.Test_vcn.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreLocalPeeringGatewaysResult> InvokeAsync(GetCoreLocalPeeringGatewaysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreLocalPeeringGatewaysResult>("oci:index/getCoreLocalPeeringGateways:GetCoreLocalPeeringGateways", args ?? new GetCoreLocalPeeringGatewaysArgs(), options.WithVersion());
    }


    public sealed class GetCoreLocalPeeringGatewaysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreLocalPeeringGatewaysFilterArgs>? _filters;
        public List<Inputs.GetCoreLocalPeeringGatewaysFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreLocalPeeringGatewaysFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
        /// </summary>
        [Input("vcnId")]
        public string? VcnId { get; set; }

        public GetCoreLocalPeeringGatewaysArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreLocalPeeringGatewaysResult
    {
        /// <summary>
        /// The OCID of the compartment containing the LPG.
        /// </summary>
        public readonly string CompartmentId;
        public readonly ImmutableArray<Outputs.GetCoreLocalPeeringGatewaysFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of local_peering_gateways.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreLocalPeeringGatewaysLocalPeeringGatewayResult> LocalPeeringGateways;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN that uses the LPG.
        /// </summary>
        public readonly string? VcnId;

        [OutputConstructor]
        private GetCoreLocalPeeringGatewaysResult(
            string compartmentId,

            ImmutableArray<Outputs.GetCoreLocalPeeringGatewaysFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetCoreLocalPeeringGatewaysLocalPeeringGatewayResult> localPeeringGateways,

            string? vcnId)
        {
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            LocalPeeringGateways = localPeeringGateways;
            VcnId = vcnId;
        }
    }
}
