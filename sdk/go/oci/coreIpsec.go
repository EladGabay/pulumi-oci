// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Ip Sec Connection resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new IPSec connection between the specified DRG and CPE. For more information, see
// [IPSec VPNs](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingIPsec.htm).
//
// If you configure at least one tunnel to use static routing, then in the request you must provide
// at least one valid static route (you're allowed a maximum of 10). For example: 10.0.0.0/16.
// If you configure both tunnels to use BGP dynamic routing, you can provide an empty list for
// the static routes. For more information, see the important note in
// [IPSecConnection](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/).
//
// For the purposes of access control, you must provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want the
// IPSec connection to reside. Notice that the IPSec connection doesn't have to be in the same compartment
// as the DRG, CPE, or other Networking Service components. If you're not sure which compartment to
// use, put the IPSec connection in the same compartment as the DRG. For more information about
// compartments and access control, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
//
// You may optionally specify a *display name* for the IPSec connection, otherwise a default is provided.
// It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// After creating the IPSec connection, you need to configure your on-premises router
// with tunnel-specific information. For tunnel status and the required configuration information, see:
//
//   * [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)
//   * [IPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnelSharedSecret/)
//
// For each tunnel, you need the IP address of Oracle's VPN headend and the shared secret
// (that is, the pre-shared key). For more information, see
// [Configuring Your On-Premises Router for an IPSec VPN](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/configuringCPE.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreIpsec(ctx, "testIpSecConnection", &oci.CoreIpsecArgs{
// 			CompartmentId:          pulumi.Any(_var.Compartment_id),
// 			CpeId:                  pulumi.Any(oci_core_cpe.Test_cpe.Id),
// 			DrgId:                  pulumi.Any(oci_core_drg.Test_drg.Id),
// 			StaticRoutes:           pulumi.Any(_var.Ip_sec_connection_static_routes),
// 			CpeLocalIdentifier:     pulumi.Any(_var.Ip_sec_connection_cpe_local_identifier),
// 			CpeLocalIdentifierType: pulumi.Any(_var.Ip_sec_connection_cpe_local_identifier_type),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Ip_sec_connection_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// IpSecConnections can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreIpsec:CoreIpsec test_ip_sec_connection "id"
// ```
type CoreIpsec struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The OCID of the [Cpe](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/) object.
	CpeId pulumi.StringOutput `pulumi:"cpeId"`
	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for `cpeLocalIdentifierType`.
	CpeLocalIdentifier pulumi.StringOutput `pulumi:"cpeLocalIdentifier"`
	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for `cpeLocalIdentifier`.
	CpeLocalIdentifierType pulumi.StringOutput `pulumi:"cpeLocalIdentifierType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringOutput `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The IPSec connection's current state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes pulumi.StringArrayOutput `pulumi:"staticRoutes"`
	// The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewCoreIpsec registers a new resource with the given unique name, arguments, and options.
func NewCoreIpsec(ctx *pulumi.Context,
	name string, args *CoreIpsecArgs, opts ...pulumi.ResourceOption) (*CoreIpsec, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.CpeId == nil {
		return nil, errors.New("invalid value for required argument 'CpeId'")
	}
	if args.DrgId == nil {
		return nil, errors.New("invalid value for required argument 'DrgId'")
	}
	if args.StaticRoutes == nil {
		return nil, errors.New("invalid value for required argument 'StaticRoutes'")
	}
	var resource CoreIpsec
	err := ctx.RegisterResource("oci:index/coreIpsec:CoreIpsec", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreIpsec gets an existing CoreIpsec resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreIpsec(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreIpsecState, opts ...pulumi.ResourceOption) (*CoreIpsec, error) {
	var resource CoreIpsec
	err := ctx.ReadResource("oci:index/coreIpsec:CoreIpsec", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreIpsec resources.
type coreIpsecState struct {
	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentId *string `pulumi:"compartmentId"`
	// The OCID of the [Cpe](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/) object.
	CpeId *string `pulumi:"cpeId"`
	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for `cpeLocalIdentifierType`.
	CpeLocalIdentifier *string `pulumi:"cpeLocalIdentifier"`
	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for `cpeLocalIdentifier`.
	CpeLocalIdentifierType *string `pulumi:"cpeLocalIdentifierType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId *string `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The IPSec connection's current state.
	State *string `pulumi:"state"`
	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes []string `pulumi:"staticRoutes"`
	// The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type CoreIpsecState struct {
	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentId pulumi.StringPtrInput
	// The OCID of the [Cpe](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/) object.
	CpeId pulumi.StringPtrInput
	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for `cpeLocalIdentifierType`.
	CpeLocalIdentifier pulumi.StringPtrInput
	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for `cpeLocalIdentifier`.
	CpeLocalIdentifierType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The IPSec connection's current state.
	State pulumi.StringPtrInput
	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes pulumi.StringArrayInput
	// The date and time the IPSec connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (CoreIpsecState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreIpsecState)(nil)).Elem()
}

type coreIpsecArgs struct {
	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the [Cpe](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/) object.
	CpeId string `pulumi:"cpeId"`
	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for `cpeLocalIdentifierType`.
	CpeLocalIdentifier *string `pulumi:"cpeLocalIdentifier"`
	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for `cpeLocalIdentifier`.
	CpeLocalIdentifierType *string `pulumi:"cpeLocalIdentifierType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId string `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes []string `pulumi:"staticRoutes"`
}

// The set of arguments for constructing a CoreIpsec resource.
type CoreIpsecArgs struct {
	// (Updatable) The OCID of the compartment to contain the IPSec connection.
	CompartmentId pulumi.StringInput
	// The OCID of the [Cpe](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/) object.
	CpeId pulumi.StringInput
	// (Updatable) Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the fully qualified domain name (FQDN)). The type of identifier you provide here must correspond to the value for `cpeLocalIdentifierType`.
	CpeLocalIdentifier pulumi.StringPtrInput
	// (Updatable) The type of identifier for your CPE device. The value you provide here must correspond to the value for `cpeLocalIdentifier`.
	CpeLocalIdentifierType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Static routes to the CPE. A static route's CIDR must not be a multicast address or class E address.
	StaticRoutes pulumi.StringArrayInput
}

func (CoreIpsecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreIpsecArgs)(nil)).Elem()
}

type CoreIpsecInput interface {
	pulumi.Input

	ToCoreIpsecOutput() CoreIpsecOutput
	ToCoreIpsecOutputWithContext(ctx context.Context) CoreIpsecOutput
}

func (*CoreIpsec) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreIpsec)(nil))
}

func (i *CoreIpsec) ToCoreIpsecOutput() CoreIpsecOutput {
	return i.ToCoreIpsecOutputWithContext(context.Background())
}

func (i *CoreIpsec) ToCoreIpsecOutputWithContext(ctx context.Context) CoreIpsecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreIpsecOutput)
}

func (i *CoreIpsec) ToCoreIpsecPtrOutput() CoreIpsecPtrOutput {
	return i.ToCoreIpsecPtrOutputWithContext(context.Background())
}

func (i *CoreIpsec) ToCoreIpsecPtrOutputWithContext(ctx context.Context) CoreIpsecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreIpsecPtrOutput)
}

type CoreIpsecPtrInput interface {
	pulumi.Input

	ToCoreIpsecPtrOutput() CoreIpsecPtrOutput
	ToCoreIpsecPtrOutputWithContext(ctx context.Context) CoreIpsecPtrOutput
}

type coreIpsecPtrType CoreIpsecArgs

func (*coreIpsecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreIpsec)(nil))
}

func (i *coreIpsecPtrType) ToCoreIpsecPtrOutput() CoreIpsecPtrOutput {
	return i.ToCoreIpsecPtrOutputWithContext(context.Background())
}

func (i *coreIpsecPtrType) ToCoreIpsecPtrOutputWithContext(ctx context.Context) CoreIpsecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreIpsecPtrOutput)
}

// CoreIpsecArrayInput is an input type that accepts CoreIpsecArray and CoreIpsecArrayOutput values.
// You can construct a concrete instance of `CoreIpsecArrayInput` via:
//
//          CoreIpsecArray{ CoreIpsecArgs{...} }
type CoreIpsecArrayInput interface {
	pulumi.Input

	ToCoreIpsecArrayOutput() CoreIpsecArrayOutput
	ToCoreIpsecArrayOutputWithContext(context.Context) CoreIpsecArrayOutput
}

type CoreIpsecArray []CoreIpsecInput

func (CoreIpsecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreIpsec)(nil)).Elem()
}

func (i CoreIpsecArray) ToCoreIpsecArrayOutput() CoreIpsecArrayOutput {
	return i.ToCoreIpsecArrayOutputWithContext(context.Background())
}

func (i CoreIpsecArray) ToCoreIpsecArrayOutputWithContext(ctx context.Context) CoreIpsecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreIpsecArrayOutput)
}

// CoreIpsecMapInput is an input type that accepts CoreIpsecMap and CoreIpsecMapOutput values.
// You can construct a concrete instance of `CoreIpsecMapInput` via:
//
//          CoreIpsecMap{ "key": CoreIpsecArgs{...} }
type CoreIpsecMapInput interface {
	pulumi.Input

	ToCoreIpsecMapOutput() CoreIpsecMapOutput
	ToCoreIpsecMapOutputWithContext(context.Context) CoreIpsecMapOutput
}

type CoreIpsecMap map[string]CoreIpsecInput

func (CoreIpsecMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreIpsec)(nil)).Elem()
}

func (i CoreIpsecMap) ToCoreIpsecMapOutput() CoreIpsecMapOutput {
	return i.ToCoreIpsecMapOutputWithContext(context.Background())
}

func (i CoreIpsecMap) ToCoreIpsecMapOutputWithContext(ctx context.Context) CoreIpsecMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreIpsecMapOutput)
}

type CoreIpsecOutput struct {
	*pulumi.OutputState
}

func (CoreIpsecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreIpsec)(nil))
}

func (o CoreIpsecOutput) ToCoreIpsecOutput() CoreIpsecOutput {
	return o
}

func (o CoreIpsecOutput) ToCoreIpsecOutputWithContext(ctx context.Context) CoreIpsecOutput {
	return o
}

func (o CoreIpsecOutput) ToCoreIpsecPtrOutput() CoreIpsecPtrOutput {
	return o.ToCoreIpsecPtrOutputWithContext(context.Background())
}

func (o CoreIpsecOutput) ToCoreIpsecPtrOutputWithContext(ctx context.Context) CoreIpsecPtrOutput {
	return o.ApplyT(func(v CoreIpsec) *CoreIpsec {
		return &v
	}).(CoreIpsecPtrOutput)
}

type CoreIpsecPtrOutput struct {
	*pulumi.OutputState
}

func (CoreIpsecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreIpsec)(nil))
}

func (o CoreIpsecPtrOutput) ToCoreIpsecPtrOutput() CoreIpsecPtrOutput {
	return o
}

func (o CoreIpsecPtrOutput) ToCoreIpsecPtrOutputWithContext(ctx context.Context) CoreIpsecPtrOutput {
	return o
}

type CoreIpsecArrayOutput struct{ *pulumi.OutputState }

func (CoreIpsecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreIpsec)(nil))
}

func (o CoreIpsecArrayOutput) ToCoreIpsecArrayOutput() CoreIpsecArrayOutput {
	return o
}

func (o CoreIpsecArrayOutput) ToCoreIpsecArrayOutputWithContext(ctx context.Context) CoreIpsecArrayOutput {
	return o
}

func (o CoreIpsecArrayOutput) Index(i pulumi.IntInput) CoreIpsecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreIpsec {
		return vs[0].([]CoreIpsec)[vs[1].(int)]
	}).(CoreIpsecOutput)
}

type CoreIpsecMapOutput struct{ *pulumi.OutputState }

func (CoreIpsecMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreIpsec)(nil))
}

func (o CoreIpsecMapOutput) ToCoreIpsecMapOutput() CoreIpsecMapOutput {
	return o
}

func (o CoreIpsecMapOutput) ToCoreIpsecMapOutputWithContext(ctx context.Context) CoreIpsecMapOutput {
	return o
}

func (o CoreIpsecMapOutput) MapIndex(k pulumi.StringInput) CoreIpsecOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreIpsec {
		return vs[0].(map[string]CoreIpsec)[vs[1].(string)]
	}).(CoreIpsecOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreIpsecOutput{})
	pulumi.RegisterOutputType(CoreIpsecPtrOutput{})
	pulumi.RegisterOutputType(CoreIpsecArrayOutput{})
	pulumi.RegisterOutputType(CoreIpsecMapOutput{})
}
