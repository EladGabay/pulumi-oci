// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetMarketplaceListingPackageAgreements
    {
        /// <summary>
        /// This data source provides the list of Listing Package Agreements in Oracle Cloud Infrastructure Marketplace service.
        /// 
        /// Returns the terms of use agreements that must be accepted before you can deploy the specified version of a package.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testListingPackageAgreements = Output.Create(Oci.GetMarketplaceListingPackageAgreements.InvokeAsync(new Oci.GetMarketplaceListingPackageAgreementsArgs
        ///         {
        ///             ListingId = oci_marketplace_listing.Test_listing.Id,
        ///             PackageVersion = @var.Listing_package_agreement_package_version,
        ///             CompartmentId = @var.Compartment_id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMarketplaceListingPackageAgreementsResult> InvokeAsync(GetMarketplaceListingPackageAgreementsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMarketplaceListingPackageAgreementsResult>("oci:index/getMarketplaceListingPackageAgreements:GetMarketplaceListingPackageAgreements", args ?? new GetMarketplaceListingPackageAgreementsArgs(), options.WithVersion());
    }


    public sealed class GetMarketplaceListingPackageAgreementsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        [Input("compartmentId")]
        public string? CompartmentId { get; set; }

        [Input("filters")]
        private List<Inputs.GetMarketplaceListingPackageAgreementsFilterArgs>? _filters;
        public List<Inputs.GetMarketplaceListingPackageAgreementsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetMarketplaceListingPackageAgreementsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The unique identifier for the listing.
        /// </summary>
        [Input("listingId", required: true)]
        public string ListingId { get; set; } = null!;

        /// <summary>
        /// The version of the package. Package versions are unique within a listing.
        /// </summary>
        [Input("packageVersion", required: true)]
        public string PackageVersion { get; set; } = null!;

        public GetMarketplaceListingPackageAgreementsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMarketplaceListingPackageAgreementsResult
    {
        /// <summary>
        /// The list of agreements.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplaceListingPackageAgreementsAgreementResult> Agreements;
        /// <summary>
        /// The unique identifier for the compartment.
        /// </summary>
        public readonly string? CompartmentId;
        public readonly ImmutableArray<Outputs.GetMarketplaceListingPackageAgreementsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ListingId;
        public readonly string PackageVersion;

        [OutputConstructor]
        private GetMarketplaceListingPackageAgreementsResult(
            ImmutableArray<Outputs.GetMarketplaceListingPackageAgreementsAgreementResult> agreements,

            string? compartmentId,

            ImmutableArray<Outputs.GetMarketplaceListingPackageAgreementsFilterResult> filters,

            string id,

            string listingId,

            string packageVersion)
        {
            Agreements = agreements;
            CompartmentId = compartmentId;
            Filters = filters;
            Id = id;
            ListingId = listingId;
            PackageVersion = packageVersion;
        }
    }
}
