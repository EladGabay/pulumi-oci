// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vault resource in Oracle Cloud Infrastructure Kms service.
//
// Creates a new vault. The type of vault you create determines key placement, pricing, and
// available options. Options include storage isolation, a dedicated service endpoint instead
// of a shared service endpoint for API calls, and either a dedicated hardware security module
// (HSM) or a multitenant HSM.
//
// As a provisioning operation, this call is subject to a Key Management limit that applies to
// the total number of requests across all provisioning write operations. Key Management might
// throttle this call to reject an otherwise valid request when the total rate of provisioning
// write operations exceeds 10 requests per second for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewKmsVault(ctx, "testVault", &oci.KmsVaultArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Vault_display_name),
// 			VaultType:     pulumi.Any(_var.Vault_vault_type),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Vaults can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/kmsVault:KmsVault test_vault "id"
// ```
type KmsVault struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment where you want to create this vault.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
	CryptoEndpoint pulumi.StringOutput `pulumi:"cryptoEndpoint"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary pulumi.BoolOutput `pulumi:"isPrimary"`
	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint pulumi.StringOutput `pulumi:"managementEndpoint"`
	// Vault replica details
	ReplicaDetails KmsVaultReplicaDetailsOutput `pulumi:"replicaDetails"`
	// (Updatable) Details where vault was backed up.
	RestoreFromFile KmsVaultRestoreFromFilePtrOutput `pulumi:"restoreFromFile"`
	// (Updatable) Details where vault was backed up
	RestoreFromObjectStore KmsVaultRestoreFromObjectStorePtrOutput `pulumi:"restoreFromObjectStore"`
	RestoreTrigger         pulumi.BoolPtrOutput                    `pulumi:"restoreTrigger"`
	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultId pulumi.StringOutput `pulumi:"restoredFromVaultId"`
	// The vault's current lifecycle state.  Example: `DELETED`
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringOutput `pulumi:"timeOfDeletion"`
	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType pulumi.StringOutput `pulumi:"vaultType"`
}

// NewKmsVault registers a new resource with the given unique name, arguments, and options.
func NewKmsVault(ctx *pulumi.Context,
	name string, args *KmsVaultArgs, opts ...pulumi.ResourceOption) (*KmsVault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.VaultType == nil {
		return nil, errors.New("invalid value for required argument 'VaultType'")
	}
	var resource KmsVault
	err := ctx.RegisterResource("oci:index/kmsVault:KmsVault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsVault gets an existing KmsVault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsVaultState, opts ...pulumi.ResourceOption) (*KmsVault, error) {
	var resource KmsVault
	err := ctx.ReadResource("oci:index/kmsVault:KmsVault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsVault resources.
type kmsVaultState struct {
	// (Updatable) The OCID of the compartment where you want to create this vault.
	CompartmentId *string `pulumi:"compartmentId"`
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
	CryptoEndpoint *string `pulumi:"cryptoEndpoint"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary *bool `pulumi:"isPrimary"`
	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint *string `pulumi:"managementEndpoint"`
	// Vault replica details
	ReplicaDetails *KmsVaultReplicaDetails `pulumi:"replicaDetails"`
	// (Updatable) Details where vault was backed up.
	RestoreFromFile *KmsVaultRestoreFromFile `pulumi:"restoreFromFile"`
	// (Updatable) Details where vault was backed up
	RestoreFromObjectStore *KmsVaultRestoreFromObjectStore `pulumi:"restoreFromObjectStore"`
	RestoreTrigger         *bool                           `pulumi:"restoreTrigger"`
	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultId *string `pulumi:"restoredFromVaultId"`
	// The vault's current lifecycle state.  Example: `DELETED`
	State *string `pulumi:"state"`
	// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType *string `pulumi:"vaultType"`
}

type KmsVaultState struct {
	// (Updatable) The OCID of the compartment where you want to create this vault.
	CompartmentId pulumi.StringPtrInput
	// The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
	CryptoEndpoint pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary pulumi.BoolPtrInput
	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint pulumi.StringPtrInput
	// Vault replica details
	ReplicaDetails KmsVaultReplicaDetailsPtrInput
	// (Updatable) Details where vault was backed up.
	RestoreFromFile KmsVaultRestoreFromFilePtrInput
	// (Updatable) Details where vault was backed up
	RestoreFromObjectStore KmsVaultRestoreFromObjectStorePtrInput
	RestoreTrigger         pulumi.BoolPtrInput
	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultId pulumi.StringPtrInput
	// The vault's current lifecycle state.  Example: `DELETED`
	State pulumi.StringPtrInput
	// The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput
	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType pulumi.StringPtrInput
}

func (KmsVaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsVaultState)(nil)).Elem()
}

type kmsVaultArgs struct {
	// (Updatable) The OCID of the compartment where you want to create this vault.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Details where vault was backed up.
	RestoreFromFile *KmsVaultRestoreFromFile `pulumi:"restoreFromFile"`
	// (Updatable) Details where vault was backed up
	RestoreFromObjectStore *KmsVaultRestoreFromObjectStore `pulumi:"restoreFromObjectStore"`
	RestoreTrigger         *bool                           `pulumi:"restoreTrigger"`
	// (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType string `pulumi:"vaultType"`
}

// The set of arguments for constructing a KmsVault resource.
type KmsVaultArgs struct {
	// (Updatable) The OCID of the compartment where you want to create this vault.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Details where vault was backed up.
	RestoreFromFile KmsVaultRestoreFromFilePtrInput
	// (Updatable) Details where vault was backed up
	RestoreFromObjectStore KmsVaultRestoreFromObjectStorePtrInput
	RestoreTrigger         pulumi.BoolPtrInput
	// (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput
	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	VaultType pulumi.StringInput
}

func (KmsVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsVaultArgs)(nil)).Elem()
}

type KmsVaultInput interface {
	pulumi.Input

	ToKmsVaultOutput() KmsVaultOutput
	ToKmsVaultOutputWithContext(ctx context.Context) KmsVaultOutput
}

func (*KmsVault) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsVault)(nil))
}

func (i *KmsVault) ToKmsVaultOutput() KmsVaultOutput {
	return i.ToKmsVaultOutputWithContext(context.Background())
}

func (i *KmsVault) ToKmsVaultOutputWithContext(ctx context.Context) KmsVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultOutput)
}

func (i *KmsVault) ToKmsVaultPtrOutput() KmsVaultPtrOutput {
	return i.ToKmsVaultPtrOutputWithContext(context.Background())
}

func (i *KmsVault) ToKmsVaultPtrOutputWithContext(ctx context.Context) KmsVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultPtrOutput)
}

type KmsVaultPtrInput interface {
	pulumi.Input

	ToKmsVaultPtrOutput() KmsVaultPtrOutput
	ToKmsVaultPtrOutputWithContext(ctx context.Context) KmsVaultPtrOutput
}

type kmsVaultPtrType KmsVaultArgs

func (*kmsVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsVault)(nil))
}

func (i *kmsVaultPtrType) ToKmsVaultPtrOutput() KmsVaultPtrOutput {
	return i.ToKmsVaultPtrOutputWithContext(context.Background())
}

func (i *kmsVaultPtrType) ToKmsVaultPtrOutputWithContext(ctx context.Context) KmsVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultPtrOutput)
}

// KmsVaultArrayInput is an input type that accepts KmsVaultArray and KmsVaultArrayOutput values.
// You can construct a concrete instance of `KmsVaultArrayInput` via:
//
//          KmsVaultArray{ KmsVaultArgs{...} }
type KmsVaultArrayInput interface {
	pulumi.Input

	ToKmsVaultArrayOutput() KmsVaultArrayOutput
	ToKmsVaultArrayOutputWithContext(context.Context) KmsVaultArrayOutput
}

type KmsVaultArray []KmsVaultInput

func (KmsVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsVault)(nil)).Elem()
}

func (i KmsVaultArray) ToKmsVaultArrayOutput() KmsVaultArrayOutput {
	return i.ToKmsVaultArrayOutputWithContext(context.Background())
}

func (i KmsVaultArray) ToKmsVaultArrayOutputWithContext(ctx context.Context) KmsVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultArrayOutput)
}

// KmsVaultMapInput is an input type that accepts KmsVaultMap and KmsVaultMapOutput values.
// You can construct a concrete instance of `KmsVaultMapInput` via:
//
//          KmsVaultMap{ "key": KmsVaultArgs{...} }
type KmsVaultMapInput interface {
	pulumi.Input

	ToKmsVaultMapOutput() KmsVaultMapOutput
	ToKmsVaultMapOutputWithContext(context.Context) KmsVaultMapOutput
}

type KmsVaultMap map[string]KmsVaultInput

func (KmsVaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsVault)(nil)).Elem()
}

func (i KmsVaultMap) ToKmsVaultMapOutput() KmsVaultMapOutput {
	return i.ToKmsVaultMapOutputWithContext(context.Background())
}

func (i KmsVaultMap) ToKmsVaultMapOutputWithContext(ctx context.Context) KmsVaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsVaultMapOutput)
}

type KmsVaultOutput struct {
	*pulumi.OutputState
}

func (KmsVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsVault)(nil))
}

func (o KmsVaultOutput) ToKmsVaultOutput() KmsVaultOutput {
	return o
}

func (o KmsVaultOutput) ToKmsVaultOutputWithContext(ctx context.Context) KmsVaultOutput {
	return o
}

func (o KmsVaultOutput) ToKmsVaultPtrOutput() KmsVaultPtrOutput {
	return o.ToKmsVaultPtrOutputWithContext(context.Background())
}

func (o KmsVaultOutput) ToKmsVaultPtrOutputWithContext(ctx context.Context) KmsVaultPtrOutput {
	return o.ApplyT(func(v KmsVault) *KmsVault {
		return &v
	}).(KmsVaultPtrOutput)
}

type KmsVaultPtrOutput struct {
	*pulumi.OutputState
}

func (KmsVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsVault)(nil))
}

func (o KmsVaultPtrOutput) ToKmsVaultPtrOutput() KmsVaultPtrOutput {
	return o
}

func (o KmsVaultPtrOutput) ToKmsVaultPtrOutputWithContext(ctx context.Context) KmsVaultPtrOutput {
	return o
}

type KmsVaultArrayOutput struct{ *pulumi.OutputState }

func (KmsVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KmsVault)(nil))
}

func (o KmsVaultArrayOutput) ToKmsVaultArrayOutput() KmsVaultArrayOutput {
	return o
}

func (o KmsVaultArrayOutput) ToKmsVaultArrayOutputWithContext(ctx context.Context) KmsVaultArrayOutput {
	return o
}

func (o KmsVaultArrayOutput) Index(i pulumi.IntInput) KmsVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KmsVault {
		return vs[0].([]KmsVault)[vs[1].(int)]
	}).(KmsVaultOutput)
}

type KmsVaultMapOutput struct{ *pulumi.OutputState }

func (KmsVaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KmsVault)(nil))
}

func (o KmsVaultMapOutput) ToKmsVaultMapOutput() KmsVaultMapOutput {
	return o
}

func (o KmsVaultMapOutput) ToKmsVaultMapOutputWithContext(ctx context.Context) KmsVaultMapOutput {
	return o
}

func (o KmsVaultMapOutput) MapIndex(k pulumi.StringInput) KmsVaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KmsVault {
		return vs[0].(map[string]KmsVault)[vs[1].(string)]
	}).(KmsVaultOutput)
}

func init() {
	pulumi.RegisterOutputType(KmsVaultOutput{})
	pulumi.RegisterOutputType(KmsVaultPtrOutput{})
	pulumi.RegisterOutputType(KmsVaultArrayOutput{})
	pulumi.RegisterOutputType(KmsVaultMapOutput{})
}
