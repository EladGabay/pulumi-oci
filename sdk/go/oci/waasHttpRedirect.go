// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Http Redirect resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Creates a new HTTP Redirect on the WAF edge.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewWaasHttpRedirect(ctx, "testHttpRedirect", &oci.WaasHttpRedirectArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Domain:        pulumi.Any(_var.Http_redirect_domain),
// 			Target: &WaasHttpRedirectTargetArgs{
// 				Host:     pulumi.Any(_var.Http_redirect_target_host),
// 				Path:     pulumi.Any(_var.Http_redirect_target_path),
// 				Protocol: pulumi.Any(_var.Http_redirect_target_protocol),
// 				Query:    pulumi.Any(_var.Http_redirect_target_query),
// 				Port:     pulumi.Any(_var.Http_redirect_target_port),
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Http_redirect_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			ResponseCode: pulumi.Any(_var.Http_redirect_response_code),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// HttpRedirects can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/waasHttpRedirect:WaasHttpRedirect test_http_redirect "id"
// ```
type WaasHttpRedirect struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirects compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The domain from which traffic will be redirected.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
	ResponseCode pulumi.IntOutput `pulumi:"responseCode"`
	// The current lifecycle state of the HTTP Redirect.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The redirect target object including all the redirect data.
	Target WaasHttpRedirectTargetOutput `pulumi:"target"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewWaasHttpRedirect registers a new resource with the given unique name, arguments, and options.
func NewWaasHttpRedirect(ctx *pulumi.Context,
	name string, args *WaasHttpRedirectArgs, opts ...pulumi.ResourceOption) (*WaasHttpRedirect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	var resource WaasHttpRedirect
	err := ctx.RegisterResource("oci:index/waasHttpRedirect:WaasHttpRedirect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWaasHttpRedirect gets an existing WaasHttpRedirect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWaasHttpRedirect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WaasHttpRedirectState, opts ...pulumi.ResourceOption) (*WaasHttpRedirect, error) {
	var resource WaasHttpRedirect
	err := ctx.ReadResource("oci:index/waasHttpRedirect:WaasHttpRedirect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WaasHttpRedirect resources.
type waasHttpRedirectState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirects compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The domain from which traffic will be redirected.
	Domain *string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
	ResponseCode *int `pulumi:"responseCode"`
	// The current lifecycle state of the HTTP Redirect.
	State *string `pulumi:"state"`
	// (Updatable) The redirect target object including all the redirect data.
	Target *WaasHttpRedirectTarget `pulumi:"target"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
}

type WaasHttpRedirectState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirects compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The domain from which traffic will be redirected.
	Domain pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
	ResponseCode pulumi.IntPtrInput
	// The current lifecycle state of the HTTP Redirect.
	State pulumi.StringPtrInput
	// (Updatable) The redirect target object including all the redirect data.
	Target WaasHttpRedirectTargetPtrInput
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringPtrInput
}

func (WaasHttpRedirectState) ElementType() reflect.Type {
	return reflect.TypeOf((*waasHttpRedirectState)(nil)).Elem()
}

type waasHttpRedirectArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirects compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The domain from which traffic will be redirected.
	Domain string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
	ResponseCode *int `pulumi:"responseCode"`
	// (Updatable) The redirect target object including all the redirect data.
	Target WaasHttpRedirectTarget `pulumi:"target"`
}

// The set of arguments for constructing a WaasHttpRedirect resource.
type WaasHttpRedirectArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirects compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The domain from which traffic will be redirected.
	Domain pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
	ResponseCode pulumi.IntPtrInput
	// (Updatable) The redirect target object including all the redirect data.
	Target WaasHttpRedirectTargetInput
}

func (WaasHttpRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*waasHttpRedirectArgs)(nil)).Elem()
}

type WaasHttpRedirectInput interface {
	pulumi.Input

	ToWaasHttpRedirectOutput() WaasHttpRedirectOutput
	ToWaasHttpRedirectOutputWithContext(ctx context.Context) WaasHttpRedirectOutput
}

func (*WaasHttpRedirect) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasHttpRedirect)(nil))
}

func (i *WaasHttpRedirect) ToWaasHttpRedirectOutput() WaasHttpRedirectOutput {
	return i.ToWaasHttpRedirectOutputWithContext(context.Background())
}

func (i *WaasHttpRedirect) ToWaasHttpRedirectOutputWithContext(ctx context.Context) WaasHttpRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasHttpRedirectOutput)
}

func (i *WaasHttpRedirect) ToWaasHttpRedirectPtrOutput() WaasHttpRedirectPtrOutput {
	return i.ToWaasHttpRedirectPtrOutputWithContext(context.Background())
}

func (i *WaasHttpRedirect) ToWaasHttpRedirectPtrOutputWithContext(ctx context.Context) WaasHttpRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasHttpRedirectPtrOutput)
}

type WaasHttpRedirectPtrInput interface {
	pulumi.Input

	ToWaasHttpRedirectPtrOutput() WaasHttpRedirectPtrOutput
	ToWaasHttpRedirectPtrOutputWithContext(ctx context.Context) WaasHttpRedirectPtrOutput
}

type waasHttpRedirectPtrType WaasHttpRedirectArgs

func (*waasHttpRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasHttpRedirect)(nil))
}

func (i *waasHttpRedirectPtrType) ToWaasHttpRedirectPtrOutput() WaasHttpRedirectPtrOutput {
	return i.ToWaasHttpRedirectPtrOutputWithContext(context.Background())
}

func (i *waasHttpRedirectPtrType) ToWaasHttpRedirectPtrOutputWithContext(ctx context.Context) WaasHttpRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasHttpRedirectPtrOutput)
}

// WaasHttpRedirectArrayInput is an input type that accepts WaasHttpRedirectArray and WaasHttpRedirectArrayOutput values.
// You can construct a concrete instance of `WaasHttpRedirectArrayInput` via:
//
//          WaasHttpRedirectArray{ WaasHttpRedirectArgs{...} }
type WaasHttpRedirectArrayInput interface {
	pulumi.Input

	ToWaasHttpRedirectArrayOutput() WaasHttpRedirectArrayOutput
	ToWaasHttpRedirectArrayOutputWithContext(context.Context) WaasHttpRedirectArrayOutput
}

type WaasHttpRedirectArray []WaasHttpRedirectInput

func (WaasHttpRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaasHttpRedirect)(nil)).Elem()
}

func (i WaasHttpRedirectArray) ToWaasHttpRedirectArrayOutput() WaasHttpRedirectArrayOutput {
	return i.ToWaasHttpRedirectArrayOutputWithContext(context.Background())
}

func (i WaasHttpRedirectArray) ToWaasHttpRedirectArrayOutputWithContext(ctx context.Context) WaasHttpRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasHttpRedirectArrayOutput)
}

// WaasHttpRedirectMapInput is an input type that accepts WaasHttpRedirectMap and WaasHttpRedirectMapOutput values.
// You can construct a concrete instance of `WaasHttpRedirectMapInput` via:
//
//          WaasHttpRedirectMap{ "key": WaasHttpRedirectArgs{...} }
type WaasHttpRedirectMapInput interface {
	pulumi.Input

	ToWaasHttpRedirectMapOutput() WaasHttpRedirectMapOutput
	ToWaasHttpRedirectMapOutputWithContext(context.Context) WaasHttpRedirectMapOutput
}

type WaasHttpRedirectMap map[string]WaasHttpRedirectInput

func (WaasHttpRedirectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaasHttpRedirect)(nil)).Elem()
}

func (i WaasHttpRedirectMap) ToWaasHttpRedirectMapOutput() WaasHttpRedirectMapOutput {
	return i.ToWaasHttpRedirectMapOutputWithContext(context.Background())
}

func (i WaasHttpRedirectMap) ToWaasHttpRedirectMapOutputWithContext(ctx context.Context) WaasHttpRedirectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaasHttpRedirectMapOutput)
}

type WaasHttpRedirectOutput struct {
	*pulumi.OutputState
}

func (WaasHttpRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaasHttpRedirect)(nil))
}

func (o WaasHttpRedirectOutput) ToWaasHttpRedirectOutput() WaasHttpRedirectOutput {
	return o
}

func (o WaasHttpRedirectOutput) ToWaasHttpRedirectOutputWithContext(ctx context.Context) WaasHttpRedirectOutput {
	return o
}

func (o WaasHttpRedirectOutput) ToWaasHttpRedirectPtrOutput() WaasHttpRedirectPtrOutput {
	return o.ToWaasHttpRedirectPtrOutputWithContext(context.Background())
}

func (o WaasHttpRedirectOutput) ToWaasHttpRedirectPtrOutputWithContext(ctx context.Context) WaasHttpRedirectPtrOutput {
	return o.ApplyT(func(v WaasHttpRedirect) *WaasHttpRedirect {
		return &v
	}).(WaasHttpRedirectPtrOutput)
}

type WaasHttpRedirectPtrOutput struct {
	*pulumi.OutputState
}

func (WaasHttpRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaasHttpRedirect)(nil))
}

func (o WaasHttpRedirectPtrOutput) ToWaasHttpRedirectPtrOutput() WaasHttpRedirectPtrOutput {
	return o
}

func (o WaasHttpRedirectPtrOutput) ToWaasHttpRedirectPtrOutputWithContext(ctx context.Context) WaasHttpRedirectPtrOutput {
	return o
}

type WaasHttpRedirectArrayOutput struct{ *pulumi.OutputState }

func (WaasHttpRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WaasHttpRedirect)(nil))
}

func (o WaasHttpRedirectArrayOutput) ToWaasHttpRedirectArrayOutput() WaasHttpRedirectArrayOutput {
	return o
}

func (o WaasHttpRedirectArrayOutput) ToWaasHttpRedirectArrayOutputWithContext(ctx context.Context) WaasHttpRedirectArrayOutput {
	return o
}

func (o WaasHttpRedirectArrayOutput) Index(i pulumi.IntInput) WaasHttpRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WaasHttpRedirect {
		return vs[0].([]WaasHttpRedirect)[vs[1].(int)]
	}).(WaasHttpRedirectOutput)
}

type WaasHttpRedirectMapOutput struct{ *pulumi.OutputState }

func (WaasHttpRedirectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaasHttpRedirect)(nil))
}

func (o WaasHttpRedirectMapOutput) ToWaasHttpRedirectMapOutput() WaasHttpRedirectMapOutput {
	return o
}

func (o WaasHttpRedirectMapOutput) ToWaasHttpRedirectMapOutputWithContext(ctx context.Context) WaasHttpRedirectMapOutput {
	return o
}

func (o WaasHttpRedirectMapOutput) MapIndex(k pulumi.StringInput) WaasHttpRedirectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WaasHttpRedirect {
		return vs[0].(map[string]WaasHttpRedirect)[vs[1].(string)]
	}).(WaasHttpRedirectOutput)
}

func init() {
	pulumi.RegisterOutputType(WaasHttpRedirectOutput{})
	pulumi.RegisterOutputType(WaasHttpRedirectPtrOutput{})
	pulumi.RegisterOutputType(WaasHttpRedirectArrayOutput{})
	pulumi.RegisterOutputType(WaasHttpRedirectMapOutput{})
}
