// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Subscription resource in Oracle Cloud Infrastructure Notifications service.
//
// Creates a subscription for the specified topic and sends a subscription confirmation URL to the endpoint. The subscription remains in "Pending" status until it has been confirmed.
// For information about confirming subscriptions, see
// [To confirm a subscription](https://docs.cloud.oracle.com/iaas/Content/Notification/Tasks/managingtopicsandsubscriptions.htm#confirmSub).
//
// Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewOnsSubscription(ctx, "testSubscription", &oci.OnsSubscriptionArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			Endpoint:      pulumi.Any(_var.Subscription_endpoint),
// 			Protocol:      pulumi.Any(_var.Subscription_protocol),
// 			TopicId:       pulumi.Any(oci_ons_notification_topic.Test_notification_topic.Id),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Subscriptions can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/onsSubscription:OnsSubscription test_subscription "id"
// ```
type OnsSubscription struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The time when this suscription was created.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The delivery policy of the subscription. Stored as a JSON string.
	DeliveryPolicy pulumi.StringOutput `pulumi:"deliveryPolicy"`
	// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. HTTP-based protocols use URL endpoints that begin with "http:" or "https:". A URL cannot exceed 512 characters. Avoid entering confidential information.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The protocol used for the subscription.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
	State pulumi.StringOutput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic for the subscription.
	TopicId pulumi.StringOutput `pulumi:"topicId"`
}

// NewOnsSubscription registers a new resource with the given unique name, arguments, and options.
func NewOnsSubscription(ctx *pulumi.Context,
	name string, args *OnsSubscriptionArgs, opts ...pulumi.ResourceOption) (*OnsSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.TopicId == nil {
		return nil, errors.New("invalid value for required argument 'TopicId'")
	}
	var resource OnsSubscription
	err := ctx.RegisterResource("oci:index/onsSubscription:OnsSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOnsSubscription gets an existing OnsSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOnsSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OnsSubscriptionState, opts ...pulumi.ResourceOption) (*OnsSubscription, error) {
	var resource OnsSubscription
	err := ctx.ReadResource("oci:index/onsSubscription:OnsSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OnsSubscription resources.
type onsSubscriptionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId *string `pulumi:"compartmentId"`
	// The time when this suscription was created.
	CreatedTime *string `pulumi:"createdTime"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The delivery policy of the subscription. Stored as a JSON string.
	DeliveryPolicy *string `pulumi:"deliveryPolicy"`
	// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. HTTP-based protocols use URL endpoints that begin with "http:" or "https:". A URL cannot exceed 512 characters. Avoid entering confidential information.
	Endpoint *string `pulumi:"endpoint"`
	// For optimistic concurrency control. See `if-match`.
	Etag *string `pulumi:"etag"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The protocol used for the subscription.
	Protocol *string `pulumi:"protocol"`
	// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic for the subscription.
	TopicId *string `pulumi:"topicId"`
}

type OnsSubscriptionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId pulumi.StringPtrInput
	// The time when this suscription was created.
	CreatedTime pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The delivery policy of the subscription. Stored as a JSON string.
	DeliveryPolicy pulumi.StringPtrInput
	// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. HTTP-based protocols use URL endpoints that begin with "http:" or "https:". A URL cannot exceed 512 characters. Avoid entering confidential information.
	Endpoint pulumi.StringPtrInput
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The protocol used for the subscription.
	Protocol pulumi.StringPtrInput
	// The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
	State pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic for the subscription.
	TopicId pulumi.StringPtrInput
}

func (OnsSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*onsSubscriptionState)(nil)).Elem()
}

type onsSubscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The delivery policy of the subscription. Stored as a JSON string.
	DeliveryPolicy *string `pulumi:"deliveryPolicy"`
	// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. HTTP-based protocols use URL endpoints that begin with "http:" or "https:". A URL cannot exceed 512 characters. Avoid entering confidential information.
	Endpoint string `pulumi:"endpoint"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The protocol used for the subscription.
	Protocol string `pulumi:"protocol"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic for the subscription.
	TopicId string `pulumi:"topicId"`
}

// The set of arguments for constructing a OnsSubscription resource.
type OnsSubscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The delivery policy of the subscription. Stored as a JSON string.
	DeliveryPolicy pulumi.StringPtrInput
	// A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol. HTTP-based protocols use URL endpoints that begin with "http:" or "https:". A URL cannot exceed 512 characters. Avoid entering confidential information.
	Endpoint pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The protocol used for the subscription.
	Protocol pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic for the subscription.
	TopicId pulumi.StringInput
}

func (OnsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*onsSubscriptionArgs)(nil)).Elem()
}

type OnsSubscriptionInput interface {
	pulumi.Input

	ToOnsSubscriptionOutput() OnsSubscriptionOutput
	ToOnsSubscriptionOutputWithContext(ctx context.Context) OnsSubscriptionOutput
}

func (*OnsSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((*OnsSubscription)(nil))
}

func (i *OnsSubscription) ToOnsSubscriptionOutput() OnsSubscriptionOutput {
	return i.ToOnsSubscriptionOutputWithContext(context.Background())
}

func (i *OnsSubscription) ToOnsSubscriptionOutputWithContext(ctx context.Context) OnsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnsSubscriptionOutput)
}

func (i *OnsSubscription) ToOnsSubscriptionPtrOutput() OnsSubscriptionPtrOutput {
	return i.ToOnsSubscriptionPtrOutputWithContext(context.Background())
}

func (i *OnsSubscription) ToOnsSubscriptionPtrOutputWithContext(ctx context.Context) OnsSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnsSubscriptionPtrOutput)
}

type OnsSubscriptionPtrInput interface {
	pulumi.Input

	ToOnsSubscriptionPtrOutput() OnsSubscriptionPtrOutput
	ToOnsSubscriptionPtrOutputWithContext(ctx context.Context) OnsSubscriptionPtrOutput
}

type onsSubscriptionPtrType OnsSubscriptionArgs

func (*onsSubscriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnsSubscription)(nil))
}

func (i *onsSubscriptionPtrType) ToOnsSubscriptionPtrOutput() OnsSubscriptionPtrOutput {
	return i.ToOnsSubscriptionPtrOutputWithContext(context.Background())
}

func (i *onsSubscriptionPtrType) ToOnsSubscriptionPtrOutputWithContext(ctx context.Context) OnsSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnsSubscriptionPtrOutput)
}

// OnsSubscriptionArrayInput is an input type that accepts OnsSubscriptionArray and OnsSubscriptionArrayOutput values.
// You can construct a concrete instance of `OnsSubscriptionArrayInput` via:
//
//          OnsSubscriptionArray{ OnsSubscriptionArgs{...} }
type OnsSubscriptionArrayInput interface {
	pulumi.Input

	ToOnsSubscriptionArrayOutput() OnsSubscriptionArrayOutput
	ToOnsSubscriptionArrayOutputWithContext(context.Context) OnsSubscriptionArrayOutput
}

type OnsSubscriptionArray []OnsSubscriptionInput

func (OnsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OnsSubscription)(nil)).Elem()
}

func (i OnsSubscriptionArray) ToOnsSubscriptionArrayOutput() OnsSubscriptionArrayOutput {
	return i.ToOnsSubscriptionArrayOutputWithContext(context.Background())
}

func (i OnsSubscriptionArray) ToOnsSubscriptionArrayOutputWithContext(ctx context.Context) OnsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnsSubscriptionArrayOutput)
}

// OnsSubscriptionMapInput is an input type that accepts OnsSubscriptionMap and OnsSubscriptionMapOutput values.
// You can construct a concrete instance of `OnsSubscriptionMapInput` via:
//
//          OnsSubscriptionMap{ "key": OnsSubscriptionArgs{...} }
type OnsSubscriptionMapInput interface {
	pulumi.Input

	ToOnsSubscriptionMapOutput() OnsSubscriptionMapOutput
	ToOnsSubscriptionMapOutputWithContext(context.Context) OnsSubscriptionMapOutput
}

type OnsSubscriptionMap map[string]OnsSubscriptionInput

func (OnsSubscriptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OnsSubscription)(nil)).Elem()
}

func (i OnsSubscriptionMap) ToOnsSubscriptionMapOutput() OnsSubscriptionMapOutput {
	return i.ToOnsSubscriptionMapOutputWithContext(context.Background())
}

func (i OnsSubscriptionMap) ToOnsSubscriptionMapOutputWithContext(ctx context.Context) OnsSubscriptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnsSubscriptionMapOutput)
}

type OnsSubscriptionOutput struct {
	*pulumi.OutputState
}

func (OnsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnsSubscription)(nil))
}

func (o OnsSubscriptionOutput) ToOnsSubscriptionOutput() OnsSubscriptionOutput {
	return o
}

func (o OnsSubscriptionOutput) ToOnsSubscriptionOutputWithContext(ctx context.Context) OnsSubscriptionOutput {
	return o
}

func (o OnsSubscriptionOutput) ToOnsSubscriptionPtrOutput() OnsSubscriptionPtrOutput {
	return o.ToOnsSubscriptionPtrOutputWithContext(context.Background())
}

func (o OnsSubscriptionOutput) ToOnsSubscriptionPtrOutputWithContext(ctx context.Context) OnsSubscriptionPtrOutput {
	return o.ApplyT(func(v OnsSubscription) *OnsSubscription {
		return &v
	}).(OnsSubscriptionPtrOutput)
}

type OnsSubscriptionPtrOutput struct {
	*pulumi.OutputState
}

func (OnsSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnsSubscription)(nil))
}

func (o OnsSubscriptionPtrOutput) ToOnsSubscriptionPtrOutput() OnsSubscriptionPtrOutput {
	return o
}

func (o OnsSubscriptionPtrOutput) ToOnsSubscriptionPtrOutputWithContext(ctx context.Context) OnsSubscriptionPtrOutput {
	return o
}

type OnsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (OnsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnsSubscription)(nil))
}

func (o OnsSubscriptionArrayOutput) ToOnsSubscriptionArrayOutput() OnsSubscriptionArrayOutput {
	return o
}

func (o OnsSubscriptionArrayOutput) ToOnsSubscriptionArrayOutputWithContext(ctx context.Context) OnsSubscriptionArrayOutput {
	return o
}

func (o OnsSubscriptionArrayOutput) Index(i pulumi.IntInput) OnsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnsSubscription {
		return vs[0].([]OnsSubscription)[vs[1].(int)]
	}).(OnsSubscriptionOutput)
}

type OnsSubscriptionMapOutput struct{ *pulumi.OutputState }

func (OnsSubscriptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OnsSubscription)(nil))
}

func (o OnsSubscriptionMapOutput) ToOnsSubscriptionMapOutput() OnsSubscriptionMapOutput {
	return o
}

func (o OnsSubscriptionMapOutput) ToOnsSubscriptionMapOutputWithContext(ctx context.Context) OnsSubscriptionMapOutput {
	return o
}

func (o OnsSubscriptionMapOutput) MapIndex(k pulumi.StringInput) OnsSubscriptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OnsSubscription {
		return vs[0].(map[string]OnsSubscription)[vs[1].(string)]
	}).(OnsSubscriptionOutput)
}

func init() {
	pulumi.RegisterOutputType(OnsSubscriptionOutput{})
	pulumi.RegisterOutputType(OnsSubscriptionPtrOutput{})
	pulumi.RegisterOutputType(OnsSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(OnsSubscriptionMapOutput{})
}
