// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This resource provides the Container Repository resource in Oracle Cloud Infrastructure Artifacts service.
 *
 * Create a new empty container repository. Avoid entering confidential information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerRepository = new oci.ArtifactsContainerRepository("testContainerRepository", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.container_repository_display_name,
 *     isImmutable: _var.container_repository_is_immutable,
 *     isPublic: _var.container_repository_is_public,
 *     readme: {
 *         content: _var.container_repository_readme_content,
 *         format: _var.container_repository_readme_format,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ContainerRepositories can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:index/artifactsContainerRepository:ArtifactsContainerRepository test_container_repository "container/repositories/{repositoryId}"
 * ```
 */
export class ArtifactsContainerRepository extends pulumi.CustomResource {
    /**
     * Get an existing ArtifactsContainerRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArtifactsContainerRepositoryState, opts?: pulumi.CustomResourceOptions): ArtifactsContainerRepository {
        return new ArtifactsContainerRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/artifactsContainerRepository:ArtifactsContainerRepository';

    /**
     * Returns true if the given object is an instance of ArtifactsContainerRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArtifactsContainerRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArtifactsContainerRepository.__pulumiType;
    }

    /**
     * Total storage size in GBs that will be charged.
     */
    public /*out*/ readonly billableSizeInGbs!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The id of the user or principal that created the resource.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The container repository name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Total number of images.
     */
    public /*out*/ readonly imageCount!: pulumi.Output<number>;
    /**
     * (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     */
    public readonly isImmutable!: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
     */
    public readonly isPublic!: pulumi.Output<boolean>;
    /**
     * Total number of layers.
     */
    public /*out*/ readonly layerCount!: pulumi.Output<number>;
    /**
     * Total storage in bytes consumed by layers.
     */
    public /*out*/ readonly layersSizeInBytes!: pulumi.Output<string>;
    /**
     * (Updatable) Container repository readme.
     */
    public readonly readme!: pulumi.Output<outputs.ArtifactsContainerRepositoryReadme>;
    /**
     * The current state of the container repository.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     */
    public /*out*/ readonly timeLastPushed!: pulumi.Output<string>;

    /**
     * Create a ArtifactsContainerRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArtifactsContainerRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArtifactsContainerRepositoryArgs | ArtifactsContainerRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArtifactsContainerRepositoryState | undefined;
            inputs["billableSizeInGbs"] = state ? state.billableSizeInGbs : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["createdBy"] = state ? state.createdBy : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["imageCount"] = state ? state.imageCount : undefined;
            inputs["isImmutable"] = state ? state.isImmutable : undefined;
            inputs["isPublic"] = state ? state.isPublic : undefined;
            inputs["layerCount"] = state ? state.layerCount : undefined;
            inputs["layersSizeInBytes"] = state ? state.layersSizeInBytes : undefined;
            inputs["readme"] = state ? state.readme : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeLastPushed"] = state ? state.timeLastPushed : undefined;
        } else {
            const args = argsOrState as ArtifactsContainerRepositoryArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["isImmutable"] = args ? args.isImmutable : undefined;
            inputs["isPublic"] = args ? args.isPublic : undefined;
            inputs["readme"] = args ? args.readme : undefined;
            inputs["billableSizeInGbs"] = undefined /*out*/;
            inputs["createdBy"] = undefined /*out*/;
            inputs["imageCount"] = undefined /*out*/;
            inputs["layerCount"] = undefined /*out*/;
            inputs["layersSizeInBytes"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeLastPushed"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ArtifactsContainerRepository.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ArtifactsContainerRepository resources.
 */
export interface ArtifactsContainerRepositoryState {
    /**
     * Total storage size in GBs that will be charged.
     */
    billableSizeInGbs?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The id of the user or principal that created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The container repository name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Total number of images.
     */
    imageCount?: pulumi.Input<number>;
    /**
     * (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     */
    isImmutable?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Total number of layers.
     */
    layerCount?: pulumi.Input<number>;
    /**
     * Total storage in bytes consumed by layers.
     */
    layersSizeInBytes?: pulumi.Input<string>;
    /**
     * (Updatable) Container repository readme.
     */
    readme?: pulumi.Input<inputs.ArtifactsContainerRepositoryReadme>;
    /**
     * The current state of the container repository.
     */
    state?: pulumi.Input<string>;
    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     */
    timeLastPushed?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ArtifactsContainerRepository resource.
 */
export interface ArtifactsContainerRepositoryArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The container repository name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     */
    isImmutable?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * (Updatable) Container repository readme.
     */
    readme?: pulumi.Input<inputs.ArtifactsContainerRepositoryReadme>;
}
