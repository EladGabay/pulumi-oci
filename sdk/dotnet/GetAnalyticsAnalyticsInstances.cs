// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetAnalyticsAnalyticsInstances
    {
        /// <summary>
        /// This data source provides the list of Analytics Instances in Oracle Cloud Infrastructure Analytics service.
        /// 
        /// List Analytics instances.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testAnalyticsInstances = Output.Create(Oci.GetAnalyticsAnalyticsInstances.InvokeAsync(new Oci.GetAnalyticsAnalyticsInstancesArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             CapacityType = @var.Analytics_instance_capacity_type,
        ///             FeatureSet = @var.Analytics_instance_feature_set,
        ///             Name = @var.Analytics_instance_name,
        ///             State = @var.Analytics_instance_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAnalyticsAnalyticsInstancesResult> InvokeAsync(GetAnalyticsAnalyticsInstancesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAnalyticsAnalyticsInstancesResult>("oci:index/getAnalyticsAnalyticsInstances:GetAnalyticsAnalyticsInstances", args ?? new GetAnalyticsAnalyticsInstancesArgs(), options.WithVersion());
    }


    public sealed class GetAnalyticsAnalyticsInstancesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A filter to only return resources matching the capacity type enum. Values are case-insensitive.
        /// </summary>
        [Input("capacityType")]
        public string? CapacityType { get; set; }

        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to only return resources matching the feature set. Values are case-insensitive.
        /// </summary>
        [Input("featureSet")]
        public string? FeatureSet { get; set; }

        [Input("filters")]
        private List<Inputs.GetAnalyticsAnalyticsInstancesFilterArgs>? _filters;
        public List<Inputs.GetAnalyticsAnalyticsInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAnalyticsAnalyticsInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A filter to return only resources that match the given name exactly.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetAnalyticsAnalyticsInstancesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAnalyticsAnalyticsInstancesResult
    {
        /// <summary>
        /// The list of analytics_instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancesAnalyticsInstanceResult> AnalyticsInstances;
        /// <summary>
        /// The capacity model to use.
        /// </summary>
        public readonly string? CapacityType;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Analytics feature set.
        /// </summary>
        public readonly string? FeatureSet;
        public readonly ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The current state of an instance.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetAnalyticsAnalyticsInstancesResult(
            ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancesAnalyticsInstanceResult> analyticsInstances,

            string? capacityType,

            string compartmentId,

            string? featureSet,

            ImmutableArray<Outputs.GetAnalyticsAnalyticsInstancesFilterResult> filters,

            string id,

            string? name,

            string? state)
        {
            AnalyticsInstances = analyticsInstances;
            CapacityType = capacityType;
            CompartmentId = compartmentId;
            FeatureSet = featureSet;
            Filters = filters;
            Id = id;
            Name = name;
            State = state;
        }
    }
}
