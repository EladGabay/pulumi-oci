// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreDrgRouteDistributionStatements
    {
        /// <summary>
        /// This data source provides the list of Drg Route Distribution Statements in Oracle Cloud Infrastructure Core service.
        /// 
        /// Lists the statements for the specified route distribution.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testDrgRouteDistributionStatements = Output.Create(Oci.GetCoreDrgRouteDistributionStatements.InvokeAsync(new Oci.GetCoreDrgRouteDistributionStatementsArgs
        ///         {
        ///             DrgRouteDistributionId = oci_core_drg_route_distribution.Test_drg_route_distribution.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreDrgRouteDistributionStatementsResult> InvokeAsync(GetCoreDrgRouteDistributionStatementsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreDrgRouteDistributionStatementsResult>("oci:index/getCoreDrgRouteDistributionStatements:GetCoreDrgRouteDistributionStatements", args ?? new GetCoreDrgRouteDistributionStatementsArgs(), options.WithVersion());
    }


    public sealed class GetCoreDrgRouteDistributionStatementsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
        /// </summary>
        [Input("drgRouteDistributionId", required: true)]
        public string DrgRouteDistributionId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreDrgRouteDistributionStatementsFilterArgs>? _filters;
        public List<Inputs.GetCoreDrgRouteDistributionStatementsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreDrgRouteDistributionStatementsFilterArgs>());
            set => _filters = value;
        }

        public GetCoreDrgRouteDistributionStatementsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreDrgRouteDistributionStatementsResult
    {
        public readonly string DrgRouteDistributionId;
        /// <summary>
        /// The list of drg_route_distribution_statements.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreDrgRouteDistributionStatementsDrgRouteDistributionStatementResult> DrgRouteDistributionStatements;
        public readonly ImmutableArray<Outputs.GetCoreDrgRouteDistributionStatementsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCoreDrgRouteDistributionStatementsResult(
            string drgRouteDistributionId,

            ImmutableArray<Outputs.GetCoreDrgRouteDistributionStatementsDrgRouteDistributionStatementResult> drgRouteDistributionStatements,

            ImmutableArray<Outputs.GetCoreDrgRouteDistributionStatementsFilterResult> filters,

            string id)
        {
            DrgRouteDistributionId = drgRouteDistributionId;
            DrgRouteDistributionStatements = drgRouteDistributionStatements;
            Filters = filters;
            Id = id;
        }
    }
}
