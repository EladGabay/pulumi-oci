// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Service Connector resource in Oracle Cloud Infrastructure Service Connector Hub service.
//
// Creates a new service connector in the specified compartment.
// A service connector is a logically defined flow for moving data from
// a source service to a destination service in Oracle Cloud Infrastructure.
// For general information about service connectors, see
// [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
//
// For purposes of access control, you must provide the
// [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where
// you want the service connector to reside. Notice that the service connector
// doesn't have to be in the same compartment as the source or target services.
// For information about access control and compartments, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
//
// After you send your request, the new service connector's state is temporarily
// CREATING. When the state changes to ACTIVE, data begins transferring from the
// source service to the target service. For instructions on deactivating and
// activating service connectors, see
// [To activate or deactivate a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewSchServiceConnector(ctx, "testServiceConnector", &oci.SchServiceConnectorArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Service_connector_display_name),
// 			Source: &SchServiceConnectorSourceArgs{
// 				Kind: pulumi.Any(_var.Service_connector_source_kind),
// 				Cursor: &SchServiceConnectorSourceCursorArgs{
// 					Kind: pulumi.Any(_var.Service_connector_source_cursor_kind),
// 				},
// 				LogSources: SchServiceConnectorSourceLogSourceArray{
// 					&SchServiceConnectorSourceLogSourceArgs{
// 						CompartmentId: pulumi.Any(_var.Compartment_id),
// 						LogGroupId:    pulumi.Any(oci_logging_log_group.Test_log_group.Id),
// 						LogId:         pulumi.Any(oci_logging_log.Test_log.Id),
// 					},
// 				},
// 				StreamId: pulumi.Any(oci_streaming_stream.Test_stream.Id),
// 			},
// 			Target: &SchServiceConnectorTargetArgs{
// 				Kind:                     pulumi.Any(_var.Service_connector_target_kind),
// 				BatchRolloverSizeInMbs:   pulumi.Any(_var.Service_connector_target_batch_rollover_size_in_mbs),
// 				BatchRolloverTimeInMs:    pulumi.Any(_var.Service_connector_target_batch_rollover_time_in_ms),
// 				Bucket:                   pulumi.Any(_var.Service_connector_target_bucket),
// 				CompartmentId:            pulumi.Any(_var.Compartment_id),
// 				EnableFormattedMessaging: pulumi.Any(_var.Service_connector_target_enable_formatted_messaging),
// 				FunctionId:               pulumi.Any(oci_functions_function.Test_function.Id),
// 				LogGroupId:               pulumi.Any(oci_logging_log_group.Test_log_group.Id),
// 				Metric:                   pulumi.Any(_var.Service_connector_target_metric),
// 				MetricNamespace:          pulumi.Any(_var.Service_connector_target_metric_namespace),
// 				Namespace:                pulumi.Any(_var.Service_connector_target_namespace),
// 				ObjectNamePrefix:         pulumi.Any(_var.Service_connector_target_object_name_prefix),
// 				StreamId:                 pulumi.Any(oci_streaming_stream.Test_stream.Id),
// 				TopicId:                  pulumi.Any(oci_ons_notification_topic.Test_notification_topic.Id),
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Service_connector_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			Tasks: SchServiceConnectorTaskArray{
// 				&SchServiceConnectorTaskArgs{
// 					Kind:           pulumi.Any(_var.Service_connector_tasks_kind),
// 					BatchSizeInKbs: pulumi.Any(_var.Service_connector_tasks_batch_size_in_kbs),
// 					BatchTimeInSec: pulumi.Any(_var.Service_connector_tasks_batch_time_in_sec),
// 					Condition:      pulumi.Any(_var.Service_connector_tasks_condition),
// 					FunctionId:     pulumi.Any(oci_functions_function.Test_function.Id),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ServiceConnectors can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/schServiceConnector:SchServiceConnector test_service_connector "id"
// ```
type SchServiceConnector struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the resource. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
	LifecyleDetails pulumi.StringOutput `pulumi:"lifecyleDetails"`
	// (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Source SchServiceConnectorSourceOutput `pulumi:"source"`
	// (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringOutput `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Target SchServiceConnectorTargetOutput `pulumi:"target"`
	// (Updatable) The list of tasks.
	Tasks SchServiceConnectorTaskArrayOutput `pulumi:"tasks"`
	// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewSchServiceConnector registers a new resource with the given unique name, arguments, and options.
func NewSchServiceConnector(ctx *pulumi.Context,
	name string, args *SchServiceConnectorArgs, opts ...pulumi.ResourceOption) (*SchServiceConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	var resource SchServiceConnector
	err := ctx.RegisterResource("oci:index/schServiceConnector:SchServiceConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSchServiceConnector gets an existing SchServiceConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSchServiceConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SchServiceConnectorState, opts ...pulumi.ResourceOption) (*SchServiceConnector, error) {
	var resource SchServiceConnector
	err := ctx.ReadResource("oci:index/schServiceConnector:SchServiceConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SchServiceConnector resources.
type schServiceConnectorState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
	LifecyleDetails *string `pulumi:"lifecyleDetails"`
	// (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Source *SchServiceConnectorSource `pulumi:"source"`
	// (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Target *SchServiceConnectorTarget `pulumi:"target"`
	// (Updatable) The list of tasks.
	Tasks []SchServiceConnectorTask `pulumi:"tasks"`
	// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type SchServiceConnectorState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
	LifecyleDetails pulumi.StringPtrInput
	// (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Source SchServiceConnectorSourcePtrInput
	// (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.MapInput
	// (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Target SchServiceConnectorTargetPtrInput
	// (Updatable) The list of tasks.
	Tasks SchServiceConnectorTaskArrayInput
	// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (SchServiceConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*schServiceConnectorState)(nil)).Elem()
}

type schServiceConnectorArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Source SchServiceConnectorSource `pulumi:"source"`
	// (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
	State *string `pulumi:"state"`
	// (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Target SchServiceConnectorTarget `pulumi:"target"`
	// (Updatable) The list of tasks.
	Tasks []SchServiceConnectorTask `pulumi:"tasks"`
}

// The set of arguments for constructing a SchServiceConnector resource.
type SchServiceConnectorArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Source SchServiceConnectorSourceInput
	// (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
	State pulumi.StringPtrInput
	// (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
	Target SchServiceConnectorTargetInput
	// (Updatable) The list of tasks.
	Tasks SchServiceConnectorTaskArrayInput
}

func (SchServiceConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*schServiceConnectorArgs)(nil)).Elem()
}

type SchServiceConnectorInput interface {
	pulumi.Input

	ToSchServiceConnectorOutput() SchServiceConnectorOutput
	ToSchServiceConnectorOutputWithContext(ctx context.Context) SchServiceConnectorOutput
}

func (*SchServiceConnector) ElementType() reflect.Type {
	return reflect.TypeOf((*SchServiceConnector)(nil))
}

func (i *SchServiceConnector) ToSchServiceConnectorOutput() SchServiceConnectorOutput {
	return i.ToSchServiceConnectorOutputWithContext(context.Background())
}

func (i *SchServiceConnector) ToSchServiceConnectorOutputWithContext(ctx context.Context) SchServiceConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchServiceConnectorOutput)
}

func (i *SchServiceConnector) ToSchServiceConnectorPtrOutput() SchServiceConnectorPtrOutput {
	return i.ToSchServiceConnectorPtrOutputWithContext(context.Background())
}

func (i *SchServiceConnector) ToSchServiceConnectorPtrOutputWithContext(ctx context.Context) SchServiceConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchServiceConnectorPtrOutput)
}

type SchServiceConnectorPtrInput interface {
	pulumi.Input

	ToSchServiceConnectorPtrOutput() SchServiceConnectorPtrOutput
	ToSchServiceConnectorPtrOutputWithContext(ctx context.Context) SchServiceConnectorPtrOutput
}

type schServiceConnectorPtrType SchServiceConnectorArgs

func (*schServiceConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchServiceConnector)(nil))
}

func (i *schServiceConnectorPtrType) ToSchServiceConnectorPtrOutput() SchServiceConnectorPtrOutput {
	return i.ToSchServiceConnectorPtrOutputWithContext(context.Background())
}

func (i *schServiceConnectorPtrType) ToSchServiceConnectorPtrOutputWithContext(ctx context.Context) SchServiceConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchServiceConnectorPtrOutput)
}

// SchServiceConnectorArrayInput is an input type that accepts SchServiceConnectorArray and SchServiceConnectorArrayOutput values.
// You can construct a concrete instance of `SchServiceConnectorArrayInput` via:
//
//          SchServiceConnectorArray{ SchServiceConnectorArgs{...} }
type SchServiceConnectorArrayInput interface {
	pulumi.Input

	ToSchServiceConnectorArrayOutput() SchServiceConnectorArrayOutput
	ToSchServiceConnectorArrayOutputWithContext(context.Context) SchServiceConnectorArrayOutput
}

type SchServiceConnectorArray []SchServiceConnectorInput

func (SchServiceConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SchServiceConnector)(nil)).Elem()
}

func (i SchServiceConnectorArray) ToSchServiceConnectorArrayOutput() SchServiceConnectorArrayOutput {
	return i.ToSchServiceConnectorArrayOutputWithContext(context.Background())
}

func (i SchServiceConnectorArray) ToSchServiceConnectorArrayOutputWithContext(ctx context.Context) SchServiceConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchServiceConnectorArrayOutput)
}

// SchServiceConnectorMapInput is an input type that accepts SchServiceConnectorMap and SchServiceConnectorMapOutput values.
// You can construct a concrete instance of `SchServiceConnectorMapInput` via:
//
//          SchServiceConnectorMap{ "key": SchServiceConnectorArgs{...} }
type SchServiceConnectorMapInput interface {
	pulumi.Input

	ToSchServiceConnectorMapOutput() SchServiceConnectorMapOutput
	ToSchServiceConnectorMapOutputWithContext(context.Context) SchServiceConnectorMapOutput
}

type SchServiceConnectorMap map[string]SchServiceConnectorInput

func (SchServiceConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SchServiceConnector)(nil)).Elem()
}

func (i SchServiceConnectorMap) ToSchServiceConnectorMapOutput() SchServiceConnectorMapOutput {
	return i.ToSchServiceConnectorMapOutputWithContext(context.Background())
}

func (i SchServiceConnectorMap) ToSchServiceConnectorMapOutputWithContext(ctx context.Context) SchServiceConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchServiceConnectorMapOutput)
}

type SchServiceConnectorOutput struct {
	*pulumi.OutputState
}

func (SchServiceConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchServiceConnector)(nil))
}

func (o SchServiceConnectorOutput) ToSchServiceConnectorOutput() SchServiceConnectorOutput {
	return o
}

func (o SchServiceConnectorOutput) ToSchServiceConnectorOutputWithContext(ctx context.Context) SchServiceConnectorOutput {
	return o
}

func (o SchServiceConnectorOutput) ToSchServiceConnectorPtrOutput() SchServiceConnectorPtrOutput {
	return o.ToSchServiceConnectorPtrOutputWithContext(context.Background())
}

func (o SchServiceConnectorOutput) ToSchServiceConnectorPtrOutputWithContext(ctx context.Context) SchServiceConnectorPtrOutput {
	return o.ApplyT(func(v SchServiceConnector) *SchServiceConnector {
		return &v
	}).(SchServiceConnectorPtrOutput)
}

type SchServiceConnectorPtrOutput struct {
	*pulumi.OutputState
}

func (SchServiceConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchServiceConnector)(nil))
}

func (o SchServiceConnectorPtrOutput) ToSchServiceConnectorPtrOutput() SchServiceConnectorPtrOutput {
	return o
}

func (o SchServiceConnectorPtrOutput) ToSchServiceConnectorPtrOutputWithContext(ctx context.Context) SchServiceConnectorPtrOutput {
	return o
}

type SchServiceConnectorArrayOutput struct{ *pulumi.OutputState }

func (SchServiceConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchServiceConnector)(nil))
}

func (o SchServiceConnectorArrayOutput) ToSchServiceConnectorArrayOutput() SchServiceConnectorArrayOutput {
	return o
}

func (o SchServiceConnectorArrayOutput) ToSchServiceConnectorArrayOutputWithContext(ctx context.Context) SchServiceConnectorArrayOutput {
	return o
}

func (o SchServiceConnectorArrayOutput) Index(i pulumi.IntInput) SchServiceConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchServiceConnector {
		return vs[0].([]SchServiceConnector)[vs[1].(int)]
	}).(SchServiceConnectorOutput)
}

type SchServiceConnectorMapOutput struct{ *pulumi.OutputState }

func (SchServiceConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SchServiceConnector)(nil))
}

func (o SchServiceConnectorMapOutput) ToSchServiceConnectorMapOutput() SchServiceConnectorMapOutput {
	return o
}

func (o SchServiceConnectorMapOutput) ToSchServiceConnectorMapOutputWithContext(ctx context.Context) SchServiceConnectorMapOutput {
	return o
}

func (o SchServiceConnectorMapOutput) MapIndex(k pulumi.StringInput) SchServiceConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SchServiceConnector {
		return vs[0].(map[string]SchServiceConnector)[vs[1].(string)]
	}).(SchServiceConnectorOutput)
}

func init() {
	pulumi.RegisterOutputType(SchServiceConnectorOutput{})
	pulumi.RegisterOutputType(SchServiceConnectorPtrOutput{})
	pulumi.RegisterOutputType(SchServiceConnectorArrayOutput{})
	pulumi.RegisterOutputType(SchServiceConnectorMapOutput{})
}
