// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Creates a Big Data Service cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewBdsBdsInstance(ctx, "testBdsInstance", &oci.BdsBdsInstanceArgs{
// 			ClusterAdminPassword: pulumi.Any(_var.Bds_instance_cluster_admin_password),
// 			ClusterPublicKey:     pulumi.Any(_var.Bds_instance_cluster_public_key),
// 			ClusterVersion:       pulumi.Any(_var.Bds_instance_cluster_version),
// 			CompartmentId:        pulumi.Any(_var.Compartment_id),
// 			DisplayName:          pulumi.Any(_var.Bds_instance_display_name),
// 			IsHighAvailability:   pulumi.Any(_var.Bds_instance_is_high_availability),
// 			IsSecure:             pulumi.Any(_var.Bds_instance_is_secure),
// 			MasterNode: &BdsBdsInstanceMasterNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			UtilNode: &BdsBdsInstanceUtilNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			WorkerNode: &BdsBdsInstanceWorkerNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			DefinedTags:  pulumi.Any(_var.Bds_instance_defined_tags),
// 			FreeformTags: pulumi.Any(_var.Bds_instance_freeform_tags),
// 			NetworkConfig: &BdsBdsInstanceNetworkConfigArgs{
// 				CidrBlock:            pulumi.Any(_var.Bds_instance_network_config_cidr_block),
// 				IsNatGatewayRequired: pulumi.Any(_var.Bds_instance_network_config_is_nat_gateway_required),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// BdsInstances can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/bdsBdsInstance:BdsBdsInstance test_bds_instance "id"
// ```
type BdsBdsInstance struct {
	pulumi.CustomResourceState

	// The information about added Cloud SQL capability
	CloudSqlDetails BdsBdsInstanceCloudSqlDetailsOutput `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails BdsBdsInstanceClusterDetailsOutput `pulumi:"clusterDetails"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringOutput `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The user who created the cluster.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolOutput `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolOutput `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolOutput              `pulumi:"isSecure"`
	MasterNode BdsBdsInstanceMasterNodeOutput `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig BdsBdsInstanceNetworkConfigOutput `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsBdsInstanceNodeArrayOutput `pulumi:"nodes"`
	// The number of nodes that form the cluster.
	NumberOfNodes pulumi.IntOutput `pulumi:"numberOfNodes"`
	// The state of the cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput            `pulumi:"timeUpdated"`
	UtilNode    BdsBdsInstanceUtilNodeOutput   `pulumi:"utilNode"`
	WorkerNode  BdsBdsInstanceWorkerNodeOutput `pulumi:"workerNode"`
}

// NewBdsBdsInstance registers a new resource with the given unique name, arguments, and options.
func NewBdsBdsInstance(ctx *pulumi.Context,
	name string, args *BdsBdsInstanceArgs, opts ...pulumi.ResourceOption) (*BdsBdsInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.ClusterPublicKey == nil {
		return nil, errors.New("invalid value for required argument 'ClusterPublicKey'")
	}
	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IsHighAvailability == nil {
		return nil, errors.New("invalid value for required argument 'IsHighAvailability'")
	}
	if args.IsSecure == nil {
		return nil, errors.New("invalid value for required argument 'IsSecure'")
	}
	if args.MasterNode == nil {
		return nil, errors.New("invalid value for required argument 'MasterNode'")
	}
	if args.UtilNode == nil {
		return nil, errors.New("invalid value for required argument 'UtilNode'")
	}
	if args.WorkerNode == nil {
		return nil, errors.New("invalid value for required argument 'WorkerNode'")
	}
	var resource BdsBdsInstance
	err := ctx.RegisterResource("oci:index/bdsBdsInstance:BdsBdsInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsBdsInstance gets an existing BdsBdsInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsBdsInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsBdsInstanceState, opts ...pulumi.ResourceOption) (*BdsBdsInstance, error) {
	var resource BdsBdsInstance
	err := ctx.ReadResource("oci:index/bdsBdsInstance:BdsBdsInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsBdsInstance resources.
type bdsBdsInstanceState struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails *BdsBdsInstanceCloudSqlDetails `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails *BdsBdsInstanceClusterDetails `pulumi:"clusterDetails"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey *string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The user who created the cluster.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability *bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   *bool                     `pulumi:"isSecure"`
	MasterNode *BdsBdsInstanceMasterNode `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig *BdsBdsInstanceNetworkConfig `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes []BdsBdsInstanceNode `pulumi:"nodes"`
	// The number of nodes that form the cluster.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// The state of the cluster.
	State *string `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string                   `pulumi:"timeUpdated"`
	UtilNode    *BdsBdsInstanceUtilNode   `pulumi:"utilNode"`
	WorkerNode  *BdsBdsInstanceWorkerNode `pulumi:"workerNode"`
}

type BdsBdsInstanceState struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsBdsInstanceCloudSqlDetailsPtrInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// Specific info about a Hadoop cluster
	ClusterDetails BdsBdsInstanceClusterDetailsPtrInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringPtrInput
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The user who created the cluster.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolPtrInput
	MasterNode BdsBdsInstanceMasterNodePtrInput
	// Additional configuration of the user's network.
	NetworkConfig BdsBdsInstanceNetworkConfigPtrInput
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsBdsInstanceNodeArrayInput
	// The number of nodes that form the cluster.
	NumberOfNodes pulumi.IntPtrInput
	// The state of the cluster.
	State pulumi.StringPtrInput
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	UtilNode    BdsBdsInstanceUtilNodePtrInput
	WorkerNode  BdsBdsInstanceWorkerNodePtrInput
}

func (BdsBdsInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsBdsInstanceState)(nil)).Elem()
}

type bdsBdsInstanceArgs struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails *BdsBdsInstanceCloudSqlDetails `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   bool                     `pulumi:"isSecure"`
	MasterNode BdsBdsInstanceMasterNode `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig *BdsBdsInstanceNetworkConfig `pulumi:"networkConfig"`
	UtilNode      BdsBdsInstanceUtilNode       `pulumi:"utilNode"`
	WorkerNode    BdsBdsInstanceWorkerNode     `pulumi:"workerNode"`
}

// The set of arguments for constructing a BdsBdsInstance resource.
type BdsBdsInstanceArgs struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsBdsInstanceCloudSqlDetailsPtrInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringInput
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolInput
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolInput
	MasterNode BdsBdsInstanceMasterNodeInput
	// Additional configuration of the user's network.
	NetworkConfig BdsBdsInstanceNetworkConfigPtrInput
	UtilNode      BdsBdsInstanceUtilNodeInput
	WorkerNode    BdsBdsInstanceWorkerNodeInput
}

func (BdsBdsInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsBdsInstanceArgs)(nil)).Elem()
}

type BdsBdsInstanceInput interface {
	pulumi.Input

	ToBdsBdsInstanceOutput() BdsBdsInstanceOutput
	ToBdsBdsInstanceOutputWithContext(ctx context.Context) BdsBdsInstanceOutput
}

func (*BdsBdsInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*BdsBdsInstance)(nil))
}

func (i *BdsBdsInstance) ToBdsBdsInstanceOutput() BdsBdsInstanceOutput {
	return i.ToBdsBdsInstanceOutputWithContext(context.Background())
}

func (i *BdsBdsInstance) ToBdsBdsInstanceOutputWithContext(ctx context.Context) BdsBdsInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsBdsInstanceOutput)
}

func (i *BdsBdsInstance) ToBdsBdsInstancePtrOutput() BdsBdsInstancePtrOutput {
	return i.ToBdsBdsInstancePtrOutputWithContext(context.Background())
}

func (i *BdsBdsInstance) ToBdsBdsInstancePtrOutputWithContext(ctx context.Context) BdsBdsInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsBdsInstancePtrOutput)
}

type BdsBdsInstancePtrInput interface {
	pulumi.Input

	ToBdsBdsInstancePtrOutput() BdsBdsInstancePtrOutput
	ToBdsBdsInstancePtrOutputWithContext(ctx context.Context) BdsBdsInstancePtrOutput
}

type bdsBdsInstancePtrType BdsBdsInstanceArgs

func (*bdsBdsInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsBdsInstance)(nil))
}

func (i *bdsBdsInstancePtrType) ToBdsBdsInstancePtrOutput() BdsBdsInstancePtrOutput {
	return i.ToBdsBdsInstancePtrOutputWithContext(context.Background())
}

func (i *bdsBdsInstancePtrType) ToBdsBdsInstancePtrOutputWithContext(ctx context.Context) BdsBdsInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsBdsInstancePtrOutput)
}

// BdsBdsInstanceArrayInput is an input type that accepts BdsBdsInstanceArray and BdsBdsInstanceArrayOutput values.
// You can construct a concrete instance of `BdsBdsInstanceArrayInput` via:
//
//          BdsBdsInstanceArray{ BdsBdsInstanceArgs{...} }
type BdsBdsInstanceArrayInput interface {
	pulumi.Input

	ToBdsBdsInstanceArrayOutput() BdsBdsInstanceArrayOutput
	ToBdsBdsInstanceArrayOutputWithContext(context.Context) BdsBdsInstanceArrayOutput
}

type BdsBdsInstanceArray []BdsBdsInstanceInput

func (BdsBdsInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsBdsInstance)(nil)).Elem()
}

func (i BdsBdsInstanceArray) ToBdsBdsInstanceArrayOutput() BdsBdsInstanceArrayOutput {
	return i.ToBdsBdsInstanceArrayOutputWithContext(context.Background())
}

func (i BdsBdsInstanceArray) ToBdsBdsInstanceArrayOutputWithContext(ctx context.Context) BdsBdsInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsBdsInstanceArrayOutput)
}

// BdsBdsInstanceMapInput is an input type that accepts BdsBdsInstanceMap and BdsBdsInstanceMapOutput values.
// You can construct a concrete instance of `BdsBdsInstanceMapInput` via:
//
//          BdsBdsInstanceMap{ "key": BdsBdsInstanceArgs{...} }
type BdsBdsInstanceMapInput interface {
	pulumi.Input

	ToBdsBdsInstanceMapOutput() BdsBdsInstanceMapOutput
	ToBdsBdsInstanceMapOutputWithContext(context.Context) BdsBdsInstanceMapOutput
}

type BdsBdsInstanceMap map[string]BdsBdsInstanceInput

func (BdsBdsInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsBdsInstance)(nil)).Elem()
}

func (i BdsBdsInstanceMap) ToBdsBdsInstanceMapOutput() BdsBdsInstanceMapOutput {
	return i.ToBdsBdsInstanceMapOutputWithContext(context.Background())
}

func (i BdsBdsInstanceMap) ToBdsBdsInstanceMapOutputWithContext(ctx context.Context) BdsBdsInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsBdsInstanceMapOutput)
}

type BdsBdsInstanceOutput struct {
	*pulumi.OutputState
}

func (BdsBdsInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BdsBdsInstance)(nil))
}

func (o BdsBdsInstanceOutput) ToBdsBdsInstanceOutput() BdsBdsInstanceOutput {
	return o
}

func (o BdsBdsInstanceOutput) ToBdsBdsInstanceOutputWithContext(ctx context.Context) BdsBdsInstanceOutput {
	return o
}

func (o BdsBdsInstanceOutput) ToBdsBdsInstancePtrOutput() BdsBdsInstancePtrOutput {
	return o.ToBdsBdsInstancePtrOutputWithContext(context.Background())
}

func (o BdsBdsInstanceOutput) ToBdsBdsInstancePtrOutputWithContext(ctx context.Context) BdsBdsInstancePtrOutput {
	return o.ApplyT(func(v BdsBdsInstance) *BdsBdsInstance {
		return &v
	}).(BdsBdsInstancePtrOutput)
}

type BdsBdsInstancePtrOutput struct {
	*pulumi.OutputState
}

func (BdsBdsInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsBdsInstance)(nil))
}

func (o BdsBdsInstancePtrOutput) ToBdsBdsInstancePtrOutput() BdsBdsInstancePtrOutput {
	return o
}

func (o BdsBdsInstancePtrOutput) ToBdsBdsInstancePtrOutputWithContext(ctx context.Context) BdsBdsInstancePtrOutput {
	return o
}

type BdsBdsInstanceArrayOutput struct{ *pulumi.OutputState }

func (BdsBdsInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BdsBdsInstance)(nil))
}

func (o BdsBdsInstanceArrayOutput) ToBdsBdsInstanceArrayOutput() BdsBdsInstanceArrayOutput {
	return o
}

func (o BdsBdsInstanceArrayOutput) ToBdsBdsInstanceArrayOutputWithContext(ctx context.Context) BdsBdsInstanceArrayOutput {
	return o
}

func (o BdsBdsInstanceArrayOutput) Index(i pulumi.IntInput) BdsBdsInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BdsBdsInstance {
		return vs[0].([]BdsBdsInstance)[vs[1].(int)]
	}).(BdsBdsInstanceOutput)
}

type BdsBdsInstanceMapOutput struct{ *pulumi.OutputState }

func (BdsBdsInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BdsBdsInstance)(nil))
}

func (o BdsBdsInstanceMapOutput) ToBdsBdsInstanceMapOutput() BdsBdsInstanceMapOutput {
	return o
}

func (o BdsBdsInstanceMapOutput) ToBdsBdsInstanceMapOutputWithContext(ctx context.Context) BdsBdsInstanceMapOutput {
	return o
}

func (o BdsBdsInstanceMapOutput) MapIndex(k pulumi.StringInput) BdsBdsInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BdsBdsInstance {
		return vs[0].(map[string]BdsBdsInstance)[vs[1].(string)]
	}).(BdsBdsInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(BdsBdsInstanceOutput{})
	pulumi.RegisterOutputType(BdsBdsInstancePtrOutput{})
	pulumi.RegisterOutputType(BdsBdsInstanceArrayOutput{})
	pulumi.RegisterOutputType(BdsBdsInstanceMapOutput{})
}
