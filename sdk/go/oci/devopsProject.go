// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Project resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a new project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDevopsProject(ctx, "testProject", &oci.DevopsProjectArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			NotificationConfig: &DevopsProjectNotificationConfigArgs{
// 				TopicId: pulumi.Any(oci_ons_notification_topic.Test_notification_topic.Id),
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			Description: pulumi.Any(_var.Project_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Projects can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/devopsProject:DevopsProject test_project "id"
// ```
type DevopsProject struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment where the project is created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Project description.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Project name (case-sensitive).
	Name pulumi.StringOutput `pulumi:"name"`
	// Namespace associated with the project.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// (Updatable) Notification configuration for the project.
	NotificationConfig DevopsProjectNotificationConfigOutput `pulumi:"notificationConfig"`
	// The current state of the project.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDevopsProject registers a new resource with the given unique name, arguments, and options.
func NewDevopsProject(ctx *pulumi.Context,
	name string, args *DevopsProjectArgs, opts ...pulumi.ResourceOption) (*DevopsProject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.NotificationConfig == nil {
		return nil, errors.New("invalid value for required argument 'NotificationConfig'")
	}
	var resource DevopsProject
	err := ctx.RegisterResource("oci:index/devopsProject:DevopsProject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevopsProject gets an existing DevopsProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevopsProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevopsProjectState, opts ...pulumi.ResourceOption) (*DevopsProject, error) {
	var resource DevopsProject
	err := ctx.ReadResource("oci:index/devopsProject:DevopsProject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevopsProject resources.
type devopsProjectState struct {
	// (Updatable) The OCID of the compartment where the project is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Project description.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Project name (case-sensitive).
	Name *string `pulumi:"name"`
	// Namespace associated with the project.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Notification configuration for the project.
	NotificationConfig *DevopsProjectNotificationConfig `pulumi:"notificationConfig"`
	// The current state of the project.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DevopsProjectState struct {
	// (Updatable) The OCID of the compartment where the project is created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Project description.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Project name (case-sensitive).
	Name pulumi.StringPtrInput
	// Namespace associated with the project.
	Namespace pulumi.StringPtrInput
	// (Updatable) Notification configuration for the project.
	NotificationConfig DevopsProjectNotificationConfigPtrInput
	// The current state of the project.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (DevopsProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*devopsProjectState)(nil)).Elem()
}

type devopsProjectArgs struct {
	// (Updatable) The OCID of the compartment where the project is created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Project description.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Project name (case-sensitive).
	Name *string `pulumi:"name"`
	// (Updatable) Notification configuration for the project.
	NotificationConfig DevopsProjectNotificationConfig `pulumi:"notificationConfig"`
}

// The set of arguments for constructing a DevopsProject resource.
type DevopsProjectArgs struct {
	// (Updatable) The OCID of the compartment where the project is created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Project description.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Project name (case-sensitive).
	Name pulumi.StringPtrInput
	// (Updatable) Notification configuration for the project.
	NotificationConfig DevopsProjectNotificationConfigInput
}

func (DevopsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devopsProjectArgs)(nil)).Elem()
}

type DevopsProjectInput interface {
	pulumi.Input

	ToDevopsProjectOutput() DevopsProjectOutput
	ToDevopsProjectOutputWithContext(ctx context.Context) DevopsProjectOutput
}

func (*DevopsProject) ElementType() reflect.Type {
	return reflect.TypeOf((*DevopsProject)(nil))
}

func (i *DevopsProject) ToDevopsProjectOutput() DevopsProjectOutput {
	return i.ToDevopsProjectOutputWithContext(context.Background())
}

func (i *DevopsProject) ToDevopsProjectOutputWithContext(ctx context.Context) DevopsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsProjectOutput)
}

func (i *DevopsProject) ToDevopsProjectPtrOutput() DevopsProjectPtrOutput {
	return i.ToDevopsProjectPtrOutputWithContext(context.Background())
}

func (i *DevopsProject) ToDevopsProjectPtrOutputWithContext(ctx context.Context) DevopsProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsProjectPtrOutput)
}

type DevopsProjectPtrInput interface {
	pulumi.Input

	ToDevopsProjectPtrOutput() DevopsProjectPtrOutput
	ToDevopsProjectPtrOutputWithContext(ctx context.Context) DevopsProjectPtrOutput
}

type devopsProjectPtrType DevopsProjectArgs

func (*devopsProjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevopsProject)(nil))
}

func (i *devopsProjectPtrType) ToDevopsProjectPtrOutput() DevopsProjectPtrOutput {
	return i.ToDevopsProjectPtrOutputWithContext(context.Background())
}

func (i *devopsProjectPtrType) ToDevopsProjectPtrOutputWithContext(ctx context.Context) DevopsProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsProjectPtrOutput)
}

// DevopsProjectArrayInput is an input type that accepts DevopsProjectArray and DevopsProjectArrayOutput values.
// You can construct a concrete instance of `DevopsProjectArrayInput` via:
//
//          DevopsProjectArray{ DevopsProjectArgs{...} }
type DevopsProjectArrayInput interface {
	pulumi.Input

	ToDevopsProjectArrayOutput() DevopsProjectArrayOutput
	ToDevopsProjectArrayOutputWithContext(context.Context) DevopsProjectArrayOutput
}

type DevopsProjectArray []DevopsProjectInput

func (DevopsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevopsProject)(nil)).Elem()
}

func (i DevopsProjectArray) ToDevopsProjectArrayOutput() DevopsProjectArrayOutput {
	return i.ToDevopsProjectArrayOutputWithContext(context.Background())
}

func (i DevopsProjectArray) ToDevopsProjectArrayOutputWithContext(ctx context.Context) DevopsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsProjectArrayOutput)
}

// DevopsProjectMapInput is an input type that accepts DevopsProjectMap and DevopsProjectMapOutput values.
// You can construct a concrete instance of `DevopsProjectMapInput` via:
//
//          DevopsProjectMap{ "key": DevopsProjectArgs{...} }
type DevopsProjectMapInput interface {
	pulumi.Input

	ToDevopsProjectMapOutput() DevopsProjectMapOutput
	ToDevopsProjectMapOutputWithContext(context.Context) DevopsProjectMapOutput
}

type DevopsProjectMap map[string]DevopsProjectInput

func (DevopsProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevopsProject)(nil)).Elem()
}

func (i DevopsProjectMap) ToDevopsProjectMapOutput() DevopsProjectMapOutput {
	return i.ToDevopsProjectMapOutputWithContext(context.Background())
}

func (i DevopsProjectMap) ToDevopsProjectMapOutputWithContext(ctx context.Context) DevopsProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevopsProjectMapOutput)
}

type DevopsProjectOutput struct {
	*pulumi.OutputState
}

func (DevopsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevopsProject)(nil))
}

func (o DevopsProjectOutput) ToDevopsProjectOutput() DevopsProjectOutput {
	return o
}

func (o DevopsProjectOutput) ToDevopsProjectOutputWithContext(ctx context.Context) DevopsProjectOutput {
	return o
}

func (o DevopsProjectOutput) ToDevopsProjectPtrOutput() DevopsProjectPtrOutput {
	return o.ToDevopsProjectPtrOutputWithContext(context.Background())
}

func (o DevopsProjectOutput) ToDevopsProjectPtrOutputWithContext(ctx context.Context) DevopsProjectPtrOutput {
	return o.ApplyT(func(v DevopsProject) *DevopsProject {
		return &v
	}).(DevopsProjectPtrOutput)
}

type DevopsProjectPtrOutput struct {
	*pulumi.OutputState
}

func (DevopsProjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevopsProject)(nil))
}

func (o DevopsProjectPtrOutput) ToDevopsProjectPtrOutput() DevopsProjectPtrOutput {
	return o
}

func (o DevopsProjectPtrOutput) ToDevopsProjectPtrOutputWithContext(ctx context.Context) DevopsProjectPtrOutput {
	return o
}

type DevopsProjectArrayOutput struct{ *pulumi.OutputState }

func (DevopsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevopsProject)(nil))
}

func (o DevopsProjectArrayOutput) ToDevopsProjectArrayOutput() DevopsProjectArrayOutput {
	return o
}

func (o DevopsProjectArrayOutput) ToDevopsProjectArrayOutputWithContext(ctx context.Context) DevopsProjectArrayOutput {
	return o
}

func (o DevopsProjectArrayOutput) Index(i pulumi.IntInput) DevopsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevopsProject {
		return vs[0].([]DevopsProject)[vs[1].(int)]
	}).(DevopsProjectOutput)
}

type DevopsProjectMapOutput struct{ *pulumi.OutputState }

func (DevopsProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DevopsProject)(nil))
}

func (o DevopsProjectMapOutput) ToDevopsProjectMapOutput() DevopsProjectMapOutput {
	return o
}

func (o DevopsProjectMapOutput) ToDevopsProjectMapOutputWithContext(ctx context.Context) DevopsProjectMapOutput {
	return o
}

func (o DevopsProjectMapOutput) MapIndex(k pulumi.StringInput) DevopsProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DevopsProject {
		return vs[0].(map[string]DevopsProject)[vs[1].(string)]
	}).(DevopsProjectOutput)
}

func init() {
	pulumi.RegisterOutputType(DevopsProjectOutput{})
	pulumi.RegisterOutputType(DevopsProjectPtrOutput{})
	pulumi.RegisterOutputType(DevopsProjectArrayOutput{})
	pulumi.RegisterOutputType(DevopsProjectMapOutput{})
}
