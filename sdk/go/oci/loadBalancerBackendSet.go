// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Backend Set resource in Oracle Cloud Infrastructure Load Balancer service.
//
// Adds a backend set to a load balancer.
//
// ## Supported Aliases
//
// * `ociLoadBalancerBackendset`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewLoadBalancerBackendSet(ctx, "testBackendSet", &oci.LoadBalancerBackendSetArgs{
// 			HealthChecker: &LoadBalancerBackendSetHealthCheckerArgs{
// 				Protocol:          pulumi.Any(_var.Backend_set_health_checker_protocol),
// 				IntervalMs:        pulumi.Any(_var.Backend_set_health_checker_interval_ms),
// 				Port:              pulumi.Any(_var.Backend_set_health_checker_port),
// 				ResponseBodyRegex: pulumi.Any(_var.Backend_set_health_checker_response_body_regex),
// 				Retries:           pulumi.Any(_var.Backend_set_health_checker_retries),
// 				ReturnCode:        pulumi.Any(_var.Backend_set_health_checker_return_code),
// 				TimeoutInMillis:   pulumi.Any(_var.Backend_set_health_checker_timeout_in_millis),
// 				UrlPath:           pulumi.Any(_var.Backend_set_health_checker_url_path),
// 			},
// 			LoadBalancerId: pulumi.Any(oci_load_balancer_load_balancer.Test_load_balancer.Id),
// 			Policy:         pulumi.Any(_var.Backend_set_policy),
// 			LbCookieSessionPersistenceConfiguration: &LoadBalancerBackendSetLbCookieSessionPersistenceConfigurationArgs{
// 				CookieName:      pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_cookie_name),
// 				DisableFallback: pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_disable_fallback),
// 				Domain:          pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_domain),
// 				IsHttpOnly:      pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_is_http_only),
// 				IsSecure:        pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_is_secure),
// 				MaxAgeInSeconds: pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_max_age_in_seconds),
// 				Path:            pulumi.Any(_var.Backend_set_lb_cookie_session_persistence_configuration_path),
// 			},
// 			SessionPersistenceConfiguration: &LoadBalancerBackendSetSessionPersistenceConfigurationArgs{
// 				CookieName:      pulumi.Any(_var.Backend_set_session_persistence_configuration_cookie_name),
// 				DisableFallback: pulumi.Any(_var.Backend_set_session_persistence_configuration_disable_fallback),
// 			},
// 			SslConfiguration: &LoadBalancerBackendSetSslConfigurationArgs{
// 				CertificateName:       pulumi.Any(oci_load_balancer_certificate.Test_certificate.Name),
// 				CipherSuiteName:       pulumi.Any(_var.Backend_set_ssl_configuration_cipher_suite_name),
// 				Protocols:             pulumi.Any(_var.Backend_set_ssl_configuration_protocols),
// 				ServerOrderPreference: pulumi.Any(_var.Backend_set_ssl_configuration_server_order_preference),
// 				VerifyDepth:           pulumi.Any(_var.Backend_set_ssl_configuration_verify_depth),
// 				VerifyPeerCertificate: pulumi.Any(_var.Backend_set_ssl_configuration_verify_peer_certificate),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// **Note:** The `sessionPersistenceConfiguration` (application cookie stickiness) and `lbCookieSessionPersistenceConfiguration`
//       (LB cookie stickiness) attributes are mutually exclusive. To avoid returning an error, configure only one of these two
//       attributes per backend set.
// {{% /example %}}
//
// ## Import
//
// BackendSets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/loadBalancerBackendSet:LoadBalancerBackendSet test_backend_set "loadBalancers/{loadBalancerId}/backendSets/{backendSetName}"
// ```
type LoadBalancerBackendSet struct {
	pulumi.CustomResourceState

	Backends LoadBalancerBackendSetBackendArrayOutput `pulumi:"backends"`
	// (Updatable) The health check policy's configuration details.
	HealthChecker LoadBalancerBackendSetHealthCheckerOutput `pulumi:"healthChecker"`
	// (Updatable) The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
	LbCookieSessionPersistenceConfiguration LoadBalancerBackendSetLbCookieSessionPersistenceConfigurationOutput `pulumi:"lbCookieSessionPersistenceConfiguration"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// A friendly name for the backend set. It must be unique and it cannot be changed.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
	Policy pulumi.StringOutput `pulumi:"policy"`
	// (Updatable) The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
	SessionPersistenceConfiguration LoadBalancerBackendSetSessionPersistenceConfigurationOutput `pulumi:"sessionPersistenceConfiguration"`
	// (Updatable) The load balancer's SSL handling configuration details.
	SslConfiguration LoadBalancerBackendSetSslConfigurationPtrOutput `pulumi:"sslConfiguration"`
	State            pulumi.StringOutput                             `pulumi:"state"`
}

// NewLoadBalancerBackendSet registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerBackendSet(ctx *pulumi.Context,
	name string, args *LoadBalancerBackendSetArgs, opts ...pulumi.ResourceOption) (*LoadBalancerBackendSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HealthChecker == nil {
		return nil, errors.New("invalid value for required argument 'HealthChecker'")
	}
	if args.LoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerId'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	var resource LoadBalancerBackendSet
	err := ctx.RegisterResource("oci:index/loadBalancerBackendSet:LoadBalancerBackendSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerBackendSet gets an existing LoadBalancerBackendSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerBackendSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerBackendSetState, opts ...pulumi.ResourceOption) (*LoadBalancerBackendSet, error) {
	var resource LoadBalancerBackendSet
	err := ctx.ReadResource("oci:index/loadBalancerBackendSet:LoadBalancerBackendSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerBackendSet resources.
type loadBalancerBackendSetState struct {
	Backends []LoadBalancerBackendSetBackend `pulumi:"backends"`
	// (Updatable) The health check policy's configuration details.
	HealthChecker *LoadBalancerBackendSetHealthChecker `pulumi:"healthChecker"`
	// (Updatable) The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
	LbCookieSessionPersistenceConfiguration *LoadBalancerBackendSetLbCookieSessionPersistenceConfiguration `pulumi:"lbCookieSessionPersistenceConfiguration"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// A friendly name for the backend set. It must be unique and it cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
	Policy *string `pulumi:"policy"`
	// (Updatable) The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
	SessionPersistenceConfiguration *LoadBalancerBackendSetSessionPersistenceConfiguration `pulumi:"sessionPersistenceConfiguration"`
	// (Updatable) The load balancer's SSL handling configuration details.
	SslConfiguration *LoadBalancerBackendSetSslConfiguration `pulumi:"sslConfiguration"`
	State            *string                                 `pulumi:"state"`
}

type LoadBalancerBackendSetState struct {
	Backends LoadBalancerBackendSetBackendArrayInput
	// (Updatable) The health check policy's configuration details.
	HealthChecker LoadBalancerBackendSetHealthCheckerPtrInput
	// (Updatable) The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
	LbCookieSessionPersistenceConfiguration LoadBalancerBackendSetLbCookieSessionPersistenceConfigurationPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
	LoadBalancerId pulumi.StringPtrInput
	// A friendly name for the backend set. It must be unique and it cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
	Policy pulumi.StringPtrInput
	// (Updatable) The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
	SessionPersistenceConfiguration LoadBalancerBackendSetSessionPersistenceConfigurationPtrInput
	// (Updatable) The load balancer's SSL handling configuration details.
	SslConfiguration LoadBalancerBackendSetSslConfigurationPtrInput
	State            pulumi.StringPtrInput
}

func (LoadBalancerBackendSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerBackendSetState)(nil)).Elem()
}

type loadBalancerBackendSetArgs struct {
	// (Updatable) The health check policy's configuration details.
	HealthChecker LoadBalancerBackendSetHealthChecker `pulumi:"healthChecker"`
	// (Updatable) The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
	LbCookieSessionPersistenceConfiguration *LoadBalancerBackendSetLbCookieSessionPersistenceConfiguration `pulumi:"lbCookieSessionPersistenceConfiguration"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// A friendly name for the backend set. It must be unique and it cannot be changed.
	Name *string `pulumi:"name"`
	// (Updatable) The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
	Policy string `pulumi:"policy"`
	// (Updatable) The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
	SessionPersistenceConfiguration *LoadBalancerBackendSetSessionPersistenceConfiguration `pulumi:"sessionPersistenceConfiguration"`
	// (Updatable) The load balancer's SSL handling configuration details.
	SslConfiguration *LoadBalancerBackendSetSslConfiguration `pulumi:"sslConfiguration"`
}

// The set of arguments for constructing a LoadBalancerBackendSet resource.
type LoadBalancerBackendSetArgs struct {
	// (Updatable) The health check policy's configuration details.
	HealthChecker LoadBalancerBackendSetHealthCheckerInput
	// (Updatable) The configuration details for implementing load balancer cookie session persistence (LB cookie stickiness).
	LbCookieSessionPersistenceConfiguration LoadBalancerBackendSetLbCookieSessionPersistenceConfigurationPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
	LoadBalancerId pulumi.StringInput
	// A friendly name for the backend set. It must be unique and it cannot be changed.
	Name pulumi.StringPtrInput
	// (Updatable) The load balancer policy for the backend set. To get a list of available policies, use the [ListPolicies](https://docs.cloud.oracle.com/iaas/api/#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.  Example: `LEAST_CONNECTIONS`
	Policy pulumi.StringInput
	// (Updatable) The configuration details for implementing session persistence based on a user-specified cookie name (application cookie stickiness).
	SessionPersistenceConfiguration LoadBalancerBackendSetSessionPersistenceConfigurationPtrInput
	// (Updatable) The load balancer's SSL handling configuration details.
	SslConfiguration LoadBalancerBackendSetSslConfigurationPtrInput
}

func (LoadBalancerBackendSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerBackendSetArgs)(nil)).Elem()
}

type LoadBalancerBackendSetInput interface {
	pulumi.Input

	ToLoadBalancerBackendSetOutput() LoadBalancerBackendSetOutput
	ToLoadBalancerBackendSetOutputWithContext(ctx context.Context) LoadBalancerBackendSetOutput
}

func (*LoadBalancerBackendSet) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendSet)(nil))
}

func (i *LoadBalancerBackendSet) ToLoadBalancerBackendSetOutput() LoadBalancerBackendSetOutput {
	return i.ToLoadBalancerBackendSetOutputWithContext(context.Background())
}

func (i *LoadBalancerBackendSet) ToLoadBalancerBackendSetOutputWithContext(ctx context.Context) LoadBalancerBackendSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendSetOutput)
}

func (i *LoadBalancerBackendSet) ToLoadBalancerBackendSetPtrOutput() LoadBalancerBackendSetPtrOutput {
	return i.ToLoadBalancerBackendSetPtrOutputWithContext(context.Background())
}

func (i *LoadBalancerBackendSet) ToLoadBalancerBackendSetPtrOutputWithContext(ctx context.Context) LoadBalancerBackendSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendSetPtrOutput)
}

type LoadBalancerBackendSetPtrInput interface {
	pulumi.Input

	ToLoadBalancerBackendSetPtrOutput() LoadBalancerBackendSetPtrOutput
	ToLoadBalancerBackendSetPtrOutputWithContext(ctx context.Context) LoadBalancerBackendSetPtrOutput
}

type loadBalancerBackendSetPtrType LoadBalancerBackendSetArgs

func (*loadBalancerBackendSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerBackendSet)(nil))
}

func (i *loadBalancerBackendSetPtrType) ToLoadBalancerBackendSetPtrOutput() LoadBalancerBackendSetPtrOutput {
	return i.ToLoadBalancerBackendSetPtrOutputWithContext(context.Background())
}

func (i *loadBalancerBackendSetPtrType) ToLoadBalancerBackendSetPtrOutputWithContext(ctx context.Context) LoadBalancerBackendSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendSetPtrOutput)
}

// LoadBalancerBackendSetArrayInput is an input type that accepts LoadBalancerBackendSetArray and LoadBalancerBackendSetArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendSetArrayInput` via:
//
//          LoadBalancerBackendSetArray{ LoadBalancerBackendSetArgs{...} }
type LoadBalancerBackendSetArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendSetArrayOutput() LoadBalancerBackendSetArrayOutput
	ToLoadBalancerBackendSetArrayOutputWithContext(context.Context) LoadBalancerBackendSetArrayOutput
}

type LoadBalancerBackendSetArray []LoadBalancerBackendSetInput

func (LoadBalancerBackendSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerBackendSet)(nil)).Elem()
}

func (i LoadBalancerBackendSetArray) ToLoadBalancerBackendSetArrayOutput() LoadBalancerBackendSetArrayOutput {
	return i.ToLoadBalancerBackendSetArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendSetArray) ToLoadBalancerBackendSetArrayOutputWithContext(ctx context.Context) LoadBalancerBackendSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendSetArrayOutput)
}

// LoadBalancerBackendSetMapInput is an input type that accepts LoadBalancerBackendSetMap and LoadBalancerBackendSetMapOutput values.
// You can construct a concrete instance of `LoadBalancerBackendSetMapInput` via:
//
//          LoadBalancerBackendSetMap{ "key": LoadBalancerBackendSetArgs{...} }
type LoadBalancerBackendSetMapInput interface {
	pulumi.Input

	ToLoadBalancerBackendSetMapOutput() LoadBalancerBackendSetMapOutput
	ToLoadBalancerBackendSetMapOutputWithContext(context.Context) LoadBalancerBackendSetMapOutput
}

type LoadBalancerBackendSetMap map[string]LoadBalancerBackendSetInput

func (LoadBalancerBackendSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerBackendSet)(nil)).Elem()
}

func (i LoadBalancerBackendSetMap) ToLoadBalancerBackendSetMapOutput() LoadBalancerBackendSetMapOutput {
	return i.ToLoadBalancerBackendSetMapOutputWithContext(context.Background())
}

func (i LoadBalancerBackendSetMap) ToLoadBalancerBackendSetMapOutputWithContext(ctx context.Context) LoadBalancerBackendSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendSetMapOutput)
}

type LoadBalancerBackendSetOutput struct {
	*pulumi.OutputState
}

func (LoadBalancerBackendSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendSet)(nil))
}

func (o LoadBalancerBackendSetOutput) ToLoadBalancerBackendSetOutput() LoadBalancerBackendSetOutput {
	return o
}

func (o LoadBalancerBackendSetOutput) ToLoadBalancerBackendSetOutputWithContext(ctx context.Context) LoadBalancerBackendSetOutput {
	return o
}

func (o LoadBalancerBackendSetOutput) ToLoadBalancerBackendSetPtrOutput() LoadBalancerBackendSetPtrOutput {
	return o.ToLoadBalancerBackendSetPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBackendSetOutput) ToLoadBalancerBackendSetPtrOutputWithContext(ctx context.Context) LoadBalancerBackendSetPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendSet) *LoadBalancerBackendSet {
		return &v
	}).(LoadBalancerBackendSetPtrOutput)
}

type LoadBalancerBackendSetPtrOutput struct {
	*pulumi.OutputState
}

func (LoadBalancerBackendSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerBackendSet)(nil))
}

func (o LoadBalancerBackendSetPtrOutput) ToLoadBalancerBackendSetPtrOutput() LoadBalancerBackendSetPtrOutput {
	return o
}

func (o LoadBalancerBackendSetPtrOutput) ToLoadBalancerBackendSetPtrOutputWithContext(ctx context.Context) LoadBalancerBackendSetPtrOutput {
	return o
}

type LoadBalancerBackendSetArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendSet)(nil))
}

func (o LoadBalancerBackendSetArrayOutput) ToLoadBalancerBackendSetArrayOutput() LoadBalancerBackendSetArrayOutput {
	return o
}

func (o LoadBalancerBackendSetArrayOutput) ToLoadBalancerBackendSetArrayOutputWithContext(ctx context.Context) LoadBalancerBackendSetArrayOutput {
	return o
}

func (o LoadBalancerBackendSetArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendSet {
		return vs[0].([]LoadBalancerBackendSet)[vs[1].(int)]
	}).(LoadBalancerBackendSetOutput)
}

type LoadBalancerBackendSetMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LoadBalancerBackendSet)(nil))
}

func (o LoadBalancerBackendSetMapOutput) ToLoadBalancerBackendSetMapOutput() LoadBalancerBackendSetMapOutput {
	return o
}

func (o LoadBalancerBackendSetMapOutput) ToLoadBalancerBackendSetMapOutputWithContext(ctx context.Context) LoadBalancerBackendSetMapOutput {
	return o
}

func (o LoadBalancerBackendSetMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerBackendSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LoadBalancerBackendSet {
		return vs[0].(map[string]LoadBalancerBackendSet)[vs[1].(string)]
	}).(LoadBalancerBackendSetOutput)
}

func init() {
	pulumi.RegisterOutputType(LoadBalancerBackendSetOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendSetPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendSetArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendSetMapOutput{})
}
