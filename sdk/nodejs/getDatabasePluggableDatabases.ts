// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides the list of Pluggable Databases in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of the pluggable databases in a database or compartment. You must provide either a `databaseId` or `compartmentId` value.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPluggableDatabases = oci.GetDatabasePluggableDatabases({
 *     compartmentId: _var.compartment_id,
 *     databaseId: oci_database_database.test_database.id,
 *     pdbName: _var.pluggable_database_pdb_name,
 *     state: _var.pluggable_database_state,
 * });
 * ```
 */
export function getDatabasePluggableDatabases(args?: GetDatabasePluggableDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabasePluggableDatabasesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:index/getDatabasePluggableDatabases:GetDatabasePluggableDatabases", {
        "compartmentId": args.compartmentId,
        "databaseId": args.databaseId,
        "filters": args.filters,
        "pdbName": args.pdbName,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking GetDatabasePluggableDatabases.
 */
export interface GetDatabasePluggableDatabasesArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    databaseId?: string;
    filters?: inputs.GetDatabasePluggableDatabasesFilter[];
    /**
     * A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
     */
    pdbName?: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by GetDatabasePluggableDatabases.
 */
export interface GetDatabasePluggableDatabasesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    readonly databaseId?: string;
    readonly filters?: outputs.GetDatabasePluggableDatabasesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    readonly pdbName?: string;
    /**
     * The list of pluggable_databases.
     */
    readonly pluggableDatabases: outputs.GetDatabasePluggableDatabasesPluggableDatabase[];
    /**
     * The current state of the pluggable database.
     */
    readonly state?: string;
}
