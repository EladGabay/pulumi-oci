// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Volume resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new volume in the specified compartment. Volumes can be created in sizes ranging from
// 50 GB (51200 MB) to 32 TB (33554432 MB), in 1 GB (1024 MB) increments. By default, volumes are 1 TB (1048576 MB).
// For general information about block volumes, see
// [Overview of Block Volume Service](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/overview.htm).
//
// A volume and instance can be in separate compartments but must be in the same availability domain.
// For information about access control and compartments, see
// [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm). For information about
// availability domains, see [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm).
// To get a list of availability domains, use the `ListAvailabilityDomains` operation
// in the Identity and Access Management Service API.
//
// You may optionally specify a *display name* for the volume, which is simply a friendly name or
// description. It does not have to be unique, and you can change it. Avoid entering confidential information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewCoreVolume(ctx, "testVolume", &oci.CoreVolumeArgs{
// 			CompartmentId:      pulumi.Any(_var.Compartment_id),
// 			AvailabilityDomain: pulumi.Any(_var.Volume_availability_domain),
// 			BackupPolicyId:     pulumi.Any(data.Oci_core_volume_backup_policies.Test_volume_backup_policies.Volume_backup_policies[0].Id),
// 			BlockVolumeReplicas: CoreVolumeBlockVolumeReplicaArray{
// 				&CoreVolumeBlockVolumeReplicaArgs{
// 					AvailabilityDomain: pulumi.Any(_var.Volume_block_volume_replicas_availability_domain),
// 					DisplayName:        pulumi.Any(_var.Volume_block_volume_replicas_display_name),
// 				},
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Volume_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			IsAutoTuneEnabled: pulumi.Any(_var.Volume_is_auto_tune_enabled),
// 			KmsKeyId:          pulumi.Any(oci_kms_key.Test_key.Id),
// 			SizeInGbs:         pulumi.Any(_var.Volume_size_in_gbs),
// 			SizeInMbs:         pulumi.Any(_var.Volume_size_in_mbs),
// 			SourceDetails: &CoreVolumeSourceDetailsArgs{
// 				Id:   pulumi.Any(_var.Volume_source_details_id),
// 				Type: pulumi.Any(_var.Volume_source_details_type),
// 			},
// 			VpusPerGb:                   pulumi.Any(_var.Volume_vpus_per_gb),
// 			BlockVolumeReplicasDeletion: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Volumes can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/coreVolume:CoreVolume test_volume "id"
// ```
type CoreVolume struct {
	pulumi.CustomResourceState

	// The number of Volume Performance Units per GB that this volume is effectively tuned to when it's idle.
	AutoTunedVpusPerGb pulumi.StringOutput `pulumi:"autoTunedVpusPerGb"`
	// (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringOutput `pulumi:"backupPolicyId"`
	// (Updatable) The list of block volume replicas to be enabled for this volume in the specified destination availability domains.
	BlockVolumeReplicas CoreVolumeBlockVolumeReplicaArrayOutput `pulumi:"blockVolumeReplicas"`
	// (updatable) The boolean value, if you have replicas and want to disable replicas set this argument to true and remove `blockVolumeReplicas` in representation at the same time. If you want to enable a new replicas, remove this argument and use `blockVolumeReplicas` again.
	BlockVolumeReplicasDeletion pulumi.BoolPtrOutput `pulumi:"blockVolumeReplicasDeletion"`
	// (Updatable) The OCID of the compartment that contains the volume.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Specifies whether the auto-tune performance is enabled for this volume.
	IsAutoTuneEnabled pulumi.BoolOutput `pulumi:"isAutoTuneEnabled"`
	// Specifies whether the cloned volume's data has finished copying from the source volume or backup.
	IsHydrated pulumi.BoolOutput `pulumi:"isHydrated"`
	// (Updatable) The OCID of the Key Management key to assign as the master encryption key for the volume.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// (Updatable) The size of the volume in GBs.
	SizeInGbs pulumi.StringOutput `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Use `sizeInGbs` instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     pulumi.StringOutput           `pulumi:"sizeInMbs"`
	SourceDetails CoreVolumeSourceDetailsOutput `pulumi:"sourceDetails"`
	// The current state of a volume.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the volume backup from which the data should be restored on the newly created volume. This field is deprecated. Use the `sourceDetails` field instead to specify the backup for the volume.
	VolumeBackupId pulumi.StringOutput `pulumi:"volumeBackupId"`
	// The OCID of the source volume group.
	VolumeGroupId pulumi.StringOutput `pulumi:"volumeGroupId"`
	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
	VpusPerGb pulumi.StringOutput `pulumi:"vpusPerGb"`
}

// NewCoreVolume registers a new resource with the given unique name, arguments, and options.
func NewCoreVolume(ctx *pulumi.Context,
	name string, args *CoreVolumeArgs, opts ...pulumi.ResourceOption) (*CoreVolume, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource CoreVolume
	err := ctx.RegisterResource("oci:index/coreVolume:CoreVolume", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreVolume gets an existing CoreVolume resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreVolume(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreVolumeState, opts ...pulumi.ResourceOption) (*CoreVolume, error) {
	var resource CoreVolume
	err := ctx.ReadResource("oci:index/coreVolume:CoreVolume", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreVolume resources.
type coreVolumeState struct {
	// The number of Volume Performance Units per GB that this volume is effectively tuned to when it's idle.
	AutoTunedVpusPerGb *string `pulumi:"autoTunedVpusPerGb"`
	// (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// (Updatable) The list of block volume replicas to be enabled for this volume in the specified destination availability domains.
	BlockVolumeReplicas []CoreVolumeBlockVolumeReplica `pulumi:"blockVolumeReplicas"`
	// (updatable) The boolean value, if you have replicas and want to disable replicas set this argument to true and remove `blockVolumeReplicas` in representation at the same time. If you want to enable a new replicas, remove this argument and use `blockVolumeReplicas` again.
	BlockVolumeReplicasDeletion *bool `pulumi:"blockVolumeReplicasDeletion"`
	// (Updatable) The OCID of the compartment that contains the volume.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Specifies whether the auto-tune performance is enabled for this volume.
	IsAutoTuneEnabled *bool `pulumi:"isAutoTuneEnabled"`
	// Specifies whether the cloned volume's data has finished copying from the source volume or backup.
	IsHydrated *bool `pulumi:"isHydrated"`
	// (Updatable) The OCID of the Key Management key to assign as the master encryption key for the volume.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// (Updatable) The size of the volume in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Use `sizeInGbs` instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     *string                  `pulumi:"sizeInMbs"`
	SourceDetails *CoreVolumeSourceDetails `pulumi:"sourceDetails"`
	// The current state of a volume.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the volume backup from which the data should be restored on the newly created volume. This field is deprecated. Use the `sourceDetails` field instead to specify the backup for the volume.
	VolumeBackupId *string `pulumi:"volumeBackupId"`
	// The OCID of the source volume group.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
	VpusPerGb *string `pulumi:"vpusPerGb"`
}

type CoreVolumeState struct {
	// The number of Volume Performance Units per GB that this volume is effectively tuned to when it's idle.
	AutoTunedVpusPerGb pulumi.StringPtrInput
	// (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringPtrInput
	// (Updatable) The list of block volume replicas to be enabled for this volume in the specified destination availability domains.
	BlockVolumeReplicas CoreVolumeBlockVolumeReplicaArrayInput
	// (updatable) The boolean value, if you have replicas and want to disable replicas set this argument to true and remove `blockVolumeReplicas` in representation at the same time. If you want to enable a new replicas, remove this argument and use `blockVolumeReplicas` again.
	BlockVolumeReplicasDeletion pulumi.BoolPtrInput
	// (Updatable) The OCID of the compartment that contains the volume.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Specifies whether the auto-tune performance is enabled for this volume.
	IsAutoTuneEnabled pulumi.BoolPtrInput
	// Specifies whether the cloned volume's data has finished copying from the source volume or backup.
	IsHydrated pulumi.BoolPtrInput
	// (Updatable) The OCID of the Key Management key to assign as the master encryption key for the volume.
	KmsKeyId pulumi.StringPtrInput
	// (Updatable) The size of the volume in GBs.
	SizeInGbs pulumi.StringPtrInput
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Use `sizeInGbs` instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     pulumi.StringPtrInput
	SourceDetails CoreVolumeSourceDetailsPtrInput
	// The current state of a volume.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags pulumi.MapInput
	// The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The OCID of the volume backup from which the data should be restored on the newly created volume. This field is deprecated. Use the `sourceDetails` field instead to specify the backup for the volume.
	VolumeBackupId pulumi.StringPtrInput
	// The OCID of the source volume group.
	VolumeGroupId pulumi.StringPtrInput
	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
	VpusPerGb pulumi.StringPtrInput
}

func (CoreVolumeState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVolumeState)(nil)).Elem()
}

type coreVolumeArgs struct {
	// (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// (Updatable) The list of block volume replicas to be enabled for this volume in the specified destination availability domains.
	BlockVolumeReplicas []CoreVolumeBlockVolumeReplica `pulumi:"blockVolumeReplicas"`
	// (updatable) The boolean value, if you have replicas and want to disable replicas set this argument to true and remove `blockVolumeReplicas` in representation at the same time. If you want to enable a new replicas, remove this argument and use `blockVolumeReplicas` again.
	BlockVolumeReplicasDeletion *bool `pulumi:"blockVolumeReplicasDeletion"`
	// (Updatable) The OCID of the compartment that contains the volume.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Specifies whether the auto-tune performance is enabled for this volume.
	IsAutoTuneEnabled *bool `pulumi:"isAutoTuneEnabled"`
	// (Updatable) The OCID of the Key Management key to assign as the master encryption key for the volume.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// (Updatable) The size of the volume in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Use `sizeInGbs` instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     *string                  `pulumi:"sizeInMbs"`
	SourceDetails *CoreVolumeSourceDetails `pulumi:"sourceDetails"`
	// The OCID of the volume backup from which the data should be restored on the newly created volume. This field is deprecated. Use the `sourceDetails` field instead to specify the backup for the volume.
	VolumeBackupId *string `pulumi:"volumeBackupId"`
	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
	VpusPerGb *string `pulumi:"vpusPerGb"`
}

// The set of arguments for constructing a CoreVolume resource.
type CoreVolumeArgs struct {
	// (Updatable) The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume. If omitted, no policy will be assigned.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringPtrInput
	// (Updatable) The list of block volume replicas to be enabled for this volume in the specified destination availability domains.
	BlockVolumeReplicas CoreVolumeBlockVolumeReplicaArrayInput
	// (updatable) The boolean value, if you have replicas and want to disable replicas set this argument to true and remove `blockVolumeReplicas` in representation at the same time. If you want to enable a new replicas, remove this argument and use `blockVolumeReplicas` again.
	BlockVolumeReplicasDeletion pulumi.BoolPtrInput
	// (Updatable) The OCID of the compartment that contains the volume.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Specifies whether the auto-tune performance is enabled for this volume.
	IsAutoTuneEnabled pulumi.BoolPtrInput
	// (Updatable) The OCID of the Key Management key to assign as the master encryption key for the volume.
	KmsKeyId pulumi.StringPtrInput
	// (Updatable) The size of the volume in GBs.
	SizeInGbs pulumi.StringPtrInput
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Use `sizeInGbs` instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     pulumi.StringPtrInput
	SourceDetails CoreVolumeSourceDetailsPtrInput
	// The OCID of the volume backup from which the data should be restored on the newly created volume. This field is deprecated. Use the `sourceDetails` field instead to specify the backup for the volume.
	VolumeBackupId pulumi.StringPtrInput
	// (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.
	VpusPerGb pulumi.StringPtrInput
}

func (CoreVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreVolumeArgs)(nil)).Elem()
}

type CoreVolumeInput interface {
	pulumi.Input

	ToCoreVolumeOutput() CoreVolumeOutput
	ToCoreVolumeOutputWithContext(ctx context.Context) CoreVolumeOutput
}

func (*CoreVolume) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVolume)(nil))
}

func (i *CoreVolume) ToCoreVolumeOutput() CoreVolumeOutput {
	return i.ToCoreVolumeOutputWithContext(context.Background())
}

func (i *CoreVolume) ToCoreVolumeOutputWithContext(ctx context.Context) CoreVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeOutput)
}

func (i *CoreVolume) ToCoreVolumePtrOutput() CoreVolumePtrOutput {
	return i.ToCoreVolumePtrOutputWithContext(context.Background())
}

func (i *CoreVolume) ToCoreVolumePtrOutputWithContext(ctx context.Context) CoreVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumePtrOutput)
}

type CoreVolumePtrInput interface {
	pulumi.Input

	ToCoreVolumePtrOutput() CoreVolumePtrOutput
	ToCoreVolumePtrOutputWithContext(ctx context.Context) CoreVolumePtrOutput
}

type coreVolumePtrType CoreVolumeArgs

func (*coreVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVolume)(nil))
}

func (i *coreVolumePtrType) ToCoreVolumePtrOutput() CoreVolumePtrOutput {
	return i.ToCoreVolumePtrOutputWithContext(context.Background())
}

func (i *coreVolumePtrType) ToCoreVolumePtrOutputWithContext(ctx context.Context) CoreVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumePtrOutput)
}

// CoreVolumeArrayInput is an input type that accepts CoreVolumeArray and CoreVolumeArrayOutput values.
// You can construct a concrete instance of `CoreVolumeArrayInput` via:
//
//          CoreVolumeArray{ CoreVolumeArgs{...} }
type CoreVolumeArrayInput interface {
	pulumi.Input

	ToCoreVolumeArrayOutput() CoreVolumeArrayOutput
	ToCoreVolumeArrayOutputWithContext(context.Context) CoreVolumeArrayOutput
}

type CoreVolumeArray []CoreVolumeInput

func (CoreVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CoreVolume)(nil)).Elem()
}

func (i CoreVolumeArray) ToCoreVolumeArrayOutput() CoreVolumeArrayOutput {
	return i.ToCoreVolumeArrayOutputWithContext(context.Background())
}

func (i CoreVolumeArray) ToCoreVolumeArrayOutputWithContext(ctx context.Context) CoreVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeArrayOutput)
}

// CoreVolumeMapInput is an input type that accepts CoreVolumeMap and CoreVolumeMapOutput values.
// You can construct a concrete instance of `CoreVolumeMapInput` via:
//
//          CoreVolumeMap{ "key": CoreVolumeArgs{...} }
type CoreVolumeMapInput interface {
	pulumi.Input

	ToCoreVolumeMapOutput() CoreVolumeMapOutput
	ToCoreVolumeMapOutputWithContext(context.Context) CoreVolumeMapOutput
}

type CoreVolumeMap map[string]CoreVolumeInput

func (CoreVolumeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CoreVolume)(nil)).Elem()
}

func (i CoreVolumeMap) ToCoreVolumeMapOutput() CoreVolumeMapOutput {
	return i.ToCoreVolumeMapOutputWithContext(context.Background())
}

func (i CoreVolumeMap) ToCoreVolumeMapOutputWithContext(ctx context.Context) CoreVolumeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CoreVolumeMapOutput)
}

type CoreVolumeOutput struct {
	*pulumi.OutputState
}

func (CoreVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreVolume)(nil))
}

func (o CoreVolumeOutput) ToCoreVolumeOutput() CoreVolumeOutput {
	return o
}

func (o CoreVolumeOutput) ToCoreVolumeOutputWithContext(ctx context.Context) CoreVolumeOutput {
	return o
}

func (o CoreVolumeOutput) ToCoreVolumePtrOutput() CoreVolumePtrOutput {
	return o.ToCoreVolumePtrOutputWithContext(context.Background())
}

func (o CoreVolumeOutput) ToCoreVolumePtrOutputWithContext(ctx context.Context) CoreVolumePtrOutput {
	return o.ApplyT(func(v CoreVolume) *CoreVolume {
		return &v
	}).(CoreVolumePtrOutput)
}

type CoreVolumePtrOutput struct {
	*pulumi.OutputState
}

func (CoreVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreVolume)(nil))
}

func (o CoreVolumePtrOutput) ToCoreVolumePtrOutput() CoreVolumePtrOutput {
	return o
}

func (o CoreVolumePtrOutput) ToCoreVolumePtrOutputWithContext(ctx context.Context) CoreVolumePtrOutput {
	return o
}

type CoreVolumeArrayOutput struct{ *pulumi.OutputState }

func (CoreVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreVolume)(nil))
}

func (o CoreVolumeArrayOutput) ToCoreVolumeArrayOutput() CoreVolumeArrayOutput {
	return o
}

func (o CoreVolumeArrayOutput) ToCoreVolumeArrayOutputWithContext(ctx context.Context) CoreVolumeArrayOutput {
	return o
}

func (o CoreVolumeArrayOutput) Index(i pulumi.IntInput) CoreVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreVolume {
		return vs[0].([]CoreVolume)[vs[1].(int)]
	}).(CoreVolumeOutput)
}

type CoreVolumeMapOutput struct{ *pulumi.OutputState }

func (CoreVolumeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CoreVolume)(nil))
}

func (o CoreVolumeMapOutput) ToCoreVolumeMapOutput() CoreVolumeMapOutput {
	return o
}

func (o CoreVolumeMapOutput) ToCoreVolumeMapOutputWithContext(ctx context.Context) CoreVolumeMapOutput {
	return o
}

func (o CoreVolumeMapOutput) MapIndex(k pulumi.StringInput) CoreVolumeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CoreVolume {
		return vs[0].(map[string]CoreVolume)[vs[1].(string)]
	}).(CoreVolumeOutput)
}

func init() {
	pulumi.RegisterOutputType(CoreVolumeOutput{})
	pulumi.RegisterOutputType(CoreVolumePtrOutput{})
	pulumi.RegisterOutputType(CoreVolumeArrayOutput{})
	pulumi.RegisterOutputType(CoreVolumeMapOutput{})
}
