// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Applications can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/functionsApplication:FunctionsApplication test_application "id"
// ```
type FunctionsApplication struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to create the application within.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Application configuration. These values are passed on to the function as environment variables, functions may override application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config pulumi.MapOutput `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The display name of the application. The display name must be unique within the compartment containing the application. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The current state of the application.
	State pulumi.StringOutput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// (Updatable) A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl pulumi.StringOutput `pulumi:"syslogUrl"`
	// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Define the tracing configuration for an application.
	TraceConfig FunctionsApplicationTraceConfigOutput `pulumi:"traceConfig"`
}

// NewFunctionsApplication registers a new resource with the given unique name, arguments, and options.
func NewFunctionsApplication(ctx *pulumi.Context,
	name string, args *FunctionsApplicationArgs, opts ...pulumi.ResourceOption) (*FunctionsApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	var resource FunctionsApplication
	err := ctx.RegisterResource("oci:index/functionsApplication:FunctionsApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionsApplication gets an existing FunctionsApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionsApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionsApplicationState, opts ...pulumi.ResourceOption) (*FunctionsApplication, error) {
	var resource FunctionsApplication
	err := ctx.ReadResource("oci:index/functionsApplication:FunctionsApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionsApplication resources.
type functionsApplicationState struct {
	// (Updatable) The OCID of the compartment to create the application within.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Application configuration. These values are passed on to the function as environment variables, functions may override application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config map[string]interface{} `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The display name of the application. The display name must be unique within the compartment containing the application. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The current state of the application.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds []string `pulumi:"subnetIds"`
	// (Updatable) A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl *string `pulumi:"syslogUrl"`
	// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Define the tracing configuration for an application.
	TraceConfig *FunctionsApplicationTraceConfig `pulumi:"traceConfig"`
}

type FunctionsApplicationState struct {
	// (Updatable) The OCID of the compartment to create the application within.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Application configuration. These values are passed on to the function as environment variables, functions may override application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config pulumi.MapInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The display name of the application. The display name must be unique within the compartment containing the application. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The current state of the application.
	State pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds pulumi.StringArrayInput
	// (Updatable) A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl pulumi.StringPtrInput
	// The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
	TimeCreated pulumi.StringPtrInput
	// The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Define the tracing configuration for an application.
	TraceConfig FunctionsApplicationTraceConfigPtrInput
}

func (FunctionsApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionsApplicationState)(nil)).Elem()
}

type functionsApplicationArgs struct {
	// (Updatable) The OCID of the compartment to create the application within.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Application configuration. These values are passed on to the function as environment variables, functions may override application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config map[string]interface{} `pulumi:"config"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The display name of the application. The display name must be unique within the compartment containing the application. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds []string `pulumi:"subnetIds"`
	// (Updatable) A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl *string `pulumi:"syslogUrl"`
	// (Updatable) Define the tracing configuration for an application.
	TraceConfig *FunctionsApplicationTraceConfig `pulumi:"traceConfig"`
}

// The set of arguments for constructing a FunctionsApplication resource.
type FunctionsApplicationArgs struct {
	// (Updatable) The OCID of the compartment to create the application within.
	CompartmentId pulumi.StringInput
	// (Updatable) Application configuration. These values are passed on to the function as environment variables, functions may override application configuration. Keys must be ASCII strings consisting solely of letters, digits, and the '_' (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{"MY_FUNCTION_CONFIG": "ConfVal"}`
	Config pulumi.MapInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The display name of the application. The display name must be unique within the compartment containing the application. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
	SubnetIds pulumi.StringArrayInput
	// (Updatable) A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
	SyslogUrl pulumi.StringPtrInput
	// (Updatable) Define the tracing configuration for an application.
	TraceConfig FunctionsApplicationTraceConfigPtrInput
}

func (FunctionsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionsApplicationArgs)(nil)).Elem()
}

type FunctionsApplicationInput interface {
	pulumi.Input

	ToFunctionsApplicationOutput() FunctionsApplicationOutput
	ToFunctionsApplicationOutputWithContext(ctx context.Context) FunctionsApplicationOutput
}

func (*FunctionsApplication) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsApplication)(nil))
}

func (i *FunctionsApplication) ToFunctionsApplicationOutput() FunctionsApplicationOutput {
	return i.ToFunctionsApplicationOutputWithContext(context.Background())
}

func (i *FunctionsApplication) ToFunctionsApplicationOutputWithContext(ctx context.Context) FunctionsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsApplicationOutput)
}

func (i *FunctionsApplication) ToFunctionsApplicationPtrOutput() FunctionsApplicationPtrOutput {
	return i.ToFunctionsApplicationPtrOutputWithContext(context.Background())
}

func (i *FunctionsApplication) ToFunctionsApplicationPtrOutputWithContext(ctx context.Context) FunctionsApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsApplicationPtrOutput)
}

type FunctionsApplicationPtrInput interface {
	pulumi.Input

	ToFunctionsApplicationPtrOutput() FunctionsApplicationPtrOutput
	ToFunctionsApplicationPtrOutputWithContext(ctx context.Context) FunctionsApplicationPtrOutput
}

type functionsApplicationPtrType FunctionsApplicationArgs

func (*functionsApplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionsApplication)(nil))
}

func (i *functionsApplicationPtrType) ToFunctionsApplicationPtrOutput() FunctionsApplicationPtrOutput {
	return i.ToFunctionsApplicationPtrOutputWithContext(context.Background())
}

func (i *functionsApplicationPtrType) ToFunctionsApplicationPtrOutputWithContext(ctx context.Context) FunctionsApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsApplicationPtrOutput)
}

// FunctionsApplicationArrayInput is an input type that accepts FunctionsApplicationArray and FunctionsApplicationArrayOutput values.
// You can construct a concrete instance of `FunctionsApplicationArrayInput` via:
//
//          FunctionsApplicationArray{ FunctionsApplicationArgs{...} }
type FunctionsApplicationArrayInput interface {
	pulumi.Input

	ToFunctionsApplicationArrayOutput() FunctionsApplicationArrayOutput
	ToFunctionsApplicationArrayOutputWithContext(context.Context) FunctionsApplicationArrayOutput
}

type FunctionsApplicationArray []FunctionsApplicationInput

func (FunctionsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionsApplication)(nil)).Elem()
}

func (i FunctionsApplicationArray) ToFunctionsApplicationArrayOutput() FunctionsApplicationArrayOutput {
	return i.ToFunctionsApplicationArrayOutputWithContext(context.Background())
}

func (i FunctionsApplicationArray) ToFunctionsApplicationArrayOutputWithContext(ctx context.Context) FunctionsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsApplicationArrayOutput)
}

// FunctionsApplicationMapInput is an input type that accepts FunctionsApplicationMap and FunctionsApplicationMapOutput values.
// You can construct a concrete instance of `FunctionsApplicationMapInput` via:
//
//          FunctionsApplicationMap{ "key": FunctionsApplicationArgs{...} }
type FunctionsApplicationMapInput interface {
	pulumi.Input

	ToFunctionsApplicationMapOutput() FunctionsApplicationMapOutput
	ToFunctionsApplicationMapOutputWithContext(context.Context) FunctionsApplicationMapOutput
}

type FunctionsApplicationMap map[string]FunctionsApplicationInput

func (FunctionsApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionsApplication)(nil)).Elem()
}

func (i FunctionsApplicationMap) ToFunctionsApplicationMapOutput() FunctionsApplicationMapOutput {
	return i.ToFunctionsApplicationMapOutputWithContext(context.Background())
}

func (i FunctionsApplicationMap) ToFunctionsApplicationMapOutputWithContext(ctx context.Context) FunctionsApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsApplicationMapOutput)
}

type FunctionsApplicationOutput struct {
	*pulumi.OutputState
}

func (FunctionsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsApplication)(nil))
}

func (o FunctionsApplicationOutput) ToFunctionsApplicationOutput() FunctionsApplicationOutput {
	return o
}

func (o FunctionsApplicationOutput) ToFunctionsApplicationOutputWithContext(ctx context.Context) FunctionsApplicationOutput {
	return o
}

func (o FunctionsApplicationOutput) ToFunctionsApplicationPtrOutput() FunctionsApplicationPtrOutput {
	return o.ToFunctionsApplicationPtrOutputWithContext(context.Background())
}

func (o FunctionsApplicationOutput) ToFunctionsApplicationPtrOutputWithContext(ctx context.Context) FunctionsApplicationPtrOutput {
	return o.ApplyT(func(v FunctionsApplication) *FunctionsApplication {
		return &v
	}).(FunctionsApplicationPtrOutput)
}

type FunctionsApplicationPtrOutput struct {
	*pulumi.OutputState
}

func (FunctionsApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionsApplication)(nil))
}

func (o FunctionsApplicationPtrOutput) ToFunctionsApplicationPtrOutput() FunctionsApplicationPtrOutput {
	return o
}

func (o FunctionsApplicationPtrOutput) ToFunctionsApplicationPtrOutputWithContext(ctx context.Context) FunctionsApplicationPtrOutput {
	return o
}

type FunctionsApplicationArrayOutput struct{ *pulumi.OutputState }

func (FunctionsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsApplication)(nil))
}

func (o FunctionsApplicationArrayOutput) ToFunctionsApplicationArrayOutput() FunctionsApplicationArrayOutput {
	return o
}

func (o FunctionsApplicationArrayOutput) ToFunctionsApplicationArrayOutputWithContext(ctx context.Context) FunctionsApplicationArrayOutput {
	return o
}

func (o FunctionsApplicationArrayOutput) Index(i pulumi.IntInput) FunctionsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsApplication {
		return vs[0].([]FunctionsApplication)[vs[1].(int)]
	}).(FunctionsApplicationOutput)
}

type FunctionsApplicationMapOutput struct{ *pulumi.OutputState }

func (FunctionsApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FunctionsApplication)(nil))
}

func (o FunctionsApplicationMapOutput) ToFunctionsApplicationMapOutput() FunctionsApplicationMapOutput {
	return o
}

func (o FunctionsApplicationMapOutput) ToFunctionsApplicationMapOutputWithContext(ctx context.Context) FunctionsApplicationMapOutput {
	return o
}

func (o FunctionsApplicationMapOutput) MapIndex(k pulumi.StringInput) FunctionsApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FunctionsApplication {
		return vs[0].(map[string]FunctionsApplication)[vs[1].(string)]
	}).(FunctionsApplicationOutput)
}

func init() {
	pulumi.RegisterOutputType(FunctionsApplicationOutput{})
	pulumi.RegisterOutputType(FunctionsApplicationPtrOutput{})
	pulumi.RegisterOutputType(FunctionsApplicationArrayOutput{})
	pulumi.RegisterOutputType(FunctionsApplicationMapOutput{})
}
