// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Migration resource in Oracle Cloud Infrastructure Database service.
//
// Migrates the Exadata DB system to the new [Exadata resource model](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model).
// All related resources will be migrated.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseMigration(ctx, "testMigration", &oci.DatabaseMigrationArgs{
// 			DbSystemId: pulumi.Any(oci_database_db_system.Test_db_system.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DatabaseMigration struct {
	pulumi.CustomResourceState

	// The details of addtional resources related to the migration.
	AdditionalMigrations DatabaseMigrationAdditionalMigrationArrayOutput `pulumi:"additionalMigrations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
	CloudVmClusterId pulumi.StringOutput `pulumi:"cloudVmClusterId"`
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
}

// NewDatabaseMigration registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigration(ctx *pulumi.Context,
	name string, args *DatabaseMigrationArgs, opts ...pulumi.ResourceOption) (*DatabaseMigration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbSystemId == nil {
		return nil, errors.New("invalid value for required argument 'DbSystemId'")
	}
	var resource DatabaseMigration
	err := ctx.RegisterResource("oci:index/databaseMigration:DatabaseMigration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigration gets an existing DatabaseMigration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationState, opts ...pulumi.ResourceOption) (*DatabaseMigration, error) {
	var resource DatabaseMigration
	err := ctx.ReadResource("oci:index/databaseMigration:DatabaseMigration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigration resources.
type databaseMigrationState struct {
	// The details of addtional resources related to the migration.
	AdditionalMigrations []DatabaseMigrationAdditionalMigration `pulumi:"additionalMigrations"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
	CloudVmClusterId *string `pulumi:"cloudVmClusterId"`
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId *string `pulumi:"dbSystemId"`
}

type DatabaseMigrationState struct {
	// The details of addtional resources related to the migration.
	AdditionalMigrations DatabaseMigrationAdditionalMigrationArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster.
	CloudVmClusterId pulumi.StringPtrInput
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringPtrInput
}

func (DatabaseMigrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationState)(nil)).Elem()
}

type databaseMigrationArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
}

// The set of arguments for constructing a DatabaseMigration resource.
type DatabaseMigrationArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput
}

func (DatabaseMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationArgs)(nil)).Elem()
}

type DatabaseMigrationInput interface {
	pulumi.Input

	ToDatabaseMigrationOutput() DatabaseMigrationOutput
	ToDatabaseMigrationOutputWithContext(ctx context.Context) DatabaseMigrationOutput
}

func (*DatabaseMigration) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMigration)(nil))
}

func (i *DatabaseMigration) ToDatabaseMigrationOutput() DatabaseMigrationOutput {
	return i.ToDatabaseMigrationOutputWithContext(context.Background())
}

func (i *DatabaseMigration) ToDatabaseMigrationOutputWithContext(ctx context.Context) DatabaseMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationOutput)
}

func (i *DatabaseMigration) ToDatabaseMigrationPtrOutput() DatabaseMigrationPtrOutput {
	return i.ToDatabaseMigrationPtrOutputWithContext(context.Background())
}

func (i *DatabaseMigration) ToDatabaseMigrationPtrOutputWithContext(ctx context.Context) DatabaseMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationPtrOutput)
}

type DatabaseMigrationPtrInput interface {
	pulumi.Input

	ToDatabaseMigrationPtrOutput() DatabaseMigrationPtrOutput
	ToDatabaseMigrationPtrOutputWithContext(ctx context.Context) DatabaseMigrationPtrOutput
}

type databaseMigrationPtrType DatabaseMigrationArgs

func (*databaseMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigration)(nil))
}

func (i *databaseMigrationPtrType) ToDatabaseMigrationPtrOutput() DatabaseMigrationPtrOutput {
	return i.ToDatabaseMigrationPtrOutputWithContext(context.Background())
}

func (i *databaseMigrationPtrType) ToDatabaseMigrationPtrOutputWithContext(ctx context.Context) DatabaseMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationPtrOutput)
}

// DatabaseMigrationArrayInput is an input type that accepts DatabaseMigrationArray and DatabaseMigrationArrayOutput values.
// You can construct a concrete instance of `DatabaseMigrationArrayInput` via:
//
//          DatabaseMigrationArray{ DatabaseMigrationArgs{...} }
type DatabaseMigrationArrayInput interface {
	pulumi.Input

	ToDatabaseMigrationArrayOutput() DatabaseMigrationArrayOutput
	ToDatabaseMigrationArrayOutputWithContext(context.Context) DatabaseMigrationArrayOutput
}

type DatabaseMigrationArray []DatabaseMigrationInput

func (DatabaseMigrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseMigration)(nil)).Elem()
}

func (i DatabaseMigrationArray) ToDatabaseMigrationArrayOutput() DatabaseMigrationArrayOutput {
	return i.ToDatabaseMigrationArrayOutputWithContext(context.Background())
}

func (i DatabaseMigrationArray) ToDatabaseMigrationArrayOutputWithContext(ctx context.Context) DatabaseMigrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationArrayOutput)
}

// DatabaseMigrationMapInput is an input type that accepts DatabaseMigrationMap and DatabaseMigrationMapOutput values.
// You can construct a concrete instance of `DatabaseMigrationMapInput` via:
//
//          DatabaseMigrationMap{ "key": DatabaseMigrationArgs{...} }
type DatabaseMigrationMapInput interface {
	pulumi.Input

	ToDatabaseMigrationMapOutput() DatabaseMigrationMapOutput
	ToDatabaseMigrationMapOutputWithContext(context.Context) DatabaseMigrationMapOutput
}

type DatabaseMigrationMap map[string]DatabaseMigrationInput

func (DatabaseMigrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseMigration)(nil)).Elem()
}

func (i DatabaseMigrationMap) ToDatabaseMigrationMapOutput() DatabaseMigrationMapOutput {
	return i.ToDatabaseMigrationMapOutputWithContext(context.Background())
}

func (i DatabaseMigrationMap) ToDatabaseMigrationMapOutputWithContext(ctx context.Context) DatabaseMigrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationMapOutput)
}

type DatabaseMigrationOutput struct {
	*pulumi.OutputState
}

func (DatabaseMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseMigration)(nil))
}

func (o DatabaseMigrationOutput) ToDatabaseMigrationOutput() DatabaseMigrationOutput {
	return o
}

func (o DatabaseMigrationOutput) ToDatabaseMigrationOutputWithContext(ctx context.Context) DatabaseMigrationOutput {
	return o
}

func (o DatabaseMigrationOutput) ToDatabaseMigrationPtrOutput() DatabaseMigrationPtrOutput {
	return o.ToDatabaseMigrationPtrOutputWithContext(context.Background())
}

func (o DatabaseMigrationOutput) ToDatabaseMigrationPtrOutputWithContext(ctx context.Context) DatabaseMigrationPtrOutput {
	return o.ApplyT(func(v DatabaseMigration) *DatabaseMigration {
		return &v
	}).(DatabaseMigrationPtrOutput)
}

type DatabaseMigrationPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigration)(nil))
}

func (o DatabaseMigrationPtrOutput) ToDatabaseMigrationPtrOutput() DatabaseMigrationPtrOutput {
	return o
}

func (o DatabaseMigrationPtrOutput) ToDatabaseMigrationPtrOutputWithContext(ctx context.Context) DatabaseMigrationPtrOutput {
	return o
}

type DatabaseMigrationArrayOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseMigration)(nil))
}

func (o DatabaseMigrationArrayOutput) ToDatabaseMigrationArrayOutput() DatabaseMigrationArrayOutput {
	return o
}

func (o DatabaseMigrationArrayOutput) ToDatabaseMigrationArrayOutputWithContext(ctx context.Context) DatabaseMigrationArrayOutput {
	return o
}

func (o DatabaseMigrationArrayOutput) Index(i pulumi.IntInput) DatabaseMigrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseMigration {
		return vs[0].([]DatabaseMigration)[vs[1].(int)]
	}).(DatabaseMigrationOutput)
}

type DatabaseMigrationMapOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseMigration)(nil))
}

func (o DatabaseMigrationMapOutput) ToDatabaseMigrationMapOutput() DatabaseMigrationMapOutput {
	return o
}

func (o DatabaseMigrationMapOutput) ToDatabaseMigrationMapOutputWithContext(ctx context.Context) DatabaseMigrationMapOutput {
	return o
}

func (o DatabaseMigrationMapOutput) MapIndex(k pulumi.StringInput) DatabaseMigrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseMigration {
		return vs[0].(map[string]DatabaseMigration)[vs[1].(string)]
	}).(DatabaseMigrationOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseMigrationOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationArrayOutput{})
	pulumi.RegisterOutputType(DatabaseMigrationMapOutput{})
}
