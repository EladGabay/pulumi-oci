// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Accepted Agreement resource in Oracle Cloud Infrastructure Marketplace service.
//
// Accepts a terms of use agreement for a specific package version of a listing. You must accept all
// terms of use for a package before you can deploy the package.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewMarketplaceAcceptedAgreement(ctx, "testAcceptedAgreement", &oci.MarketplaceAcceptedAgreementArgs{
// 			AgreementId:    pulumi.Any(oci_marketplace_agreement.Test_agreement.Id),
// 			CompartmentId:  pulumi.Any(_var.Compartment_id),
// 			ListingId:      pulumi.Any(oci_marketplace_listing.Test_listing.Id),
// 			PackageVersion: pulumi.Any(_var.Accepted_agreement_package_version),
// 			Signature:      pulumi.Any(_var.Accepted_agreement_signature),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Accepted_agreement_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// AcceptedAgreements can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/marketplaceAcceptedAgreement:MarketplaceAcceptedAgreement test_accepted_agreement "id"
// ```
type MarketplaceAcceptedAgreement struct {
	pulumi.CustomResourceState

	// The agreement to accept.
	AgreementId pulumi.StringOutput `pulumi:"agreementId"`
	// The unique identifier for the compartment where the agreement will be accepted.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A display name for the accepted agreement.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The unique identifier for the listing associated with the agreement.
	ListingId pulumi.StringOutput `pulumi:"listingId"`
	// The package version associated with the agreement.
	PackageVersion pulumi.StringOutput `pulumi:"packageVersion"`
	// A signature generated for the listing package agreements that you can retrieve with [GetAgreement](https://docs.cloud.oracle.com/iaas/api/#/en/marketplace/20181001/Agreement/GetAgreement).
	Signature pulumi.StringOutput `pulumi:"signature"`
	// The time the agreement was accepted.
	TimeAccepted pulumi.StringOutput `pulumi:"timeAccepted"`
}

// NewMarketplaceAcceptedAgreement registers a new resource with the given unique name, arguments, and options.
func NewMarketplaceAcceptedAgreement(ctx *pulumi.Context,
	name string, args *MarketplaceAcceptedAgreementArgs, opts ...pulumi.ResourceOption) (*MarketplaceAcceptedAgreement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgreementId == nil {
		return nil, errors.New("invalid value for required argument 'AgreementId'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.PackageVersion == nil {
		return nil, errors.New("invalid value for required argument 'PackageVersion'")
	}
	if args.Signature == nil {
		return nil, errors.New("invalid value for required argument 'Signature'")
	}
	var resource MarketplaceAcceptedAgreement
	err := ctx.RegisterResource("oci:index/marketplaceAcceptedAgreement:MarketplaceAcceptedAgreement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMarketplaceAcceptedAgreement gets an existing MarketplaceAcceptedAgreement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMarketplaceAcceptedAgreement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MarketplaceAcceptedAgreementState, opts ...pulumi.ResourceOption) (*MarketplaceAcceptedAgreement, error) {
	var resource MarketplaceAcceptedAgreement
	err := ctx.ReadResource("oci:index/marketplaceAcceptedAgreement:MarketplaceAcceptedAgreement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MarketplaceAcceptedAgreement resources.
type marketplaceAcceptedAgreementState struct {
	// The agreement to accept.
	AgreementId *string `pulumi:"agreementId"`
	// The unique identifier for the compartment where the agreement will be accepted.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A display name for the accepted agreement.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier for the listing associated with the agreement.
	ListingId *string `pulumi:"listingId"`
	// The package version associated with the agreement.
	PackageVersion *string `pulumi:"packageVersion"`
	// A signature generated for the listing package agreements that you can retrieve with [GetAgreement](https://docs.cloud.oracle.com/iaas/api/#/en/marketplace/20181001/Agreement/GetAgreement).
	Signature *string `pulumi:"signature"`
	// The time the agreement was accepted.
	TimeAccepted *string `pulumi:"timeAccepted"`
}

type MarketplaceAcceptedAgreementState struct {
	// The agreement to accept.
	AgreementId pulumi.StringPtrInput
	// The unique identifier for the compartment where the agreement will be accepted.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A display name for the accepted agreement.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The unique identifier for the listing associated with the agreement.
	ListingId pulumi.StringPtrInput
	// The package version associated with the agreement.
	PackageVersion pulumi.StringPtrInput
	// A signature generated for the listing package agreements that you can retrieve with [GetAgreement](https://docs.cloud.oracle.com/iaas/api/#/en/marketplace/20181001/Agreement/GetAgreement).
	Signature pulumi.StringPtrInput
	// The time the agreement was accepted.
	TimeAccepted pulumi.StringPtrInput
}

func (MarketplaceAcceptedAgreementState) ElementType() reflect.Type {
	return reflect.TypeOf((*marketplaceAcceptedAgreementState)(nil)).Elem()
}

type marketplaceAcceptedAgreementArgs struct {
	// The agreement to accept.
	AgreementId string `pulumi:"agreementId"`
	// The unique identifier for the compartment where the agreement will be accepted.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A display name for the accepted agreement.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier for the listing associated with the agreement.
	ListingId string `pulumi:"listingId"`
	// The package version associated with the agreement.
	PackageVersion string `pulumi:"packageVersion"`
	// A signature generated for the listing package agreements that you can retrieve with [GetAgreement](https://docs.cloud.oracle.com/iaas/api/#/en/marketplace/20181001/Agreement/GetAgreement).
	Signature string `pulumi:"signature"`
}

// The set of arguments for constructing a MarketplaceAcceptedAgreement resource.
type MarketplaceAcceptedAgreementArgs struct {
	// The agreement to accept.
	AgreementId pulumi.StringInput
	// The unique identifier for the compartment where the agreement will be accepted.
	CompartmentId pulumi.StringInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A display name for the accepted agreement.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The unique identifier for the listing associated with the agreement.
	ListingId pulumi.StringInput
	// The package version associated with the agreement.
	PackageVersion pulumi.StringInput
	// A signature generated for the listing package agreements that you can retrieve with [GetAgreement](https://docs.cloud.oracle.com/iaas/api/#/en/marketplace/20181001/Agreement/GetAgreement).
	Signature pulumi.StringInput
}

func (MarketplaceAcceptedAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*marketplaceAcceptedAgreementArgs)(nil)).Elem()
}

type MarketplaceAcceptedAgreementInput interface {
	pulumi.Input

	ToMarketplaceAcceptedAgreementOutput() MarketplaceAcceptedAgreementOutput
	ToMarketplaceAcceptedAgreementOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementOutput
}

func (*MarketplaceAcceptedAgreement) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceAcceptedAgreement)(nil))
}

func (i *MarketplaceAcceptedAgreement) ToMarketplaceAcceptedAgreementOutput() MarketplaceAcceptedAgreementOutput {
	return i.ToMarketplaceAcceptedAgreementOutputWithContext(context.Background())
}

func (i *MarketplaceAcceptedAgreement) ToMarketplaceAcceptedAgreementOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceAcceptedAgreementOutput)
}

func (i *MarketplaceAcceptedAgreement) ToMarketplaceAcceptedAgreementPtrOutput() MarketplaceAcceptedAgreementPtrOutput {
	return i.ToMarketplaceAcceptedAgreementPtrOutputWithContext(context.Background())
}

func (i *MarketplaceAcceptedAgreement) ToMarketplaceAcceptedAgreementPtrOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceAcceptedAgreementPtrOutput)
}

type MarketplaceAcceptedAgreementPtrInput interface {
	pulumi.Input

	ToMarketplaceAcceptedAgreementPtrOutput() MarketplaceAcceptedAgreementPtrOutput
	ToMarketplaceAcceptedAgreementPtrOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementPtrOutput
}

type marketplaceAcceptedAgreementPtrType MarketplaceAcceptedAgreementArgs

func (*marketplaceAcceptedAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceAcceptedAgreement)(nil))
}

func (i *marketplaceAcceptedAgreementPtrType) ToMarketplaceAcceptedAgreementPtrOutput() MarketplaceAcceptedAgreementPtrOutput {
	return i.ToMarketplaceAcceptedAgreementPtrOutputWithContext(context.Background())
}

func (i *marketplaceAcceptedAgreementPtrType) ToMarketplaceAcceptedAgreementPtrOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceAcceptedAgreementPtrOutput)
}

// MarketplaceAcceptedAgreementArrayInput is an input type that accepts MarketplaceAcceptedAgreementArray and MarketplaceAcceptedAgreementArrayOutput values.
// You can construct a concrete instance of `MarketplaceAcceptedAgreementArrayInput` via:
//
//          MarketplaceAcceptedAgreementArray{ MarketplaceAcceptedAgreementArgs{...} }
type MarketplaceAcceptedAgreementArrayInput interface {
	pulumi.Input

	ToMarketplaceAcceptedAgreementArrayOutput() MarketplaceAcceptedAgreementArrayOutput
	ToMarketplaceAcceptedAgreementArrayOutputWithContext(context.Context) MarketplaceAcceptedAgreementArrayOutput
}

type MarketplaceAcceptedAgreementArray []MarketplaceAcceptedAgreementInput

func (MarketplaceAcceptedAgreementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MarketplaceAcceptedAgreement)(nil)).Elem()
}

func (i MarketplaceAcceptedAgreementArray) ToMarketplaceAcceptedAgreementArrayOutput() MarketplaceAcceptedAgreementArrayOutput {
	return i.ToMarketplaceAcceptedAgreementArrayOutputWithContext(context.Background())
}

func (i MarketplaceAcceptedAgreementArray) ToMarketplaceAcceptedAgreementArrayOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceAcceptedAgreementArrayOutput)
}

// MarketplaceAcceptedAgreementMapInput is an input type that accepts MarketplaceAcceptedAgreementMap and MarketplaceAcceptedAgreementMapOutput values.
// You can construct a concrete instance of `MarketplaceAcceptedAgreementMapInput` via:
//
//          MarketplaceAcceptedAgreementMap{ "key": MarketplaceAcceptedAgreementArgs{...} }
type MarketplaceAcceptedAgreementMapInput interface {
	pulumi.Input

	ToMarketplaceAcceptedAgreementMapOutput() MarketplaceAcceptedAgreementMapOutput
	ToMarketplaceAcceptedAgreementMapOutputWithContext(context.Context) MarketplaceAcceptedAgreementMapOutput
}

type MarketplaceAcceptedAgreementMap map[string]MarketplaceAcceptedAgreementInput

func (MarketplaceAcceptedAgreementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MarketplaceAcceptedAgreement)(nil)).Elem()
}

func (i MarketplaceAcceptedAgreementMap) ToMarketplaceAcceptedAgreementMapOutput() MarketplaceAcceptedAgreementMapOutput {
	return i.ToMarketplaceAcceptedAgreementMapOutputWithContext(context.Background())
}

func (i MarketplaceAcceptedAgreementMap) ToMarketplaceAcceptedAgreementMapOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceAcceptedAgreementMapOutput)
}

type MarketplaceAcceptedAgreementOutput struct {
	*pulumi.OutputState
}

func (MarketplaceAcceptedAgreementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceAcceptedAgreement)(nil))
}

func (o MarketplaceAcceptedAgreementOutput) ToMarketplaceAcceptedAgreementOutput() MarketplaceAcceptedAgreementOutput {
	return o
}

func (o MarketplaceAcceptedAgreementOutput) ToMarketplaceAcceptedAgreementOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementOutput {
	return o
}

func (o MarketplaceAcceptedAgreementOutput) ToMarketplaceAcceptedAgreementPtrOutput() MarketplaceAcceptedAgreementPtrOutput {
	return o.ToMarketplaceAcceptedAgreementPtrOutputWithContext(context.Background())
}

func (o MarketplaceAcceptedAgreementOutput) ToMarketplaceAcceptedAgreementPtrOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementPtrOutput {
	return o.ApplyT(func(v MarketplaceAcceptedAgreement) *MarketplaceAcceptedAgreement {
		return &v
	}).(MarketplaceAcceptedAgreementPtrOutput)
}

type MarketplaceAcceptedAgreementPtrOutput struct {
	*pulumi.OutputState
}

func (MarketplaceAcceptedAgreementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceAcceptedAgreement)(nil))
}

func (o MarketplaceAcceptedAgreementPtrOutput) ToMarketplaceAcceptedAgreementPtrOutput() MarketplaceAcceptedAgreementPtrOutput {
	return o
}

func (o MarketplaceAcceptedAgreementPtrOutput) ToMarketplaceAcceptedAgreementPtrOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementPtrOutput {
	return o
}

type MarketplaceAcceptedAgreementArrayOutput struct{ *pulumi.OutputState }

func (MarketplaceAcceptedAgreementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MarketplaceAcceptedAgreement)(nil))
}

func (o MarketplaceAcceptedAgreementArrayOutput) ToMarketplaceAcceptedAgreementArrayOutput() MarketplaceAcceptedAgreementArrayOutput {
	return o
}

func (o MarketplaceAcceptedAgreementArrayOutput) ToMarketplaceAcceptedAgreementArrayOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementArrayOutput {
	return o
}

func (o MarketplaceAcceptedAgreementArrayOutput) Index(i pulumi.IntInput) MarketplaceAcceptedAgreementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MarketplaceAcceptedAgreement {
		return vs[0].([]MarketplaceAcceptedAgreement)[vs[1].(int)]
	}).(MarketplaceAcceptedAgreementOutput)
}

type MarketplaceAcceptedAgreementMapOutput struct{ *pulumi.OutputState }

func (MarketplaceAcceptedAgreementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MarketplaceAcceptedAgreement)(nil))
}

func (o MarketplaceAcceptedAgreementMapOutput) ToMarketplaceAcceptedAgreementMapOutput() MarketplaceAcceptedAgreementMapOutput {
	return o
}

func (o MarketplaceAcceptedAgreementMapOutput) ToMarketplaceAcceptedAgreementMapOutputWithContext(ctx context.Context) MarketplaceAcceptedAgreementMapOutput {
	return o
}

func (o MarketplaceAcceptedAgreementMapOutput) MapIndex(k pulumi.StringInput) MarketplaceAcceptedAgreementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MarketplaceAcceptedAgreement {
		return vs[0].(map[string]MarketplaceAcceptedAgreement)[vs[1].(string)]
	}).(MarketplaceAcceptedAgreementOutput)
}

func init() {
	pulumi.RegisterOutputType(MarketplaceAcceptedAgreementOutput{})
	pulumi.RegisterOutputType(MarketplaceAcceptedAgreementPtrOutput{})
	pulumi.RegisterOutputType(MarketplaceAcceptedAgreementArrayOutput{})
	pulumi.RegisterOutputType(MarketplaceAcceptedAgreementMapOutput{})
}
