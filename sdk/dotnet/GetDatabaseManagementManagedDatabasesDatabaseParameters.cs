// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetDatabaseManagementManagedDatabasesDatabaseParameters
    {
        /// <summary>
        /// This data source provides the list of Managed Databases Database Parameters in Oracle Cloud Infrastructure Database Management service.
        /// 
        /// Gets the list of database parameters for the specified Managed Database. The parameters are listed in alphabetical order, along with their current values.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testManagedDatabasesDatabaseParameters = Output.Create(Oci.GetDatabaseManagementManagedDatabasesDatabaseParameters.InvokeAsync(new Oci.GetDatabaseManagementManagedDatabasesDatabaseParametersArgs
        ///         {
        ///             ManagedDatabaseId = oci_database_management_managed_database.Test_managed_database.Id,
        ///             IsAllowedValuesIncluded = @var.Managed_databases_database_parameter_is_allowed_values_included,
        ///             Name = @var.Managed_databases_database_parameter_name,
        ///             Source = @var.Managed_databases_database_parameter_source,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseManagementManagedDatabasesDatabaseParametersResult> InvokeAsync(GetDatabaseManagementManagedDatabasesDatabaseParametersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseManagementManagedDatabasesDatabaseParametersResult>("oci:index/getDatabaseManagementManagedDatabasesDatabaseParameters:GetDatabaseManagementManagedDatabasesDatabaseParameters", args ?? new GetDatabaseManagementManagedDatabasesDatabaseParametersArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseManagementManagedDatabasesDatabaseParametersArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetDatabaseManagementManagedDatabasesDatabaseParametersFilterArgs>? _filters;
        public List<Inputs.GetDatabaseManagementManagedDatabasesDatabaseParametersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseManagementManagedDatabasesDatabaseParametersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// When true, results include a list of valid values for parameters (if applicable).
        /// </summary>
        [Input("isAllowedValuesIncluded")]
        public bool? IsAllowedValuesIncluded { get; set; }

        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </summary>
        [Input("managedDatabaseId", required: true)]
        public string ManagedDatabaseId { get; set; } = null!;

        /// <summary>
        /// A filter to return all parameters that have the text given in their names.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The source used to list database parameters. `CURRENT` is used to get the database parameters that are currently in effect for the database instance. `SPFILE` is used to list parameters from the server parameter file. Default is `CURRENT`.
        /// </summary>
        [Input("source")]
        public string? Source { get; set; }

        public GetDatabaseManagementManagedDatabasesDatabaseParametersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseManagementManagedDatabasesDatabaseParametersResult
    {
        /// <summary>
        /// The list of database_parameters_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionResult> DatabaseParametersCollections;
        public readonly ImmutableArray<Outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsAllowedValuesIncluded;
        public readonly string ManagedDatabaseId;
        /// <summary>
        /// The parameter name.
        /// </summary>
        public readonly string? Name;
        public readonly string? Source;

        [OutputConstructor]
        private GetDatabaseManagementManagedDatabasesDatabaseParametersResult(
            ImmutableArray<Outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersDatabaseParametersCollectionResult> databaseParametersCollections,

            ImmutableArray<Outputs.GetDatabaseManagementManagedDatabasesDatabaseParametersFilterResult> filters,

            string id,

            bool? isAllowedValuesIncluded,

            string managedDatabaseId,

            string? name,

            string? source)
        {
            DatabaseParametersCollections = databaseParametersCollections;
            Filters = filters;
            Id = id;
            IsAllowedValuesIncluded = isAllowedValuesIncluded;
            ManagedDatabaseId = managedDatabaseId;
            Name = name;
            Source = source;
        }
    }
}
