// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource provides the Shape Management resource in Oracle Cloud Infrastructure Core service.
 *
 * Add/Remove the specified shape from the compatible shapes list for the image.
 */
export class CoreShapeManagement extends pulumi.CustomResource {
    /**
     * Get an existing CoreShapeManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CoreShapeManagementState, opts?: pulumi.CustomResourceOptions): CoreShapeManagement {
        return new CoreShapeManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/coreShapeManagement:CoreShapeManagement';

    /**
     * Returns true if the given object is an instance of CoreShapeManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CoreShapeManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CoreShapeManagement.__pulumiType;
    }

    /**
     * The OCID of the compartment containing the image.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The OCID of the Image to which the shape should be added.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The compatible shape that is to be added to the compatible shapes list for the image.
     */
    public readonly shapeName!: pulumi.Output<string>;

    /**
     * Create a CoreShapeManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreShapeManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CoreShapeManagementArgs | CoreShapeManagementState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CoreShapeManagementState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["shapeName"] = state ? state.shapeName : undefined;
        } else {
            const args = argsOrState as CoreShapeManagementArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.shapeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shapeName'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["shapeName"] = args ? args.shapeName : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CoreShapeManagement.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CoreShapeManagement resources.
 */
export interface CoreShapeManagementState {
    /**
     * The OCID of the compartment containing the image.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the Image to which the shape should be added.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The compatible shape that is to be added to the compatible shapes list for the image.
     */
    shapeName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CoreShapeManagement resource.
 */
export interface CoreShapeManagementArgs {
    /**
     * The OCID of the compartment containing the image.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The OCID of the Image to which the shape should be added.
     */
    imageId: pulumi.Input<string>;
    /**
     * The compatible shape that is to be added to the compatible shapes list for the image.
     */
    shapeName: pulumi.Input<string>;
}
