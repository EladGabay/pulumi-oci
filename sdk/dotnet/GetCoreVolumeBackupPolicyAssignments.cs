// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci
{
    public static class GetCoreVolumeBackupPolicyAssignments
    {
        /// <summary>
        /// This data source provides the list of Volume Backup Policy Assignments in Oracle Cloud Infrastructure Core service.
        /// 
        /// Gets the volume backup policy assignment for the specified volume. The
        /// `assetId` query parameter is required, and the returned list will contain at most
        /// one item, since volume can only have one volume backup policy assigned at a time.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVolumeBackupPolicyAssignments = Output.Create(Oci.GetCoreVolumeBackupPolicyAssignments.InvokeAsync(new Oci.GetCoreVolumeBackupPolicyAssignmentsArgs
        ///         {
        ///             AssetId = oci_core_volume.Test_volume.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCoreVolumeBackupPolicyAssignmentsResult> InvokeAsync(GetCoreVolumeBackupPolicyAssignmentsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCoreVolumeBackupPolicyAssignmentsResult>("oci:index/getCoreVolumeBackupPolicyAssignments:GetCoreVolumeBackupPolicyAssignments", args ?? new GetCoreVolumeBackupPolicyAssignmentsArgs(), options.WithVersion());
    }


    public sealed class GetCoreVolumeBackupPolicyAssignmentsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The OCID of an asset (e.g. a volume).
        /// </summary>
        [Input("assetId", required: true)]
        public string AssetId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetCoreVolumeBackupPolicyAssignmentsFilterArgs>? _filters;
        public List<Inputs.GetCoreVolumeBackupPolicyAssignmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoreVolumeBackupPolicyAssignmentsFilterArgs>());
            set => _filters = value;
        }

        public GetCoreVolumeBackupPolicyAssignmentsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCoreVolumeBackupPolicyAssignmentsResult
    {
        /// <summary>
        /// The OCID of the volume the policy has been assigned to.
        /// </summary>
        public readonly string AssetId;
        public readonly ImmutableArray<Outputs.GetCoreVolumeBackupPolicyAssignmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of volume_backup_policy_assignments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCoreVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentResult> VolumeBackupPolicyAssignments;

        [OutputConstructor]
        private GetCoreVolumeBackupPolicyAssignmentsResult(
            string assetId,

            ImmutableArray<Outputs.GetCoreVolumeBackupPolicyAssignmentsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetCoreVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentResult> volumeBackupPolicyAssignments)
        {
            AssetId = assetId;
            Filters = filters;
            Id = id;
            VolumeBackupPolicyAssignments = volumeBackupPolicyAssignments;
        }
    }
}
