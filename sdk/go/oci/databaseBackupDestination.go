// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Backup Destination resource in Oracle Cloud Infrastructure Database service.
//
// Creates a backup destination in an Exadata Cloud@Customer system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewDatabaseBackupDestination(ctx, "testBackupDestination", &oci.DatabaseBackupDestinationArgs{
// 			CompartmentId:    pulumi.Any(_var.Compartment_id),
// 			DisplayName:      pulumi.Any(_var.Backup_destination_display_name),
// 			Type:             pulumi.Any(_var.Backup_destination_type),
// 			ConnectionString: pulumi.Any(_var.Backup_destination_connection_string),
// 			DefinedTags:      pulumi.Any(_var.Backup_destination_defined_tags),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			LocalMountPointPath: pulumi.Any(_var.Backup_destination_local_mount_point_path),
// 			MountTypeDetails: &DatabaseBackupDestinationMountTypeDetailsArgs{
// 				MountType:           pulumi.Any(_var.Backup_destination_mount_type_details_mount_type),
// 				LocalMountPointPath: pulumi.Any(_var.Backup_destination_mount_type_details_local_mount_point_path),
// 				NfsServers:          pulumi.Any(_var.Backup_destination_mount_type_details_nfs_server),
// 				NfsServerExport:     pulumi.Any(_var.Backup_destination_mount_type_details_nfs_server_export),
// 			},
// 			VpcUsers: pulumi.Any(_var.Backup_destination_vpc_users),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// BackupDestinations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/databaseBackupDestination:DatabaseBackupDestination test_backup_destination "id"
// ```
type DatabaseBackupDestination struct {
	pulumi.CustomResourceState

	// List of databases associated with the backup destination.
	AssociatedDatabases DatabaseBackupDestinationAssociatedDatabaseArrayOutput `pulumi:"associatedDatabases"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The connection string for connecting to the Recovery Appliance.
	ConnectionString pulumi.StringPtrOutput `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-provided name of the backup destination.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A descriptive text associated with the lifecycleState. Typically contains additional displayable text
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
	//
	// Deprecated: The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
	LocalMountPointPath pulumi.StringOutput `pulumi:"localMountPointPath"`
	// Mount type details for backup destination.
	MountTypeDetails DatabaseBackupDestinationMountTypeDetailsOutput `pulumi:"mountTypeDetails"`
	// NFS Mount type for backup destination.
	NfsMountType pulumi.StringOutput `pulumi:"nfsMountType"`
	// Specifies the directory on which to mount the file system
	NfsServerExport pulumi.StringOutput `pulumi:"nfsServerExport"`
	// IP addresses for NFS Auto mount.
	NfsServers pulumi.StringArrayOutput `pulumi:"nfsServers"`
	// The current lifecycle state of the backup destination.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the backup destination was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Type of the backup destination.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
	VpcUsers pulumi.StringArrayOutput `pulumi:"vpcUsers"`
}

// NewDatabaseBackupDestination registers a new resource with the given unique name, arguments, and options.
func NewDatabaseBackupDestination(ctx *pulumi.Context,
	name string, args *DatabaseBackupDestinationArgs, opts ...pulumi.ResourceOption) (*DatabaseBackupDestination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource DatabaseBackupDestination
	err := ctx.RegisterResource("oci:index/databaseBackupDestination:DatabaseBackupDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseBackupDestination gets an existing DatabaseBackupDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseBackupDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseBackupDestinationState, opts ...pulumi.ResourceOption) (*DatabaseBackupDestination, error) {
	var resource DatabaseBackupDestination
	err := ctx.ReadResource("oci:index/databaseBackupDestination:DatabaseBackupDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseBackupDestination resources.
type databaseBackupDestinationState struct {
	// List of databases associated with the backup destination.
	AssociatedDatabases []DatabaseBackupDestinationAssociatedDatabase `pulumi:"associatedDatabases"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The connection string for connecting to the Recovery Appliance.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-provided name of the backup destination.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A descriptive text associated with the lifecycleState. Typically contains additional displayable text
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
	//
	// Deprecated: The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
	LocalMountPointPath *string `pulumi:"localMountPointPath"`
	// Mount type details for backup destination.
	MountTypeDetails *DatabaseBackupDestinationMountTypeDetails `pulumi:"mountTypeDetails"`
	// NFS Mount type for backup destination.
	NfsMountType *string `pulumi:"nfsMountType"`
	// Specifies the directory on which to mount the file system
	NfsServerExport *string `pulumi:"nfsServerExport"`
	// IP addresses for NFS Auto mount.
	NfsServers []string `pulumi:"nfsServers"`
	// The current lifecycle state of the backup destination.
	State *string `pulumi:"state"`
	// The date and time the backup destination was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Type of the backup destination.
	Type *string `pulumi:"type"`
	// (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
	VpcUsers []string `pulumi:"vpcUsers"`
}

type DatabaseBackupDestinationState struct {
	// List of databases associated with the backup destination.
	AssociatedDatabases DatabaseBackupDestinationAssociatedDatabaseArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The connection string for connecting to the Recovery Appliance.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-provided name of the backup destination.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// A descriptive text associated with the lifecycleState. Typically contains additional displayable text
	LifecycleDetails pulumi.StringPtrInput
	// The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
	//
	// Deprecated: The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
	LocalMountPointPath pulumi.StringPtrInput
	// Mount type details for backup destination.
	MountTypeDetails DatabaseBackupDestinationMountTypeDetailsPtrInput
	// NFS Mount type for backup destination.
	NfsMountType pulumi.StringPtrInput
	// Specifies the directory on which to mount the file system
	NfsServerExport pulumi.StringPtrInput
	// IP addresses for NFS Auto mount.
	NfsServers pulumi.StringArrayInput
	// The current lifecycle state of the backup destination.
	State pulumi.StringPtrInput
	// The date and time the backup destination was created.
	TimeCreated pulumi.StringPtrInput
	// Type of the backup destination.
	Type pulumi.StringPtrInput
	// (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
	VpcUsers pulumi.StringArrayInput
}

func (DatabaseBackupDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseBackupDestinationState)(nil)).Elem()
}

type databaseBackupDestinationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The connection string for connecting to the Recovery Appliance.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-provided name of the backup destination.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
	//
	// Deprecated: The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
	LocalMountPointPath *string `pulumi:"localMountPointPath"`
	// Mount type details for backup destination.
	MountTypeDetails *DatabaseBackupDestinationMountTypeDetails `pulumi:"mountTypeDetails"`
	// Type of the backup destination.
	Type string `pulumi:"type"`
	// (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
	VpcUsers []string `pulumi:"vpcUsers"`
}

// The set of arguments for constructing a DatabaseBackupDestination resource.
type DatabaseBackupDestinationArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) The connection string for connecting to the Recovery Appliance.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-provided name of the backup destination.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
	//
	// Deprecated: The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
	LocalMountPointPath pulumi.StringPtrInput
	// Mount type details for backup destination.
	MountTypeDetails DatabaseBackupDestinationMountTypeDetailsPtrInput
	// Type of the backup destination.
	Type pulumi.StringInput
	// (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
	VpcUsers pulumi.StringArrayInput
}

func (DatabaseBackupDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseBackupDestinationArgs)(nil)).Elem()
}

type DatabaseBackupDestinationInput interface {
	pulumi.Input

	ToDatabaseBackupDestinationOutput() DatabaseBackupDestinationOutput
	ToDatabaseBackupDestinationOutputWithContext(ctx context.Context) DatabaseBackupDestinationOutput
}

func (*DatabaseBackupDestination) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupDestination)(nil))
}

func (i *DatabaseBackupDestination) ToDatabaseBackupDestinationOutput() DatabaseBackupDestinationOutput {
	return i.ToDatabaseBackupDestinationOutputWithContext(context.Background())
}

func (i *DatabaseBackupDestination) ToDatabaseBackupDestinationOutputWithContext(ctx context.Context) DatabaseBackupDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupDestinationOutput)
}

func (i *DatabaseBackupDestination) ToDatabaseBackupDestinationPtrOutput() DatabaseBackupDestinationPtrOutput {
	return i.ToDatabaseBackupDestinationPtrOutputWithContext(context.Background())
}

func (i *DatabaseBackupDestination) ToDatabaseBackupDestinationPtrOutputWithContext(ctx context.Context) DatabaseBackupDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupDestinationPtrOutput)
}

type DatabaseBackupDestinationPtrInput interface {
	pulumi.Input

	ToDatabaseBackupDestinationPtrOutput() DatabaseBackupDestinationPtrOutput
	ToDatabaseBackupDestinationPtrOutputWithContext(ctx context.Context) DatabaseBackupDestinationPtrOutput
}

type databaseBackupDestinationPtrType DatabaseBackupDestinationArgs

func (*databaseBackupDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupDestination)(nil))
}

func (i *databaseBackupDestinationPtrType) ToDatabaseBackupDestinationPtrOutput() DatabaseBackupDestinationPtrOutput {
	return i.ToDatabaseBackupDestinationPtrOutputWithContext(context.Background())
}

func (i *databaseBackupDestinationPtrType) ToDatabaseBackupDestinationPtrOutputWithContext(ctx context.Context) DatabaseBackupDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupDestinationPtrOutput)
}

// DatabaseBackupDestinationArrayInput is an input type that accepts DatabaseBackupDestinationArray and DatabaseBackupDestinationArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupDestinationArrayInput` via:
//
//          DatabaseBackupDestinationArray{ DatabaseBackupDestinationArgs{...} }
type DatabaseBackupDestinationArrayInput interface {
	pulumi.Input

	ToDatabaseBackupDestinationArrayOutput() DatabaseBackupDestinationArrayOutput
	ToDatabaseBackupDestinationArrayOutputWithContext(context.Context) DatabaseBackupDestinationArrayOutput
}

type DatabaseBackupDestinationArray []DatabaseBackupDestinationInput

func (DatabaseBackupDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseBackupDestination)(nil)).Elem()
}

func (i DatabaseBackupDestinationArray) ToDatabaseBackupDestinationArrayOutput() DatabaseBackupDestinationArrayOutput {
	return i.ToDatabaseBackupDestinationArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupDestinationArray) ToDatabaseBackupDestinationArrayOutputWithContext(ctx context.Context) DatabaseBackupDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupDestinationArrayOutput)
}

// DatabaseBackupDestinationMapInput is an input type that accepts DatabaseBackupDestinationMap and DatabaseBackupDestinationMapOutput values.
// You can construct a concrete instance of `DatabaseBackupDestinationMapInput` via:
//
//          DatabaseBackupDestinationMap{ "key": DatabaseBackupDestinationArgs{...} }
type DatabaseBackupDestinationMapInput interface {
	pulumi.Input

	ToDatabaseBackupDestinationMapOutput() DatabaseBackupDestinationMapOutput
	ToDatabaseBackupDestinationMapOutputWithContext(context.Context) DatabaseBackupDestinationMapOutput
}

type DatabaseBackupDestinationMap map[string]DatabaseBackupDestinationInput

func (DatabaseBackupDestinationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseBackupDestination)(nil)).Elem()
}

func (i DatabaseBackupDestinationMap) ToDatabaseBackupDestinationMapOutput() DatabaseBackupDestinationMapOutput {
	return i.ToDatabaseBackupDestinationMapOutputWithContext(context.Background())
}

func (i DatabaseBackupDestinationMap) ToDatabaseBackupDestinationMapOutputWithContext(ctx context.Context) DatabaseBackupDestinationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupDestinationMapOutput)
}

type DatabaseBackupDestinationOutput struct {
	*pulumi.OutputState
}

func (DatabaseBackupDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupDestination)(nil))
}

func (o DatabaseBackupDestinationOutput) ToDatabaseBackupDestinationOutput() DatabaseBackupDestinationOutput {
	return o
}

func (o DatabaseBackupDestinationOutput) ToDatabaseBackupDestinationOutputWithContext(ctx context.Context) DatabaseBackupDestinationOutput {
	return o
}

func (o DatabaseBackupDestinationOutput) ToDatabaseBackupDestinationPtrOutput() DatabaseBackupDestinationPtrOutput {
	return o.ToDatabaseBackupDestinationPtrOutputWithContext(context.Background())
}

func (o DatabaseBackupDestinationOutput) ToDatabaseBackupDestinationPtrOutputWithContext(ctx context.Context) DatabaseBackupDestinationPtrOutput {
	return o.ApplyT(func(v DatabaseBackupDestination) *DatabaseBackupDestination {
		return &v
	}).(DatabaseBackupDestinationPtrOutput)
}

type DatabaseBackupDestinationPtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseBackupDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupDestination)(nil))
}

func (o DatabaseBackupDestinationPtrOutput) ToDatabaseBackupDestinationPtrOutput() DatabaseBackupDestinationPtrOutput {
	return o
}

func (o DatabaseBackupDestinationPtrOutput) ToDatabaseBackupDestinationPtrOutputWithContext(ctx context.Context) DatabaseBackupDestinationPtrOutput {
	return o
}

type DatabaseBackupDestinationArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupDestination)(nil))
}

func (o DatabaseBackupDestinationArrayOutput) ToDatabaseBackupDestinationArrayOutput() DatabaseBackupDestinationArrayOutput {
	return o
}

func (o DatabaseBackupDestinationArrayOutput) ToDatabaseBackupDestinationArrayOutputWithContext(ctx context.Context) DatabaseBackupDestinationArrayOutput {
	return o
}

func (o DatabaseBackupDestinationArrayOutput) Index(i pulumi.IntInput) DatabaseBackupDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupDestination {
		return vs[0].([]DatabaseBackupDestination)[vs[1].(int)]
	}).(DatabaseBackupDestinationOutput)
}

type DatabaseBackupDestinationMapOutput struct{ *pulumi.OutputState }

func (DatabaseBackupDestinationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseBackupDestination)(nil))
}

func (o DatabaseBackupDestinationMapOutput) ToDatabaseBackupDestinationMapOutput() DatabaseBackupDestinationMapOutput {
	return o
}

func (o DatabaseBackupDestinationMapOutput) ToDatabaseBackupDestinationMapOutputWithContext(ctx context.Context) DatabaseBackupDestinationMapOutput {
	return o
}

func (o DatabaseBackupDestinationMapOutput) MapIndex(k pulumi.StringInput) DatabaseBackupDestinationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseBackupDestination {
		return vs[0].(map[string]DatabaseBackupDestination)[vs[1].(string)]
	}).(DatabaseBackupDestinationOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseBackupDestinationOutput{})
	pulumi.RegisterOutputType(DatabaseBackupDestinationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupDestinationArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupDestinationMapOutput{})
}
