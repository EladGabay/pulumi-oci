// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
//
// Starts the provisioning of a new stream pool.
// To track the progress of the provisioning, you can periodically call GetStreamPool.
// In the response, the `lifecycleState` parameter of the object tells you its current state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oci.NewStreamingStreamPool(ctx, "testStreamPool", &oci.StreamingStreamPoolArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			CustomEncryptionKey: &StreamingStreamPoolCustomEncryptionKeyArgs{
// 				KmsKeyId: pulumi.Any(oci_kms_key.Test_key.Id),
// 			},
// 			DefinedTags: pulumi.Any(_var.Stream_pool_defined_tags),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			KafkaSettings: &StreamingStreamPoolKafkaSettingsArgs{
// 				AutoCreateTopicsEnable: pulumi.Any(_var.Stream_pool_kafka_settings_auto_create_topics_enable),
// 				BootstrapServers:       pulumi.Any(_var.Stream_pool_kafka_settings_bootstrap_servers),
// 				LogRetentionHours:      pulumi.Any(_var.Stream_pool_kafka_settings_log_retention_hours),
// 				NumPartitions:          pulumi.Any(_var.Stream_pool_kafka_settings_num_partitions),
// 			},
// 			PrivateEndpointSettings: &StreamingStreamPoolPrivateEndpointSettingsArgs{
// 				NsgIds:            pulumi.Any(_var.Stream_pool_private_endpoint_settings_nsg_ids),
// 				PrivateEndpointIp: pulumi.Any(_var.Stream_pool_private_endpoint_settings_private_endpoint_ip),
// 				SubnetId:          pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// StreamPools can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:index/streamingStreamPool:StreamingStreamPool test_stream_pool "id"
// ```
type StreamingStreamPool struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that contains the stream.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
	CustomEncryptionKey StreamingStreamPoolCustomEncryptionKeyOutput `pulumi:"customEncryptionKey"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn pulumi.StringOutput `pulumi:"endpointFqdn"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate pulumi.BoolOutput `pulumi:"isPrivate"`
	// (Updatable) Settings for the Kafka compatibility layer.
	KafkaSettings StreamingStreamPoolKafkaSettingsOutput `pulumi:"kafkaSettings"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails pulumi.StringOutput `pulumi:"lifecycleStateDetails"`
	// (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional parameters if a private stream pool is requested.
	PrivateEndpointSettings StreamingStreamPoolPrivateEndpointSettingsOutput `pulumi:"privateEndpointSettings"`
	// The current state of the stream pool.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewStreamingStreamPool registers a new resource with the given unique name, arguments, and options.
func NewStreamingStreamPool(ctx *pulumi.Context,
	name string, args *StreamingStreamPoolArgs, opts ...pulumi.ResourceOption) (*StreamingStreamPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource StreamingStreamPool
	err := ctx.RegisterResource("oci:index/streamingStreamPool:StreamingStreamPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStreamingStreamPool gets an existing StreamingStreamPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStreamingStreamPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StreamingStreamPoolState, opts ...pulumi.ResourceOption) (*StreamingStreamPool, error) {
	var resource StreamingStreamPool
	err := ctx.ReadResource("oci:index/streamingStreamPool:StreamingStreamPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StreamingStreamPool resources.
type streamingStreamPoolState struct {
	// (Updatable) The OCID of the compartment that contains the stream.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
	CustomEncryptionKey *StreamingStreamPoolCustomEncryptionKey `pulumi:"customEncryptionKey"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn *string `pulumi:"endpointFqdn"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate *bool `pulumi:"isPrivate"`
	// (Updatable) Settings for the Kafka compatibility layer.
	KafkaSettings *StreamingStreamPoolKafkaSettings `pulumi:"kafkaSettings"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails *string `pulumi:"lifecycleStateDetails"`
	// (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
	Name *string `pulumi:"name"`
	// Optional parameters if a private stream pool is requested.
	PrivateEndpointSettings *StreamingStreamPoolPrivateEndpointSettings `pulumi:"privateEndpointSettings"`
	// The current state of the stream pool.
	State *string `pulumi:"state"`
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type StreamingStreamPoolState struct {
	// (Updatable) The OCID of the compartment that contains the stream.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
	CustomEncryptionKey StreamingStreamPoolCustomEncryptionKeyPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate pulumi.BoolPtrInput
	// (Updatable) Settings for the Kafka compatibility layer.
	KafkaSettings StreamingStreamPoolKafkaSettingsPtrInput
	// Any additional details about the current state of the stream.
	LifecycleStateDetails pulumi.StringPtrInput
	// (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
	Name pulumi.StringPtrInput
	// Optional parameters if a private stream pool is requested.
	PrivateEndpointSettings StreamingStreamPoolPrivateEndpointSettingsPtrInput
	// The current state of the stream pool.
	State pulumi.StringPtrInput
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringPtrInput
}

func (StreamingStreamPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*streamingStreamPoolState)(nil)).Elem()
}

type streamingStreamPoolArgs struct {
	// (Updatable) The OCID of the compartment that contains the stream.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
	CustomEncryptionKey *StreamingStreamPoolCustomEncryptionKey `pulumi:"customEncryptionKey"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Settings for the Kafka compatibility layer.
	KafkaSettings *StreamingStreamPoolKafkaSettings `pulumi:"kafkaSettings"`
	// (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
	Name *string `pulumi:"name"`
	// Optional parameters if a private stream pool is requested.
	PrivateEndpointSettings *StreamingStreamPoolPrivateEndpointSettings `pulumi:"privateEndpointSettings"`
}

// The set of arguments for constructing a StreamingStreamPool resource.
type StreamingStreamPoolArgs struct {
	// (Updatable) The OCID of the compartment that contains the stream.
	CompartmentId pulumi.StringInput
	// (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
	CustomEncryptionKey StreamingStreamPoolCustomEncryptionKeyPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Settings for the Kafka compatibility layer.
	KafkaSettings StreamingStreamPoolKafkaSettingsPtrInput
	// (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
	Name pulumi.StringPtrInput
	// Optional parameters if a private stream pool is requested.
	PrivateEndpointSettings StreamingStreamPoolPrivateEndpointSettingsPtrInput
}

func (StreamingStreamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*streamingStreamPoolArgs)(nil)).Elem()
}

type StreamingStreamPoolInput interface {
	pulumi.Input

	ToStreamingStreamPoolOutput() StreamingStreamPoolOutput
	ToStreamingStreamPoolOutputWithContext(ctx context.Context) StreamingStreamPoolOutput
}

func (*StreamingStreamPool) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingStreamPool)(nil))
}

func (i *StreamingStreamPool) ToStreamingStreamPoolOutput() StreamingStreamPoolOutput {
	return i.ToStreamingStreamPoolOutputWithContext(context.Background())
}

func (i *StreamingStreamPool) ToStreamingStreamPoolOutputWithContext(ctx context.Context) StreamingStreamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingStreamPoolOutput)
}

func (i *StreamingStreamPool) ToStreamingStreamPoolPtrOutput() StreamingStreamPoolPtrOutput {
	return i.ToStreamingStreamPoolPtrOutputWithContext(context.Background())
}

func (i *StreamingStreamPool) ToStreamingStreamPoolPtrOutputWithContext(ctx context.Context) StreamingStreamPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingStreamPoolPtrOutput)
}

type StreamingStreamPoolPtrInput interface {
	pulumi.Input

	ToStreamingStreamPoolPtrOutput() StreamingStreamPoolPtrOutput
	ToStreamingStreamPoolPtrOutputWithContext(ctx context.Context) StreamingStreamPoolPtrOutput
}

type streamingStreamPoolPtrType StreamingStreamPoolArgs

func (*streamingStreamPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingStreamPool)(nil))
}

func (i *streamingStreamPoolPtrType) ToStreamingStreamPoolPtrOutput() StreamingStreamPoolPtrOutput {
	return i.ToStreamingStreamPoolPtrOutputWithContext(context.Background())
}

func (i *streamingStreamPoolPtrType) ToStreamingStreamPoolPtrOutputWithContext(ctx context.Context) StreamingStreamPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingStreamPoolPtrOutput)
}

// StreamingStreamPoolArrayInput is an input type that accepts StreamingStreamPoolArray and StreamingStreamPoolArrayOutput values.
// You can construct a concrete instance of `StreamingStreamPoolArrayInput` via:
//
//          StreamingStreamPoolArray{ StreamingStreamPoolArgs{...} }
type StreamingStreamPoolArrayInput interface {
	pulumi.Input

	ToStreamingStreamPoolArrayOutput() StreamingStreamPoolArrayOutput
	ToStreamingStreamPoolArrayOutputWithContext(context.Context) StreamingStreamPoolArrayOutput
}

type StreamingStreamPoolArray []StreamingStreamPoolInput

func (StreamingStreamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StreamingStreamPool)(nil)).Elem()
}

func (i StreamingStreamPoolArray) ToStreamingStreamPoolArrayOutput() StreamingStreamPoolArrayOutput {
	return i.ToStreamingStreamPoolArrayOutputWithContext(context.Background())
}

func (i StreamingStreamPoolArray) ToStreamingStreamPoolArrayOutputWithContext(ctx context.Context) StreamingStreamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingStreamPoolArrayOutput)
}

// StreamingStreamPoolMapInput is an input type that accepts StreamingStreamPoolMap and StreamingStreamPoolMapOutput values.
// You can construct a concrete instance of `StreamingStreamPoolMapInput` via:
//
//          StreamingStreamPoolMap{ "key": StreamingStreamPoolArgs{...} }
type StreamingStreamPoolMapInput interface {
	pulumi.Input

	ToStreamingStreamPoolMapOutput() StreamingStreamPoolMapOutput
	ToStreamingStreamPoolMapOutputWithContext(context.Context) StreamingStreamPoolMapOutput
}

type StreamingStreamPoolMap map[string]StreamingStreamPoolInput

func (StreamingStreamPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StreamingStreamPool)(nil)).Elem()
}

func (i StreamingStreamPoolMap) ToStreamingStreamPoolMapOutput() StreamingStreamPoolMapOutput {
	return i.ToStreamingStreamPoolMapOutputWithContext(context.Background())
}

func (i StreamingStreamPoolMap) ToStreamingStreamPoolMapOutputWithContext(ctx context.Context) StreamingStreamPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingStreamPoolMapOutput)
}

type StreamingStreamPoolOutput struct {
	*pulumi.OutputState
}

func (StreamingStreamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingStreamPool)(nil))
}

func (o StreamingStreamPoolOutput) ToStreamingStreamPoolOutput() StreamingStreamPoolOutput {
	return o
}

func (o StreamingStreamPoolOutput) ToStreamingStreamPoolOutputWithContext(ctx context.Context) StreamingStreamPoolOutput {
	return o
}

func (o StreamingStreamPoolOutput) ToStreamingStreamPoolPtrOutput() StreamingStreamPoolPtrOutput {
	return o.ToStreamingStreamPoolPtrOutputWithContext(context.Background())
}

func (o StreamingStreamPoolOutput) ToStreamingStreamPoolPtrOutputWithContext(ctx context.Context) StreamingStreamPoolPtrOutput {
	return o.ApplyT(func(v StreamingStreamPool) *StreamingStreamPool {
		return &v
	}).(StreamingStreamPoolPtrOutput)
}

type StreamingStreamPoolPtrOutput struct {
	*pulumi.OutputState
}

func (StreamingStreamPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingStreamPool)(nil))
}

func (o StreamingStreamPoolPtrOutput) ToStreamingStreamPoolPtrOutput() StreamingStreamPoolPtrOutput {
	return o
}

func (o StreamingStreamPoolPtrOutput) ToStreamingStreamPoolPtrOutputWithContext(ctx context.Context) StreamingStreamPoolPtrOutput {
	return o
}

type StreamingStreamPoolArrayOutput struct{ *pulumi.OutputState }

func (StreamingStreamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamingStreamPool)(nil))
}

func (o StreamingStreamPoolArrayOutput) ToStreamingStreamPoolArrayOutput() StreamingStreamPoolArrayOutput {
	return o
}

func (o StreamingStreamPoolArrayOutput) ToStreamingStreamPoolArrayOutputWithContext(ctx context.Context) StreamingStreamPoolArrayOutput {
	return o
}

func (o StreamingStreamPoolArrayOutput) Index(i pulumi.IntInput) StreamingStreamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamingStreamPool {
		return vs[0].([]StreamingStreamPool)[vs[1].(int)]
	}).(StreamingStreamPoolOutput)
}

type StreamingStreamPoolMapOutput struct{ *pulumi.OutputState }

func (StreamingStreamPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StreamingStreamPool)(nil))
}

func (o StreamingStreamPoolMapOutput) ToStreamingStreamPoolMapOutput() StreamingStreamPoolMapOutput {
	return o
}

func (o StreamingStreamPoolMapOutput) ToStreamingStreamPoolMapOutputWithContext(ctx context.Context) StreamingStreamPoolMapOutput {
	return o
}

func (o StreamingStreamPoolMapOutput) MapIndex(k pulumi.StringInput) StreamingStreamPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StreamingStreamPool {
		return vs[0].(map[string]StreamingStreamPool)[vs[1].(string)]
	}).(StreamingStreamPoolOutput)
}

func init() {
	pulumi.RegisterOutputType(StreamingStreamPoolOutput{})
	pulumi.RegisterOutputType(StreamingStreamPoolPtrOutput{})
	pulumi.RegisterOutputType(StreamingStreamPoolArrayOutput{})
	pulumi.RegisterOutputType(StreamingStreamPoolMapOutput{})
}
