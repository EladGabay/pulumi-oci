// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oci

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tags in Oracle Cloud Infrastructure Identity service.
//
// Lists the tag definitions in the specified tag namespace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Tag_state
// 		_, err := oci.GetIdentityTags(ctx, &GetIdentityTagsArgs{
// 			TagNamespaceId: oci_identity_tag_namespace.Test_tag_namespace.Id,
// 			State:          &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIdentityTags(ctx *pulumi.Context, args *GetIdentityTagsArgs, opts ...pulumi.InvokeOption) (*GetIdentityTagsResult, error) {
	var rv GetIdentityTagsResult
	err := ctx.Invoke("oci:index/getIdentityTags:GetIdentityTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetIdentityTags.
type GetIdentityTagsArgs struct {
	Filters []GetIdentityTagsFilter `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
	// The OCID of the tag namespace.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
}

// A collection of values returned by GetIdentityTags.
type GetIdentityTagsResult struct {
	Filters []GetIdentityTagsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The tag's current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag's `lifecycleState` changes from DELETING to DELETED.
	State *string `pulumi:"state"`
	// The OCID of the namespace that contains the tag definition.
	TagNamespaceId string `pulumi:"tagNamespaceId"`
	// The list of tags.
	Tags []GetIdentityTagsTag `pulumi:"tags"`
}
